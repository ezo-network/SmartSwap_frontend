[{"D:\\React\\SmartSwap_frontend\\src\\index.js":"1","D:\\React\\SmartSwap_frontend\\src\\reportWebVitals.js":"2","D:\\React\\SmartSwap_frontend\\src\\App.js":"3","D:\\React\\SmartSwap_frontend\\src\\pages\\ownLicence.js":"4","D:\\React\\SmartSwap_frontend\\src\\pages\\ownLicence02.js":"5","D:\\React\\SmartSwap_frontend\\src\\pages\\smartSwapLicence.js":"6","D:\\React\\SmartSwap_frontend\\src\\pages\\projects.js":"7","D:\\React\\SmartSwap_frontend\\src\\pages\\home.js":"8","D:\\React\\SmartSwap_frontend\\src\\pages\\extension.js":"9","D:\\React\\SmartSwap_frontend\\src\\config\\web3Config.js":"10","D:\\React\\SmartSwap_frontend\\src\\config\\notificationConfig.js":"11","D:\\React\\SmartSwap_frontend\\src\\components\\CreateLicense.js":"12","D:\\React\\SmartSwap_frontend\\src\\components\\CoinPopup.js":"13","D:\\React\\SmartSwap_frontend\\src\\components\\Deposit-withdraw.js":"14","D:\\React\\SmartSwap_frontend\\src\\constants.js":"15","D:\\React\\SmartSwap_frontend\\src\\components\\SidePopup.js":"16","D:\\React\\SmartSwap_frontend\\src\\components\\withdraw_token.js":"17","D:\\React\\SmartSwap_frontend\\src\\helper\\reimbursementContract.js":"18","D:\\React\\SmartSwap_frontend\\src\\components\\Header.js":"19","D:\\React\\SmartSwap_frontend\\src\\components\\WalletPopup.js":"20","D:\\React\\SmartSwap_frontend\\src\\helper\\swapFactoryContract.js":"21","D:\\React\\SmartSwap_frontend\\src\\config\\constantConfig.js":"22","D:\\React\\SmartSwap_frontend\\src\\components\\RightSideMenu.js":"23","D:\\React\\SmartSwap_frontend\\src\\components\\DropDown.js":"24","D:\\React\\SmartSwap_frontend\\src\\helper\\validation.js":"25","D:\\React\\SmartSwap_frontend\\src\\components\\liquidity_fountain_for_SPs.js":"26","D:\\React\\SmartSwap_frontend\\src\\components\\Counter.js":"27","D:\\React\\SmartSwap_frontend\\src\\components\\About.js":"28","D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\LiquidityProvider.js":"29","D:\\React\\SmartSwap_frontend\\src\\components\\NoDomain.js":"30","D:\\React\\SmartSwap_frontend\\src\\components\\PeerPopup.js":"31","D:\\React\\SmartSwap_frontend\\src\\pages\\select_token.js":"32","D:\\React\\SmartSwap_frontend\\src\\components\\CefiToDefi.js":"33","D:\\React\\SmartSwap_frontend\\src\\components\\LedgerHistory.js":"34","D:\\React\\SmartSwap_frontend\\src\\components\\HowItWorks.js":"35","D:\\React\\SmartSwap_frontend\\src\\dispatcher.js":"36","D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpIntroduction.js":"37","D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpContractDeployForm.js":"38","D:\\React\\SmartSwap_frontend\\src\\helper\\axiosRequest.js":"39","D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\ActiveContract.js":"40","D:\\React\\SmartSwap_frontend\\src\\helper\\swapFactoryContractPairWise.js":"41","D:\\React\\SmartSwap_frontend\\src\\helper\\spContract.js":"42","D:\\React\\SmartSwap_frontend\\src\\pages\\free-listing.js":"43","D:\\React\\SmartSwap_frontend\\src\\components\\Header02.js":"44","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen01.js":"45","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen02.js":"46","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen03.js":"47","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen04.js":"48","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen05.js":"49","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen07.js":"50","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen06.js":"51","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen08.js":"52","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen09.js":"53","D:\\react\\SmartSwap_frontend\\src\\index.js":"54","D:\\react\\SmartSwap_frontend\\src\\reportWebVitals.js":"55","D:\\react\\SmartSwap_frontend\\src\\App.js":"56","D:\\react\\SmartSwap_frontend\\src\\pages\\projects.js":"57","D:\\react\\SmartSwap_frontend\\src\\pages\\free-listing.js":"58","D:\\react\\SmartSwap_frontend\\src\\pages\\extension.js":"59","D:\\react\\SmartSwap_frontend\\src\\pages\\smartSwapLicence.js":"60","D:\\react\\SmartSwap_frontend\\src\\pages\\home.js":"61","D:\\react\\SmartSwap_frontend\\src\\pages\\ownLicence02.js":"62","D:\\react\\SmartSwap_frontend\\src\\pages\\ownLicence.js":"63","D:\\react\\SmartSwap_frontend\\src\\constants.js":"64","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen01.js":"65","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen08.js":"66","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen06.js":"67","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen07.js":"68","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen04.js":"69","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen02.js":"70","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen03.js":"71","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen05.js":"72","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen09.js":"73","D:\\react\\SmartSwap_frontend\\src\\config\\notificationConfig.js":"74","D:\\react\\SmartSwap_frontend\\src\\config\\web3Config.js":"75","D:\\react\\SmartSwap_frontend\\src\\config\\constantConfig.js":"76","D:\\react\\SmartSwap_frontend\\src\\helper\\swapFactoryContract.js":"77","D:\\react\\SmartSwap_frontend\\src\\helper\\validation.js":"78","D:\\react\\SmartSwap_frontend\\src\\helper\\reimbursementContract.js":"79","D:\\react\\SmartSwap_frontend\\src\\components\\Header.js":"80","D:\\react\\SmartSwap_frontend\\src\\components\\CreateLicense.js":"81","D:\\react\\SmartSwap_frontend\\src\\components\\CoinPopup.js":"82","D:\\react\\SmartSwap_frontend\\src\\components\\RightSideMenu.js":"83","D:\\react\\SmartSwap_frontend\\src\\components\\Header02.js":"84","D:\\react\\SmartSwap_frontend\\src\\components\\SidePopup.js":"85","D:\\react\\SmartSwap_frontend\\src\\components\\WalletPopup.js":"86","D:\\react\\SmartSwap_frontend\\src\\components\\Deposit-withdraw.js":"87","D:\\react\\SmartSwap_frontend\\src\\components\\withdraw_token.js":"88","D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\LiquidityProvider.js":"89","D:\\react\\SmartSwap_frontend\\src\\components\\Counter.js":"90","D:\\react\\SmartSwap_frontend\\src\\components\\DropDown.js":"91","D:\\react\\SmartSwap_frontend\\src\\pages\\select_token.js":"92","D:\\react\\SmartSwap_frontend\\src\\components\\CefiToDefi.js":"93","D:\\react\\SmartSwap_frontend\\src\\components\\NoDomain.js":"94","D:\\react\\SmartSwap_frontend\\src\\components\\liquidity_fountain_for_SPs.js":"95","D:\\react\\SmartSwap_frontend\\src\\components\\LedgerHistory.js":"96","D:\\react\\SmartSwap_frontend\\src\\components\\HowItWorks.js":"97","D:\\react\\SmartSwap_frontend\\src\\components\\PeerPopup.js":"98","D:\\react\\SmartSwap_frontend\\src\\components\\About.js":"99","D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpContractDeployForm.js":"100","D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpIntroduction.js":"101","D:\\react\\SmartSwap_frontend\\src\\dispatcher.js":"102","D:\\react\\SmartSwap_frontend\\src\\helper\\swapFactoryContractPairWise.js":"103","D:\\react\\SmartSwap_frontend\\src\\helper\\axiosRequest.js":"104","D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\ActiveContract.js":"105","D:\\react\\SmartSwap_frontend\\src\\helper\\spContract.js":"106","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen10.js":"107","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen11.js":"108","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen11.js":"109","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen10.js":"110"},{"size":494,"mtime":1641559474000,"results":"111","hashOfConfig":"112"},{"size":375,"mtime":1641559474000,"results":"113","hashOfConfig":"112"},{"size":1151,"mtime":1660744650000,"results":"114","hashOfConfig":"112"},{"size":121265,"mtime":1651579292000,"results":"115","hashOfConfig":"112"},{"size":32162,"mtime":1641559474000,"results":"116","hashOfConfig":"112"},{"size":24363,"mtime":1641559474000,"results":"117","hashOfConfig":"112"},{"size":19553,"mtime":1649419458000,"results":"118","hashOfConfig":"112"},{"size":239022,"mtime":1660742750000,"results":"119","hashOfConfig":"112"},{"size":13098,"mtime":1660742750000,"results":"120","hashOfConfig":"112"},{"size":3587,"mtime":1641559474000,"results":"121","hashOfConfig":"112"},{"size":1006,"mtime":1641559474000,"results":"122","hashOfConfig":"112"},{"size":14238,"mtime":1641559474000,"results":"123","hashOfConfig":"112"},{"size":9937,"mtime":1641559474000,"results":"124","hashOfConfig":"112"},{"size":11191,"mtime":1641559474000,"results":"125","hashOfConfig":"112"},{"size":2149,"mtime":1660742750000,"results":"126","hashOfConfig":"112"},{"size":13364,"mtime":1651576828000,"results":"127","hashOfConfig":"112"},{"size":2709,"mtime":1641559474000,"results":"128","hashOfConfig":"112"},{"size":11590,"mtime":1641559474000,"results":"129","hashOfConfig":"112"},{"size":10155,"mtime":1649410842000,"results":"130","hashOfConfig":"112"},{"size":6604,"mtime":1641559474000,"results":"131","hashOfConfig":"112"},{"size":9797,"mtime":1660742750000,"results":"132","hashOfConfig":"112"},{"size":15377,"mtime":1660742750000,"results":"133","hashOfConfig":"112"},{"size":12931,"mtime":1660745048000,"results":"134","hashOfConfig":"112"},{"size":387,"mtime":1649225724000,"results":"135","hashOfConfig":"112"},{"size":1258,"mtime":1646913662000,"results":"136","hashOfConfig":"112"},{"size":1903,"mtime":1660742750000,"results":"137","hashOfConfig":"112"},{"size":425,"mtime":1660742750000,"results":"138","hashOfConfig":"112"},{"size":31204,"mtime":1660742750000,"results":"139","hashOfConfig":"112"},{"size":4173,"mtime":1649225724000,"results":"140","hashOfConfig":"112"},{"size":1314,"mtime":1641559474000,"results":"141","hashOfConfig":"112"},{"size":4401,"mtime":1641559474000,"results":"142","hashOfConfig":"112"},{"size":15135,"mtime":1649312774000,"results":"143","hashOfConfig":"112"},{"size":5388,"mtime":1641559474000,"results":"144","hashOfConfig":"112"},{"size":18073,"mtime":1660742750000,"results":"145","hashOfConfig":"112"},{"size":9934,"mtime":1660742750000,"results":"146","hashOfConfig":"112"},{"size":72,"mtime":1641559474000,"results":"147","hashOfConfig":"112"},{"size":3184,"mtime":1646913662000,"results":"148","hashOfConfig":"112"},{"size":60286,"mtime":1660742750000,"results":"149","hashOfConfig":"112"},{"size":1049,"mtime":1641559474000,"results":"150","hashOfConfig":"112"},{"size":82926,"mtime":1660742750000,"results":"151","hashOfConfig":"112"},{"size":3776,"mtime":1651831636000,"results":"152","hashOfConfig":"112"},{"size":3103,"mtime":1646913662000,"results":"153","hashOfConfig":"112"},{"size":2118,"mtime":1661773503238,"results":"154","hashOfConfig":"112"},{"size":2653,"mtime":1661172184000,"results":"155","hashOfConfig":"112"},{"size":3653,"mtime":1661366226000,"results":"156","hashOfConfig":"112"},{"size":6424,"mtime":1661455596000,"results":"157","hashOfConfig":"112"},{"size":4631,"mtime":1661456632000,"results":"158","hashOfConfig":"112"},{"size":7298,"mtime":1661461326000,"results":"159","hashOfConfig":"112"},{"size":9327,"mtime":1661758458000,"results":"160","hashOfConfig":"112"},{"size":7173,"mtime":1661522696000,"results":"161","hashOfConfig":"112"},{"size":4548,"mtime":1661768624000,"results":"162","hashOfConfig":"112"},{"size":4057,"mtime":1661535448000,"results":"163","hashOfConfig":"112"},{"size":6368,"mtime":1661755742000,"results":"164","hashOfConfig":"112"},{"size":494,"mtime":1641559474000,"results":"165","hashOfConfig":"166"},{"size":375,"mtime":1641559474000,"results":"167","hashOfConfig":"166"},{"size":1151,"mtime":1660744650000,"results":"168","hashOfConfig":"166"},{"size":19553,"mtime":1649419458000,"results":"169","hashOfConfig":"166"},{"size":2118,"mtime":1661768128833,"results":"170","hashOfConfig":"166"},{"size":13098,"mtime":1660742750000,"results":"171","hashOfConfig":"166"},{"size":24363,"mtime":1641559474000,"results":"172","hashOfConfig":"166"},{"size":239022,"mtime":1660742750000,"results":"173","hashOfConfig":"166"},{"size":32162,"mtime":1641559474000,"results":"174","hashOfConfig":"166"},{"size":121265,"mtime":1651579292000,"results":"175","hashOfConfig":"166"},{"size":2149,"mtime":1660742750000,"results":"176","hashOfConfig":"166"},{"size":3653,"mtime":1661366226000,"results":"177","hashOfConfig":"166"},{"size":4057,"mtime":1661535448000,"results":"178","hashOfConfig":"166"},{"size":4548,"mtime":1661768622190,"results":"179","hashOfConfig":"166"},{"size":7173,"mtime":1661522696000,"results":"180","hashOfConfig":"166"},{"size":7298,"mtime":1661461326000,"results":"181","hashOfConfig":"166"},{"size":6424,"mtime":1661455596000,"results":"182","hashOfConfig":"166"},{"size":4631,"mtime":1661456632000,"results":"183","hashOfConfig":"166"},{"size":9327,"mtime":1661758456358,"results":"184","hashOfConfig":"166"},{"size":6368,"mtime":1661755740770,"results":"185","hashOfConfig":"166"},{"size":1006,"mtime":1641559474000,"results":"186","hashOfConfig":"166"},{"size":3587,"mtime":1641559474000,"results":"187","hashOfConfig":"166"},{"size":15377,"mtime":1660742750000,"results":"188","hashOfConfig":"166"},{"size":9797,"mtime":1660742750000,"results":"189","hashOfConfig":"166"},{"size":1258,"mtime":1646913662000,"results":"190","hashOfConfig":"166"},{"size":11590,"mtime":1641559474000,"results":"191","hashOfConfig":"166"},{"size":10155,"mtime":1649410842000,"results":"192","hashOfConfig":"166"},{"size":14238,"mtime":1641559474000,"results":"193","hashOfConfig":"166"},{"size":9937,"mtime":1641559474000,"results":"194","hashOfConfig":"166"},{"size":12931,"mtime":1660745048000,"results":"195","hashOfConfig":"166"},{"size":2653,"mtime":1661172184000,"results":"196","hashOfConfig":"166"},{"size":13364,"mtime":1651576828000,"results":"197","hashOfConfig":"166"},{"size":6604,"mtime":1641559474000,"results":"198","hashOfConfig":"166"},{"size":11191,"mtime":1641559474000,"results":"199","hashOfConfig":"166"},{"size":2709,"mtime":1641559474000,"results":"200","hashOfConfig":"166"},{"size":4173,"mtime":1649225724000,"results":"201","hashOfConfig":"166"},{"size":425,"mtime":1660742750000,"results":"202","hashOfConfig":"166"},{"size":387,"mtime":1649225724000,"results":"203","hashOfConfig":"166"},{"size":15135,"mtime":1649312774000,"results":"204","hashOfConfig":"166"},{"size":5388,"mtime":1641559474000,"results":"205","hashOfConfig":"166"},{"size":1314,"mtime":1641559474000,"results":"206","hashOfConfig":"166"},{"size":1903,"mtime":1660742750000,"results":"207","hashOfConfig":"166"},{"size":18073,"mtime":1660742750000,"results":"208","hashOfConfig":"166"},{"size":9934,"mtime":1660742750000,"results":"209","hashOfConfig":"166"},{"size":4401,"mtime":1641559474000,"results":"210","hashOfConfig":"166"},{"size":31204,"mtime":1660742750000,"results":"211","hashOfConfig":"166"},{"size":60286,"mtime":1660742750000,"results":"212","hashOfConfig":"166"},{"size":3184,"mtime":1646913662000,"results":"213","hashOfConfig":"166"},{"size":72,"mtime":1641559474000,"results":"214","hashOfConfig":"166"},{"size":3776,"mtime":1651831636000,"results":"215","hashOfConfig":"166"},{"size":1049,"mtime":1641559474000,"results":"216","hashOfConfig":"166"},{"size":82926,"mtime":1660742750000,"results":"217","hashOfConfig":"166"},{"size":3103,"mtime":1646913662000,"results":"218","hashOfConfig":"166"},{"size":6241,"mtime":1661767134585,"results":"219","hashOfConfig":"166"},{"size":6208,"mtime":1661766331835,"results":"220","hashOfConfig":"166"},{"size":6208,"mtime":1661766332000,"results":"221","hashOfConfig":"112"},{"size":6241,"mtime":1661767136000,"results":"222","hashOfConfig":"112"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},"865tjn",{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"225"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"225"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"225"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":2,"source":"243","usedDeprecatedRules":"225"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"225"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"225"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"225"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"225"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"225"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":1,"source":"271","usedDeprecatedRules":"225"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"225"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":4,"source":"281","usedDeprecatedRules":"225"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"225"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"225"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":10,"source":"294","usedDeprecatedRules":"225"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"225"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"225"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"225"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"310","usedDeprecatedRules":"225"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"225"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"225"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"225"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"225"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"225"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"225"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xfash5",{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":10,"source":null},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\SmartSwap_frontend\\src\\index.js",[],["469","470"],"D:\\React\\SmartSwap_frontend\\src\\reportWebVitals.js",[],"D:\\React\\SmartSwap_frontend\\src\\App.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\ownLicence.js",["471","472","473","474","475","476","477","478","479","480","481","482"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport InputRange from \"react-input-range\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport web3Js from \"web3\";\r\nimport Web3 from \"web3\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport Validation from \"../helper/validation\";\r\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\r\nimport tokenAbi from \"../abis/tokenAbi.json\";\r\nimport constantConfig from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport { LoopCircleLoading } from \"react-loadingg\";\r\nimport CONSTANT from \"../constants\";\r\nimport data from \"../config/constantConfig\";\r\nimport WithDrawToken from \"../components/withdraw_token\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport WalletPopup from \"../components/WalletPopup\";\r\nimport CoinPopup from \"../components/CoinPopup\";\r\nimport SidePopup from \"../components/SidePopup\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport CreateLicence from \"../components/CreateLicense\";\r\nimport axios from \"axios\";\r\nimport Highlight from \"react-highlight\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport ReimbursementContract from \"../helper/reimbursementContract\";\r\nimport { isValidAddress } from \"ethereumjs-util\";\r\nimport reimbursementAbi from \"../abis/reimbursementAbi.json\";\r\nimport tokenVaultAbi from \"../abis/tokenVaultAbi.json\";\r\nimport DepositToken from \"../components/Deposit-withdraw\";\r\n\r\nconst $ = window.$;\r\n\r\nconst validatesubDomain = (value) => {\r\n  const reg = /^[a-zA-Z0-9&_-]+$/;\r\n  const isvalid = reg.test(value);\r\n  return isvalid;\r\n};\r\nconst isValidURL = (string) => {\r\n  // var res = string.match(\r\n  //   /((http|https):\\/\\/.)(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g\r\n  // );\r\n  var res = string.match(\r\n    /^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/gm\r\n  );\r\n  return res !== null;\r\n};\r\nconst toBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nconst copyAffiliateLink = (e, id) => {\r\n  e.preventDefault();\r\n  var copyText = document.getElementById(id);\r\n  copyText.select();\r\n  document.execCommand(\"copy\");\r\n  notificationConfig.success(\"Copied Successfully!\")\r\n};\r\n\r\nexport default class ownLicence extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.setSendCurrency = this.setSendCurrency.bind(this);\r\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\r\n    this.changeTypeofLicense = this.changeTypeofLicense.bind(this);\r\n    this._onChangeRadio = this._onChangeRadio.bind(this);\r\n    this.getFees = this.getFees.bind(this);\r\n    // this.updateLicenseAddress = this.updateLicenseAddress.bind(this)\r\n    const { location } = props;\r\n    this.state = {\r\n      value: 0,\r\n      isOpen1: false,\r\n      web3: null,\r\n      web3Check: false,\r\n      btnClick: false,\r\n      swapFactory: null,\r\n      swapLoading: false,\r\n      selectedSendCurrency: \"BNB\",\r\n      selectedReceiveCurrency: \"ETH\",\r\n      instanceReimbursementBinance: null,\r\n      instanceReimbursementEthereum: null,\r\n      tokenInstance: {},\r\n      txLink: \"\",\r\n      wrapBox: \"swap\",\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      showLedger: false,\r\n      currencyPrices: {},\r\n      estimatedGasFee: \"0\",\r\n      tokenBalances: {\r\n        JNTR: 0,\r\n        \"JNTR/b\": 0,\r\n        \"JNTR/e\": 0,\r\n        JNTR_APPROVED: 0,\r\n        \"JNTR/b_APPROVED\": 0,\r\n        \"JNTR/e_APPROVED\": 0,\r\n      },\r\n      showFeeInpt: true,\r\n      zeroIntegrationShow: true,\r\n      \"bsc\": false,\r\n      \"ethereum\": false,\r\n      \"polygon\": false,\r\n      bgimage:\r\n        typeof location.state === \"undefined\"\r\n          ? \"\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.bgimage\r\n            : \"\",\r\n      logoImage:\r\n        typeof location.state === \"undefined\"\r\n          ? \"\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.logoImage\r\n            : \"\",\r\n      error: \"\",\r\n      isloading: false,\r\n      subDomain:\r\n        typeof location.state === \"undefined\"\r\n          ? \"\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.subDomain\r\n            : \"\",\r\n      logoUrl:\r\n        typeof location.state === \"undefined\"\r\n          ? \"\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.logoUrl\r\n            : \"\",\r\n      primaryColor:\r\n        typeof location.state === \"undefined\"\r\n          ? \"#fff\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.primaryColor\r\n            : \"#fff\",\r\n      showPrimaryColor: false,\r\n      showSwapButtonColor: false,\r\n      secondaryColor:\r\n        typeof location.state === \"undefined\"\r\n          ? \"#5c6bc0\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.secondaryColor\r\n            : \"#5c6bc0\",\r\n      swapButtonColor:\r\n        typeof location.state === \"undefined\"\r\n          ? \"#91dc27\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.swapButtonColor\r\n            : \"#91dc27\",\r\n      showSecondaryColor: false,\r\n      formData: {\r\n        primaryColor: { value: \"\", error: \"\", errormsg: \"\" },\r\n        secondaryColor: { value: \"\", error: \"\", errormsg: \"\" },\r\n        subDomain: { value: \"\", error: \"\", errormsg: \"\" },\r\n      },\r\n      visitDomain: \"\",\r\n      fontStyle:\r\n        typeof location.state === \"undefined\"\r\n          ? \"Default\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.fontStyle\r\n            : \"Default\",\r\n      backgroundOverLay:\r\n        typeof location.state === \"undefined\"\r\n          ? \"60\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.backgroundOverLay\r\n            : \"60\",\r\n      cloneData:\r\n        typeof location.state === \"undefined\"\r\n          ? {}\r\n          : location.state.cloneData\r\n            ? location.state.cloneData\r\n            : {},\r\n      typeofLicense: \"Zero integration\",\r\n      newColor: false,\r\n      changeFee: \"Yes\",\r\n      changeText:\r\n        typeof location.state === \"undefined\"\r\n          ? \"Yes\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.changeText\r\n            : \"Yes\",\r\n      sideBar:\r\n        typeof location.state === \"undefined\"\r\n          ? \"true\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.sideBar\r\n            : \"true\",\r\n      displayToken: \"Display token lists\",\r\n      bscLicenseAddress: CONSTANT.ZERO_ADDRESS,\r\n      ethLicenseAddress: CONSTANT.ZERO_ADDRESS,\r\n      bscLicenseFees: 0,\r\n      ethLicenseFees: 0,\r\n      bscLicenseFeesCurrent: 0,\r\n      ethLicenseFeesCurrent: 0,\r\n      bscLicenseTokenBalance: 0,\r\n      ethLicenseTokenBalance: 0,\r\n      allowClone: false,\r\n      licenseeData: null,\r\n      depositWithdrawNetwork: null,\r\n      depositWithdrawVaultAddress: null,\r\n      depositTokenAddress: CONSTANT.ZERO_ADDRESS\r\n    };\r\n  }\r\n  componentWillMount = async () => {\r\n    await this.fetchPrice();\r\n  };\r\n  componentDidMount = async () => {\r\n    window.scrollTo(0, 0);\r\n    this.setState({\r\n      web3Ethereum: new Web3(\r\n        new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)\r\n      ),\r\n      web3Binance: new Web3(\r\n        new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE)\r\n      ),\r\n    });\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n        licenseeData: web3Config.getLicenseeData()\r\n      },\r\n      async () => {\r\n        await this.initInstance();\r\n      }\r\n    );\r\n    console.log(\"-------------license-data-------------------------------------\", web3Config.getLicenseeData())\r\n  };\r\n  async initInstance() {\r\n    let { web3Binance, web3Ethereum } = this.state;\r\n    let instanceReimbursementBinance = null;\r\n    let instanceReimbursementEthereum = null;\r\n    instanceReimbursementBinance = new web3Binance.eth.Contract(\r\n      reimbursementAbi,\r\n      constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract\r\n    );\r\n    instanceReimbursementEthereum = new web3Ethereum.eth.Contract(\r\n      reimbursementAbi,\r\n      constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract\r\n    );\r\n\r\n    this.setState(\r\n      {\r\n        instanceReimbursementBinance,\r\n        instanceReimbursementEthereum,\r\n      },\r\n      () => {\r\n        // this.listenTransferEvent();\r\n      }\r\n    );\r\n  }\r\n  updateTokenBalance = async () => {\r\n    if (this.state.web3 !== null) {\r\n      const { tokenInstance, tokenBalances, web3 } = this.state;\r\n      // Balances\r\n      tokenBalances[\"JNTR\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR\"].methods\r\n          .balanceOf(web3Config.getAddress())\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/b\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/b\"].methods\r\n          .balanceOf(web3Config.getAddress())\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/e\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/e\"].methods\r\n          .balanceOf(web3Config.getAddress())\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      // Approve Balances\r\n      tokenBalances[\"JNTR_APPROVED\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR\"].methods\r\n          .allowance(\r\n            web3Config.getAddress(),\r\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\r\n          )\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/b_APPROVED\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/b\"].methods\r\n          .allowance(\r\n            web3Config.getAddress(),\r\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\r\n          )\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/e_APPROVED\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/e\"].methods\r\n          .allowance(\r\n            web3Config.getAddress(),\r\n            \"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\"\r\n          )\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      this.setState(\r\n        {\r\n          tokenBalances: tokenBalances,\r\n        },\r\n        () => {\r\n          this.forceUpdate();\r\n          // this.updateButton()\r\n        }\r\n      );\r\n    }\r\n  };\r\n  async connectWallet() {\r\n    this.setState({ btnClick: true });\r\n    await web3Config.connectWallet(0);\r\n    let networkId = web3Config.getNetworkId();\r\n    if (!constantConfig.allowedNetwork.includes(networkId)) {\r\n      notificationConfig.error(\"Please Select Kovan or BSC Test Network\");\r\n      this.setState({ btnClick: false });\r\n      return;\r\n    }\r\n    // if (\r\n    //   constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\r\n    //   networkId &&\r\n    //   networkId === 97\r\n    // ) {\r\n    //   notificationConfig.warning(\"Change metamask network to Ethereum!\");\r\n    //   return;\r\n    // } else if (\r\n    //   constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\r\n    //   networkId &&\r\n    //   networkId === 42\r\n    // ) {\r\n    //   notificationConfig.warning(\"Change metamask network to Binance!\");\r\n    //   return;\r\n    // }\r\n    this.setState(\r\n      {\r\n        web3: web3Config.getWeb3(),\r\n        btnClick: false,\r\n      },\r\n      async () => {\r\n        await this.getData([web3Config.getAddress()])\r\n        let licenseeData = await web3Config.getLicenseeData()\r\n        if (licenseeData !== null) {\r\n          const href = window.location.href;\r\n          const domaindata = href\r\n            .replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\")\r\n            .split(\"/\")[0];\r\n          this.clearPreview();\r\n          this.setState({\r\n            licenseeData: licenseeData,\r\n            bscLicenseAddress: licenseeData.bscLicenseAddress,\r\n            ethLicenseAddress: licenseeData.ethLicenseAddress,\r\n            bscLicenseFees: licenseeData.bscLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"BSC\", licenseeData.bscLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract)).fees : 0,\r\n            ethLicenseFees: licenseeData.ethLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"Ethereum\", licenseeData.ethLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)).fees : 0,\r\n            bscLicenseTokenBalance: licenseeData.bscLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"BSC\", licenseeData.bscLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract)).tokenBalance : 0,\r\n            ethLicenseTokenBalance: licenseeData.ethLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"Ethereum\", licenseeData.ethLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)).tokenBalance : 0,\r\n            visitDomain: `http://${licenseeData.subDomain}.${domaindata}`,\r\n          }, () => {\r\n            this.setIsValidLicenseAddress()\r\n          });\r\n        }\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  async getFees(network, vaultAddress, projectContractAddress) {\r\n    let currInstance = null;\r\n    if (network === \"BSC\") {\r\n      currInstance = this.state.instanceReimbursementBinance;\r\n      let fees = Number(await currInstance.methods.getLicenseeFee(vaultAddress, projectContractAddress).call());\r\n      let tokenBalance = await currInstance.methods.getAvailableTokens(vaultAddress).call();\r\n      return { fees: fees, tokenBalance: web3Js.utils.fromWei(tokenBalance) };\r\n    } else if (network === \"Ethereum\") {\r\n      currInstance = this.state.instanceReimbursementEthereum;\r\n      let fees = Number(await currInstance.methods.getLicenseeFee(vaultAddress, projectContractAddress).call());\r\n      let tokenBalance = await currInstance.methods.getAvailableTokens(vaultAddress).call();\r\n      return { fees: fees, tokenBalance: web3Js.utils.fromWei(tokenBalance) };\r\n    }\r\n  }\r\n\r\n  getData = async (domain) => {\r\n    // this.setState({\r\n    //   isloading: true,\r\n    // });\r\n    try {\r\n      const res = await axios.get(\r\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\r\n      );\r\n      console.log(res);\r\n      if (res.data.response_code === 200) {\r\n        if (isValidAddress(domain[0])) {\r\n          await web3Config.setLicenseeData(res.data.result)\r\n        } else {\r\n          // const r = document.querySelector(\":root\");\r\n          // r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\r\n          // r.style.setProperty(\r\n          //   \"--button-bg-color\",\r\n          //   res.data.result.seconderyColor\r\n          // );\r\n          // r.style.setProperty(\r\n          //   \"--req-bg\",\r\n          //   `url(${res.data.result.backGroundImage})`\r\n          // );\r\n          // r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\r\n          // this.setState({\r\n          //   cloneData: {\r\n          //     bgimage: res.data.result.backGroundImage,\r\n          //     logoImage: res.data.result.logo,\r\n          //     subDomain: res.data.result.subDomain,\r\n          //     primaryColor: res.data.result.primaryColors,\r\n          //     secondaryColor: res.data.result.seconderyColor,\r\n          //     fontStyle: res.data.result.fontStyle,\r\n          //     backgroundOverLay: res.data.result.backgroundOverLay,\r\n          //     swapButtonColor: res.data.result.swapButton,\r\n          //     logoUrl: res.data.result.logoUrl,\r\n          //     sideBar: res.data.result.sideBar\r\n          //   },\r\n          //   licenseeAddress: {\r\n          //     56: res.data.result.bscLicenseAddress,\r\n          //     1: res.data.result.ethLicenseAddress,\r\n          //     97: res.data.result.bscLicenseAddress,\r\n          //     42: res.data.result.ethLicenseAddress\r\n          //   }\r\n          // });\r\n        }\r\n      } else if (res.data.response_code === 404) {\r\n        // this.setState({\r\n        //   noSubDomain: true,\r\n        // });\r\n        // setTimeout(() => {\r\n        //   this.openPopup(\"NoDomain\");\r\n        // }, 100);\r\n      }\r\n      // this.setState({\r\n      //   isloading: false,\r\n      // });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      // this.setState({\r\n      //   isloading: false,\r\n      // });\r\n    }\r\n  };\r\n\r\n  async swap() {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n    let { sendFundAmount } = this.state;\r\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n      notificationConfig.error(\"Enter value to swap\");\r\n      return;\r\n    }\r\n    let actualSendFundAmount = (\r\n      await this.getActualAmount(\r\n        sendFundAmount,\r\n        this.state.selectedSendCurrency\r\n      )\r\n    ).toString();\r\n    let value = 0,\r\n      swapAmount = 0;\r\n    try {\r\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\r\n    } catch (e) {\r\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n    }\r\n    swapAmount = value;\r\n    if (\r\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\r\n        .approveRequire\r\n    ) {\r\n      value = 0;\r\n    }\r\n    swapFactory.swap(\r\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\r\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\r\n      value,\r\n      swapAmount,\r\n      (hash) => {\r\n        this.setState({\r\n          swapLoading: true,\r\n          txIdSent: hash,\r\n          txLinkSend: data[networkId].explorer + \"/tx/\" + hash,\r\n        });\r\n      },\r\n      () => {\r\n        // this.init()\r\n        this.setState({\r\n          swapLoading: false,\r\n          showLedger: true,\r\n          wrapBox: \"success\",\r\n        });\r\n        notificationConfig.success(\"Swap Success\");\r\n      }\r\n    );\r\n  }\r\n  async approve() {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n    swapFactory.approveJNTRTokenForSwapFactory(\r\n      constantConfig.tokenDetails[this.state.selectedSendCurrency].address,\r\n      constantConfig[networkId].swapFactoryContract,\r\n      (hash) => {\r\n        this.setState({\r\n          approveLoading: true,\r\n          // txIdSent: hash,\r\n          // txLinkSend: data[networkId].explorer + \"/tx/\" + hash\r\n        });\r\n      },\r\n      () => {\r\n        // this.init()\r\n        this.setState({\r\n          approveLoading: false,\r\n          // showLedger: true,\r\n          // wrapBox: \"success\"\r\n        });\r\n        notificationConfig.success(\"Approve Success\");\r\n      }\r\n    );\r\n  }\r\n  async estimateGasAndFee() {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n    let { sendFundAmount } = this.state;\r\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n      notificationConfig.error(\"Enter value to swap\");\r\n      return;\r\n    }\r\n    let actualSendFundAmount = (\r\n      await this.getActualAmount(\r\n        sendFundAmount,\r\n        this.state.selectedSendCurrency\r\n      )\r\n    ).toString();\r\n    let value = 0,\r\n      swapAmount = 0;\r\n    try {\r\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\r\n    } catch (e) {\r\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n    }\r\n    swapAmount = value;\r\n    if (\r\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\r\n        .approveRequire\r\n    ) {\r\n      value = 0;\r\n    }\r\n    swapFactory.estimateSwapGasFee(\r\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\r\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\r\n      value,\r\n      swapAmount,\r\n      \"350000\",\r\n      (estGas) => {\r\n        this.setState({\r\n          estimatedGasFee: estGas,\r\n        });\r\n      }\r\n    );\r\n  }\r\n  async recivedToken(e) {\r\n    let dollarAmount = Number(e.target.value);\r\n    this.setState(\r\n      {\r\n        sendFundAmount: dollarAmount,\r\n      },\r\n      () => {\r\n        this.setAmount(dollarAmount);\r\n      }\r\n    );\r\n  }\r\n  async setAmount(dollarAmount) {\r\n    this.setState(\r\n      {\r\n        actualSendFundAmount: await this.getActualAmount(\r\n          dollarAmount,\r\n          this.state.selectedSendCurrency\r\n        ),\r\n        approxReceiveFundAmount: await this.getActualAmount(\r\n          dollarAmount,\r\n          this.state.selectedReceiveCurrency\r\n        ),\r\n      },\r\n      () => {\r\n        this.estimateGasAndFee();\r\n      }\r\n    );\r\n  }\r\n  async getActualAmount(dollarAmount, currency) {\r\n    if (dollarAmount <= 0) return 0;\r\n    else return dollarAmount / this.state.currencyPrices[currency];\r\n  }\r\n  async fetchPrice() {\r\n    var { currencyPrices } = this.state;\r\n    const response = await fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=ethereum,binancecoin&vs_currencies=usd`\r\n    );\r\n    const json = await response.json();\r\n    currencyPrices[\"ETH\"] = json[\"ethereum\"][\"usd\"];\r\n    currencyPrices[\"BNB\"] = json[\"binancecoin\"][\"usd\"];\r\n    currencyPrices[\"JNTR/e\"] = 0.062166;\r\n    currencyPrices[\"JNTR/b\"] = 0.054237;\r\n    currencyPrices[\"JNTR\"] = 0.532;\r\n    this.setState({\r\n      currencyPrices,\r\n    });\r\n  }\r\n  changeCurrency(check) {\r\n    // if(check && this.state.web3 === null){\r\n    let selectedSendCurrency = this.state.selectedSendCurrency;\r\n    let selectedReceiveCurrency = this.state.selectedReceiveCurrency;\r\n    this.setState(\r\n      {\r\n        selectedSendCurrency: selectedReceiveCurrency,\r\n        selectedReceiveCurrency: selectedSendCurrency,\r\n      },\r\n      () => {\r\n        if (this.state.sendFundAmount !== \"\")\r\n          this.setAmount(this.state.sendFundAmount);\r\n        this.forceUpdate();\r\n      }\r\n    );\r\n    // } else if(this.state.web3 !== null && check) {\r\n    //     notificationConfig.warning(\"Please change metamask network!\")\r\n    // }\r\n  }\r\n  setSendCurrency(currency) {\r\n    this.setState({ selectedSendCurrency: currency }, () => {\r\n      this.closePopup(\"sendCurPop\");\r\n    });\r\n  }\r\n  setReceiveCurrency(currency) {\r\n    this.setState({ selectedReceiveCurrency: currency }, () => {\r\n      this.closePopup(\"receiveCurPop\");\r\n    });\r\n  }\r\n  openPopup(id) {\r\n    $(\"#\" + id).fadeIn();\r\n  }\r\n  closePopup(id) {\r\n    $(\"#\" + id).fadeOut();\r\n  }\r\n\r\n  async showDepWdrwPopup(network, vaultAddress, popup, id) {\r\n    let { web3Binance, web3Ethereum } = this.state;\r\n    let instanceVault = null;\r\n    if (network === \"BSC\") {\r\n      instanceVault = new web3Binance.eth.Contract(\r\n        tokenVaultAbi,\r\n        vaultAddress\r\n      );\r\n    } else if (network === \"Ethereum\") {\r\n      instanceVault = new web3Ethereum.eth.Contract(\r\n        tokenVaultAbi,\r\n        vaultAddress\r\n      );\r\n    }\r\n    let tokenAddress = \"\";\r\n    if (instanceVault._address !== CONSTANT.ZERO_ADDRESS) {\r\n      tokenAddress = await instanceVault.methods.reimbursementToken().call();\r\n    }\r\n    this.setState({\r\n      depositTokenAddress: tokenAddress,\r\n      depositWithdrawNetwork: network,\r\n      depositWithdrawVaultAddress: vaultAddress\r\n    }, () => {\r\n      this.showWithId(popup, id)\r\n    })\r\n  }\r\n\r\n  showWithId(popup, id) {\r\n    this.openPopup(popup);\r\n    $(\"[data-id=\" + this.state.currentTab + \"]\").removeClass(\"active\");\r\n    $(\".tab-Link\").removeClass(\"active\");\r\n    $(\"[data-id=\" + id + \"]\").addClass(\"active\");\r\n    $(\".tab-Content\").hide();\r\n    $(\"#\" + id).fadeIn(\"slow\");\r\n    this.setState({\r\n      currentTab: id,\r\n    });\r\n  }\r\n\r\n  changeWrapBox(which) {\r\n    this.setState({\r\n      wrapBox: which,\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      showLedger: false,\r\n    });\r\n  }\r\n  async listenTransferEvent() {\r\n    const { instanceSwapFactoryEthereum, instanceSwapFactoryBinance } =\r\n      this.state;\r\n    if (instanceSwapFactoryEthereum !== null) {\r\n      instanceSwapFactoryEthereum.events\r\n        .ClaimApprove(\r\n          {\r\n            fromBlock: \"latest\",\r\n          },\r\n          function (error, event) {\r\n            console.log(event);\r\n          }\r\n        )\r\n        .on(\"connected\", function (subscriptionId) {\r\n          console.log(subscriptionId);\r\n        })\r\n        .on(\r\n          \"data\",\r\n          function (event) {\r\n            console.log(event); // same results as the optional callback above\r\n            if (\r\n              event.returnValues.user.toLocaleLowerCase() ===\r\n              web3Config.getAddress().toLocaleLowerCase()\r\n            ) {\r\n              let txLinkReturn =\r\n                constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].explorer +\r\n                \"/tx/\" +\r\n                event.transactionHash;\r\n              let returnAmount = web3Js.utils.fromWei(\r\n                event.returnValues.amountA.toLocaleLowerCase()\r\n              );\r\n              this.updateLedgerAfterResponse(\r\n                event.transactionHash,\r\n                txLinkReturn,\r\n                returnAmount\r\n              );\r\n            }\r\n          }.bind(this)\r\n        )\r\n        .on(\"changed\", function (event) {\r\n          console.log(event);\r\n          // remove event from local database\r\n        })\r\n        .on(\"error\", function (error, receipt) {\r\n          // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\r\n          console.log(error, receipt);\r\n        });\r\n    }\r\n    if (instanceSwapFactoryBinance !== null) {\r\n      let { web3Binance } = this.state;\r\n      let initialBlock = await web3Binance.eth.getBlockNumber();\r\n      setInterval(async () => {\r\n        const currentBlock = await web3Binance.eth.getBlockNumber();\r\n        instanceSwapFactoryBinance\r\n          .getPastEvents(\"allEvents\", {\r\n            fromBlock: initialBlock,\r\n            toBlock: currentBlock, // You can also specify 'latest'\r\n          })\r\n          .then(\r\n            async function (result) {\r\n              for (let i = 0; i < result.length; i++) {\r\n                console.log(result[i].event);\r\n                if (result[i].event === \"ClaimApprove\") {\r\n                  console.log(result[i]);\r\n                  if (\r\n                    result[i].returnValues.user.toLocaleLowerCase() ===\r\n                    web3Config.getAddress().toLocaleLowerCase()\r\n                  ) {\r\n                    let txLinkReturn =\r\n                      constantConfig[CONSTANT.NETWORK_ID.BINANCE].explorer +\r\n                      \"/tx/\" +\r\n                      result[i].transactionHash;\r\n                    let returnAmount = web3Js.utils\r\n                      .fromWei(result[i].returnValues.amountA)\r\n                      .toLocaleLowerCase();\r\n                    this.updateLedgerAfterResponse(\r\n                      result[i].transactionHash,\r\n                      txLinkReturn,\r\n                      returnAmount\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n            }.bind(this)\r\n          )\r\n          .catch((err) => console.error(err));\r\n        initialBlock = currentBlock;\r\n      }, 10000);\r\n    }\r\n  }\r\n  updateLedgerAfterResponse(hash, txLinkReturn, returnAmount) {\r\n    this.setState(\r\n      {\r\n        isSendingOrder: false,\r\n        txSentStatus: \"Success\",\r\n        txSentTime: new Date().toUTCString(),\r\n        tokenReceive: \"2\",\r\n        txReceiveTime: new Date().toUTCString(),\r\n        txIdReceive: hash,\r\n        whichButton: \"4\",\r\n        txLinkReturn: txLinkReturn,\r\n        receiveFundAmount: returnAmount,\r\n      },\r\n      async () => {\r\n        //   await this.enableInputs();\r\n      }\r\n    );\r\n  }\r\n  scrollToLedger() {\r\n    $(\"html\").animate({ scrollTop: 650 });\r\n  }\r\n\r\n  updateLicenseAddress(network, address, fees) {\r\n    // console.log(network, address)\r\n    // console.log(network === \"BSC\")\r\n    let netlicAdd = (network === \"BSC\" ? \"bscLicenseAddress\" : \"ethLicenseAddress\")\r\n    let netlicFees = (network === \"BSC\" ? \"bscLicenseFees\" : \"ethLicenseFees\")\r\n    let netlicFeesCurrent = (network === \"BSC\" ? \"bscLicenseFeesCurrent\" : \"ethLicenseFeesCurrent\")\r\n    this.setState({\r\n      [netlicAdd]: address,\r\n      [netlicFees]: fees,\r\n      [netlicFeesCurrent]: fees\r\n    }, () => {\r\n      this.setIsValidLicenseAddress();\r\n    })\r\n  }\r\n\r\n  toggle = (index) => {\r\n    let collapse = \"isOpen\" + index;\r\n    this.setState((prevState) => ({ [collapse]: !prevState[collapse] }));\r\n  };\r\n\r\n  async onNetworkChange(event) {\r\n    console.log(event.target.checked)\r\n    console.log(event.target.name)\r\n    this.setState({\r\n      [event.target.name]: event.target.checked\r\n    }, () => {\r\n      this.setIsValidLicenseAddress();\r\n    })\r\n  }\r\n\r\n  async floatOnly(event) {\r\n    if (event.shiftKey === true) event.preventDefault();\r\n\r\n    var code = event.keyCode;\r\n\r\n    if (\r\n      (code >= 48 && code <= 57) ||\r\n      (code >= 96 && code <= 105) ||\r\n      code === 8 ||\r\n      code === 9 ||\r\n      code === 37 ||\r\n      code === 39 ||\r\n      code === 46 ||\r\n      code === 190 ||\r\n      code === 110\r\n    ) {\r\n      // allowed characters\r\n    } else event.preventDefault();\r\n\r\n    if (\r\n      event.target.value.indexOf(\".\") !== -1 &&\r\n      (code === 190 || code === 110)\r\n    )\r\n      event.preventDefault();\r\n  }\r\n\r\n  async handleChange(event) {\r\n    const { value } = event.target;\r\n    this.setState({\r\n      showFeeInpt: value === \"option146\" ? true : false,\r\n      zeroIntegrationShow: value === \"\" ? true : false\r\n    }, () => {\r\n      this.setIsValidLicenseAddress()\r\n    })\r\n  };\r\n\r\n  handalFormChange = (e) => {\r\n    this.setState({\r\n      subDomain: e.target.value,\r\n    });\r\n    const isvalid = validatesubDomain(e.target.value);\r\n    if (!isvalid) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid subdomain\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errormsg: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  changeFontStyle = (e) => {\r\n    this.setState({\r\n      fontStyle: e.target.value,\r\n    });\r\n  };\r\n\r\n  toggalColor = (e, colorType, id) => {\r\n    e.stopPropagation();\r\n    document.getElementById(id).checked = true;\r\n    this.setState({\r\n      [colorType]: true,\r\n    });\r\n  };\r\n\r\n  handleChangeComplete = (color, node) => {\r\n    this.setState({ [node]: color.hex });\r\n  };\r\n\r\n  updateCloneData = (data) => {\r\n    this.setState({\r\n      cloneData: data,\r\n    });\r\n  };\r\n\r\n  closeChromePickerPopUp = (e) => {\r\n    e.stopPropagation();\r\n    this.setState({\r\n      showSecondaryColor: false,\r\n      showPrimaryColor: false,\r\n      showSwapButtonColor: false,\r\n    });\r\n  };\r\n\r\n  preview = () => {\r\n    const {\r\n      bgimage,\r\n      logoImage,\r\n      logoUrl,\r\n      subDomain,\r\n      primaryColor,\r\n      secondaryColor,\r\n      fontStyle,\r\n      backgroundOverLay,\r\n      swapButtonColor,\r\n      changeText,\r\n      sideBar,\r\n    } = this.state;\r\n    console.log(\"siedBar\", sideBar);\r\n    const isvalid = validatesubDomain(subDomain);\r\n    const isValidLogoUrl = isValidURL(logoUrl);\r\n    if (\r\n      logoImage !== \"\" &&\r\n      subDomain !== \"\" &&\r\n      isvalid &&\r\n      isValidLogoUrl\r\n    ) {\r\n      this.setState({\r\n        errormsg: \"\",\r\n        successmsg: \"\",\r\n      });\r\n      const r = document.querySelector(\":root\");\r\n      console.log(\"document\");\r\n      r.style.setProperty(\"--text-color\", primaryColor);\r\n      r.style.setProperty(\"--button-bg-color\", secondaryColor);\r\n      r.style.setProperty(\"--req-bg\", `url(${bgimage})`);\r\n      r.style.setProperty(\"--swap-btn-color\", swapButtonColor);\r\n      console.log(\"CloneForm\");\r\n      this.props.history.push({\r\n        pathname: \"/\",\r\n        state: {\r\n          cloneData: {\r\n            bgimage,\r\n            logoImage,\r\n            logoUrl,\r\n            subDomain,\r\n            primaryColor,\r\n            secondaryColor,\r\n            fontStyle,\r\n            backgroundOverLay,\r\n            isPreview: true,\r\n            swapButtonColor,\r\n            changeText,\r\n            sideBar,\r\n          },\r\n        },\r\n      });\r\n      this.updateCloneData({\r\n        bgimage,\r\n        logoImage,\r\n        subDomain,\r\n        logoUrl,\r\n        primaryColor,\r\n        secondaryColor,\r\n        fontStyle,\r\n        backgroundOverLay,\r\n        changeText,\r\n        swapButtonColor,\r\n        sideBar,\r\n      });\r\n    } else if (!isvalid) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid subdomain\",\r\n      });\r\n    } else if (!isValidLogoUrl) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid Url for behind your logo\",\r\n      });\r\n    } else if (logoImage === \"\") {\r\n      this.setState({\r\n        errormsg: \"Please add logo\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errormsg: \"All fields are mandatory\",\r\n      });\r\n    }\r\n  };\r\n\r\n  Main = async () => {\r\n    const file = document.querySelector(\"#contained-button-file\").files[0];\r\n    const image = await toBase64(file);\r\n    this.setState({\r\n      bgimage: image,\r\n    });\r\n  };\r\n\r\n  changeLogo = async () => {\r\n    const file = document.querySelector(\"#contained-button-file-logo\").files[0];\r\n    const image = await toBase64(file);\r\n    this.setState({\r\n      logoImage: image,\r\n    });\r\n  };\r\n  changeurl = (e) => {\r\n    const link = e.target.value;\r\n    this.setState({\r\n      logoUrl: link,\r\n    });\r\n  };\r\n\r\n  changeOverlay = (e) => {\r\n    this.setState({\r\n      backgroundOverLay: e.target.value,\r\n    });\r\n  };\r\n\r\n  async setIsValidLicenseAddress() {\r\n    let { showFeeInpt, bsc, ethereum, bscLicenseAddress, ethLicenseAddress } = this.state;\r\n    let isValidLicenseAddress = false;\r\n    if (showFeeInpt) {\r\n      if (bsc || ethereum) {\r\n        if (bsc && bscLicenseAddress !== CONSTANT.ZERO_ADDRESS) {\r\n          isValidLicenseAddress = true;\r\n        } else {\r\n          isValidLicenseAddress = false;\r\n        }\r\n        if (ethereum && ethLicenseAddress !== CONSTANT.ZERO_ADDRESS) {\r\n          if (bsc && bscLicenseAddress !== CONSTANT.ZERO_ADDRESS) {\r\n            isValidLicenseAddress = true;\r\n          } else {\r\n            if (ethereum && ethLicenseAddress !== CONSTANT.ZERO_ADDRESS && !bsc)\r\n              isValidLicenseAddress = true;\r\n            else\r\n              isValidLicenseAddress = false;\r\n          }\r\n        } else {\r\n          if (bsc && bscLicenseAddress !== CONSTANT.ZERO_ADDRESS && !ethereum) {\r\n            isValidLicenseAddress = true;\r\n          } else {\r\n            isValidLicenseAddress = false;\r\n          }\r\n        }\r\n      } else {\r\n        if (!bsc && !ethereum)\r\n          isValidLicenseAddress = false;\r\n        else\r\n          isValidLicenseAddress = true;\r\n      }\r\n      // isValidLicenseAddress = ((bscLicenseAddress !== CONSTANT.ZERO_ADDRESS) || (ethLicenseAddress !== CONSTANT.ZERO_ADDRESS));\r\n    } else {\r\n      isValidLicenseAddress = true;\r\n    }\r\n    this.setState({\r\n      allowClone: isValidLicenseAddress\r\n    }, () => {\r\n      this.forceUpdate()\r\n    })\r\n  }\r\n\r\n  uploadData = async () => {\r\n    const {\r\n      bgimage,\r\n      logoImage,\r\n      logoUrl,\r\n      subDomain,\r\n      primaryColor,\r\n      secondaryColor,\r\n      fontStyle,\r\n      backgroundOverLay,\r\n      swapButtonColor,\r\n      sideBar,\r\n      bscLicenseAddress,\r\n      ethLicenseAddress,\r\n      allowClone\r\n    } = this.state;\r\n    const isvalid = validatesubDomain(subDomain);\r\n    const isValidLogoUrl = logoUrl !== undefined ? isValidURL(logoUrl) : false;\r\n    if (\r\n      logoImage !== \"\" &&\r\n      subDomain !== \"\" &&\r\n      isvalid &&\r\n      isValidLogoUrl &&\r\n      allowClone\r\n    ) {\r\n      this.setState({\r\n        errormsg: \"\",\r\n        successmsg: \"\",\r\n        isloading: true,\r\n      });\r\n      try {\r\n        const res = await axios.post(\r\n          \"https://wildcard.bswap.info:1830/api/v1/subdomain/addSubDomain\",\r\n          {\r\n            licenseeAddress: web3Config.getAddress(),\r\n            bscLicenseAddress: bscLicenseAddress,\r\n            ethLicenseAddress: ethLicenseAddress,\r\n            backGroundImage: bgimage,\r\n            primaryColors: primaryColor,\r\n            seconderyColor: secondaryColor,\r\n            subDomain: subDomain,\r\n            logo: logoImage,\r\n            logoUrl: logoUrl,\r\n            fontStyle,\r\n            backgroundOverLay,\r\n            swapButton: swapButtonColor,\r\n            sideBar,\r\n          }\r\n        );\r\n        console.log(res);\r\n\r\n        if (res.data.response_code === 200) {\r\n          this.setState({\r\n            successmsg: res.data.response_message,\r\n          });\r\n          const href = window.location.href;\r\n          const domaindata = href\r\n            .replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\")\r\n            .split(\"/\")[0];\r\n          this.clearPreview();\r\n          this.setState({\r\n            isloading: false,\r\n            visitDomain: `http://${subDomain}.${domaindata}`,\r\n          });\r\n        } else if (res.data.response_code === 409) {\r\n          this.setState({\r\n            errormsg: res.data.response_message,\r\n            isloading: false,\r\n          });\r\n        } else {\r\n          notificationConfig.error(\"\")\r\n          this.setState({\r\n            errormsg: \"Something went wrong please try again later\",\r\n            isloading: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setState({\r\n          isloading: false,\r\n        });\r\n      }\r\n    } else if (!isvalid) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid subdomain\",\r\n      });\r\n      notificationConfig.error(\"Please enter valid subdomain\")\r\n    } else if (!isValidLogoUrl) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid Url for behind your logo\",\r\n      });\r\n      notificationConfig.error(\"Please enter valid Url for behind your logo\")\r\n    } else if (logoImage === \"\") {\r\n      this.setState({\r\n        errormsg: \"Please add logo\",\r\n      });\r\n      notificationConfig.error(\"Please add logo\")\r\n    } else if (!allowClone) {\r\n      this.setState({\r\n        errormsg: \"Please create license contract\",\r\n      });\r\n      notificationConfig.error(\"Please create license contract\")\r\n    } else {\r\n      this.setState({\r\n        errormsg: \"All fields are mandatory\",\r\n      });\r\n      notificationConfig.error(\"All fields are mandatory\")\r\n    }\r\n  };\r\n\r\n  clearPreview = () => {\r\n    const r = document.querySelector(\":root\");\r\n    r.style.removeProperty(\"--text-color\");\r\n    r.style.removeProperty(\"--button-bg-color\");\r\n    r.style.removeProperty(\"--req-bg\");\r\n    this.updateCloneData({\r\n      cloneData: {},\r\n    });\r\n    this.props.history.push({\r\n      pathname: \"\",\r\n      state: {\r\n        cloneData: {},\r\n      },\r\n    });\r\n  };\r\n  changeTypeofLicense = (e) => {\r\n    this.setState({\r\n      typeofLicense: e.target.value,\r\n    });\r\n  };\r\n  _onChangeRadio(e) {\r\n    const name = e.target.name;\r\n    this.setState({\r\n      [name]: e.target.value,\r\n    });\r\n    if (name === \"changeText\" && e.target.value === \"No\") {\r\n      this.setState({\r\n        primaryColor: \"#ffffff\",\r\n        secondaryColor: \"#5c6bc0\",\r\n        swapButtonColor: \"#91dc27\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async setLicenseeFee(network, reimbursementAddress, vaultAddress, newFees) {\r\n\r\n    await web3Config.connectWallet(0);\r\n    let newNetworkId = web3Config.getNetworkId()\r\n\r\n    if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\r\n      notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\r\n      return;\r\n    }\r\n    if (\r\n      network === \"Ethereum\" &&\r\n      (newNetworkId === 97 || newNetworkId === 56)\r\n    ) {\r\n      notificationConfig.warning(\"Change metamask network to Ethereum!\");\r\n      return;\r\n    } else if (\r\n      network === \"BSC\" &&\r\n      (newNetworkId === 42 || newNetworkId === 1)\r\n    ) {\r\n      notificationConfig.warning(\"Change metamask network to Binance!\");\r\n      return;\r\n    }\r\n\r\n    // this.setState({ creatingLicense: true })\r\n    console.log(reimbursementAddress, vaultAddress, newFees)\r\n\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n\r\n    let reimbursementContract = new ReimbursementContract(web3, networkId);\r\n\r\n    let setLicenseeFeeData = {};\r\n\r\n    setLicenseeFeeData[\"reimbursementAddress\"] = reimbursementAddress;\r\n    setLicenseeFeeData[\"vault\"] = vaultAddress;\r\n    setLicenseeFeeData[\"projectContract\"] = constantConfig[networkId].swapFactoryContract;\r\n    setLicenseeFeeData[\"fee\"] = Number(newFees);\r\n\r\n    reimbursementContract.setLicenseeFee(\r\n      setLicenseeFeeData,\r\n      (hash) => {\r\n        this.setState({\r\n          // swapLoading: true,\r\n          // txIdSent: hash,\r\n          // txLinkSend: data[networkId].explorer + '/tx/' + hash,\r\n        });\r\n      },\r\n      async (receipt) => {\r\n        // this.setState({ crtLicSuccess: true, creatingLicense: false })\r\n        // this.props.updateLicenseAddress(this.props.network, await reimbursementContract.getVaultAddress(receipt), licenseeFees)\r\n        notificationConfig.success('Fees Updated Successfully!');\r\n      },\r\n      async (error) => {\r\n        // this.setState({ creatingLicense: false })\r\n        if (error.code === 4001) {\r\n          notificationConfig.error(\"Transaction rejected!\")\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      bgimage,\r\n      logoImage,\r\n      logoUrl,\r\n      subDomain,\r\n      primaryColor,\r\n      showPrimaryColor,\r\n      showSecondaryColor,\r\n      secondaryColor,\r\n      errormsg,\r\n      successmsg,\r\n      fontStyle,\r\n      isloading,\r\n      visitDomain,\r\n      typeofLicense,\r\n      changeFee,\r\n      displayToken,\r\n      changeText,\r\n      swapButtonColor,\r\n      showSwapButtonColor,\r\n      sideBar,\r\n      bsc,\r\n      ethereum,\r\n      bscLicenseAddress,\r\n      ethLicenseAddress,\r\n      bscLicenseTokenBalance,\r\n      ethLicenseTokenBalance,\r\n      allowClone\r\n    } = this.state;\r\n    return (\r\n      <main id=\"main\" className=\"smartSwap\">\r\n        <div className=\"fullscreen-bg\">\r\n          <div className=\"fsbg_sad01\"></div>\r\n          <div className=\"fsbg_container\">\r\n            <video loop autoPlay muted className=\"fullscreen-bg__video\">\r\n              <source src={CONSTANT.PrePath + \"/video/14559736-hd.webm?v=1.18\"} type=\"video/webm\" />\r\n              <source src={CONSTANT.PrePath + \"/video/14559736-hd.mp4?v=1.18\"} type=\"video/mp4\" />\r\n              <source src={CONSTANT.PrePath + \"/video/14559736-hd.ogv?v=1.18\"} type=\"video/ogg\" />\r\n            </video>\r\n          </div>\r\n        </div>\r\n        <div className=\"main\">\r\n          {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n          <RightSideMenu\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n            cloneData={this.state.cloneData}\r\n          ></RightSideMenu>\r\n          {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n          <Header\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n            cloneData={this.state.cloneData}\r\n          ></Header>\r\n          {/* <!--======================= HEADER END =====================--> */}\r\n          <div className=\"mainBlock\">\r\n            {/* <!--======================= SWAP BLOCK START =====================--> */}\r\n\r\n            <Link to=\"/\" class=\"close-Icon\" style={{ zIndex: '1000', top: '70px', right: '35px' }}></Link>\r\n            <div className=\"swap-Block\">\r\n              <div className=\"container-Grid\">\r\n                <div className=\"smeTitle01-v2\"> {/*   onClick={() => { this.openPopup(\"WithdrawToken\"); }} */}\r\n                  Get Your Own License For FREE\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-textBox\">\r\n                <div className=\"container-Grid\">\r\n                  <div className=\"gwFormMbox\">\r\n                    <div className=\"gwFormLMbox\">\r\n                      <div className=\"gwFormSTitle01\">\r\n                        <span>1</span> Set up your fees and reimbursement\r\n                      </div>\r\n\r\n                      <div className=\"gwFormSbox01\">\r\n                        <div className=\"gwFormTitle01\" >Do you want to charge your users a fee above our fee?</div>\r\n                        <div className=\"gwFormSFormbox02\">\r\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                            <input type=\"radio\" id=\"rr01\" checked={this.state.showFeeInpt ? true : false} name=\"stepin46\" value=\"option146\" onChange={this.handleChange.bind(this)} />\r\n                            <label htmlFor=\"rr01\">Yes </label>\r\n                          </div>\r\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                            <input type=\"radio\" id=\"rr02\" checked={this.state.showFeeInpt ? false : true} name=\"stepin46\" value=\"option145\" onChange={this.handleChange.bind(this)} />\r\n                            <label htmlFor=\"rr02\">No</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {this.state.showFeeInpt ?\r\n                        <div>\r\n                          <div className=\"gwFormSbox01\">\r\n                            <div className=\"gwFormTitle01\" >Choose blockchain  <i className=\"help-circle\"> <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"You can only charge fees and reimbursement users with your tokens on blockchains that your token is deploy on. If your token is for example on one chain like Ethereum users from other chains like BSC can use your license but they will not be charged with fees or reimbursement for it\" aria-hidden=\"true\"></i> </i>\r\n                            </div>\r\n                            <div className=\"gwFormSCheckbx01\">\r\n                              <div className=\"md-checkbox\">\r\n                                <input type=\"checkbox\" id=\"rr04\" name=\"bsc\" onChange={(e) => this.onNetworkChange(e)} />\r\n                                <label htmlFor=\"rr04\">BSC </label>\r\n                              </div>\r\n                              <div className=\"md-checkbox\">\r\n                                <input type=\"checkbox\" id=\"rr03\" name=\"ethereum\" onChange={(e) => this.onNetworkChange(e)} />\r\n                                <label htmlFor=\"rr03\">Ethereum </label>\r\n                              </div>\r\n                              <div className=\"md-checkbox\">\r\n                                <input type=\"checkbox\" id=\"rr05\" name=\"polygon\" onChange={(e) => this.onNetworkChange(e)} disabled />\r\n                                <label htmlFor=\"rr05\">Polygon </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {this.state.bsc ?\r\n                            <CreateLicence reimbursementAddress={constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract} network=\"BSC\" currency=\"BNB\" connectWallet={() => { this.connectWallet() }} web3={this.state.web3} updateLicenseAddress={this.updateLicenseAddress.bind(this)} web3Binance={this.state.web3Binance}></CreateLicence>\r\n                            : null}\r\n                          {this.state.ethereum ?\r\n                            <CreateLicence reimbursementAddress={constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract} network=\"Ethereum\" currency=\"ETH\" connectWallet={() => { this.connectWallet() }} web3={this.state.web3} updateLicenseAddress={this.updateLicenseAddress.bind(this)} web3Ethereum={this.state.web3Ethereum}></CreateLicence>\r\n                            : null}\r\n                          {this.state.polygon ?\r\n                            <CreateLicence network=\"Polygon\" currency=\"MATIC\"></CreateLicence>\r\n                            : null}\r\n\r\n                        </div>\r\n                        : null}\r\n\r\n                      {/* <div className=\"gwFormBRBox01\">\r\n                        <div className=\"gwFormBRTitle01\">\r\n                          <span>Ethereum</span>\r\n                        </div>\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Add your native token smart contract on Ethereum\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>TOKEN</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Add a pool contract between your TOKEN to ETH\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>TOKEN</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            How many days users need to stake to get 100%\r\n                            reimbursement?\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>DAYS</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Choose the token ratio users will need to stake\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>: 1</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <button className=\"gwFormBTN02\">\r\n                          Connect your Ethereum wallet to create a license on\r\n                          Ethereum{\" \"}\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div className=\"gwFormBRBox01\">\r\n                        <div className=\"gwFormBRTitle01\">\r\n                          <span>BSC</span>\r\n                        </div>\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Add your native token smart contract on BSC\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>TOKEN</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Add a pool contract between your TOKEN to BNB\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>TOKEN</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            How many days users need to stake to get 100%\r\n                            reimbursement?\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>DAYS</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Choose the token ratio users will need to stake\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>: 1</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <button className=\"gwFormBTN02 greenC\">\r\n                          <i className=\"fas fa-check\"></i> BSC license been\r\n                          created successfully\r\n                        </button>\r\n                      </div> */}\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"gwFormRMbox\">\r\n                      <div className=\"gwFormSTitle01\">\r\n                        <span>2</span>Set up your design{\" \"}\r\n                      </div>\r\n                      <div className=\"gwFormSbox01\">\r\n                        <div className=\"gwFormTitle01\">\r\n                          Choose the type of integration{\" \"}\r\n                        </div>\r\n                        <div className=\"gwFormSFormbox02\">\r\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              id=\"radio145\"\r\n                              name=\"typeofLicense\"\r\n                              checked={this.state.typeofLicense === \"Zero integration\" ? true : false}\r\n                              value=\"Zero integration\"\r\n                              defaultChecked\r\n                              onChange={this._onChangeRadio}\r\n                            />\r\n                            <label htmlFor=\"radio145\">\r\n                              Zero integration\r\n                              <i className=\"help-circle\">\r\n                                <i\r\n                                  className=\"fas fa-question-circle protip\"\r\n                                  data-pt-position=\"top\"\r\n                                  data-pt-title=\"This option allow licensees to create an instant license under one minute, with no coding knowledge needed or any server costs.\"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              </i>\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              id=\"radio146\"\r\n                              name=\"typeofLicense\"\r\n                              checked={this.state.typeofLicense === \"Smart contract integration\" ? true : false}\r\n                              value=\"Smart contract integration\"\r\n                              onChange={this._onChangeRadio}\r\n                            // onClick={() => { notificationConfig.info(\"Coming Soon!\") }}\r\n                            // disabled\r\n                            />\r\n                            <label htmlFor=\"radio146\">\r\n                              Smart contract integration\r\n                              <i className=\"help-circle\">\r\n                                <i\r\n                                  className=\"fas fa-question-circle protip\"\r\n                                  data-pt-position=\"top\"\r\n                                  data-pt-title=\"This option allow licensees to designed their own UI and do direct integration with the smart contract code. \"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              </i>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {typeofLicense === \"Zero integration\" && (\r\n                        <>\r\n\r\n                          <div className=\"gwFormSbox01\">\r\n                            {/* <div className=\"gwFormTitle01\">\r\n                              Do you want to display your native token first during\r\n                              the lauding?\r\n                              <i className=\"help-circle\">\r\n                                <i\r\n                                  className=\"fas fa-question-circle protip\"\r\n                                  data-pt-position=\"top\"\r\n                                  data-pt-title=\"Help Text\"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              </i>\r\n                            </div>\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"rr200\"\r\n                                  defaultChecked\r\n                                  name=\"stepin101\"\r\n                                  value=\"1\"\r\n                                />\r\n                                <label htmlFor=\"rr200\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"rr201\"\r\n                                  name=\"stepin101\"\r\n                                  value=\"option145\"\r\n                                />\r\n                                <label htmlFor=\"rr201\">No</label>\r\n                              </div>\r\n                            </div> */}\r\n                            {/* <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"rr202\"\r\n                                  name=\"displayToken\"\r\n                                  value=\"Display all tokens\"\r\n                                  onChange={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"rr202\">\r\n                                  Display all tokens\r\n                                  <i className=\"help-circle\">\r\n                                    <i\r\n                                      className=\"fas fa-question-circle protip\"\r\n                                      data-pt-position=\"top\"\r\n                                      data-pt-title=\"Help Text\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </i>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"rr203\"\r\n                                  name=\"displayToken\"\r\n                                  value=\"Display token lists\"\r\n                                  onChange={this._onChangeRadio}\r\n                                  defaultChecked\r\n                                />\r\n                                <label htmlFor=\"rr203\">\r\n                                  Display token lists\r\n                                  <i className=\"help-circle\">\r\n                                    <i\r\n                                      className=\"fas fa-question-circle protip\"\r\n                                      data-pt-position=\"top\"\r\n                                      data-pt-title=\"Help Text\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </i>\r\n                                </label>\r\n                              </div>\r\n                            </div> */}\r\n                          </div>\r\n                          {/* {displayToken === \"Display token lists\" && (\r\n                            <div className=\"gwFormSbox01\">\r\n                              <div class=\"gwFormSFormbox01\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  style={{ width: \"100%\" }}\r\n                                  placeholder=\"https:// or ipfs:// or ENS name\"\r\n                                  defaultValue=\"\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          )} */}\r\n\r\n                          <div className=\"gwFormSbox01 \">\r\n                            <div className=\"gwFormTitle01\">\r\n                              Choose your subdomain name\r\n                              <i className=\"help-circle\">\r\n                                <i\r\n                                  className=\"fas fa-question-circle protip\"\r\n                                  data-pt-position=\"top\"\r\n                                  data-pt-title=\"After you choose your subdomain, you can create a redirect with a mask to it, from your own main domain. so your users will not even know about that subdomain and it will look and fell like it yours\"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              </i>{\" \"}\r\n                            </div>\r\n                            <div className=\"gwFormSFormbox01 v2 smFixer03\">\r\n                              <input\r\n                                type=\"text\"\r\n                                value={subDomain}\r\n                                onChange={this.handalFormChange}\r\n                              />{\" \"}\r\n                              <span>.smartswap.exchange </span>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                          <div className=\"gwFormSbox01 NpDisplyFix01 \">\r\n                            <div className=\"gwFormSubBox01 smFixer04\">\r\n                              Add logo\r\n                              <div className=\"SSMainInputBX \">\r\n                                <input\r\n                                  placeholder=\"Choose file\"\r\n                                  disabled=\"disabled\"\r\n                                  className=\"ssInputtype01\"\r\n                                />\r\n                                <label className=\"custom-file-input\">\r\n                                  <input\r\n                                    type=\"file\"\r\n                                    id=\"contained-button-file-logo\"\r\n                                    onChange={this.changeLogo.bind(this)}\r\n                                    accept=\"image/*\"\r\n                                  />\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"gwFormSubBox01 smFixer04\">\r\n                              Add a URL link behind your logo\r\n                              <div className=\"SSMainInputBX\">\r\n                                <input\r\n                                  id=\"urlLink\"\r\n                                  placeholder=\"http:///www.yourwebsite.com\"\r\n                                  style={{ width: \"100%\", color: \"white\" }}\r\n                                  className=\"ssInputtype01\"\r\n                                  value={logoUrl}\r\n                                  onChange={this.changeurl}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {logoImage !== \"\" && (\r\n                            <div className=\"gwFormSbox01 NpDisplyFix01 \">\r\n                              <img src={logoImage} alt=\"\" width=\"200\" />\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"gwFormSbox01 NpDisplyFix01 smFixer04\">\r\n                            <div className=\"gwFormSubBox01\">\r\n                              Add new background\r\n                              <div className=\"SSMainInputBX\">\r\n                                <input\r\n                                  placeholder=\"Choose file\"\r\n                                  disabled=\"disabled\"\r\n                                  className=\"ssInputtype01\"\r\n                                />\r\n                                <label className=\"custom-file-input\">\r\n                                  <input\r\n                                    type=\"file\"\r\n                                    onChange={this.Main.bind(this)}\r\n                                    id=\"contained-button-file\"\r\n                                    accept=\"image/*\"\r\n                                  />\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"gwFormSubBox01\">\r\n                              Background dark layer\r\n                              <div className=\"dragorInput\">\r\n                                <div className=\"bg-slider\">\r\n                                  <input\r\n                                    type=\"range\"\r\n                                    min=\"1\"\r\n                                    max=\"99\"\r\n                                    value={this.state.backgroundOverLay}\r\n                                    class=\"overlay-slider\"\r\n                                    id=\"myRange\"\r\n                                    onChange={this.changeOverlay}\r\n                                    title=\"title\"\r\n                                  />\r\n\r\n                                  <span className=\"bar\"></span>\r\n\r\n                                  <span\r\n                                    className=\"progress\"\r\n                                    style={{\r\n                                      width: `calc(${this.state.backgroundOverLay}% )`,\r\n                                    }}\r\n                                  ></span>\r\n                                  <span className=\"text\">0%</span>\r\n                                  <span className=\"text right\">100%</span>\r\n                                  <span\r\n                                    className=\"percent\"\r\n                                    style={{\r\n                                      left: `calc(${this.state.backgroundOverLay\r\n                                        }% - ${this.state.backgroundOverLay / 3 - 23\r\n                                        }px)`,\r\n                                      borderRadius: \"0\",\r\n                                      border: \"0\",\r\n                                      boxShadow: \"none\",\r\n                                    }}\r\n                                  >\r\n                                    {this.state.backgroundOverLay}%\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {bgimage !== \"\" && (\r\n                            <div className=\"gwFormSbox01 NpDisplyFix01 \">\r\n                              <img src={bgimage} alt=\"\" width=\"200\" />\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"gwFormSbox01 smFixer04\">\r\n                            <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\r\n                              Keep SmartSwap side bar\r\n                            </div>\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio21\"\r\n                                  name=\"sideBar\"\r\n                                  value=\"true\"\r\n                                  defaultChecked\r\n                                  onClick={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"radio21\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio22\"\r\n                                  name=\"sideBar\"\r\n                                  value=\"false\"\r\n                                  defaultChecked={\r\n                                    this.state.sideBar === \"false\"\r\n                                  }\r\n                                  onClick={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"radio22\">No </label>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\r\n                              Change button and text\r\n                            </div>\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio11\"\r\n                                  name=\"changeText\"\r\n                                  value=\"Yes\"\r\n                                  defaultChecked\r\n                                  onClick={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"radio11\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio12\"\r\n                                  name=\"changeText\"\r\n                                  value=\"No\"\r\n                                  defaultChecked={\r\n                                    this.state.changeText === \"No\"\r\n                                  }\r\n                                  onClick={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"radio12\">No </label>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\r\n                              Keep button \"BECOME A SWAP PROVIDER\"\r\n                            </div>\r\n\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio13\"\r\n                                  name=\"aaaa\"\r\n                                  value=\"Yes\"\r\n                                  defaultChecked\r\n                                />\r\n                                <label htmlFor=\"radio13\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio14\"\r\n                                  name=\"aaaa\"\r\n                                  value=\"No\"\r\n                                />\r\n                                <label htmlFor=\"radio14\">No </label>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\r\n                              Keep button \"GET YOUR OWN FREE LICENSE\"\r\n                            </div>\r\n\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio15\"\r\n                                  name=\"bbb\"\r\n                                  value=\"Yes\"\r\n                                  defaultChecked\r\n                                />\r\n                                <label htmlFor=\"radio15\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio16\"\r\n                                  name=\"bbb\"\r\n                                  value=\"No\"\r\n                                />\r\n                                <label htmlFor=\"radio16\">No </label>\r\n                              </div>\r\n                            </div> */}\r\n                          </div>\r\n                          {changeText === \"Yes\" && (\r\n                            <>\r\n                              <div className=\"gwFormSbox01\">\r\n                                <div className=\"gwFormTitle01\">\r\n                                  Select font style\r\n                                </div>\r\n                                <select\r\n                                  name=\"fontStyle\"\r\n                                  id=\"fontStyle\"\r\n                                  className=\"subdomain\"\r\n                                  value={fontStyle}\r\n                                  onChange={this.changeFontStyle}\r\n                                  style={{\r\n                                    padding: \"20px 15px\",\r\n                                    width: \"100%\",\r\n                                    backgroundColor: \"#16171e\",\r\n                                    color: \"#fff\",\r\n                                    border: 0,\r\n                                  }}\r\n                                >\r\n                                  <option value=\"Default\">Default</option>\r\n                                  <option value=\"Montserrat\">Montserrat</option>\r\n                                  <option value=\"Nunito\">Nunito</option>\r\n                                  <option value=\"Poppins\">Poppins</option>\r\n                                  <option value=\"Roboto\">Roboto</option>\r\n                                </select>\r\n                                {/* <div className=\"LiproDropdown\">\r\n                                  <button\r\n                                    className=\"LiproDDbtn01\"\r\n                                    onClick={() => this.toggle(1)}\r\n                                  >\r\n                                    <div className=\"ddIconBX\">Default</div>\r\n                                    <i className=\"fas fa-caret-down\"></i>\r\n                                  </button>\r\n                                  <div className=\"ddContainer\">\r\n                                    <Collapse\r\n                                      isOpen={this.state.isOpen1}\r\n                                      className={\"collapse-css-transition\"}\r\n                                    >\r\n                                      <button className=\"LiproDDbtn01\">\r\n                                        <div className=\"ddIconBX\">Font 01</div>\r\n                                      </button>\r\n                                      <button className=\"LiproDDbtn01\">\r\n                                        <div className=\"ddIconBX\">Font 02</div>\r\n                                      </button>\r\n                                    </Collapse>\r\n                                    \r\n                                  </div>\r\n                                </div> */}\r\n                              </div>\r\n\r\n                              <div className=\"colorPlateMBox npFixer05\">\r\n                                <div className=\"colorPlateTitle01\">\r\n                                  Text color\r\n                                </div>\r\n                                <div className=\"colorPlateSBox01\">\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"s01\"\r\n                                      name=\"s11\"\r\n                                      value=\"s10\"\r\n                                      defaultChecked\r\n                                      onClick={() =>\r\n                                        this.setState({ primaryColor: \"#fff\" })\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"s01\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={() => {\r\n                                      document.getElementById(\r\n                                        \"s01\"\r\n                                      ).checked = true;\r\n                                      this.setState({ primaryColor: \"#fff\" });\r\n                                    }}\r\n                                  >\r\n                                    Current color{\" \"}\r\n                                    <div\r\n                                      className=\"ColorBX\"\r\n                                      style={{ backgroundColor: \"#fff\" }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"chevrBox\">\r\n                                    <i className=\"fas fa-chevron-right\"></i>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  className=\"colorPlateSBox02\"\r\n                                  style={{ position: \"relative\" }}\r\n                                >\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"s02\"\r\n                                      name=\"s11\"\r\n                                      value=\"s11\"\r\n                                      defaultChecked={primaryColor !== \"#fff\"}\r\n                                    />\r\n                                    <label htmlFor=\"s02\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={(e) => {\r\n                                      this.toggalColor(\r\n                                        e,\r\n                                        \"showPrimaryColor\",\r\n                                        \"s02\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    New color\r\n                                    <span className=\"colorPlaterSbx\">\r\n                                      <div\r\n                                        className=\"ColorBX\"\r\n                                        style={{ background: primaryColor }}\r\n                                      ></div>\r\n                                      <button>\r\n                                        {\" \"}\r\n                                        <i class=\"fas fa-sort-down\"></i>{\" \"}\r\n                                      </button>\r\n                                    </span>\r\n                                  </div>\r\n                                  {showPrimaryColor && (\r\n                                    <>\r\n                                      <div\r\n                                        className=\"overPicker\"\r\n                                        onClick={this.closeChromePickerPopUp.bind(\r\n                                          this\r\n                                        )}\r\n                                      ></div>\r\n                                      <div className=\"color-picker\">\r\n                                        <ChromePicker\r\n                                          color={primaryColor}\r\n                                          onChangeComplete={(color) => {\r\n                                            this.handleChangeComplete(\r\n                                              color,\r\n                                              \"primaryColor\"\r\n                                            );\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"colorPlateMBox npFixer05\">\r\n                                <div className=\"colorPlateTitle01\">\r\n                                  Connect your wallet button\r\n                                </div>\r\n                                <div className=\"colorPlateSBox01\">\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"s03\"\r\n                                      name=\"s12\"\r\n                                      value=\"s12\"\r\n                                      defaultChecked\r\n                                      onClick={() =>\r\n                                        this.setState({\r\n                                          secondaryColor: \"#5c6bc0\",\r\n                                        })\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"s03\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={() => {\r\n                                      document.getElementById(\r\n                                        \"s03\"\r\n                                      ).checked = true;\r\n                                      this.setState({\r\n                                        secondaryColor: \"#5c6bc0\",\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Current color{\" \"}\r\n                                    <div\r\n                                      className=\"ColorBX\"\r\n                                      style={{ backgroundColor: \"#5c6bc0\" }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"chevrBox\">\r\n                                    <i className=\"fas fa-chevron-right\"></i>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  className=\"colorPlateSBox02\"\r\n                                  style={{ position: \"relative\" }}\r\n                                >\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"s04\"\r\n                                      name=\"s12\"\r\n                                      value=\"s12\"\r\n                                      defaultChecked={\r\n                                        secondaryColor !== \"#5c6bc0\"\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"s04\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={(e) => {\r\n                                      this.toggalColor(\r\n                                        e,\r\n                                        \"showSecondaryColor\",\r\n                                        \"s04\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    New color\r\n                                    <span className=\"colorPlaterSbx\">\r\n                                      <div\r\n                                        className=\"ColorBX\"\r\n                                        style={{ background: secondaryColor }}\r\n                                      ></div>\r\n                                      <button>\r\n                                        {\" \"}\r\n                                        <i class=\"fas fa-sort-down\"></i>{\" \"}\r\n                                      </button>\r\n                                    </span>\r\n                                  </div>\r\n                                  {showSecondaryColor && (\r\n                                    <>\r\n                                      <div\r\n                                        className=\"overPicker\"\r\n                                        onClick={this.closeChromePickerPopUp.bind(\r\n                                          this\r\n                                        )}\r\n                                      ></div>\r\n                                      <div className=\"color-picker\">\r\n                                        <ChromePicker\r\n                                          color={secondaryColor}\r\n                                          onChangeComplete={(color) => {\r\n                                            this.handleChangeComplete(\r\n                                              color,\r\n                                              \"secondaryColor\"\r\n                                            );\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"colorPlateMBox npFixer05\">\r\n                                <div className=\"colorPlateTitle01\">\r\n                                  Swap button\r\n                                </div>\r\n                                <div className=\"colorPlateSBox01\">\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"swap\"\r\n                                      name=\"swapButtonColor\"\r\n                                      value=\"s12\"\r\n                                      defaultChecked\r\n                                      onClick={() =>\r\n                                        this.setState({\r\n                                          swapButtonColor: \"#91dc27\",\r\n                                        })\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"swap\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={() => {\r\n                                      document.getElementById(\r\n                                        \"swap\"\r\n                                      ).checked = true;\r\n                                      this.setState({\r\n                                        swapButtonColor: \"#91dc27\",\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Current color{\" \"}\r\n                                    <div\r\n                                      className=\"ColorBX\"\r\n                                      style={{ backgroundColor: \"#91dc27\" }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"chevrBox\">\r\n                                    <i className=\"fas fa-chevron-right\"></i>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  className=\"colorPlateSBox02\"\r\n                                  style={{ position: \"relative\" }}\r\n                                >\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"swap1\"\r\n                                      name=\"swapButtonColor\"\r\n                                      value=\"s12\"\r\n                                      defaultChecked={\r\n                                        swapButtonColor !== \"#91dc27\"\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"swap1\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={(e) => {\r\n                                      this.toggalColor(\r\n                                        e,\r\n                                        \"showSwapButtonColor\",\r\n                                        \"swap1\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    New color\r\n                                    <span className=\"colorPlaterSbx\">\r\n                                      <div\r\n                                        className=\"ColorBX\"\r\n                                        style={{ background: swapButtonColor }}\r\n                                      ></div>\r\n                                      <button>\r\n                                        {\" \"}\r\n                                        <i class=\"fas fa-sort-down\"></i>{\" \"}\r\n                                      </button>\r\n                                    </span>\r\n                                  </div>\r\n                                  {showSwapButtonColor && (\r\n                                    <>\r\n                                      <div\r\n                                        className=\"overPicker\"\r\n                                        onClick={this.closeChromePickerPopUp.bind(\r\n                                          this\r\n                                        )}\r\n                                      ></div>\r\n                                      <div className=\"color-picker\">\r\n                                        <ChromePicker\r\n                                          color={swapButtonColor}\r\n                                          onChangeComplete={(color) => {\r\n                                            this.handleChangeComplete(\r\n                                              color,\r\n                                              \"swapButtonColor\"\r\n                                            );\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </>\r\n                          )}\r\n                          {errormsg !== \"\" && (\r\n                            <p style={{ color: \"red\" }}>{errormsg}</p>\r\n                          )}\r\n                          {successmsg !== \"\" && (\r\n                            <p style={{ color: \"#92db28\" }}>{successmsg}</p>\r\n                          )}\r\n\r\n                          <div className=\"colorPlateMBox\">\r\n                            <div className=\"colorPlateTitle01\">\r\n                              <button\r\n                                disabled={isloading}\r\n                                onClick={this.preview}\r\n                              >\r\n                                Preview\r\n                              </button>\r\n                              {visitDomain !== \"\" && (\r\n                                <button\r\n                                  className=\"\"\r\n                                  style={{ marginLeft: 25 }}\r\n                                  onClick={() => {\r\n                                    window.open(visitDomain, \"_blank\");\r\n                                  }}\r\n                                >\r\n                                  Go to Page\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                      {typeofLicense === \"Smart contract integration\" && (\r\n                        <div id=\"contract-integration\">\r\n                          {/* <div className=\"gwFormTitle01\">swapMulti </div>\r\n                          <div className=\"swapMulti\">\r\n                            <Highlight language=\"javascript\">\r\n                              {` function swapMulti (                          \r\n IERC20[] memory tokens,\r\n uint256 amounts,\r\n uint256 minReturn,\r\n uint256[] memory distribution,\r\n uint256[] memory flags,\r\n ) public payable returns (uint256)`}\r\n                            </Highlight>\r\n                          </div>\r\n\r\n                          <p className=\"swapMultiP\">\r\n                            Swap <span style={{ color: \"white\" }}>amount</span>{\" \"}\r\n                            first element of{\" \"}\r\n                            <span style={{ color: \"white\" }}>tokens</span> of\r\n                            the latest element.<br></br>\r\n                            The length of{\" \"}\r\n                            <span style={{ color: \"white\" }}>flags</span> array\r\n                            should be 1 element less than tokens array length.\r\n                            Each element from{\" \"}\r\n                            <span style={{ color: \"white\" }}>flags</span> array\r\n                            corresponds to 2 neighboring elements from{\" \"}\r\n                            <span style={{ color: \"white\" }}>tokens</span>{\" \"}\r\n                            array.\r\n                          </p>\r\n                          <table className=\"swapMultiTable\">\r\n                            <tr style={{ color: \"white\" }}>\r\n                              <td className=\"lefttd\">Params</td>\r\n                              <td>Type</td>\r\n                              <td>Description </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"lefttd\">token</td>\r\n                              <td>IERC20[]</td>\r\n                              <td>\r\n                                Addresses of tokens or{\" \"}\r\n                                <span style={{ color: \"white\" }}>\r\n                                  address(0)\r\n                                </span>{\" \"}\r\n                                for Ether\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"lefttd\">amount</td>\r\n                              <td>uint256</td>\r\n                              <td>Amount of tokens</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"lefttd\">minReturn</td>\r\n                              <td>uint256</td>\r\n                              <td>\r\n                                Minimum expected return,else revert transaction\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"lefttd\">distribution</td>\r\n                              <td>uint256[]</td>\r\n                              <td style={{ lineHeight: \"1.8\" }}>\r\n                                Array of weights for volume distribution\r\n                                (returned by{\" \"}\r\n                                <span style={{ color: \"white\" }}>\r\n                                  getRespectReturn)\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr style={{ borderBottom: \"1px solid #271e3a\" }}>\r\n                              <td className=\"lefttd\">flags</td>\r\n                              <td>uint256[]</td>\r\n                              <td style={{ lineHeight: \"1.8\" }}>\r\n                                The sequence of flags for enabling and disabling\r\n                                some features (default:{\" \"}\r\n                                <span style={{ color: \"white\" }}>0</span>), see\r\n                                flags Description\r\n                              </td>\r\n                            </tr>\r\n                          </table> */}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div className=\"gwFormSFormbox03\">\r\n                    {/* <button\r\n                      className=\"gwFormBTN01 greenBack\"\r\n                      disabled={\r\n                        isloading || typeofLicense !== \"Zero integration\"\r\n                      }\r\n                      onClick={this.uploadData}\r\n                    >\r\n                      {isloading\r\n                        ? \"Cloning..\"\r\n                        : \"GET YOUR OWN LICENSE FOR FREE\"}\r\n                    </button> */}\r\n\r\n                    {this.state.web3 !== null ?\r\n                      <button\r\n                        className={allowClone ? \"gwFormBTN01 greenBack\" : \"gwFormBTN01 greenBack disable-btn\"}\r\n                        disabled={\r\n                          isloading || typeofLicense !== \"Zero integration\" || !allowClone\r\n                        }\r\n                        onClick={this.uploadData}\r\n                      >\r\n                        {isloading\r\n                          ? \"Cloning..\"\r\n                          : \"GET YOUR OWN LICENSE FOR FREE\"}\r\n                      </button>\r\n                      :\r\n                      <button\r\n                        className=\"gwFormBTN01\"\r\n                        disabled={\r\n                          isloading\r\n                        }\r\n                        onClick={() => { this.connectWallet() }}\r\n                      >\r\n                        Connect your wallet\r\n                      </button>\r\n                    }\r\n                  </div>\r\n\r\n                  {/*     First Popup Part */}\r\n                  {(visitDomain && typeofLicense === \"Zero integration\") ? (\r\n                    <>\r\n                      <div className=\"spacerLine02\"></div>\r\n                      <div className=\"smeTitle01-v3\">\r\n                        Below is Your License URL and Smart Contract\r\n                      </div>\r\n\r\n                      <div className=\"LicMbx\">\r\n                        Your licensee sub domain\r\n                        <div className=\"LicInputBX01\">\r\n                          <input type=\"text\" value={visitDomain} id=\"license\" />\r\n                          <a\r\n                            href=\"#\"\r\n                            className=\"LicCopyBTN\"\r\n                            onClick={(a) => copyAffiliateLink(a, \"license\")}\r\n                          >\r\n                            <i class=\"fas fa-copy\"></i>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"gwFormBRBox01\">\r\n                        {ethLicenseAddress !== \"0x0000000000000000000000000000000000000000\" ?\r\n                          <div className=\"LicMbx\">\r\n                            Your licensee smart contract for Ethereum\r\n                            <div className=\"LicInputBX01\">\r\n                              <input\r\n                                type=\"text\"\r\n                                value={ethLicenseAddress}\r\n                                id=\"Ethereum\"\r\n                              />\r\n                              <a\r\n                                href=\"#\"\r\n                                className=\"LicCopyBTN\"\r\n                                onClick={(a) => copyAffiliateLink(a, \"Ethereum\")}\r\n                              >\r\n                                <i class=\"fas fa-copy\"></i>\r\n                              </a>\r\n                            </div>\r\n                            <div className=\"LicInfoBX\">\r\n                              {\" \"}\r\n                              Created: July 21, 2021 11:23:01 am UTC |\r\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"Ethereum\", ethLicenseAddress, 'DepositToken', \"tab-A1\") }}>\r\n                                <span className=\"greenC\">\r\n                                  Deposit your reimbursement TOKEN to this smart\r\n                                  contract\r\n                                </span>{\" \"}\r\n                              </a>\r\n                              {/* | Balance: 8569.563 [TOKEN] |{\" \"} */}\r\n                              | Balance: {ethLicenseTokenBalance} |{\" \"}\r\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"Ethereum\", ethLicenseAddress, 'DepositToken', \"tab-A2\") }}>\r\n                                <span className=\"redC\">\r\n                                  Withdraw your reimbursement tokens\r\n                                </span>\r\n                              </a>\r\n                            </div>\r\n                            <div style={{ marginTop: \"15px\" }}>\r\n                              Change the fees that you want to charge your users <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n\r\n                            <div className='DragrMBX'>\r\n                              <div className='DragrSBX'>\r\n\r\n                                <div className=\"dragorInput\">\r\n                                  <InputRange\r\n                                    maxValue={300}\r\n                                    minValue={0}\r\n                                    value={this.state.ethLicenseFees}\r\n                                    formatLabel={value => `${value / 100}%`}\r\n                                    onChange={value => this.setState({ ethLicenseFees: value })} />\r\n                                </div>\r\n                              </div>\r\n                              <button className=\"DragrSBTN\" onClick={() => { this.setLicenseeFee(\"Ethereum\", constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract, ethLicenseAddress, this.state.ethLicenseFees) }}>Save</button>\r\n\r\n                            </div>\r\n                          </div> : null\r\n                        }\r\n\r\n                        {bscLicenseAddress !== \"0x0000000000000000000000000000000000000000\" ?\r\n                          <div className=\"LicMbx\">\r\n                            Your licensee smart contract for BSC\r\n                            <div className=\"LicInputBX01\">\r\n                              <input\r\n                                type=\"text\"\r\n                                value={bscLicenseAddress}\r\n                                id=\"BSC\"\r\n                              />\r\n                              <a\r\n                                href=\"#\"\r\n                                className=\"LicCopyBTN\"\r\n                                onClick={(a) => copyAffiliateLink(a, \"BSC\")}\r\n                              >\r\n                                <i class=\"fas fa-copy\"></i>\r\n                              </a>\r\n                            </div>\r\n                            <div className=\"LicInfoBX\">\r\n                              {\" \"}\r\n                              Created: July 21, 2021 11:23:01 am UTC |\r\n\r\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"BSC\", bscLicenseAddress, 'DepositToken', \"tab-A1\") }}>\r\n                                <span className=\"greenC\">\r\n                                  Deposit your reimbursement TOKEN to this smart\r\n                                  contract\r\n                                </span>{\" \"}\r\n                              </a>\r\n\r\n                              {/* | Balance: 8569.563 [TOKEN] |{\" \"} */}\r\n                              | Balance: {bscLicenseTokenBalance} |{\" \"}\r\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"BSC\", bscLicenseAddress, 'DepositToken', \"tab-A2\") }}>\r\n                                <span className=\"redC\">\r\n                                  Withdraw your reimbursement tokens\r\n                                </span>\r\n                              </a>\r\n                            </div>\r\n                            <div style={{ marginTop: \"15px\" }}>\r\n                              Change the fees that you want to charge your users <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n                            <div className='DragrMBX'>\r\n                              <div className='DragrSBX'>\r\n                                <div className=\"dragorInput\">\r\n                                  <InputRange\r\n                                    maxValue={300}\r\n                                    minValue={0}\r\n                                    value={this.state.bscLicenseFees}\r\n                                    formatLabel={value => `${value / 100}%`}\r\n                                    onChange={value => this.setState({ bscLicenseFees: value })} />\r\n\r\n                                </div>\r\n                              </div>\r\n                              <button className=\"DragrSBTN\" onClick={() => { this.setLicenseeFee(\"BSC\", constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract, bscLicenseAddress, this.state.bscLicenseFees) }}>Save</button>\r\n                            </div>\r\n                          </div>\r\n                          : null}\r\n                        {/* <div className=\"LicMbx\">\r\n                          Your licensee smart contract for Polygon\r\n                          <div className=\"LicInputBX01\">\r\n                            <input\r\n                              type=\"text\"\r\n                              value=\"0x0000000000000000000000000000000000000000\"\r\n                              id=\"Polygon\"\r\n                            />\r\n                            <a\r\n                              href=\"#\"\r\n                              className=\"LicCopyBTN\"\r\n                              onClick={(a) => copyAffiliateLink(a, \"Polygon\")}\r\n                            >\r\n                              <i class=\"fas fa-copy\"></i>\r\n                            </a>\r\n                          </div>\r\n                          <div className=\"LicInfoBX\">\r\n                            {\" \"}\r\n                            Created: July 21, 2021 11:23:01 am UTC |\r\n                            <span className=\"greenC\">\r\n                              Deposit your reimbursement TOKEN to this smart\r\n                              contract\r\n                            </span>{\" \"}\r\n                            | Balance: 8569.563 [TOKEN] |{\" \"}\r\n                            <span className=\"redC\">\r\n                              Withdraw your reimbursement tokens\r\n                            </span>\r\n                          </div>\r\n                          <div style={{ marginTop: \"15px\" }}>\r\n                            Change the fees that you want to charge your users <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\r\n                          </div>\r\n                          <div className=\"dragorInput\">\r\n                            <InputRange\r\n                              maxValue={100}\r\n                              minValue={0}\r\n                              value={this.state.value}\r\n                              formatLabel={value => `${value}%`}\r\n                              onChange={value => this.setState({ value })} />\r\n                          </div>\r\n                        </div> */}\r\n                      </div>\r\n                    </>\r\n                  ) : (this.state.web3 !== null && typeofLicense === \"Smart contract integration\") && (\r\n                    <>\r\n                      <div className='smeTitle01-v3'>Below is Your License URL and Integration Instruction</div>\r\n\r\n                      <div className='LicMbx'>\r\n                        Your licensee sub domain\r\n                        <div className='LicInputBX01'>\r\n                          <input type=\"text\" value=\"http://yourwebsite.smartswap.exchange\" />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='LicMbx'>\r\n                        You need to  call this function in SmartSwap contract  <a href='#' className='LicCopyBTN v2'><i class=\"fas fa-copy\"></i></a>\r\n\r\n                        <div className='settingCodeBx'>\r\n                    //user should approve tokens transfer before calling this function. <br />\r\n//if no licensee set it to address(0) <br />\r\n                          function swap( <br />\r\n                          address tokenA, // token that user send to swap ( address(1) for BNB, address(2) for ETH) <br />\r\n                          address tokenB, // token that user want to receive ( address(1) for BNB, address(2) for ETH) <br />\r\n                          address receiver, // address that will receive tokens on other chain (user's wallet address) <br />\r\n                          uint256 amountA,  // amount of tokens user sends to swap <br />\r\n                          address licensee,   // for now, = address(0) <br />\r\n                          bool isInvestment,  // for now, = false <br />\r\n                          uint128 minimumAmountToClaim,   // do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0 <br />\r\n                          uint128 limitPice   // Do not match user if token A price less this limit. For now, = 0 <br />\r\n                          ) <br />\r\n                          external <br />\r\n                          payable <br />\r\n                          returns (bool)\r\n                        </div>\r\n\r\n                        <button class=\"LicSBTN01\">Download ABI of smart contract file</button>\r\n\r\n\r\n                      </div>\r\n\r\n                      <div className='LicMbx'>\r\n                        Smart contract address BSC\r\n                        <div className='LicInputBX01'>\r\n                          <input type=\"text\" value={constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract} />\r\n                          <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='LicMbx'>\r\n                        Smart contract address Ethereum\r\n                        <div className='LicInputBX01'>\r\n                          <input type=\"text\" value={constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract} />\r\n                          <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {/* Second Popup Part \r\n\r\n                      <div className='smeTitle01-v3'>Below is Your License URL and Integration Instruction</div>\r\n\r\n                                    <div className='LicMbx'>\r\n                                    Your licensee sub domain\r\n                                        <div className='LicInputBX01'>\r\n                                        <input type=\"text\" value=\"http://yourwebsite.smartswap.exchange\" /> \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='LicMbx'>\r\n                                    You need to  call this function in SmartSwap contract  <a href='#' className='LicCopyBTN v2'><i class=\"fas fa-copy\"></i></a>\r\n\r\n                                    <div className='settingCodeBx'> \r\n                                                        //user should approve tokens transfer before calling this function. <br />\r\n    //if no licensee set it to address(0) <br />\r\n    function swap( <br />\r\n        address tokenA, // token that user send to swap ( address(1) for BNB, address(2) for ETH) <br />\r\n        address tokenB, // token that user want to receive ( address(1) for BNB, address(2) for ETH) <br />\r\n        address receiver, // address that will receive tokens on other chain (user's wallet address) <br />\r\n        uint256 amountA,  // amount of tokens user sends to swap <br />\r\n        address licensee,   // for now, = address(0) <br />\r\n        bool isInvestment,  // for now, = false <br />\r\n        uint128 minimumAmountToClaim,   // do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0 <br />\r\n        uint128 limitPice   // Do not match user if token A price less this limit. For now, = 0 <br />\r\n    ) <br />\r\n        external <br />\r\n        payable <br />\r\n        returns (bool)\r\n                                                </div>\r\n\r\n                                        <button class=\"LicSBTN01\">Download ABI of smart contract file</button>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='LicMbx'>\r\n                                    Smart contract address BSC\r\n                                        <div className='LicInputBX01'>\r\n                                        <input type=\"text\" value=\"0x084374b068Eb3db504178b4909eDC26D01226a80\" />\r\n                                        <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\r\n                                        </div> \r\n                                    </div>\r\n\r\n                                    <div className='LicMbx'>\r\n                                    Smart contract address Ethereum\r\n                                        <div className='LicInputBX01'>\r\n                                        <input type=\"text\" value=\"0x084374b068Eb3db504178b4909eDC26D01226a80\" />\r\n                                        <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\r\n                                        </div> \r\n                                    </div>\r\n                               \r\n       */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!--======================= SWAP BLOCK END =====================--> */}\r\n          </div>\r\n          {/* <!--======================= WALLET POPUP START =====================--> */}\r\n          <WalletPopup\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n          ></WalletPopup>\r\n\r\n\r\n          <WithDrawToken closePopup={this.closePopup} openPopup={this.openPopup} />\r\n\r\n\r\n          {/* <!--======================= WALLET POPUP END =====================-->\r\n                    <!--======================= COIN POPUP START =====================--> */}\r\n          <CoinPopup\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n            setCurrency={this.setSendCurrency}\r\n            popId={\"sendCurPop\"}\r\n            opositeSelectedCurrrency={this.state.selectedReceiveCurrency}\r\n            selectedCurrrency={this.state.selectedSendCurrency}\r\n          ></CoinPopup>\r\n          <CoinPopup\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n            setCurrency={this.setReceiveCurrency}\r\n            popId={\"receiveCurPop\"}\r\n            opositeSelectedCurrrency={this.state.selectedSendCurrency}\r\n            selectedCurrrency={this.state.selectedReceiveCurrency}\r\n          ></CoinPopup>\r\n          {/* <!--======================= COIN POPUP END =====================-->\r\n                    <!--======================= SIDE POPUP START =====================--> */}\r\n          <SidePopup web3={this.state.web3} web3Config={web3Config}></SidePopup>\r\n          {/* <!--======================= SIDE POPUP END =====================--> */}\r\n          {/* =========================== DEPOSIT TOKENS POPUP START ================================= */}\r\n          <DepositToken\r\n            tokenAddress={this.state.depositTokenAddress}\r\n            network={this.state.depositWithdrawNetwork}\r\n            vaultAddress={this.state.depositWithdrawVaultAddress}\r\n            closePopup={this.closePopup}\r\n            openPopup={this.openPopup}\r\n          ></DepositToken>\r\n          {/* =========================== DEPOSIT TOKENS POPUP END ================================= */}\r\n          {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gnaJlUA20lk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\SmartSwap_frontend\\src\\pages\\ownLicence02.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\smartSwapLicence.js",["483","484","485","486"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport {\r\n    Redirect,\r\n} from 'react-router-dom';\r\nimport web3Js from 'web3';\r\nimport Web3 from \"web3\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport Validation from \"../helper/validation\";\r\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\r\nimport tokenAbi from \"../abis/tokenAbi.json\";\r\nimport constantConfig from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport { LoopCircleLoading } from 'react-loadingg';\r\nimport CONSTANT from \"../constants\";\r\nimport data from \"../config/constantConfig\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport WalletPopup from \"../components/WalletPopup\";\r\nimport CoinPopup from \"../components/CoinPopup\";\r\nimport SidePopup from \"../components/SidePopup\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class SmartSwapLicence extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.setSendCurrency = this.setSendCurrency.bind(this)\r\n        this.setReceiveCurrency = this.setReceiveCurrency.bind(this)\r\n        this.state = {\r\n            web3: null,\r\n            web3Check: false,\r\n            btnClick: false,\r\n            swapFactory: null,\r\n            swapLoading: false,\r\n            selectedSendCurrency: \"BNB\",\r\n            selectedReceiveCurrency: \"ETH\",\r\n            instanceSwapFactoryBinance: null,\r\n            instanceSwapFactoryEthereum: null,\r\n            tokenInstance: {},\r\n            txLink: \"\",\r\n            wrapBox: \"swap\",\r\n            txIdSent: null,\r\n            txSentStatus: \"pending\",\r\n            txSentTime: null,\r\n            tokenReceive: \"0\",\r\n            txReceiveTime: null,\r\n            txIdReceive: null,\r\n            txLinkSend: '',\r\n            txLinkReturn: '',\r\n            receiveFundAmount: \"\",\r\n            sendFundAmount: \"\",\r\n            actualSendFundAmount: 0,\r\n            approxReceiveFundAmount: 0,\r\n            showLedger: false,\r\n            currencyPrices: {},\r\n            estimatedGasFee: \"0\",\r\n            tokenBalances: {\r\n                \"JNTR\": 0,\r\n                \"JNTR/b\": 0,\r\n                \"JNTR/e\": 0,\r\n                \"JNTR_APPROVED\": 0,\r\n                \"JNTR/b_APPROVED\": 0,\r\n                \"JNTR/e_APPROVED\": 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        await this.fetchPrice();\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({\r\n            web3Ethereum: new Web3(new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)),\r\n            web3Binance: new Web3(new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE))\r\n        })\r\n\r\n        this.setState({\r\n            loading: true\r\n        }, async () => {\r\n            await this.initInstance();\r\n        })\r\n    };\r\n\r\n    async initInstance() {\r\n        let { web3Binance, web3Ethereum } = this.state;\r\n        let instanceSwapFactoryBinance = null;\r\n        let instanceSwapFactoryEthereum = null;\r\n\r\n        instanceSwapFactoryBinance = new web3Binance.eth.Contract(swapFactoryAbi, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract);\r\n        instanceSwapFactoryEthereum = new web3Ethereum.eth.Contract(swapFactoryAbi, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract);\r\n\r\n        let tokenInstance = {};\r\n        tokenInstance[\"JNTR\"] = new web3Binance.eth.Contract(tokenAbi, \"0x1350044d6a653E87Ed3384DC1D2f6b1A7F138e0A\");\r\n        tokenInstance[\"JNTR/b\"] = new web3Binance.eth.Contract(tokenAbi, \"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\");\r\n        tokenInstance[\"JNTR/e\"] = new web3Ethereum.eth.Contract(tokenAbi, \"0x40a99d086d517f06f9d1ed564f51ef75b8f7f042\");\r\n\r\n        this.setState({\r\n            instanceSwapFactoryBinance,\r\n            instanceSwapFactoryEthereum,\r\n            tokenInstance\r\n        }, () => {\r\n            this.listenTransferEvent()\r\n        });\r\n    }\r\n\r\n    updateTokenBalance = async () => {\r\n\r\n        if (this.state.web3 !== null) {\r\n\r\n            const { tokenInstance, tokenBalances, web3 } = this.state;\r\n            // Balances\r\n            tokenBalances[\"JNTR\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\r\n            tokenBalances[\"JNTR/b\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/b\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\r\n            tokenBalances[\"JNTR/e\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/e\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\r\n\r\n            // Approve Balances\r\n            tokenBalances[\"JNTR_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR\"].methods.allowance(web3Config.getAddress(), \"0x309208d15fba3207be6c760771ca3b4846e1be93\").call(), \"ether\");\r\n            tokenBalances[\"JNTR/b_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/b\"].methods.allowance(web3Config.getAddress(), \"0x309208d15fba3207be6c760771ca3b4846e1be93\").call(), \"ether\");\r\n            tokenBalances[\"JNTR/e_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/e\"].methods.allowance(web3Config.getAddress(), \"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\").call(), \"ether\");\r\n            this.setState({\r\n                tokenBalances: tokenBalances\r\n            }, () => {\r\n                this.forceUpdate();\r\n                // this.updateButton()\r\n            })\r\n        }\r\n    }\r\n\r\n    async connectWallet() {\r\n        this.setState({ btnClick: true });\r\n        await web3Config.connectWallet(0);\r\n        let networkId = web3Config.getNetworkId();\r\n\r\n        if (!constantConfig.allowedNetwork.includes(networkId)) {\r\n            notificationConfig.error(\"Please Select Kovan or BSC Test Network\");\r\n            this.setState({ btnClick: false });\r\n            return\r\n        }\r\n\r\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !== networkId && networkId === 97) {\r\n            notificationConfig.warning(\"Change metamask network to Ethereum!\")\r\n            return\r\n        } else if (constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !== networkId && networkId === 42) {\r\n            notificationConfig.warning(\"Change metamask network to Binance!\")\r\n            return\r\n        }\r\n\r\n\r\n        this.setState({\r\n            web3: web3Config.getWeb3(),\r\n            btnClick: false\r\n        }, () => {\r\n            // this.changeCurrency(false)\r\n            setInterval(() => {\r\n                this.updateTokenBalance()\r\n            }, 3000)\r\n        })\r\n    }\r\n\r\n    async swap() {\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        if (web3 === null)\r\n            return 0\r\n\r\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n        let { sendFundAmount } = this.state;\r\n        if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n            notificationConfig.error(\"Enter value to swap\")\r\n            return;\r\n        }\r\n\r\n        let actualSendFundAmount = (await this.getActualAmount(sendFundAmount, this.state.selectedSendCurrency)).toString()\r\n\r\n        let value = 0, swapAmount = 0;\r\n        try {\r\n            value = web3Js.utils\r\n                .toWei(actualSendFundAmount.toString());\r\n        } catch (e) {\r\n            value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n        }\r\n        swapAmount = value;\r\n\r\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].approveRequire) {\r\n            value = 0;\r\n        }\r\n\r\n        swapFactory.swap(CONSTANT.currencyAddresses[this.state.selectedSendCurrency], CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency], value, swapAmount, (hash) => {\r\n            this.setState({\r\n                swapLoading: true,\r\n                txIdSent: hash,\r\n                txLinkSend: data[networkId].explorer + \"/tx/\" + hash\r\n            });\r\n        }, () => {\r\n            // this.init()\r\n            this.setState({\r\n                swapLoading: false,\r\n                showLedger: true,\r\n                wrapBox: \"success\"\r\n            });\r\n            notificationConfig.success(\"Swap Success\");\r\n        })\r\n    }\r\n\r\n    async approve() {\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        if (web3 === null)\r\n            return 0\r\n\r\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n        swapFactory.approveJNTRTokenForSwapFactory(constantConfig.tokenDetails[this.state.selectedSendCurrency].address, constantConfig[networkId].swapFactoryContract, (hash) => {\r\n            this.setState({\r\n                approveLoading: true,\r\n                // txIdSent: hash,\r\n                // txLinkSend: data[networkId].explorer + \"/tx/\" + hash\r\n            });\r\n        }, () => {\r\n            // this.init()\r\n            this.setState({\r\n                approveLoading: false,\r\n                // showLedger: true,\r\n                // wrapBox: \"success\"\r\n            });\r\n            notificationConfig.success(\"Approve Success\");\r\n        })\r\n    }\r\n\r\n    async estimateGasAndFee() {\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        if (web3 === null)\r\n            return 0\r\n\r\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n        let { sendFundAmount } = this.state;\r\n        if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n            notificationConfig.error(\"Enter value to swap\")\r\n            return;\r\n        }\r\n\r\n        let actualSendFundAmount = (await this.getActualAmount(sendFundAmount, this.state.selectedSendCurrency)).toString()\r\n\r\n        let value = 0, swapAmount = 0;\r\n        try {\r\n            value = web3Js.utils.toWei(actualSendFundAmount.toString());\r\n        } catch (e) {\r\n            value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n        }\r\n\r\n        swapAmount = value;\r\n\r\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].approveRequire) {\r\n            value = 0;\r\n        }\r\n\r\n        swapFactory.estimateSwapGasFee(CONSTANT.currencyAddresses[this.state.selectedSendCurrency], CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency], value, swapAmount, \"350000\", (estGas) => {\r\n            this.setState({\r\n                estimatedGasFee: estGas\r\n            })\r\n        })\r\n    }\r\n\r\n    async recivedToken(e) {\r\n        let dollarAmount = Number(e.target.value)\r\n        this.setState({\r\n            sendFundAmount: dollarAmount\r\n        }, () => {\r\n            this.setAmount(dollarAmount)\r\n        })\r\n    }\r\n\r\n    async setAmount(dollarAmount) {\r\n        this.setState({\r\n            actualSendFundAmount: await this.getActualAmount(dollarAmount, this.state.selectedSendCurrency),\r\n            approxReceiveFundAmount: await this.getActualAmount(dollarAmount, this.state.selectedReceiveCurrency)\r\n        }, () => {\r\n            this.estimateGasAndFee()\r\n        })\r\n    }\r\n\r\n    async getActualAmount(dollarAmount, currency) {\r\n        if (dollarAmount <= 0)\r\n            return 0;\r\n        else\r\n            return (dollarAmount / this.state.currencyPrices[currency])\r\n    }\r\n\r\n    async fetchPrice() {\r\n        var { currencyPrices } = this.state;\r\n        const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=ethereum,binancecoin&vs_currencies=usd`);\r\n        const json = await response.json();\r\n        currencyPrices[\"ETH\"] = json[\"ethereum\"][\"usd\"];\r\n        currencyPrices[\"BNB\"] = json[\"binancecoin\"][\"usd\"];\r\n        currencyPrices[\"JNTR/e\"] = 0.062166;\r\n        currencyPrices[\"JNTR/b\"] = 0.054237;\r\n        currencyPrices[\"JNTR\"] = 0.5320;\r\n        this.setState({\r\n            currencyPrices\r\n        })\r\n    }\r\n\r\n    changeCurrency(check) {\r\n        // if(check && this.state.web3 === null){\r\n        let selectedSendCurrency = this.state.selectedSendCurrency;\r\n        let selectedReceiveCurrency = this.state.selectedReceiveCurrency;\r\n        this.setState({\r\n            selectedSendCurrency: selectedReceiveCurrency,\r\n            selectedReceiveCurrency: selectedSendCurrency\r\n        }, () => {\r\n            if (this.state.sendFundAmount !== \"\")\r\n                this.setAmount(this.state.sendFundAmount);\r\n            this.forceUpdate()\r\n        })\r\n        // } else if(this.state.web3 !== null && check) {\r\n        //     notificationConfig.warning(\"Please change metamask network!\")\r\n        // }\r\n    }\r\n\r\n    setSendCurrency(currency) {\r\n        this.setState({ selectedSendCurrency: currency }, () => {\r\n            this.closePopup(\"sendCurPop\");\r\n        })\r\n\r\n    }\r\n\r\n    setReceiveCurrency(currency) {\r\n        this.setState({ selectedReceiveCurrency: currency }, () => {\r\n            this.closePopup(\"receiveCurPop\");\r\n        })\r\n    }\r\n\r\n    openPopup(id) {\r\n        $(\"#\" + id).fadeIn();\r\n    }\r\n\r\n    closePopup(id) {\r\n        $(\"#\" + id).fadeOut();\r\n    }\r\n\r\n    changeWrapBox(which) {\r\n        this.setState({\r\n            wrapBox: which,\r\n            txIdSent: null,\r\n            txSentStatus: \"pending\",\r\n            txSentTime: null,\r\n            tokenReceive: \"0\",\r\n            txReceiveTime: null,\r\n            txIdReceive: null,\r\n            txLinkSend: '',\r\n            txLinkReturn: '',\r\n            receiveFundAmount: \"\",\r\n            sendFundAmount: \"\",\r\n            actualSendFundAmount: 0,\r\n            approxReceiveFundAmount: 0,\r\n            showLedger: false\r\n        })\r\n    }\r\n\r\n    async listenTransferEvent() {\r\n        const { instanceSwapFactoryEthereum, instanceSwapFactoryBinance } = this.state;\r\n        if (instanceSwapFactoryEthereum !== null) {\r\n            instanceSwapFactoryEthereum.events.ClaimApprove({\r\n                fromBlock: 'latest'\r\n            }, function (error, event) {\r\n                console.log(event);\r\n            })\r\n                .on(\"connected\", function (subscriptionId) {\r\n                    console.log(subscriptionId);\r\n                })\r\n                .on('data', function (event) {\r\n                    console.log(event); // same results as the optional callback above\r\n                    if ((event.returnValues.user).toLocaleLowerCase() === web3Config.getAddress().toLocaleLowerCase()) {\r\n                        let txLinkReturn = constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].explorer + '/tx/' + event.transactionHash;\r\n                        let returnAmount = web3Js.utils.fromWei((event.returnValues.amountA).toLocaleLowerCase());\r\n                        this.updateLedgerAfterResponse(event.transactionHash, txLinkReturn, returnAmount)\r\n                    }\r\n                }.bind(this))\r\n                .on('changed', function (event) {\r\n                    console.log(event)\r\n                    // remove event from local database\r\n                })\r\n                .on('error', function (error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\r\n                    console.log(error, receipt)\r\n                });\r\n        }\r\n\r\n        if (instanceSwapFactoryBinance !== null) {\r\n            let { web3Binance } = this.state;\r\n\r\n            let initialBlock = await web3Binance.eth.getBlockNumber();\r\n\r\n            setInterval(async () => {\r\n                const currentBlock = await web3Binance.eth.getBlockNumber();\r\n\r\n                instanceSwapFactoryBinance.getPastEvents(\"allEvents\",\r\n                    {\r\n                        fromBlock: initialBlock,\r\n                        toBlock: currentBlock // You can also specify 'latest'          \r\n                    })\r\n                    .then(async function (result) {\r\n                        for (let i = 0; i < result.length; i++) {\r\n                            console.log(result[i].event)\r\n                            if (result[i].event === \"ClaimApprove\") {\r\n                                console.log(result[i])\r\n                                if ((result[i].returnValues.user).toLocaleLowerCase() === web3Config.getAddress().toLocaleLowerCase()) {\r\n                                    let txLinkReturn = constantConfig[CONSTANT.NETWORK_ID.BINANCE].explorer + '/tx/' + result[i].transactionHash;\r\n                                    let returnAmount = web3Js.utils.fromWei(result[i].returnValues.amountA).toLocaleLowerCase();\r\n                                    this.updateLedgerAfterResponse(result[i].transactionHash, txLinkReturn, returnAmount)\r\n                                }\r\n                            }\r\n                        }\r\n                    }.bind(this))\r\n                    .catch((err) => console.error(err));\r\n                initialBlock = currentBlock;\r\n            }, 10000)\r\n        }\r\n    }\r\n\r\n    updateLedgerAfterResponse(hash, txLinkReturn, returnAmount) {\r\n        this.setState({\r\n            isSendingOrder: false,\r\n            txSentStatus: \"Success\",\r\n            txSentTime: new Date().toUTCString(),\r\n            tokenReceive: \"2\",\r\n            txReceiveTime: new Date().toUTCString(),\r\n            txIdReceive: hash,\r\n            whichButton: \"4\",\r\n            txLinkReturn: txLinkReturn,\r\n            receiveFundAmount: returnAmount\r\n        }, async () => {\r\n            //   await this.enableInputs();\r\n        })\r\n    }\r\n\r\n    scrollToLedger() {\r\n        $(\"html\").animate({ scrollTop: 650 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main id=\"main\" className=\"smartSwap\">\r\n\r\n\r\n                <div className=\"fullscreen-bg\">\r\n                    <div className=\"fsbg_sad01\"></div>\r\n                    <div className=\"fsbg_container\">\r\n                        <video loop autoPlay muted className=\"fullscreen-bg__video\" >\r\n                            <source src=\"video/smartswap.webm\" type=\"video/webm\" />\r\n                            <source src=\"video/smartswap.mp4\" type=\"video/mp4\" />\r\n                            <source src=\"video/smartswap.ogv\" type=\"video/ogg\" />\r\n                        </video>\r\n                    </div>\r\n                </div> \r\n                <div className=\"main\">\r\n                    {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n                    <RightSideMenu web3={this.state.web3} web3Config={web3Config}></RightSideMenu>\r\n                    {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n                    <Header web3={this.state.web3} web3Config={web3Config}></Header>\r\n                    {/* <!--======================= HEADER END =====================--> */}\r\n                    <div className=\"mainBlock\"> \r\n                        {/* <!--======================= SWAP BLOCK START =====================--> */}\r\n                        <div className=\"reserve-Block\">\r\n                            <div className=\"container-Grid\">\r\n                                <div className=\"smeTitle01-v2\">Apply for FREE Smartswap license</div>\r\n                            </div>\r\n                            <div className=\"swap-textBox\">\r\n                                <div className=\"container-Grid\">\r\n\r\n                                    <div class=\"form-Block\">\r\n                                        <div class=\"email-Box\">\r\n                                            <input type=\"text\" placeholder=\"Your email address\" />\r\n                                            <a href=\"javascript:void(0);\" class=\"btn-Continue ani-1\">Continue</a>\r\n                                        </div>\r\n                                        <div class=\"form-Wrap\">\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Full Name</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Phone</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Company Name</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Company Website</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Daily Active Users</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <a href=\"javascript:void(0);\" class=\"btn-Apply ani-1\">apply for social currency licence</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* <div class=\"follow-Block\">\r\n                            <div class=\"container-Grid\">\r\n                                <div class=\"Title03\">Your SmartSwap request has been received. We will be in touch shortly. Meanwhile, follow us on your favorite social media platforms.</div>\r\n                                <ul class=\"social-Icons\">\r\n                                    <li><a href=\"javascript:void(0);\" class=\"ani-1\"><i class=\"fab fa-linkedin-in\"></i></a></li>\r\n                                    <li><a href=\"javascript:void(0);\" class=\"ani-1\"><i class=\"fab fa-facebook-f\"></i></a></li>\r\n                                    <li><a href=\"javascript:void(0);\" class=\"ani-1\"><i class=\"fab fa-twitter\"></i></a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div> */}\r\n                        {/* <!--======================= SWAP BLOCK END =====================--> */}\r\n                    </div>\r\n                    {/* <!--======================= WALLET POPUP START =====================--> */}\r\n                    <WalletPopup web3={this.state.web3} web3Config={web3Config}></WalletPopup>\r\n                    {/* <!--======================= WALLET POPUP END =====================-->\r\n                    <!--======================= COIN POPUP START =====================--> */}\r\n                    <CoinPopup web3={this.state.web3} web3Config={web3Config} setCurrency={this.setSendCurrency} popId={\"sendCurPop\"} opositeSelectedCurrrency={this.state.selectedReceiveCurrency} selectedCurrrency={this.state.selectedSendCurrency}></CoinPopup>\r\n                    <CoinPopup web3={this.state.web3} web3Config={web3Config} setCurrency={this.setReceiveCurrency} popId={\"receiveCurPop\"} opositeSelectedCurrrency={this.state.selectedSendCurrency} selectedCurrrency={this.state.selectedReceiveCurrency}></CoinPopup>\r\n                    {/* <!--======================= COIN POPUP END =====================-->\r\n                    <!--======================= SIDE POPUP START =====================--> */}\r\n                    <SidePopup web3={this.state.web3} web3Config={web3Config}></SidePopup>\r\n                    {/* <!--======================= SIDE POPUP END =====================--> */}\r\n                    {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gnaJlUA20lk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}","D:\\React\\SmartSwap_frontend\\src\\pages\\projects.js",["487"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport constantConfig, { getTokenList, tokenDetails } from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport CONSTANT from \"../constants\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport axios from \"axios\";\r\nimport { isValidAddress } from 'ethereumjs-util';\r\n\r\n\r\nconst $ = window.$;\r\nexport default class Projects extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { checked1: false };\r\n    this.handleChange1 = this.handleChange1.bind(this);\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setSendCurrency = this.setSendCurrency.bind(this);\r\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\r\n    this.updateCloneData = this.updateCloneData.bind(this);\r\n    this.clearPreview = this.clearPreview.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n    this.expedite = this.expedite.bind(this);\r\n    const { match, location, history } = props;\r\n    this.state = {\r\n      web3: null,\r\n      web3Check: false,\r\n      btnClick: false,\r\n      swapFactory: null,\r\n      swapLoading: false,\r\n      selectedSendCurrency: \"BNB\",\r\n      selectedReceiveCurrency: \"ETH\",\r\n      instanceSwapFactoryBinance: null,\r\n      instanceSwapFactoryEthereum: null,\r\n      instanceSwapFactoryPolygon: null,\r\n      instanceReimbursementBinance: null,\r\n      instanceReimbursementEthereum: null,\r\n      tokenInstance: {},\r\n      txLink: \"\",\r\n      wrapBox: \"swap\",\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      allTxHistoryUI: null,\r\n      allPendingTxHistoryUI: null,\r\n      showTxHistory: false,\r\n      showLedger: false,\r\n      currencyPrices: {},\r\n      estimatedGasFee: \"0\",\r\n      tableData: [],\r\n      isSearchTable: false,\r\n      tableSearchResult: [],\r\n      tableDataToDisplay: [],\r\n      liveETHPrice: 0,\r\n      wbnbPrice: 0,\r\n      sideBar: false,\r\n      tokenBalances: {\r\n        JNTR: 0,\r\n        \"JNTR/b\": 0,\r\n        \"JNTR/e\": 0,\r\n        JNTR_APPROVED: 0,\r\n        \"JNTR/b_APPROVED\": 0,\r\n        \"JNTR/e_APPROVED\": 0,\r\n      },\r\n      cloneData:\r\n        typeof location.state === \"undefined\"\r\n          ? {}\r\n          : location.state.cloneData\r\n            ? location.state.cloneData\r\n            : {},\r\n      isloading: false,\r\n      isSubdomain: false,\r\n      noSubDomain: false,\r\n      subDomainName: \"\",\r\n      amounts: {\r\n        totalAmountSwapped: 0,\r\n        feesGenerated: 0,\r\n        smartBoughtBurned: 0,\r\n        totalFeesReimbursed: 0,\r\n        totalReimbursementStaking: 0\r\n      },\r\n      licenseeAddress: {\r\n        56: \"0x0000000000000000000000000000000000000000\",\r\n        1: \"0x0000000000000000000000000000000000000000\",\r\n        97: \"0x0000000000000000000000000000000000000000\",\r\n        42: \"0x0000000000000000000000000000000000000000\",\r\n        80001: \"0x0000000000000000000000000000000000000000\",\r\n        137: \"0x0000000000000000000000000000000000000000\",\r\n      },\r\n      loadingHistory: false,\r\n      selectedOptionSend: { value: tokenDetails.BNB.symbol, label: tokenDetails.BNB.symbol, networkId: tokenDetails.BNB.networkId },\r\n      selectedOptionReceive: { value: tokenDetails.ETH.symbol, label: tokenDetails.ETH.symbol, networkId: tokenDetails.ETH.networkId },\r\n      selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(\"BNB\", \"ETH\"),\r\n      sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"ETH\" && value.label !== \"BNB\";\r\n      }),\r\n      recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"BNB\" && value.label !== \"ETH\";\r\n      }),\r\n      web3Provider: {\r\n        [process.env.REACT_APP_ETH_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_BSC_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_POLYGON_CHAIN_ID]: null,\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange1(checked1) {\r\n    this.setState({ checked1 });\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.state.sideBar == true) {\r\n      this.setState({\r\n        sideBar: false\r\n      });\r\n    }\r\n  }\r\n  updateCloneData = (data) => {\r\n    this.setState({\r\n      cloneData: data,\r\n    });\r\n  };\r\n\r\n  clearPreview = () => {\r\n    const r = document.querySelector(\":root\");\r\n    r.style.removeProperty(\"--text-color\");\r\n    r.style.removeProperty(\"--button-bg-color\");\r\n    r.style.removeProperty(\"--req-bg\");\r\n    this.setState({\r\n      cloneData: {},\r\n    });\r\n    this.props.history.push({\r\n      pathname: \"\",\r\n      state: {\r\n        cloneData: {},\r\n      },\r\n    });\r\n  };\r\n\r\n  getData = async (domain) => {\r\n    this.setState({\r\n      isloading: true,\r\n    });\r\n    try {\r\n      const res = await axios.get(\r\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\r\n      );\r\n      console.log(res);\r\n      if (res.data.response_code === 200) {\r\n        if (domain[0].substring(0, 2) === \"0x\") {\r\n          if (isValidAddress(domain[0])) {\r\n            web3Config.setLicenseeData(res.data.result)\r\n          }\r\n        } else {\r\n          const r = document.querySelector(\":root\");\r\n          r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\r\n          r.style.setProperty(\r\n            \"--button-bg-color\",\r\n            res.data.result.seconderyColor\r\n          );\r\n          r.style.setProperty(\r\n            \"--req-bg\",\r\n            `url(${res.data.result.backGroundImage})`\r\n          );\r\n          r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\r\n          var style = document.createElement('style');\r\n          style.type = 'text/css';\r\n          style.innerHTML = `* { font-family: ${res.data.result.fontStyle} !important; }`;\r\n          document.getElementsByTagName('head')[0].appendChild(style);\r\n          // r.style.setProperty(\"font-family\", res.data.result.fontStyle, \"important\");\r\n          // window.document.body.setAttribute('style', 'font-family:Arial !important');\r\n          this.setState({\r\n            cloneData: {\r\n              bgimage: res.data.result.backGroundImage,\r\n              logoImage: res.data.result.logo,\r\n              subDomain: res.data.result.subDomain,\r\n              primaryColor: res.data.result.primaryColors,\r\n              secondaryColor: res.data.result.seconderyColor,\r\n              fontStyle: res.data.result.fontStyle,\r\n              backgroundOverLay: res.data.result.backgroundOverLay,\r\n              swapButtonColor: res.data.result.swapButton,\r\n              logoUrl: res.data.result.logoUrl,\r\n              sideBar: res.data.result.sideBar\r\n            },\r\n            licenseeAddress: {\r\n              56: res.data.result.bscLicenseAddress,\r\n              1: res.data.result.ethLicenseAddress,\r\n              97: res.data.result.bscLicenseAddress,\r\n              42: res.data.result.ethLicenseAddress\r\n            }\r\n          });\r\n        }\r\n      } else if (res.data.response_code === 404) {\r\n        this.setState({\r\n          noSubDomain: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.openPopup(\"NoDomain\");\r\n        }, 100);\r\n      }\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.log(error.response);\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async fetchPrice() {\r\n    let MarketCap = [];\r\n    let tableDataLocal = [];\r\n    let tableDataLocalcoingecko = [];\r\n    let Uniobj = {};\r\n    let Panobj = {};\r\n    var { currencyPrices } = this.state;\r\n    let wbnbPrice = 0;\r\n\r\n    let liveETHPrice = 0;\r\n\r\n    await axios\r\n      .get(\r\n        `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctether%2Cbinancecoin%2Ccardano%2Cpolkadot%2Cuniswap%2Cripple%2Cmatic-network&vs_currencies=USD&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true`\r\n      )\r\n      .then((res) => {\r\n        tableDataLocalcoingecko = res.data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    currencyPrices[\"ETH\"] = tableDataLocalcoingecko[\"ethereum\"][\"usd\"];\r\n\r\n    currencyPrices[\"BNB\"] = tableDataLocalcoingecko[\"binancecoin\"][\"usd\"];\r\n\r\n    currencyPrices[\"MATIC\"] = tableDataLocalcoingecko[\"matic-network\"][\"usd\"];\r\n\r\n    currencyPrices[\"JNTR/e\"] = 0.062166;\r\n    currencyPrices[\"JNTR/b\"] = 0.054237;\r\n    currencyPrices[\"JNTR\"] = 0.532;\r\n\r\n    this.setState(\r\n      {\r\n        currencyPrices: currencyPrices,\r\n      },\r\n      () => {\r\n        this.forceUpdate();\r\n      }\r\n    );\r\n  }\r\n  \r\n  setSendCurrency(currency) {\r\n    this.setState({ selectedSendCurrency: currency }, () => {\r\n      this.closePopup(\"sendCurPop\");\r\n    });\r\n  }\r\n  setReceiveCurrency(currency) {\r\n    this.setState({ selectedReceiveCurrency: currency }, () => {\r\n      this.closePopup(\"receiveCurPop\");\r\n    });\r\n  }\r\n \r\n  async expedite(txId, processAmount, sentChainId) {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    console.log(networkId)\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n\r\n    if (sentChainId !== networkId) {\r\n      notificationConfig.warning(\"Change metamask network to \" + CONSTANT.NETWORK_ID[sentChainId] + \"!\");\r\n      return;\r\n    }\r\n\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n    let allFees = await this.calculateSwapFees(processAmount);\r\n    await swapFactory.expedite(txId, (((Number(allFees.processingFees) * 0.10 + Number(allFees.processingFees))) * 10 ** 18).toFixed(),\r\n      (hash) => {\r\n        this.setState({\r\n        \r\n        });\r\n      },\r\n      (receipt) => {\r\n    \r\n        notificationConfig.success(\"Expedite Success\");\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isloading ? (\r\n          <p>Loading</p>\r\n        ) : (\r\n          <main id=\"main\" className=\"smartSwap\">\r\n            <div className=\"fullscreen-bg\">\r\n              <div className=\"fsbg_sad01\"></div>\r\n              <div className=\"fsbg_container\">\r\n                <video loop autoPlay muted className=\"fullscreen-bg__video\">\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.webm\"} type=\"video/webm\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.mp4\"} type=\"video/mp4\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.ogv\"} type=\"video/ogg\" />\r\n                </video>\r\n              </div>\r\n            </div>\r\n            <div className=\"main\">\r\n              {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n              <RightSideMenu\r\n                web3={this.state.web3}\r\n                openPopup={this.openPopup}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n              ></RightSideMenu>\r\n              {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n              <Header\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n                isSubdomain={this.state.isSubdomain}\r\n                clearPreview={this.clearPreview}\r\n              ></Header>\r\n              {/* <!--======================= HEADER END =====================--> */}\r\n              <div className=\"backgroundBlock\" onClick={this.handleClick} >\r\n                <div\r\n                  className={\r\n                    this.state.cloneData.bgimage\r\n                      ? \"mainBlock required-bg\"\r\n                      : \"mainBlock\"\r\n                  }\r\n                  style={\r\n                    this.state.cloneData.bgimage\r\n                      ? this.state.cloneData.fontStyle &&\r\n                        this.state.cloneData.fontStyle !== \"Default\"\r\n                        ? {\r\n                          fontFamily: this.state.cloneData.fontStyle,\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                        : {\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                      : null\r\n                  }\r\n                >\r\n                  <div className=\"container-Grid\">\r\n                    <div className=\"boost-outer\">\r\n                      <div className=\"boost-left\">\r\n                        <h2>Boost your web3 dApp sales by giving your customers the best payment experience</h2>\r\n                        <p>Super easy one-click multichain solution allowing customers to pay with any token or blockchain while you get the token on the blockchain you need.</p>\r\n                        <p className=\"green\">Instead of Deploying Your Project on Multiple Blockchains, Deploy One SmartBridge to Welcome All Type of Users</p>\r\n                        <div className=\"down-block\">\r\n                          <img src=\"images/down-arrow.png\" alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"boost-right\">\r\n                        <img src=\"images/mobile-frame.png\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"o-outer\">\r\n                      <div className=\"o-left\">\r\n                        {/* <p className=\"option\">OPTION 1</p> */}\r\n                        <h3>ONE-CLICK SmartBridge</h3>\r\n                        <p>This code will allow users to push by ONE click any token from any network, and receive the final assets that the project is offering. The One-Click SmartBridge allows users one-click access from any token on any network to the final asset the project offers.</p>\r\n                        \r\n                        <div className=\"Box-bottom\">\r\n                          <p className=\"need-text\">You need to call this function in SmartBridge contract</p>\r\n                          <i className=\"fas fa-copy\"></i>\r\n                        </div>\r\n                        <div className=\"code-block\">\r\n                          {/* <p><span>//user should approve tokens transfer before calling this function.</span></p>\r\n                          <p><span>//if no licensee set it to address(0)</span></p>\r\n                          <p>function swap(</p>\r\n                             <p>address tokenA, <span>// token that user send to swap ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address tokenB, <span>// token that user want to receive ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address receiver, <span>// address that will receive tokens on other chain (user's wallet address)</span></p>\r\n                             <p>uint256 amountA,  <span>// amount of tokens user sends to swap</span></p>\r\n                             <p>address licensee,   <span>// for now, = address(0)</span></p>\r\n                             <p>bool isInvestment,  <span>// for now, = false</span></p>\r\n                             <p>uint128 minimumAmountToClaim,   <span>// do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0</span></p>\r\n                             <p>uint128 limitPice   <span>// Do not match user if token A price less this limit. For now, = 0</span></p>\r\n                             <p>)</p>\r\n                             <p>external</p>\r\n                             <p>payable</p>\r\n                             <p><span>returns (bool)</span></p> */}\r\n                             <p className=\"cs\">COMING SOON</p>\r\n                        </div>\r\n                        <div className=\"Box-bottom ver2\">\r\n                          <Link to='#' className=\"dc-file\">Download ABI of smart contract file</Link>\r\n                          <Link to='#'>See example for live SmartBridge button for UniSwap V2 DEXs clone</Link>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      {/* <div className=\"o-left pl-15\">\r\n                        <p className=\"option\">OPTION 2</p>\r\n                        <h3>Quick Bridge Window</h3>\r\n                        <p>This code will allow users to push any token from any network, and receive back to their wallet a stablecoin (like USDT) that belongs to the network that complies with the project, once receiving that stablecoin, users will not need to leave the project page and can interact with the project like a regular transaction.</p>\r\n                        <p className=\"mb-45\">The Quick Bridge Window allows users to push any token on any network to receive a stablecoin on the network that complies with your project. Once the project receives the stablecoin, users will not need to leave the project page, they can interact directly with the project.</p>\r\n                        <div className=\"code-block\">\r\n                          <p><span>//user should approve tokens transfer before calling this function.</span></p>\r\n                          <p><span>//if no licensee set it to address(0)</span></p>\r\n                          <p>function swap(</p>\r\n                             <p>address tokenA, <span>// token that user send to swap ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address tokenB, <span>// token that user want to receive ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address receiver, <span>// address that will receive tokens on other chain (user's wallet address)</span></p>\r\n                             <p>uint256 amountA,  <span>// amount of tokens user sends to swap</span></p>\r\n                             <p>address licensee,   <span>// for now, = address(0)</span></p>\r\n                             <p>bool isInvestment,  <span>// for now, = false</span></p>\r\n                             <p>uint128 minimumAmountToClaim,   <span>// do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0</span></p>\r\n                             <p>uint128 limitPice   <span>// Do not match user if token A price less this limit. For now, = 0</span></p>\r\n                             <p>)</p>\r\n                             <p>external</p>\r\n                             <p>payable</p>\r\n                             <p><span>returns (bool)</span></p>\r\n                        </div>\r\n                        <div className=\"Box-bottom\">\r\n                          <Link to='#'>See example for live SmartBridge button for UniSwap V2 DEXs clone</Link>\r\n                          <i className=\"fas fa-copy\"></i>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\SmartSwap_frontend\\src\\pages\\home.js",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport web3Js from \"web3\";\r\nimport Web3 from \"web3\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport Validation from \"../helper/validation\";\r\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\r\nimport tokenAbi from \"../abis/tokenAbi.json\";\r\nimport constantConfig, { getNetworkList, getTokenByName, getTokenByNetwork, getTokenList, tokenDetails } from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport { LoopCircleLoading } from \"react-loadingg\";\r\nimport CONSTANT from \"../constants\";\r\nimport data from \"../config/constantConfig\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport WalletPopup from \"../components/WalletPopup\";\r\nimport CoinPopup from \"../components/CoinPopup\";\r\nimport SidePopup from \"../components/SidePopup\";\r\nimport LiquidityProvider from \"../components/LiquidityProvider/LiquidityProvider\";\r\nimport LiquidityFountainSP from \"../components/liquidity_fountain_for_SPs\";\r\nimport About from \"../components/About\";\r\nimport PeerPopup from \"../components/PeerPopup\";\r\nimport HowItWorks from \"../components/HowItWorks\";\r\nimport DepositToken from \"../components/Deposit-withdraw\";\r\nimport CefiToDefi from \"../components/CefiToDefi\";\r\nimport axios from \"axios\";\r\nimport LedgerHistory from \"../components/LedgerHistory\";\r\nimport NoDomain from \"../components/NoDomain\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport AnimatedNumber from \"react-animated-numbers\";\r\nimport AnimatedNumbers from \"react-animated-number\";\r\n\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { isValidAddress } from 'ethereumjs-util';\r\nimport reimbursementAbi from \"../abis/reimbursementAbi.json\";\r\nimport SelectToken from \"./select_token\"\r\n\r\nimport SBLogo01 from \"../assets/images/sb-ICO-01.png\";\r\nimport SBLogo02 from \"../assets/images/sb-ICO-02.png\";\r\nimport SBLogo03 from \"../assets/images/sb-ICO-03.png\";\r\nimport SBLogo04 from \"../assets/images/sb-ICO-04.png\";\r\nimport SBLogo05 from \"../assets/images/sb-ICO-05.png\";\r\nimport SBLogo06 from \"../assets/images/sb-ICO-06.png\";\r\nimport SBLogo07 from \"../assets/images/sb-ICO-07.png\";\r\nimport SBLogo08 from \"../assets/images/sb-ICO-08.png\";\r\nimport SBLogo09 from \"../assets/images/sb-ICO-09.png\";\r\nimport SBLogo010 from \"../assets/images/sb-ICO-010.png\";\r\nimport SBLogo011 from \"../assets/images/sb-ICO-011.png\";\r\nimport BigNumber from \"big-number/big-number\";\r\nimport Select from 'react-select';\r\nimport Switch from \"react-switch\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport Dropdown from \"../components/DropDown\";\r\nimport Counter from \"../components/Counter\";\r\n\r\nconst responsive = {\r\n  desktop: {\r\n    breakpoint: { max: 3000, min: 1600 },\r\n    items: 10,\r\n    slidesToSlide: 1, // optional, default to 1.\r\n  },\r\n  desktop2: {\r\n    breakpoint: { max: 1600, min: 1250 },\r\n    items: 9,\r\n    slidesToSlide: 1, // optional, default to 1.\r\n  },\r\n  desktop3: {\r\n    breakpoint: { max: 1250, min: 1024 },\r\n    items: 8,\r\n    slidesToSlide: 1, // optional, default to 1.\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1024, min: 464 },\r\n    items: 4,\r\n    slidesToSlide: 1, // optional, default to 1.\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 464, min: 0 },\r\n    items: 2,\r\n    slidesToSlide: 1, // optional, default to 1.\r\n  },\r\n};\r\n\r\nconst $ = window.$;\r\nexport default class Home extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.handleChange1 = this.handleChange1.bind(this);\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setSendCurrency = this.setSendCurrency.bind(this);\r\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\r\n    this.updateCloneData = this.updateCloneData.bind(this);\r\n    this.clearPreview = this.clearPreview.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n    this.expedite = this.expedite.bind(this);\r\n    const { match, location, history } = props;\r\n    this.state = {\r\n      web3: null,\r\n      web3Check: false,\r\n      userBalance: 0,\r\n      btnClick: false,\r\n      swapFactory: null,\r\n      swapLoading: false,\r\n      selectedSendCurrency: \"BNB\",\r\n      selectedReceiveCurrency: \"ETH\",\r\n      instanceSwapFactoryBinance: null,\r\n      instanceSwapFactoryEthereum: null,\r\n      instanceSwapFactoryPolygon: null,\r\n      instanceReimbursementBinance: null,\r\n      instanceReimbursementEthereum: null,\r\n      tokenInstance: {},\r\n      txLink: \"\",\r\n      wrapBox: \"swap\",\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      allTxHistoryUI: null,\r\n      allPendingTxHistoryUI: null,\r\n      showTxHistory: false,\r\n      showLedger: false,\r\n      currencyPrices: {},\r\n      estimatedGasFee: \"0\",\r\n      tableData: [],\r\n      isSearchTable: false,\r\n      tableSearchResult: [],\r\n      tableDataToDisplay: [],\r\n      liveETHPrice: 0,\r\n      wbnbPrice: 0,\r\n      sideBar: false,\r\n      tokenBalances: {\r\n        JNTR: 0,\r\n        \"JNTR/b\": 0,\r\n        \"JNTR/e\": 0,\r\n        JNTR_APPROVED: 0,\r\n        \"JNTR/b_APPROVED\": 0,\r\n        \"JNTR/e_APPROVED\": 0,\r\n      },\r\n      cloneData:\r\n        typeof location.state === \"undefined\"\r\n          ? {}\r\n          : location.state.cloneData\r\n            ? location.state.cloneData\r\n            : {},\r\n      isloading: false,\r\n      isSubdomain: false,\r\n      noSubDomain: false,\r\n      subDomainName: \"\",\r\n      amounts: {\r\n        totalAmountSwapped: 0,\r\n        feesGenerated: 0,\r\n        smartBoughtBurned: 0,\r\n        totalFeesReimbursed: 0,\r\n        totalReimbursementStaking: 0\r\n      },\r\n      licenseeAddress: {\r\n        56: \"0x0000000000000000000000000000000000000000\",\r\n        1: \"0x0000000000000000000000000000000000000000\",\r\n        97: \"0x0000000000000000000000000000000000000000\",\r\n        42: \"0x0000000000000000000000000000000000000000\",\r\n        80001: \"0x0000000000000000000000000000000000000000\",\r\n        137: \"0x0000000000000000000000000000000000000000\",\r\n      },\r\n      loadingHistory: false,\r\n      selectedOptionSend: getTokenByName(\"BNB\"),\r\n      selectedOptionReceive: getTokenByName(\"ETH\"),\r\n      selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(\"BNB\", \"ETH\"),\r\n      sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"ETH\" && value.label !== \"BNB\";\r\n      }),\r\n      selectedNetworkOptionSend: getTokenByNetwork(\"BSC\"),\r\n      selectedNetworkOptionReceive: getTokenByNetwork(\"ETHEREUM\"),\r\n      sendNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n        return value.label !== \"ETHEREUM\" && value.label !== \"BSC\";\r\n      }),\r\n      recieveNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n        return value.label !== \"BSC\" && value.label !== \"ETHEREUM\";\r\n      }),\r\n      recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"BNB\" && value.label !== \"ETH\";\r\n      }),\r\n      web3Provider: {\r\n        [process.env.REACT_APP_ETH_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_BSC_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_POLYGON_CHAIN_ID]: null,\r\n      },\r\n      allowCurrentTxExpedite: 0,\r\n      currentTxExpediteData: {},\r\n      checked1: false\r\n    };\r\n  }\r\n\r\n  handleChange1(checked1) {\r\n    this.setState({ checked1 });\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.state.sideBar == true) {\r\n      this.setState({\r\n        sideBar: false\r\n      });\r\n    }\r\n  }\r\n  updateCloneData = (data) => {\r\n    this.setState({\r\n      cloneData: data,\r\n    });\r\n  };\r\n\r\n  clearPreview = () => {\r\n    const r = document.querySelector(\":root\");\r\n    r.style.removeProperty(\"--text-color\");\r\n    r.style.removeProperty(\"--button-bg-color\");\r\n    r.style.removeProperty(\"--req-bg\");\r\n    this.setState({\r\n      cloneData: {},\r\n    });\r\n    this.props.history.push({\r\n      pathname: \"\",\r\n      state: {\r\n        cloneData: {},\r\n      },\r\n    });\r\n  };\r\n  componentWillMount = async () => {\r\n    await this.fetchPrice();\r\n    setInterval(async () => {\r\n      await this.fetchPrice();\r\n    }, 60000)\r\n\r\n  };\r\n  componentDidMount = async () => {\r\n    let web3Provider = {};\r\n    web3Provider[process.env.REACT_APP_ETH_CHAIN_ID] = new Web3(\r\n      new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)\r\n    );\r\n    web3Provider[process.env.REACT_APP_BSC_CHAIN_ID] = new Web3(\r\n      new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE)\r\n    );\r\n    web3Provider[process.env.REACT_APP_POLYGON_CHAIN_ID] = new Web3(\r\n      new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_POLYGON)\r\n    );\r\n    this.setState({\r\n      web3Ethereum: new Web3(\r\n        new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)\r\n      ),\r\n      web3Binance: new Web3(\r\n        new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE)\r\n      ),\r\n      web3Polygon: new Web3(\r\n        new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_POLYGON)\r\n      ),\r\n      web3Provider\r\n    });\r\n\r\n    {\r\n      //  this.openPopup('DepositToken');\r\n      //  this.showWithId(\"DepositToken\", \"tab-A1\");\r\n    } // temporary popup on\r\n\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      async () => {\r\n        await this.initInstance();\r\n      }\r\n    );\r\n\r\n    const href = window.location.href;\r\n    const domaindata = href\r\n      .replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\")\r\n      .split(\"/\")[0];\r\n    const domain = domaindata.split(\".\");\r\n\r\n    console.log(domaindata);\r\n    this.setState({\r\n      subDomainName: domain[0],\r\n    });\r\n\r\n    const localhost = domaindata.indexOf(\"localhost\");\r\n    console.log(domain.length);\r\n    if (domain.length === (localhost === -1 ? 3 : 2)) {\r\n      this.setState({\r\n        isSubdomain: true,\r\n      });\r\n      this.getData(domain);\r\n    } else {\r\n      this.setState({\r\n        isSubdomain: false,\r\n        isloading: false,\r\n      });\r\n      // setTimeout(() => {\r\n      //   !this.state.cloneData.isPreview && this.openPopup(\"About\");\r\n      // }, 100);\r\n    }\r\n\r\n    // this.fetchTransactionStatus()\r\n    // await this.fetchTransactionStatus(\"0xb41a1f771244992427ff250d2981381305c5d0bf81e5107a3b5e442b903fd339\");\r\n  };\r\n\r\n  async updateTotalAmounts() {\r\n    let ttAm = 0;\r\n    await axios\r\n      .get(`https://api.smartswap.exchange/summaries`)\r\n      .then((res) => {\r\n        console.log(res.data.data)\r\n        if (res.data.data.totalUsd) {\r\n\r\n          ttAm = (Number(res.data.data.totalUsd) + 1170526).toFixed(0)\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log('error', err);\r\n      });\r\n    console.log(ttAm)\r\n    setTimeout(() => {\r\n      this.setState({\r\n        amounts: {\r\n          totalAmountSwapped: ttAm,\r\n          feesGenerated: 0,\r\n          smartBoughtBurned: 0,\r\n          totalFeesReimbursed: 0,\r\n          totalReimbursementStaking: 0\r\n        }\r\n      })\r\n    }, 500)\r\n  }\r\n\r\n  getData = async (domain) => {\r\n    this.setState({\r\n      isloading: true,\r\n    });\r\n    try {\r\n      const res = await axios.get(\r\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\r\n      );\r\n      console.log(res);\r\n      if (res.data.response_code === 200) {\r\n        if (domain[0].substring(0, 2) === \"0x\") {\r\n          if (isValidAddress(domain[0])) {\r\n            web3Config.setLicenseeData(res.data.result)\r\n          }\r\n        } else {\r\n          const r = document.querySelector(\":root\");\r\n          r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\r\n          r.style.setProperty(\r\n            \"--button-bg-color\",\r\n            res.data.result.seconderyColor\r\n          );\r\n          r.style.setProperty(\r\n            \"--req-bg\",\r\n            `url(${res.data.result.backGroundImage})`\r\n          );\r\n          r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\r\n          var style = document.createElement('style');\r\n          style.type = 'text/css';\r\n          style.innerHTML = `* { font-family: ${res.data.result.fontStyle} !important; }`;\r\n          document.getElementsByTagName('head')[0].appendChild(style);\r\n          // r.style.setProperty(\"font-family\", res.data.result.fontStyle, \"important\");\r\n          // window.document.body.setAttribute('style', 'font-family:Arial !important');\r\n          this.setState({\r\n            cloneData: {\r\n              bgimage: res.data.result.backGroundImage,\r\n              logoImage: res.data.result.logo,\r\n              subDomain: res.data.result.subDomain,\r\n              primaryColor: res.data.result.primaryColors,\r\n              secondaryColor: res.data.result.seconderyColor,\r\n              fontStyle: res.data.result.fontStyle,\r\n              backgroundOverLay: res.data.result.backgroundOverLay,\r\n              swapButtonColor: res.data.result.swapButton,\r\n              logoUrl: res.data.result.logoUrl,\r\n              sideBar: res.data.result.sideBar\r\n            },\r\n            licenseeAddress: {\r\n              56: res.data.result.bscLicenseAddress,\r\n              1: res.data.result.ethLicenseAddress,\r\n              97: res.data.result.bscLicenseAddress,\r\n              42: res.data.result.ethLicenseAddress\r\n            }\r\n          });\r\n        }\r\n      } else if (res.data.response_code === 404) {\r\n        this.setState({\r\n          noSubDomain: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.openPopup(\"NoDomain\");\r\n        }, 100);\r\n      }\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.log(error.response);\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async initInstance() {\r\n    let { web3Binance, web3Ethereum, web3Polygon } = this.state;\r\n    let instanceSwapFactoryBinance = null;\r\n    let instanceSwapFactoryEthereum = null;\r\n    let instanceSwapFactoryPolygon = null;\r\n    let instanceReimbursementBinance = null;\r\n    let instanceReimbursementEthereum = null;\r\n    instanceReimbursementBinance = new web3Binance.eth.Contract(\r\n      reimbursementAbi,\r\n      constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract\r\n    );\r\n    instanceReimbursementEthereum = new web3Ethereum.eth.Contract(\r\n      reimbursementAbi,\r\n      constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract\r\n    );\r\n    instanceSwapFactoryBinance = new web3Binance.eth.Contract(\r\n      swapFactoryAbi,\r\n      constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract\r\n    );\r\n    instanceSwapFactoryEthereum = new web3Ethereum.eth.Contract(\r\n      swapFactoryAbi,\r\n      constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract\r\n    );\r\n    instanceSwapFactoryPolygon = new web3Polygon.eth.Contract(\r\n      swapFactoryAbi,\r\n      constantConfig[CONSTANT.NETWORK_ID.POLYGON].swapFactoryContract\r\n    );\r\n\r\n    let tokenInstance = {};\r\n    tokenInstance[\"JNTR\"] = new web3Binance.eth.Contract(\r\n      tokenAbi,\r\n      \"0x1350044d6a653E87Ed3384DC1D2f6b1A7F138e0A\"\r\n    );\r\n    tokenInstance[\"JNTR/b\"] = new web3Binance.eth.Contract(\r\n      tokenAbi,\r\n      \"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\"\r\n    );\r\n    tokenInstance[\"JNTR/e\"] = new web3Ethereum.eth.Contract(\r\n      tokenAbi,\r\n      \"0x40a99d086d517f06f9d1ed564f51ef75b8f7f042\"\r\n    );\r\n    this.setState(\r\n      {\r\n        instanceSwapFactoryBinance,\r\n        instanceSwapFactoryEthereum,\r\n        instanceSwapFactoryPolygon,\r\n        instanceReimbursementBinance,\r\n        instanceReimbursementEthereum,\r\n        tokenInstance,\r\n      },\r\n      () => {\r\n        // this.listenTransferEvent();\r\n      }\r\n    );\r\n  }\r\n  updateTokenBalance = async () => {\r\n    if (this.state.web3 !== null) {\r\n      const { tokenInstance, tokenBalances, web3 } = this.state;\r\n      // Balances\r\n      tokenBalances[\"JNTR\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR\"].methods\r\n          .balanceOf(web3Config.getAddress())\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/b\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/b\"].methods\r\n          .balanceOf(web3Config.getAddress())\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/e\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/e\"].methods\r\n          .balanceOf(web3Config.getAddress())\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      // Approve Balances\r\n      tokenBalances[\"JNTR_APPROVED\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR\"].methods\r\n          .allowance(\r\n            web3Config.getAddress(),\r\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\r\n          )\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/b_APPROVED\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/b\"].methods\r\n          .allowance(\r\n            web3Config.getAddress(),\r\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\r\n          )\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/e_APPROVED\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/e\"].methods\r\n          .allowance(\r\n            web3Config.getAddress(),\r\n            \"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\"\r\n          )\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      this.setState(\r\n        {\r\n          tokenBalances: tokenBalances,\r\n        },\r\n        () => {\r\n          this.forceUpdate();\r\n          // this.updateButton()\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  updateUserBalance = async () => {\r\n    if (this.state.web3 !== null) {\r\n      let web3 = web3Config.getWeb3();\r\n      // Balances\r\n      // console.log((await web3.getBalance(web3Config.getAddress()))._hex)\r\n      // console.log(web3Js.utils.fromWei(web3Js.utils.hexToNumberString((await web3.getBalance(web3Config.getAddress()))._hex)))      \r\n      this.setState({\r\n        userBalance: web3Js.utils.fromWei(web3Js.utils.hexToNumberString((await web3.getBalance(web3Config.getAddress()))._hex))\r\n      });\r\n    }\r\n  };\r\n\r\n  async connectWallet() {\r\n    this.setState({ btnClick: true });\r\n    await web3Config.connectWallet(0);\r\n    let networkId = web3Config.getNetworkId();\r\n    let selectedCurId = constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId;\r\n    if (!constantConfig.allowedNetwork.includes(networkId)) {\r\n      notificationConfig.error(\"Please Select Ethereum or BSC or Polygon Main Network\");\r\n      this.setState({ btnClick: false });\r\n      return;\r\n    }\r\n    if (selectedCurId !== networkId) {\r\n      notificationConfig.warning(\"Change metamask network to \" + CONSTANT.NETWORK_ID[selectedCurId] + \"!\");\r\n      return;\r\n    }\r\n    // if (\r\n    //   constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\r\n    //   networkId &&\r\n    //   (networkId === 97 || networkId === 56)\r\n    // ) {\r\n    //   notificationConfig.warning(\"Change metamask network to Ethereum!\");\r\n    //   return;\r\n    // } else if (\r\n    //   constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\r\n    //   networkId &&\r\n    //   (networkId === 42 || networkId === 1)\r\n    // ) {\r\n    //   notificationConfig.warning(\"Change metamask network to Binance!\");\r\n    //   return;\r\n    // } else if (\r\n    //   constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\r\n    //   networkId &&\r\n    //   (networkId === 80001 || networkId === 137)\r\n    // ) {\r\n    //   notificationConfig.warning(\"Change metamask network to Polygon!\");\r\n    //   return;\r\n    // }\r\n    this.setState(\r\n      {\r\n        web3: web3Config.getWeb3(),\r\n        btnClick: false,\r\n      },\r\n      async () => {\r\n        await this.fetchedUserTransaction(web3Config.getAddress());\r\n        setInterval(async () => {\r\n          await this.fetchedUserTransaction(web3Config.getAddress());\r\n        }, 60000);\r\n        // await this.getData([web3Config.getAddress()])\r\n        // this.changeCurrency(false)\r\n        this.updateUserBalance();\r\n        setInterval(() => {\r\n          this.updateUserBalance();\r\n        }, 10000);\r\n      }\r\n    );\r\n  }\r\n  async swap() {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    console.log(networkId)\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n    let { sendFundAmount } = this.state;\r\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n      notificationConfig.error(\"Enter value to swap\");\r\n      return;\r\n    }\r\n    let actualSendFundAmount = (\r\n      await this.getActualAmount(\r\n        sendFundAmount,\r\n        this.state.selectedSendCurrency\r\n      )\r\n    ).toString();\r\n    let value = 0,\r\n      swapAmount = 0,\r\n      allFees = await this.calculateSwapFees(actualSendFundAmount);\r\n    try {\r\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\r\n    } catch (e) {\r\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n    }\r\n    swapAmount = value;\r\n    if (\r\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\r\n        .approveRequire\r\n    ) {\r\n      value = 0;\r\n    }\r\n\r\n    swapFactory.swap(\r\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\r\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\r\n      value,\r\n      swapAmount,\r\n      allFees,\r\n      this.state.licenseeAddress[networkId],\r\n      (hash) => {\r\n        this.setState({\r\n          swapLoading: true,\r\n          txIdSent: hash,\r\n          txLinkSend: data[networkId].explorer + \"/tx/\" + hash,\r\n        });\r\n      },\r\n      (receipt) => {\r\n        // this.init()\r\n        setTimeout(async () => {\r\n          await this.fetchTransactionStatus(receipt.transactionHash);\r\n        }, 5000);\r\n\r\n        this.setState({\r\n          swapLoading: false,\r\n          showLedger: true,\r\n          wrapBox: \"success\",\r\n        });\r\n        notificationConfig.success(\"Swap Success\");\r\n      }\r\n    );\r\n  }\r\n\r\n  async fetchTransactionStatus(hash) {\r\n    // let url = CONSTANT.API_URL + \"/ledgers/\" + \"0xcaba174a8ec3edd18e14d7dfc79e68fd0ae4193f\";\r\n\r\n    let url = process.env.REACT_APP_LEDGER_HOST + \"ledgers/tx/\" + hash;\r\n\r\n    // let url = \"http://18.224.106.204:8080/ledger/tx/0xb41a1f771244992427ff250d2981381305c5d0bf81e5107a3b5e442b903fd339\"\r\n\r\n    console.log(url);\r\n\r\n    var txCheckInterval = setInterval(async () => {\r\n      console.log(\" interval called \");\r\n      await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          // console.log(res.data)\r\n          let result = res.data;\r\n          console.log(result);\r\n          if (result.data.status === \"FULFILLED\" && result.data.relationship.claim.approveHash !== null) {\r\n            console.log(result.data);\r\n\r\n            if (result.data.txHash === this.state.txIdSent) {\r\n              console.log(\"in end\");\r\n              console.log(\"oracle tx start\");\r\n              console.log(result.data.relationship.claim.approveHash);\r\n              if (result.data.relationship.claim.approveHash !== undefined || result.data.relationship.claim.approveHash !== null) {\r\n                let txLinkReturn =\r\n                  constantConfig[Number(result.data.crossChainId)].explorer +\r\n                  \"/tx/\" +\r\n                  result.data.relationship.claim.approveHash;\r\n\r\n\r\n                result.data[\"recivedAmount\"] = web3Js.utils.fromWei(result.data.estimatedForeignAmount);\r\n                // result.data.counterParties.map(async (elementCounterParties, key) => {\r\n                //   let rcAmount = web3Js.utils.fromWei(elementCounterParties.crossAmountA) * (elementCounterParties.tokenAPrice / elementCounterParties.tokenBPrice)\r\n                //   result.data[\"recivedAmount\"] = Number(result.data[\"recivedAmount\"]) + Number(rcAmount);\r\n                // })\r\n\r\n                this.updateLedgerAfterResponse(\r\n                  result.data.relationship.claim.approveHash,\r\n                  txLinkReturn,\r\n                  result.data.recivedAmount\r\n                );\r\n                clearInterval(txCheckInterval);\r\n              }\r\n\r\n              console.log(\"oracle tx end\");\r\n            }\r\n          } else {\r\n            if (result.data.canExpedite) {\r\n              let curTxExData = {};\r\n              let { allowCurrentTxExpedite } = this.state;\r\n              curTxExData[\"txHash\"] = result.data.txHash;\r\n              curTxExData[\"processAmount\"] = result.data.processAmount;\r\n              curTxExData[\"chainId\"] = result.data.chainId;\r\n              curTxExData[\"crossChainId\"] = result.data.crossChainId;\r\n              this.setState({\r\n                allowCurrentTxExpedite: (allowCurrentTxExpedite === 0) ? 1 : allowCurrentTxExpedite,\r\n                currentTxExpediteData: curTxExData,\r\n              })\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error\", err);\r\n        });\r\n    }, 5000);\r\n\r\n    // setInterval(async () => {\r\n    //     await axios\r\n    //         .get(CONSTANT.API_URL + web3Config.getAddress())\r\n    //         .then((res) => {\r\n    //             console.log(res.data)\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log('error', err);\r\n    //         });\r\n    // }, 5000)\r\n  }\r\n\r\n  async approve() {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n    swapFactory.approveJNTRTokenForSwapFactory(\r\n      constantConfig.tokenDetails[this.state.selectedSendCurrency].address,\r\n      constantConfig[networkId].swapFactoryContract,\r\n      (hash) => {\r\n        this.setState({\r\n          approveLoading: true,\r\n          // txIdSent: hash,\r\n          // txLinkSend: data[networkId].explorer + \"/tx/\" + hash\r\n        });\r\n      },\r\n      () => {\r\n        // this.init()\r\n        this.setState({\r\n          approveLoading: false,\r\n          // showLedger: true,\r\n          // wrapBox: \"success\"\r\n        });\r\n        notificationConfig.success(\"Approve Success\");\r\n      }\r\n    );\r\n  }\r\n  async estimateGasAndFee() {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n    let { sendFundAmount } = this.state;\r\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n      notificationConfig.error(\"Enter value to swap\");\r\n      return;\r\n    }\r\n    let actualSendFundAmount = (\r\n      await this.getActualAmount(\r\n        sendFundAmount,\r\n        this.state.selectedSendCurrency\r\n      )\r\n    ).toString();\r\n    let value = 0,\r\n      swapAmount = 0,\r\n      allFees = await this.calculateSwapFees(actualSendFundAmount);\r\n\r\n    try {\r\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\r\n    } catch (e) {\r\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n    }\r\n    swapAmount = value;\r\n    if (\r\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\r\n        .approveRequire\r\n    ) {\r\n      value = 0;\r\n    }\r\n    await swapFactory.estimateSwapGasFee(\r\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\r\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\r\n      value,\r\n      swapAmount,\r\n      allFees,\r\n      this.state.licenseeAddress[networkId],\r\n      \"270000\",\r\n      (estGas) => {\r\n        this.setState({\r\n          estimatedGasFee: Number(estGas) + Number(web3Js.utils.fromWei((allFees.totalFees).toString())),\r\n        });\r\n      }\r\n    );\r\n  }\r\n  async recivedToken(e) {\r\n    let dollarAmount = Number(e.target.value);\r\n    this.setState(\r\n      {\r\n        sendFundAmount: dollarAmount,\r\n      },\r\n      async () => {\r\n        await this.setAmount(dollarAmount);\r\n      }\r\n    );\r\n  }\r\n  async setAmount(dollarAmount) {\r\n    this.setState(\r\n      {\r\n        actualSendFundAmount: await this.getActualAmount(\r\n          dollarAmount,\r\n          this.state.selectedSendCurrency\r\n        ),\r\n        approxReceiveFundAmount: await this.getActualAmount(\r\n          dollarAmount,\r\n          this.state.selectedReceiveCurrency\r\n        ),\r\n      },\r\n      async () => {\r\n        await this.estimateGasAndFee();\r\n      }\r\n    );\r\n  }\r\n  async getActualAmount(dollarAmount, currency) {\r\n    if (dollarAmount <= 0) return 0;\r\n    else return dollarAmount / this.state.currencyPrices[currency];\r\n  }\r\n\r\n  async calculateSwapFees(actualSendFundAmount) {\r\n    // console.log(\"----------------------------------------------amount-start----------------------------------\")\r\n    // console.log(actualSendFundAmount)\r\n    // console.log(\"----------------------------------------------amount-end----------------------------------\")\r\n    let networkId = web3Config.getNetworkId();\r\n    let { selectedOptionReceive } = this.state;\r\n    console.log(\"------------------------matic-gas-price------------------------------\")\r\n\r\n    if (networkId === 56 || networkId === 97) {\r\n      let prcsFees = 0;\r\n      if (selectedOptionReceive.networkId === 42 || selectedOptionReceive.networkId === 1) {\r\n        const response = await fetch(\r\n          \"https://ethgasstation.info/json/ethgasAPI.json\"\r\n        );\r\n        const json = await response.json();\r\n        let gasPrice = (json.fast / 10).toString();\r\n        prcsFees = Number(\r\n          web3Js.utils.fromWei(\r\n            ((330000 *\r\n              web3Js.utils.toWei(gasPrice, \"gwei\") *\r\n              (this.state.currencyPrices[\"ETH\"] / this.state.currencyPrices[\"BNB\"])).toFixed(0)).toString()\r\n          )\r\n        )\r\n      } else if (selectedOptionReceive.networkId === 137 || selectedOptionReceive.networkId === 80001) {\r\n        prcsFees = Number(\r\n          web3Js.utils.fromWei(\r\n            ((330000 *\r\n              (await this.state.web3Polygon.eth.getGasPrice()) *\r\n              (this.state.currencyPrices[\"MATIC\"] / this.state.currencyPrices[\"BNB\"])).toFixed(0)).toString()\r\n          )\r\n        )\r\n      }\r\n      let companyFees = (\r\n        (Number(actualSendFundAmount) * await this.getCompanyFees()) / 10000\r\n      )\r\n      let reimbursementFees = (\r\n        (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.licenseeAddress[networkId])) / 10000\r\n      )\r\n      // console.log(\"----------------------------------Fee calculation Logs Start -----------------------------------------\")\r\n      // console.log(\"Company Fees : \", await this.getCompanyFees(this.state.instanceSwapFactoryBinance))\r\n      // console.log(\"License Address : \", this.state.licenseeAddress[networkId])\r\n      // console.log(\"Licensee Fees : \", await this.getReimbursementFees(this.state.instanceReimbursementBinance, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract))\r\n      // console.log(Number(actualSendFundAmount))\r\n      // console.log(\"Company Fees Calculated Amount * Company Fees / 10000: \", (Number(actualSendFundAmount) * await this.getCompanyFees(this.state.instanceSwapFactoryBinance)) / 10000)\r\n      // console.log(\"Licensee Fees Calculated Amount * Licensee Fees / 10000: \", (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.instanceReimbursementBinance, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract)) / 10000)\r\n      // console.log(\"----------------------------------Fee calculation Logs End -----------------------------------------\")\r\n      console.log((\r\n        (Number(actualSendFundAmount) * await this.getCompanyFees()) / 10000\r\n      ))\r\n      return {\r\n        totalFees: (\r\n          // web3Js.utils.toWei(\r\n          ((prcsFees\r\n            +\r\n            companyFees\r\n            +\r\n            reimbursementFees\r\n          ) * 10 ** 18).toFixed()\r\n          // )\r\n        ),\r\n        processingFees: prcsFees,\r\n        companyFees: companyFees,\r\n        reimbursementFees: reimbursementFees\r\n      }\r\n    } else if (networkId === 1 || networkId === 42) {\r\n      let prcsFees;\r\n      if (selectedOptionReceive.networkId === 56 || selectedOptionReceive.networkId === 97) {\r\n        prcsFees = Number(\r\n          web3Js.utils.fromWei(\r\n            ((330000 *\r\n              web3Js.utils.toWei(\"5\", \"gwei\") *\r\n              (this.state.currencyPrices[\"BNB\"] / this.state.currencyPrices[\"ETH\"])).toFixed(0)).toString()\r\n          )\r\n        )\r\n      } else if (selectedOptionReceive.networkId === 137 || selectedOptionReceive.networkId === 80001) {\r\n        prcsFees = Number(\r\n          web3Js.utils.fromWei(\r\n            ((330000 *\r\n              (await this.state.web3Polygon.eth.getGasPrice()) *\r\n              (this.state.currencyPrices[\"MATIC\"] / this.state.currencyPrices[\"ETH\"])).toFixed(0)).toString()\r\n          )\r\n        )\r\n      }\r\n      let companyFees = (\r\n        (Number(actualSendFundAmount) * await this.getCompanyFees()) / 10000\r\n      )\r\n      let reimbursementFees = (\r\n        (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.licenseeAddress[networkId])) / 10000\r\n      )\r\n      // console.log(\"----------------------------------Fee calculation Logs Start -----------------------------------------\")\r\n      // console.log(\"Company Fees : \", await this.getCompanyFees(this.state.instanceSwapFactoryEthereum))\r\n      // console.log(\"License Address : \", this.state.licenseeAddress[networkId])\r\n      // console.log(\"Licensee Fees : \", await this.getReimbursementFees(this.state.instanceReimbursementEthereum, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract))\r\n      // console.log(Number(actualSendFundAmount))\r\n      // console.log(\"Company Fees Calculated Amount * Company Fees / 10000: \", (Number(actualSendFundAmount) * await this.getCompanyFees(this.state.instanceSwapFactoryEthereum)) / 10000)\r\n      // console.log(\"Licensee Fees Calculated Amount * Licensee Fees / 10000: \", (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.instanceReimbursementEthereum, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)) / 10000)\r\n\r\n      // console.log(\"----------------------------------Fee calculation Logs End -----------------------------------------\")\r\n      return {\r\n        totalFees: (\r\n          // web3Js.utils.toWei(\r\n          ((prcsFees\r\n            +\r\n            companyFees\r\n            +\r\n            reimbursementFees\r\n          ) * 10 ** 18).toFixed()\r\n          // )\r\n        ),\r\n        processingFees: prcsFees,\r\n        companyFees: companyFees,\r\n        reimbursementFees: reimbursementFees\r\n      }\r\n    } else if (networkId === 137 || networkId === 80001) {\r\n      let prcsFees;\r\n      if (selectedOptionReceive.networkId === 42 || selectedOptionReceive.networkId === 1) {\r\n        const response = await fetch(\r\n          \"https://ethgasstation.info/json/ethgasAPI.json\"\r\n        );\r\n        const json = await response.json();\r\n        let gasPrice = (json.fast / 10).toString();\r\n        prcsFees = Number(\r\n          web3Js.utils.fromWei(\r\n            ((330000 *\r\n              web3Js.utils.toWei(gasPrice, \"gwei\") *\r\n              (this.state.currencyPrices[\"ETH\"] / this.state.currencyPrices[\"MATIC\"])).toFixed(0)).toString()\r\n          )\r\n        )\r\n      } else if (selectedOptionReceive.networkId === 56 || selectedOptionReceive.networkId === 97) {\r\n        prcsFees = Number(\r\n          web3Js.utils.fromWei(\r\n            ((330000 *\r\n              web3Js.utils.toWei(\"5\", \"gwei\") *\r\n              (this.state.currencyPrices[\"BNB\"] / this.state.currencyPrices[\"MATIC\"])).toFixed(0)).toString()\r\n          )\r\n        )\r\n      }\r\n      let companyFees = (\r\n        (Number(actualSendFundAmount) * await this.getCompanyFees()) / 10000\r\n      )\r\n      let reimbursementFees = (\r\n        (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.licenseeAddress[networkId])) / 10000\r\n      )\r\n      // console.log(\"----------------------------------Fee calculation Logs Start -----------------------------------------\")\r\n      // console.log(\"Company Fees : \", await this.getCompanyFees(this.state.instanceSwapFactoryEthereum))\r\n      // console.log(\"License Address : \", this.state.licenseeAddress[networkId])\r\n      // console.log(\"Licensee Fees : \", await this.getReimbursementFees(this.state.instanceReimbursementEthereum, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract))\r\n      // console.log(Number(actualSendFundAmount))\r\n      // console.log(\"Company Fees Calculated Amount * Company Fees / 10000: \", (Number(actualSendFundAmount) * await this.getCompanyFees(this.state.instanceSwapFactoryEthereum)) / 10000)\r\n      // console.log(\"Licensee Fees Calculated Amount * Licensee Fees / 10000: \", (Number(actualSendFundAmount) * await this.getReimbursementFees(this.state.instanceReimbursementEthereum, this.state.licenseeAddress[networkId], constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)) / 10000)\r\n\r\n      // console.log(\"----------------------------------Fee calculation Logs End -----------------------------------------\")\r\n      return {\r\n        totalFees: (\r\n          // web3Js.utils.toWei(\r\n          ((prcsFees\r\n            +\r\n            companyFees\r\n            +\r\n            reimbursementFees\r\n          ) * 10 ** 18).toFixed()\r\n          // )\r\n        ),\r\n        processingFees: prcsFees,\r\n        companyFees: companyFees,\r\n        reimbursementFees: reimbursementFees\r\n      }\r\n    }\r\n  }\r\n\r\n  async getCompanyFees() {\r\n    let { web3Provider, selectedOptionSend, selectedPairAddress } = this.state;\r\n    let instance = await new web3Provider[selectedOptionSend.networkId].eth.Contract(\r\n      swapFactoryAbi,\r\n      selectedPairAddress\r\n    );\r\n    let fees = await instance.methods.companyFee().call();\r\n    console.log(\"company-fees:-----------------------\", fees)\r\n    return fees;\r\n  }\r\n\r\n  async getReimbursementFees(vaultAddress) {\r\n    let { web3Provider, selectedOptionSend, selectedSendCurrency, selectedReceiveCurrency, selectedPairAddress } = this.state;\r\n\r\n    let instance = await new web3Provider[selectedOptionSend.networkId].eth.Contract(\r\n      reimbursementAbi,\r\n      constantConfig.getReimbursementContractAddressByPairs(selectedSendCurrency, selectedReceiveCurrency)\r\n    );\r\n    let fees = await instance.methods.getLicenseeFee(vaultAddress, selectedPairAddress).call();\r\n    console.log(\"reimbur-fees:-----------------------\", fees)\r\n    return fees;\r\n  }\r\n\r\n  tableSearchHandler = (e) => {\r\n    let value = e.target.value;\r\n    if (value.length > 2) {\r\n      let res = this.state.tableData.filter((list, i) => {\r\n        return (\r\n          list.fullName.toLowerCase().substr(0, value.length) ===\r\n          value.toLowerCase() ||\r\n          list.shortName.toLowerCase().substr(0, value.length) ===\r\n          value.toLowerCase()\r\n        );\r\n      });\r\n      this.setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          tableDataToDisplay: res,\r\n        };\r\n      });\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          tableDataToDisplay: prevState.tableData,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  async dropDownSearch(e) {\r\n    let Uniobj = {};\r\n    let Panobj = {};\r\n    let value = e.target.value;\r\n    let datTosort = this.state.tableData;\r\n    let wbnbPrice = this.state.wbnbPrice;\r\n\r\n    //ETH\r\n    Uniobj.ETH = this.state.liveETHPrice;\r\n    //WBTC\r\n    await axios\r\n      .post(\r\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\r\n        {\r\n          pairId: \"0xbb2b8038a1640196fbe3e38816f3e67cba72d940\",\r\n          id: \"1\",\r\n          price: value,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.responseCode === 200) {\r\n          Uniobj.BTC = res.data.afterSlippage;\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    //USDT\r\n    await axios\r\n      .post(\r\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\r\n        {\r\n          pairId: \"0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852\",\r\n          id: \"1\",\r\n          price: value,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.responseCode === 200) {\r\n          Uniobj.USDT = res.data.afterSlippage;\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    //BNB\r\n    await axios\r\n      .post(\r\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\r\n        {\r\n          pairId: \"0x0a5cc39d43a12540ddbab43af588033a224fb764\",\r\n          id: \"1\",\r\n          price: value,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.responseCode === 200) {\r\n          Uniobj.BNB = res.data.afterSlippage;\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    //ADA\r\n    await axios\r\n      .post(\r\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\r\n        {\r\n          pairId: \"0xbe05aef285711e0ae4925d4fabd8485f054ec2e1\",\r\n          id: \"1\",\r\n          price: value,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.responseCode === 200) {\r\n          Uniobj.ADA = res.data.afterSlippage;\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    //DOT\r\n    await axios\r\n      .post(\r\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\r\n        {\r\n          pairId: \"0x5bcfa1765c790ff25170a0dc4b0f783b329a00fe\",\r\n          id: \"1\",\r\n          price: value,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.responseCode === 200) {\r\n          Uniobj.DOT = res.data.afterSlippage;\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    //XRP : 0x4d931ed705622decbcb96d5e0736acabc65553e0\r\n    await axios\r\n      .post(\r\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\r\n        {\r\n          pairId: \"0x4d931ed705622decbcb96d5e0736acabc65553e0\",\r\n          id: \"1\",\r\n          price: value,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.responseCode === 200) {\r\n          Uniobj.XRP = res.data.afterSlippage;\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    //UNI : 0xd3d2e2692501a5c9ca623199d38826e513033a17\r\n    await axios\r\n      .post(\r\n        `https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/afterSlippage`,\r\n        {\r\n          pairId: \"0xd3d2e2692501a5c9ca623199d38826e513033a17\",\r\n          id: \"1\",\r\n          price: value,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.responseCode === 200) {\r\n          Uniobj.UNI = res.data.afterSlippage;\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    let pancakeswapValue = {};\r\n    let obj = datTosort.map((data) => {\r\n      if (data.shortName === \"BNB\") {\r\n        pancakeswapValue = {\r\n          usdValue: wbnbPrice,\r\n          quote_volume: data.pancakeswapValue.quote_volume,\r\n          base_volume: data.pancakeswapValue.base_volume,\r\n        };\r\n      } else if (data.shortName === \"UNI\") {\r\n        pancakeswapValue = {\r\n          usdValue:\r\n            wbnbPrice *\r\n            ((parseFloat(data.pancakeswapValue.base_volume) +\r\n              parseFloat(value)) /\r\n              (parseFloat(data.pancakeswapValue.quote_volume) +\r\n                parseFloat(value))),\r\n\r\n          quote_volume: data.pancakeswapValue.quote_volume,\r\n          base_volume: data.pancakeswapValue.base_volume,\r\n        };\r\n      } else {\r\n        pancakeswapValue = {\r\n          usdValue:\r\n            wbnbPrice /\r\n            ((parseFloat(data.pancakeswapValue.base_volume) +\r\n              parseFloat(value)) /\r\n              (parseFloat(data.pancakeswapValue.quote_volume) +\r\n                parseFloat(value))),\r\n\r\n          quote_volume: data.pancakeswapValue.quote_volume,\r\n          base_volume: data.pancakeswapValue.base_volume,\r\n        };\r\n      }\r\n      return {\r\n        shortName: data.shortName,\r\n        fullName: data.fullName,\r\n        priceUsd: data.priceUsd,\r\n        Volume_24: data.Volume_24,\r\n        market_cap: data.market_cap,\r\n        symbol: data.symbol,\r\n        coingeckoValue: data.coingeckoValue,\r\n        coinMarketCapValue: data.coinMarketCapValue,\r\n        uniswapValue: Uniobj[data.shortName],\r\n        pancakeswapValue: pancakeswapValue,\r\n      };\r\n    });\r\n\r\n    console.log(\"obj\", obj);\r\n\r\n    this.setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        tableDataToDisplay: obj,\r\n      };\r\n    });\r\n  }\r\n\r\n  async fetchPrice() {\r\n    let MarketCap = [];\r\n    let tableDataLocal = [];\r\n    let tableDataLocalcoingecko = [];\r\n    let Uniobj = {};\r\n    let Panobj = {};\r\n    var { currencyPrices } = this.state;\r\n    let wbnbPrice = 0;\r\n\r\n    let liveETHPrice = 0;\r\n\r\n    // await axios\r\n    //     .get(`https://api.pancakeswap.info/api/v2/tokens`)\r\n    //     .then((res) => {\r\n    //         wbnbPrice = parseFloat(\r\n    //             res.data.data['0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'].price\r\n    //         );\r\n\r\n    //         if (res.data.responseCode === 200) {\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // await axios\r\n    //     .get(\r\n    //         `https://ehtereum-developer-api.mobiloitte.com/api/v1/user/getLiveETHPrice`\r\n    //     )\r\n    //     .then((res) => {\r\n    //         if (res.data.responseCode === 200) {\r\n    //             liveETHPrice = res.data.responseResult.data.bundle.ethPrice;\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n    // //pancakeswap\r\n    // await axios\r\n    //     .get(`https://api.pancakeswap.info/api/v2/pairs`)\r\n    //     .then((res) => {\r\n    //         if (res.status === 200) {\r\n    //             Panobj = {\r\n    //                 BTC: {\r\n    //                     usdValue:\r\n    //                         res.data.data[\r\n    //                             '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].price * wbnbPrice,\r\n    //                     quote_volume:\r\n    //                         res.data.data[\r\n    //                             '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].quote_volume,\r\n    //                     base_volume:\r\n    //                         res.data.data[\r\n    //                             '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].base_volume,\r\n    //                 },\r\n    //                 ETH: {\r\n    //                     usdValue:\r\n    //                         res.data.data[\r\n    //                             '0x2170Ed0880ac9A755fd29B2688956BD959F933F8_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].price * wbnbPrice,\r\n    //                     quote_volume:\r\n    //                         res.data.data[\r\n    //                             '0x2170Ed0880ac9A755fd29B2688956BD959F933F8_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].quote_volume,\r\n    //                     base_volume:\r\n    //                         res.data.data[\r\n    //                             '0x2170Ed0880ac9A755fd29B2688956BD959F933F8_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].base_volume,\r\n    //                 },\r\n    //                 USDT: {\r\n    //                     usdValue:\r\n    //                         res.data.data[\r\n    //                             '0x55d398326f99059fF775485246999027B3197955_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].price * wbnbPrice,\r\n    //                     quote_volume:\r\n    //                         res.data.data[\r\n    //                             '0x55d398326f99059fF775485246999027B3197955_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].quote_volume,\r\n    //                     base_volume:\r\n    //                         res.data.data[\r\n    //                             '0x55d398326f99059fF775485246999027B3197955_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].base_volume,\r\n    //                 },\r\n\r\n    //                 BNB: { usdValue: wbnbPrice },\r\n    //                 ADA: {\r\n    //                     usdValue:\r\n    //                         res.data.data[\r\n    //                             '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].price * wbnbPrice,\r\n    //                     quote_volume:\r\n    //                         res.data.data[\r\n    //                             '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].quote_volume,\r\n    //                     base_volume:\r\n    //                         res.data.data[\r\n    //                             '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].base_volume,\r\n    //                 },\r\n\r\n    //                 DOT: {\r\n    //                     usdValue:\r\n    //                         res.data.data[\r\n    //                             '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].price * wbnbPrice,\r\n    //                     quote_volume:\r\n    //                         res.data.data[\r\n    //                             '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].quote_volume,\r\n    //                     base_volume:\r\n    //                         res.data.data[\r\n    //                             '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].base_volume,\r\n    //                 },\r\n\r\n    //                 XRP: {\r\n    //                     usdValue:\r\n    //                         res.data.data[\r\n    //                             '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].price * wbnbPrice,\r\n    //                     quote_volume:\r\n    //                         res.data.data[\r\n    //                             '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].quote_volume,\r\n    //                     base_volume:\r\n    //                         res.data.data[\r\n    //                             '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE_0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n    //                         ].base_volume,\r\n    //                 },\r\n\r\n    //                 UNI: {\r\n    //                     usdValue:\r\n    //                         wbnbPrice /\r\n    //                         res.data.data[\r\n    //                             '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c_0xBf5140A22578168FD562DCcF235E5D43A02ce9B1'\r\n    //                         ].price,\r\n    //                     quote_volume:\r\n    //                         res.data.data[\r\n    //                             '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c_0xBf5140A22578168FD562DCcF235E5D43A02ce9B1'\r\n    //                         ].quote_volume,\r\n    //                     base_volume:\r\n    //                         res.data.data[\r\n    //                             '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c_0xBf5140A22578168FD562DCcF235E5D43A02ce9B1'\r\n    //                         ].base_volume,\r\n    //                 },\r\n    //             };\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // await axios\r\n    //     .get(`https://ehtereum-developer-api.mobiloitte.com/api/v1/user/getMarketCap`)\r\n    //     .then((res) => {\r\n    //         if (res.data.responseCode === 200) {\r\n    //             let obj = res.data.responseResult.data;\r\n    //             MarketCap = res.data.responseResult.data;\r\n\r\n    //             tableDataLocal = Object.entries(obj);\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // //ETH\r\n\r\n    // Uniobj.ETH = liveETHPrice;\r\n\r\n    // //WBTC\r\n    // await axios\r\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\r\n    //         pairId: '0xbb2b8038a1640196fbe3e38816f3e67cba72d940',\r\n    //         id: '1',\r\n    //         // price: '1000',\r\n    //     })\r\n    //     .then((res) => {\r\n    //         if (res.data.responseCode === 200) {\r\n    //             Uniobj.BTC = res.data.beforeSlippage;\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // //USDT\r\n    // await axios\r\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\r\n    //         pairId: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852',\r\n    //         id: '1',\r\n    //         // price: '1000',\r\n    //     })\r\n    //     .then((res) => {\r\n    //         if (res.data.responseCode === 200) {\r\n    //             Uniobj.USDT = res.data.beforeSlippage;\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // //BNB\r\n    // await axios\r\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\r\n    //         pairId: '0x0a5cc39d43a12540ddbab43af588033a224fb764',\r\n    //         id: '1',\r\n    //         // price: '1000',\r\n    //     })\r\n    //     .then((res) => {\r\n    //         if (res.data.responseCode === 200) {\r\n    //             Uniobj.BNB = res.data.beforeSlippage;\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // //ADA\r\n    // await axios\r\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\r\n    //         pairId: '0xbe05aef285711e0ae4925d4fabd8485f054ec2e1',\r\n    //         id: '1',\r\n    //         // price: '1000',\r\n    //     })\r\n    //     .then((res) => {\r\n    //         if (res.data.responseCode === 200) {\r\n    //             Uniobj.ADA = res.data.beforeSlippage;\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // //DOT\r\n    // await axios\r\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\r\n    //         pairId: '0x5bcfa1765c790ff25170a0dc4b0f783b329a00fe',\r\n    //         id: '1',\r\n    //         // price: '1000',\r\n    //     })\r\n    //     .then((res) => {\r\n    //         if (res.data.responseCode === 200) {\r\n    //             Uniobj.DOT = res.data.beforeSlippage;\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // //XRP : 0x4d931ed705622decbcb96d5e0736acabc65553e0\r\n    // await axios\r\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\r\n    //         pairId: '0x4d931ed705622decbcb96d5e0736acabc65553e0',\r\n    //         id: '1',\r\n    //         // price: '1000',\r\n    //     })\r\n    //     .then((res) => {\r\n    //         if (res.data.responseCode === 200) {\r\n    //             Uniobj.XRP = res.data.beforeSlippage;\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // //UNI : 0xd3d2e2692501a5c9ca623199d38826e513033a17\r\n    // await axios\r\n    //     .post(`https://node-blockchaindeveloper.mobiloitte.com/api/v1/user/beforeSlippage`, {\r\n    //         pairId: '0xd3d2e2692501a5c9ca623199d38826e513033a17',\r\n    //         id: '1',\r\n    //         // price: '1000',\r\n    //     })\r\n    //     .then((res) => {\r\n    //         if (res.data.responseCode === 200) {\r\n    //             Uniobj.UNI = res.data.beforeSlippage;\r\n    //         } else {\r\n    //         }\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // await axios\r\n    //     .get(\r\n    //         `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctether%2Cbinancecoin%2Ccardano%2Cpolkadot%2Cuniswap%2Cripple&vs_currencies=USD&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true`\r\n    //     )\r\n    //     .then((res) => {\r\n    //         tableDataLocalcoingecko = res.data;\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log('error', err);\r\n    //     });\r\n\r\n    // currencyPrices['ETH'] =\r\n    //     MarketCap.length !== 0\r\n    //         ? parseFloat(MarketCap.ETH.quote.USD.price) >\r\n    //             parseFloat(tableDataLocalcoingecko['ethereum']['usd'])\r\n    //             ? parseFloat(MarketCap.ETH.quote.USD.price)\r\n    //             : tableDataLocalcoingecko['ethereum']['usd']\r\n    //         : tableDataLocalcoingecko['ethereum']['usd'];\r\n\r\n    // currencyPrices['BNB'] =\r\n    //     MarketCap.length !== 0\r\n    //         ? parseFloat(MarketCap.BNB.quote.USD.price) >\r\n    //             parseFloat(tableDataLocalcoingecko['binancecoin']['usd'])\r\n    //             ? parseFloat(MarketCap.BNB.quote.USD.price)\r\n    //             : tableDataLocalcoingecko['binancecoin']['usd']\r\n    //         : tableDataLocalcoingecko['binancecoin']['usd'];\r\n\r\n    // currencyPrices['JNTR/e'] = 0.062166;\r\n    // currencyPrices['JNTR/b'] = 0.054237;\r\n    // currencyPrices['JNTR'] = 0.532;\r\n\r\n    // let obj = tableDataLocal.map((data) => {\r\n    //     let tableDataLocalcoingeckoSingle =\r\n    //         tableDataLocalcoingecko[data[1].name.toLocaleLowerCase()];\r\n\r\n    //     if (typeof tableDataLocalcoingeckoSingle === 'undefined') {\r\n    //         if (data[1].name.toLocaleLowerCase() === 'binance coin') {\r\n    //             tableDataLocalcoingeckoSingle = tableDataLocalcoingecko.binancecoin;\r\n    //         }\r\n    //     }\r\n\r\n    //     if (typeof tableDataLocalcoingeckoSingle !== 'undefined') {\r\n    //         return {\r\n    //             shortName: data[0],\r\n    //             fullName: data[1].name,\r\n    //             priceUsd:\r\n    //                 tableDataLocalcoingeckoSingle.usd > data[1].quote.USD.price\r\n    //                     ? tableDataLocalcoingeckoSingle.usd\r\n    //                     : data[1].quote.USD.price,\r\n    //             Volume_24:\r\n    //                 tableDataLocalcoingeckoSingle.usd_24h_vol >\r\n    //                     data[1].quote.USD.volume_24h\r\n    //                     ? tableDataLocalcoingeckoSingle.usd_24h_vol\r\n    //                     : data[1].quote.USD.volume_24h,\r\n    //             market_cap:\r\n    //                 tableDataLocalcoingeckoSingle.usd_market_cap >\r\n    //                     data[1].quote.USD.market_cap\r\n    //                     ? tableDataLocalcoingeckoSingle.usd_market_cap\r\n    //                     : data[1].quote.USD.market_cap,\r\n    //             symbol: data[1].symbol,\r\n    //             coingeckoValue: tableDataLocalcoingeckoSingle.usd,\r\n    //             coinMarketCapValue: data[1].quote.USD.price,\r\n    //             uniswapValue: Uniobj[data[0]],\r\n    //             pancakeswapValue: Panobj[data[0]],\r\n    //         };\r\n    //     } else {\r\n    //         return {\r\n    //             shortName: data[0],\r\n    //             fullName: data[1].name,\r\n    //             priceUsd: data[1].quote.USD.price,\r\n    //             Volume_24: data[1].quote.USD.volume_24h,\r\n    //             market_cap: data[1].quote.USD.market_cap,\r\n    //             symbol: data[1].symbol,\r\n    //             coingeckoValue: data[1].quote.USD.price,\r\n    //             coinMarketCapValue: data[1].quote.USD.price,\r\n    //             uniswapValue: Uniobj[data[0]],\r\n    //             pancakeswapValue: Panobj[data[0]],\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n    // obj.sort(function (a, b) {\r\n    //     return b.market_cap - a.market_cap;\r\n    // });\r\n\r\n    // console.log('obj', obj);\r\n\r\n    // this.setState((prevState) => {\r\n    //     return {\r\n    //         ...prevState,\r\n    //         currencyPrices: currencyPrices,\r\n    //         tableData: obj,\r\n    //         liveETHPrice: liveETHPrice,\r\n    //         wbnbPrice: wbnbPrice,\r\n    //         tableDataToDisplay: obj,\r\n    //     };\r\n    // });\r\n\r\n    await axios\r\n      .get(\r\n        `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctether%2Cbinancecoin%2Ccardano%2Cpolkadot%2Cuniswap%2Cripple%2Cmatic-network&vs_currencies=USD&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true`\r\n      )\r\n      .then((res) => {\r\n        tableDataLocalcoingecko = res.data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    currencyPrices[\"ETH\"] = tableDataLocalcoingecko[\"ethereum\"][\"usd\"];\r\n\r\n    currencyPrices[\"BNB\"] = tableDataLocalcoingecko[\"binancecoin\"][\"usd\"];\r\n\r\n    currencyPrices[\"MATIC\"] = tableDataLocalcoingecko[\"matic-network\"][\"usd\"];\r\n\r\n    currencyPrices[\"JNTR/e\"] = 0.062166;\r\n    currencyPrices[\"JNTR/b\"] = 0.054237;\r\n    currencyPrices[\"JNTR\"] = 0.532;\r\n\r\n    this.setState(\r\n      {\r\n        currencyPrices: currencyPrices,\r\n      },\r\n      async () => {\r\n        this.forceUpdate();\r\n        if (this.state.sendFundAmount > 0)\r\n          await this.setAmount(this.state.sendFundAmount)\r\n      }\r\n    );\r\n  }\r\n  changeCurrency(check) {\r\n    // if(check && this.state.web3 === null){\r\n    let { selectedSendCurrency, selectedReceiveCurrency, selectedOptionSend, selectedOptionReceive, selectedNetworkOptionSend, selectedNetworkOptionReceive } = this.state;\r\n\r\n    this.setState(\r\n      {\r\n        selectedSendCurrency: selectedReceiveCurrency,\r\n        selectedReceiveCurrency: selectedSendCurrency,\r\n        selectedOptionSend: selectedOptionReceive,\r\n        selectedOptionReceive: selectedOptionSend,\r\n        selectedNetworkOptionSend: selectedNetworkOptionReceive,\r\n        selectedNetworkOptionReceive: selectedNetworkOptionSend,\r\n        selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(selectedReceiveCurrency, selectedSendCurrency),\r\n        sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOptionSend.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n        recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOptionReceive.value && selectedOptionSend.value !== value.value;\r\n        }),\r\n        sendNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOptionSend.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n        recieveNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOptionReceive.value && selectedOptionSend.value !== value.value;\r\n        }),\r\n        sendFundAmount: \"\",\r\n        estimatedGasFee: \"0\"\r\n      },\r\n      async () => {\r\n        this.forceUpdate();\r\n      }\r\n    );\r\n    // } else if(this.state.web3 !== null && check) {\r\n    //     notificationConfig.warning(\"Please change metamask network!\")\r\n    // }\r\n  }\r\n\r\n  handleChange = (name, selectedOption) => {\r\n    const { selectedOptionSend, selectedOptionReceive, selectedNetworkOptionSend, selectedNetworkOptionReceive } = this.state;\r\n    if (name === \"send\") {\r\n      this.setState({\r\n        selectedSendCurrency: selectedOption.value,\r\n        selectedOptionSend: selectedOption,\r\n        selectedNetworkOptionSend: getTokenByNetwork(selectedOption.networkName),\r\n        selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(selectedOption.value, selectedOptionReceive.value),\r\n        sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n        recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n        sendNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n        recieveNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n      })\r\n    } else if (name === \"receive\") {\r\n      this.setState({\r\n        selectedReceiveCurrency: selectedOption.value,\r\n        selectedOptionReceive: selectedOption,\r\n        selectedNetworkOptionReceive: getTokenByNetwork(selectedOption.networkName),\r\n        selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(selectedOptionSend.value, selectedOption.value),\r\n        sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionSend.value !== value.value;\r\n        }),\r\n        recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return (value.value !== selectedOption.value && selectedOptionSend.value !== value.value);\r\n        }),\r\n        sendNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionSend.value !== value.value;\r\n        }),\r\n        recieveNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return (value.value !== selectedOption.value && selectedOptionSend.value !== value.value);\r\n        }),\r\n      })\r\n    } else if (name === \"sendNetwork\") {\r\n      this.setState({\r\n        selectedNetworkOptionSend: selectedOption,\r\n        selectedSendCurrency: getTokenByName(selectedOption.value).value,\r\n        selectedOptionSend: getTokenByName(selectedOption.value),\r\n        selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(selectedOption.value, selectedOptionReceive.value),\r\n        sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n        recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n        sendNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n        recieveNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionReceive.value !== value.value;\r\n        }),\r\n      })\r\n    } else if (name === \"receiveNetwork\") {\r\n      this.setState({\r\n        selectedNetworkOptionReceive: selectedOption,\r\n        selectedReceiveCurrency: getTokenByName(selectedOption.value).value,\r\n        selectedOptionReceive: getTokenByName(selectedOption.value),\r\n        selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(selectedOptionSend.value, selectedOption.value),\r\n        sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionSend.value !== value.value;\r\n        }),\r\n        recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n          return (value.value !== selectedOption.value && selectedOptionSend.value !== value.value);\r\n        }),\r\n        sendNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return value.value !== selectedOption.value && selectedOptionSend.value !== value.value;\r\n        }),\r\n        recieveNetworkList: getNetworkList().filter(function (value, index, arr) {\r\n          return (value.value !== selectedOption.value && selectedOptionSend.value !== value.value);\r\n        }),\r\n      })\r\n    }\r\n  };\r\n\r\n  setSendCurrency(currency) {\r\n    this.setState({ selectedSendCurrency: currency }, () => {\r\n      this.closePopup(\"sendCurPop\");\r\n    });\r\n  }\r\n  setReceiveCurrency(currency) {\r\n    this.setState({ selectedReceiveCurrency: currency }, () => {\r\n      this.closePopup(\"receiveCurPop\");\r\n    });\r\n  }\r\n  openPopup(id) {\r\n    $(\"#\" + id).fadeIn();\r\n  }\r\n  closePopup(id) {\r\n    $(\"#\" + id).fadeOut();\r\n  }\r\n  changeWrapBox(which) {\r\n    this.setState({\r\n      wrapBox: which,\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      showLedger: false,\r\n      allowCurrentTxExpedite: 0\r\n    });\r\n  }\r\n  async listenTransferEvent() {\r\n    const { instanceSwapFactoryEthereum, instanceSwapFactoryBinance } =\r\n      this.state;\r\n    if (instanceSwapFactoryEthereum !== null) {\r\n      instanceSwapFactoryEthereum.events\r\n        .ClaimApprove(\r\n          {\r\n            fromBlock: \"latest\",\r\n          },\r\n          function (error, event) {\r\n            console.log(event);\r\n          }\r\n        )\r\n        .on(\"connected\", function (subscriptionId) {\r\n          console.log(subscriptionId);\r\n        })\r\n        .on(\r\n          \"data\",\r\n          function (event) {\r\n            console.log(event); // same results as the optional callback above\r\n            if (\r\n              event.returnValues.user.toLocaleLowerCase() ===\r\n              web3Config.getAddress().toLocaleLowerCase()\r\n            ) {\r\n              let txLinkReturn =\r\n                constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].explorer +\r\n                \"/tx/\" +\r\n                event.transactionHash;\r\n              let returnAmount = web3Js.utils.fromWei(\r\n                event.returnValues.amountA.toLocaleLowerCase()\r\n              );\r\n              this.updateLedgerAfterResponse(\r\n                event.transactionHash,\r\n                txLinkReturn,\r\n                returnAmount\r\n              );\r\n            }\r\n          }.bind(this)\r\n        )\r\n        .on(\"changed\", function (event) {\r\n          console.log(event);\r\n          // remove event from local database\r\n        })\r\n        .on(\"error\", function (error, receipt) {\r\n          // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\r\n          console.log(error, receipt);\r\n        });\r\n    }\r\n    if (instanceSwapFactoryBinance !== null) {\r\n      let { web3Binance } = this.state;\r\n      let initialBlock = await web3Binance.eth.getBlockNumber();\r\n      setInterval(async () => {\r\n        const currentBlock = await web3Binance.eth.getBlockNumber();\r\n        instanceSwapFactoryBinance\r\n          .getPastEvents(\"allEvents\", {\r\n            fromBlock: initialBlock,\r\n            toBlock: currentBlock, // You can also specify 'latest'\r\n          })\r\n          .then(\r\n            async function (result) {\r\n              for (let i = 0; i < result.length; i++) {\r\n                console.log(result[i].event);\r\n                if (result[i].event === \"ClaimApprove\") {\r\n                  console.log(result[i]);\r\n                  if (\r\n                    result[i].returnValues.user.toLocaleLowerCase() ===\r\n                    web3Config.getAddress().toLocaleLowerCase()\r\n                  ) {\r\n                    let txLinkReturn =\r\n                      constantConfig[CONSTANT.NETWORK_ID.BINANCE].explorer +\r\n                      \"/tx/\" +\r\n                      result[i].transactionHash;\r\n                    let returnAmount = web3Js.utils\r\n                      .fromWei(result[i].returnValues.amountA)\r\n                      .toLocaleLowerCase();\r\n                    this.updateLedgerAfterResponse(\r\n                      result[i].transactionHash,\r\n                      txLinkReturn,\r\n                      returnAmount\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n            }.bind(this)\r\n          )\r\n          .catch((err) => console.error(err));\r\n        initialBlock = currentBlock;\r\n      }, 10000);\r\n    }\r\n  }\r\n  updateLedgerAfterResponse(hash, txLinkReturn, returnAmount) {\r\n    this.setState(\r\n      {\r\n        isSendingOrder: false,\r\n        txSentStatus: \"Success\",\r\n        // txSentTime: new Date().toUTCString(),\r\n        tokenReceive: \"2\",\r\n        // txReceiveTime: new Date().toUTCString(),\r\n        txIdReceive: hash,\r\n        whichButton: \"4\",\r\n        txLinkReturn: txLinkReturn,\r\n        receiveFundAmount: returnAmount,\r\n      },\r\n      async () => {\r\n        //   await this.enableInputs();\r\n      }\r\n    );\r\n  }\r\n  scrollToLedger() {\r\n    $(\"html\").animate({ scrollTop: 650 });\r\n  }\r\n\r\n  async fetchedUserTransaction(address) {\r\n    // var userTxs = StableCoinStore.getFetchedUserTxs();\r\n    this.setState({ loadingHistory: true })\r\n    let url = process.env.REACT_APP_LEDGER_HOST + 'ledgers/' + (address).toLocaleLowerCase();\r\n    console.log(process.env.REACT_APP_LEDGER_HOST)\r\n\r\n    let json;\r\n    await axios\r\n      .get(url)\r\n      .then((res) => {\r\n        console.log(res)\r\n        json = res.data;\r\n      })\r\n      .catch((err) => {\r\n        console.log('error', err);\r\n      });\r\n    // const response = await fetch(url);\r\n    // const json = await response.json();\r\n\r\n    var userTxs = (json.data).reverse();\r\n    var userTxsUI = [];\r\n    var userPendingTxsUI = [];\r\n\r\n    if (userTxs.length > 0) {\r\n      userTxs.map(async (element, key) => {\r\n        let sentTxTime = \"\";\r\n        let recivedTxTime = \"\";\r\n\r\n        sentTxTime = new Date(Number(element.srTime + \"000\")).toUTCString()\r\n        recivedTxTime = new Date(Number(element.approveTime + \"000\")).toUTCString()\r\n\r\n        element[\"sentCurrency\"] =\r\n          constantConfig.addressByToken[element.tokenA].symbol;\r\n        element[\"recivedCurrency\"] =\r\n          constantConfig.addressByToken[element.tokenB].symbol;\r\n\r\n        element[\"sentTxLink\"] =\r\n          constantConfig[Number(element.chainId)].explorer +\r\n          \"/tx/\" +\r\n          element.txHash;\r\n\r\n        if (element.relationship.claim.approveHash !== undefined && element.relationship.claim.approveHash !== null) {\r\n          element[\"recivedTxLink\"] =\r\n            constantConfig[Number(element.crossChainId)].explorer +\r\n            \"/tx/\" +\r\n            element.relationship.claim.approveHash;\r\n          element[\"oracleTx\"] = element.relationship.claim.approveHash;\r\n        }\r\n\r\n\r\n\r\n        // element[\"recivedAmount\"] = web3Js.utils.fromWei(element.estimatedForeignAmount);\r\n        // element.counterParties.map(async (elementCounterParties, key) => {\r\n        //   let rcAmount = web3Js.utils.fromWei(elementCounterParties.crossAmountA) * (elementCounterParties.tokenAPrice / elementCounterParties.tokenBPrice)\r\n        //   element[\"recivedAmount\"] = Number(element[\"recivedAmount\"]) + Number(rcAmount);\r\n        // })\r\n\r\n        if (element.status === \"FULFILLED\" && element.relationship.claim.approveHash !== null) {\r\n          userTxsUI.push(\r\n            // <LedgerHistory />\r\n            <LedgerHistory\r\n              processAmount={web3Js.utils.fromWei(element.processAmount)}\r\n              claimedAmount={web3Js.utils.fromWei(element.claimedAmount)}\r\n              sentCurrency={element.sentCurrency}\r\n              sentAPrice={element.sentAPrice}\r\n              txHash={element.txHash}\r\n              sentTxLink={element.sentTxLink}\r\n              tokenBPrices={element.tokenBPrices.prices[0]}\r\n              estimatedForeignAmount={web3Js.utils.fromWei(element.estimatedForeignAmount)}\r\n              recivedCurrency={element.recivedCurrency}\r\n              oracleTx={element.oracleTx}\r\n              recivedTxLink={element.recivedTxLink}\r\n              sentTxTime={sentTxTime}\r\n              recivedTxTime={recivedTxTime.toString()}\r\n              tokenAPrices={element.tokenAPrices.prices[0]}\r\n              chainId={element.chainId}\r\n              expedite={this.expedite}\r\n              isExpedited={element.isExpedited}\r\n              crossChainId={element.crossChainId}\r\n            />\r\n          );\r\n        } else {\r\n          userPendingTxsUI.push(\r\n            // <LedgerHistory />\r\n            <LedgerHistory\r\n              processAmount={web3Js.utils.fromWei(element.processAmount)}\r\n              claimedAmount={web3Js.utils.fromWei(element.claimedAmount)}\r\n              sentCurrency={element.sentCurrency}\r\n              sentAPrice={element.sentAPrice}\r\n              txHash={element.txHash}\r\n              sentTxLink={element.sentTxLink}\r\n              tokenBPrices={element.tokenBPrices.prices[0]}\r\n              estimatedForeignAmount={web3Js.utils.fromWei(element.estimatedForeignAmount)}\r\n              recivedCurrency={element.recivedCurrency}\r\n              oracleTx={element.oracleTx}\r\n              recivedTxLink={element.recivedTxLink}\r\n              sentTxTime={sentTxTime}\r\n              recivedTxTime={recivedTxTime.toString()}\r\n              tokenAPrices={element.tokenAPrices.prices[0]}\r\n              chainId={element.chainId}\r\n              expedite={this.expedite}\r\n              canExpedite={element.canExpedite}\r\n              isExpedited={element.isExpedited}\r\n              crossChainId={element.crossChainId}\r\n            />\r\n          );\r\n        }\r\n      });\r\n      if (userTxsUI.length <= 0) {\r\n        userTxsUI.push(\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <h2>No transaction</h2>\r\n          </div>\r\n        );\r\n      }\r\n      if (userPendingTxsUI <= 0) {\r\n        userPendingTxsUI.push(\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <h2>No transaction</h2>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      userTxsUI.push(\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h2>No transaction</h2>\r\n        </div>\r\n      );\r\n      userPendingTxsUI.push(\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h2>No transaction</h2>\r\n        </div>\r\n      );\r\n    }\r\n    this.setState(\r\n      {\r\n        allTxHistoryUI: userTxsUI,\r\n        allPendingTxHistoryUI: userPendingTxsUI,\r\n      },\r\n      async () => {\r\n        await this.forceUpdate();\r\n        await this.stopLoadingHist();\r\n      }\r\n    );\r\n  }\r\n\r\n  async stopLoadingHist() {\r\n    setTimeout(() => { this.setState({ loadingHistory: false }) }, 3000)\r\n  }\r\n\r\n  showHistory = (which, show) => {\r\n    this.setState(\r\n      {\r\n        showTxHistory: show,\r\n        showAllTx: which === \"all\" ? true : false,\r\n      },\r\n      () => {\r\n        if (show) {\r\n          $(\"html, body\").animate({ scrollTop: 620 }, \"slow\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  async expedite(currentTxExpediteData) {\r\n    const {\r\n      txHash,\r\n      processAmount,\r\n      chainId,\r\n      crossChainId\r\n    } = currentTxExpediteData;\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    console.log(networkId)\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n\r\n    if (chainId !== networkId) {\r\n      notificationConfig.warning(\"Change metamask network to \" + CONSTANT.NETWORK_ID[chainId] + \"!\");\r\n      return;\r\n    }\r\n\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n    // let allFees = await this.calculateSwapFees(processAmount);\r\n\r\n    // await swapFactory.expedite(txHash, (((Number(allFees.processingFees) * 0.10 + Number(allFees.processingFees))) * 10 ** 18).toFixed(),\r\n\r\n    let url = process.env.REACT_APP_LEDGER_HOST + \"processing-fee/\" + chainId + \"-\" + crossChainId;\r\n\r\n    let json;\r\n    await axios\r\n      .get(url)\r\n      .then((res) => {\r\n        console.log(res)\r\n        json = res.data;\r\n      })\r\n      .catch((err) => {\r\n        console.log('error', err);\r\n      });\r\n\r\n    console.log(json.result * 1.1)\r\n\r\n    await swapFactory.expedite(txHash, ((json.result * 1.1) * 10 ** 18).toFixed(),\r\n      (hash) => {\r\n        this.setState({\r\n          allowCurrentTxExpedite: 2\r\n          // swapLoading: true,\r\n          // txIdSent: hash,\r\n          // txLinkSend: data[networkId].explorer + \"/tx/\" + hash,\r\n        });\r\n      },\r\n      async (receipt) => {\r\n        this.setState({\r\n          allowCurrentTxExpedite: 3\r\n        })\r\n        // this.init()\r\n        // setTimeout(async () => {\r\n        //   await this.fetchTransactionStatus(receipt.transactionHash);\r\n        // }, 120000);\r\n\r\n        // this.setState({\r\n        //   swapLoading: false,\r\n        //   showLedger: true,\r\n        //   wrapBox: \"success\",\r\n        // });\r\n        await this.fetchedUserTransaction(web3Config.getAddress());\r\n        notificationConfig.success(\"Expedite Success\");\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const options = [\r\n      { label: 'Ethereum', value: 'Ethereum' },\r\n      { label: 'BSC', value: 'BSC' },\r\n      { label: 'Polygon', value: 'Polygon' },\r\n    ];\r\n\r\n    const optionsToken = [\r\n      { label: 'ETH', value: 'ETH' },\r\n      { label: 'BNB', value: 'BNB' },\r\n      { label: 'MATIC', value: 'MATIC' },\r\n    ];\r\n\r\n    let counter = 0;\r\n\r\n    return (\r\n      <>\r\n        {this.state.isloading ? (\r\n          <p>Loading</p>\r\n        ) : (\r\n          <main id=\"main\" className=\"smartSwap\">\r\n            <div className=\"fullscreen-bg\">\r\n              <div className=\"fsbg_sad01\"></div>\r\n              <div className=\"fsbg_container\">\r\n                <video loop autoPlay muted className=\"fullscreen-bg__video\">\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.webm?v=1.18\"} type=\"video/webm\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.mp4?v=1.18\"} type=\"video/mp4\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.ogv?v=1.18\"} type=\"video/ogg\" />\r\n                </video>\r\n              </div>\r\n            </div>\r\n            <div className=\"main\">\r\n              {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n              <RightSideMenu\r\n                web3={this.state.web3}\r\n                openPopup={this.openPopup}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n              ></RightSideMenu>\r\n              {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n              <Header\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n                isSubdomain={this.state.isSubdomain}\r\n                clearPreview={this.clearPreview}\r\n              ></Header>\r\n              {/* <!--======================= HEADER END =====================--> */}\r\n              <div className=\"backgroundBlock\" onClick={this.handleClick} >\r\n                <div\r\n                  className={\r\n                    this.state.cloneData.bgimage\r\n                      ? \"mainBlock required-bg\"\r\n                      : \"mainBlock\"\r\n                  }\r\n                  style={\r\n                    this.state.cloneData.bgimage\r\n                      ? this.state.cloneData.fontStyle &&\r\n                        this.state.cloneData.fontStyle !== \"Default\"\r\n                        ? {\r\n                          fontFamily: this.state.cloneData.fontStyle,\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                        : {\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                      : null\r\n                  }\r\n                >\r\n                  {/* <div className=\"error-Msg\">\r\n                            <label>\r\n                                For BSC testnet use this RPC\r\n                                URL:https://data-seed-prebsc-2-s3.binance.org:8545\r\n              </label>\r\n                        </div> */}\r\n                  {/* <br />\r\n                        <br /> */}\r\n                  {/* <!--======================= SWAP BLOCK START =====================--> */}\r\n                  <div className=\"swap-Block\">\r\n                    <div className=\"container-Grid\">\r\n                      <div\r\n                        className=\"smeTitle01 wow fadeInUp\" data-wow-delay=\"0.1s\"\r\n                      // onClick={() => {\r\n                      //     this.openPopup('About');\r\n                      // }}\r\n                      >\r\n                        <span>One click</span> DECENTRALIZED MULTICHAIN SMART SWAP\r\n                      </div>\r\n                      <div className=\"smvTitle02 wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        {/* Unlimited Liquidity CeFi to Defi Decentralized Bridge <span style={{ color: '#525252' }}>|</span> AMM Alternative */}\r\n                        {/* Best multichain rates available with slippage free transactions or with a DeFi aggregator */}\r\n                        Best multichain rates available from slippage or slippage free transactions with P2P and CeDeFi\r\n                      </div>\r\n                      {this.state.wrapBox === \"swap\" ? (\r\n                        <>\r\n                          <div className=\"tab-container\">\r\n                            <div className=\"tab-main-wrapper\">\r\n                              <ul className=\"tabs-n\">\r\n                                <li className=\"tab-link current-n\" data-tab=\"tab-1\">\r\n                                  <div>\r\n                                    CRYPTO\r\n                                    <span className=\"text-sm-n\">LIVE BETA</span>\r\n                                  </div>\r\n                                </li>\r\n                                <li className=\"tab-link\" data-tab=\"tab-2\" style={{ pointerEvents: 'none' }}>\r\n                                  <div>\r\n                                    W3B\r\n                                    <span className=\"text-sm-n\">COMING SOON</span>\r\n                                  </div>\r\n                                </li>\r\n                                <li className=\"tab-link\" data-tab=\"tab-3\" style={{ pointerEvents: 'none' }}>\r\n                                  <div>\r\n                                    FOREX\r\n                                    <span className=\"text-sm-n\">COMING SOON</span>\r\n                                  </div>\r\n                                </li>\r\n                                <li className=\"tab-link\" data-tab=\"tab-4\" style={{ pointerEvents: 'none' }}>\r\n                                  <div>\r\n                                    STOCKS\r\n                                    <span className=\"text-sm-n\">COMING SOON</span>\r\n                                  </div>\r\n                                </li>\r\n                              </ul>\r\n\r\n                              {/* swap completed successfully box */}\r\n                              {/* <div className=\"cs-box\">\r\n                                <div>\r\n                                  <img src=\"images/big-check.png\" alt=\"\" />\r\n                                  <p className=\"b-text\">100% OF THE SWAP COMPLETED SUCCESSFULLY</p>\r\n                                  <a href=\"#\">Check the ledger below</a>\r\n                                </div>\r\n                              </div> */}\r\n\r\n                              {/* max priority fee box design */}\r\n\r\n                              {/* <div className=\"mx-box\">\r\n                                <div className=\"mx-close\">\r\n                                  <img src=\"images/grey-close.png\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"label-line\">\r\n                                  <p>\r\n                                    <b>MAX PRIORITY FEE <i className=\"help-circle\">\r\n                                    <i\r\n                                      className=\"fas fa-question-circle protip\"\r\n                                      data-pt-position=\"top\"\r\n                                      data-pt-title=\"Help Text\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                    </i>\r\n                                    </b>\r\n                                  </p>\r\n                                  <p> Estimated high: 5 Gwei </p>\r\n                                </div>\r\n                                <div className=\"input-outer\">\r\n                                  <input type=\"text\" placeholder=\"5.00\" />\r\n                                  <button>Gwei</button>\r\n                                </div>\r\n                                <div className=\"label-line\">\r\n                                  <p>\r\n                                    <b>MAX FEE <i className=\"help-circle\">\r\n                                    <i\r\n                                      className=\"fas fa-question-circle protip\"\r\n                                      data-pt-position=\"top\"\r\n                                      data-pt-title=\"Help Text\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                    </i>\r\n                                    </b>\r\n                                  </p>\r\n                                  <p> Estimated high: 42 Gwei </p>\r\n                                </div>\r\n                                <div className=\"input-outer\">\r\n                                  <input type=\"text\" placeholder=\"5.00\" />\r\n                                  <button>Gwei</button>\r\n                                </div>\r\n                                <div className=\"label-line\">\r\n                                  <p><b>Wait time</b></p>\r\n                                  <p>~12 sec</p>\r\n                                </div>\r\n                                <div className=\"label-line\">\r\n                                  <p><b>Fee range</b></p>\r\n                                  <p>41.12–74.07 Gwei</p>\r\n                                </div>\r\n                              </div> */}\r\n                              <div className=\"tab-content-n-main\">\r\n                                <div id=\"tab-1\" className=\"tab-content-n current-n\">\r\n                                  <div className=\"\">\r\n                                    <div className=\"form-group-n  items-center-n\">\r\n                                      <div className=\"d-flex balance-row\">\r\n                                        <div className=\"b-text\">\r\n                                          Balance: {Number(this.state.userBalance).toFixed(4)} &nbsp;<span>MAX</span>\r\n                                        </div>\r\n                                        {/* <img src=\"images/slider-icon.png\" alt=\"\" /> */}\r\n                                      </div>\r\n                                      <div className=\"flex-1 w-100-sm flex-auto-sm\">\r\n                                        <div className=\"inputs-wrap light-controls-n\">\r\n\r\n                                          <div className=\"inputs-wrap-control\">\r\n                                            <div className=\"input-box1\">\r\n                                              <label htmlFor=\"\" className=\"form-label\">from</label>\r\n                                              <div className=\"i-outer\">\r\n                                                <input\r\n                                                  type=\"text\"\r\n                                                  className=\"form-control-n\"\r\n                                                  placeholder=\"0\"\r\n                                                  id=\"input04\"\r\n                                                  value={this.state.sendFundAmount}\r\n                                                  onKeyDown={(e) => Validation.floatOnly(e)}\r\n                                                  onChange={this.recivedToken.bind(this)}\r\n                                                  autoComplete=\"off\"\r\n                                                />\r\n                                                <span className=\"currency-ic-n\">\r\n                                                  $\r\n                                                </span>\r\n                                              </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"input-box2\">\r\n                                              <label htmlFor=\"\" className=\"form-label\">BLOCKCHAIN</label>\r\n                                              {/* <button className=\"ani-1\"><img src=\"images/bnb.png\" alt=\"\" /> BSC</button> */}\r\n                                              <Select\r\n                                                value={this.state.selectedNetworkOptionSend}\r\n                                                onChange={this.handleChange.bind(this, \"sendNetwork\")}\r\n                                                options={this.state.sendNetworkList}\r\n                                                styles={{\r\n                                                  control: (styles) => ({ ...styles, backgroundColor: '#EDECEF', height: '50px', borderRadius: '0', fontWeight: \"bold\", border: \"2px solid #ffffff\", borderRight: \"0px\", fontSize: \"16px\" }),\r\n                                                  singleValue: (provided, state) => ({\r\n                                                    ...provided,\r\n                                                    color: \"black\",\r\n                                                    // fontSize: state.selectProps.myFontSize\r\n                                                  }),\r\n                                                  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n                                                    // const color = chroma(data.color);\r\n                                                    console.log({ data, isDisabled, isFocused, isSelected });\r\n                                                    return {\r\n                                                      ...styles,\r\n                                                      backgroundColor: isFocused ? \"#999999\" : null,\r\n                                                      color: \"black\",\r\n                                                      fontWeight: \"bold\"\r\n                                                    };\r\n                                                  },\r\n                                                  indicatorSeparator: (styles) => ({ display: 'none' })\r\n                                                }}\r\n                                              />\r\n                                            </div>\r\n                                            {/* <div className='custom-dropdown'>\r\n                                              <button onClick={() => { setIsOpen(state => !state); onToggleClick(); }} className={showActive ? 'active' : ''}>BNB <i className=\"fa fa-caret-down\"></i></button>\r\n                                              <Collapse onInit={onInit} isOpen={isOpen}>\r\n                                                <div className='nn-list'>\r\n                                                  <p>ETH</p>\r\n                                                </div>\r\n                                              </Collapse>\r\n                                            </div> */}\r\n                                            <div className=\"input-box2\">\r\n                                              <label htmlFor=\"\" className=\"form-label\">TOKEN</label>\r\n                                              {/* <button className=\"border-left-0 ani-1\"><img src=\"images/bnb.png\" alt=\"\" /> BNB</button> */}\r\n\r\n                                              <Select\r\n                                                value={this.state.selectedOptionSend}\r\n                                                onChange={this.handleChange.bind(this, \"send\")}\r\n                                                options={this.state.sendCurrencyList}\r\n                                                styles={{\r\n                                                  control: (styles) => ({ ...styles, backgroundColor: '#EDECEF', height: '50px', borderRadius: '0', fontWeight: \"bold\", border: \"2px solid #ffffff\", fontSize: \"16px\" }),\r\n                                                  singleValue: (provided, state) => ({\r\n                                                    ...provided,\r\n                                                    color: \"black\",\r\n                                                    // fontSize: state.selectProps.myFontSize\r\n                                                  }),\r\n                                                  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n                                                    // const color = chroma(data.color);\r\n                                                    console.log({ data, isDisabled, isFocused, isSelected });\r\n                                                    return {\r\n                                                      ...styles,\r\n                                                      backgroundColor: isFocused ? \"#999999\" : null,\r\n                                                      color: \"black\",\r\n                                                      fontWeight: \"bold\"\r\n                                                    };\r\n                                                  },\r\n                                                  indicatorSeparator: (styles) => ({ display: 'none' })\r\n                                                }}\r\n                                              />\r\n                                            </div>\r\n                                            {/* <div className=\"relative select-item-wrap curICPL\"> */}\r\n                                            {/* <img src={\r\n                                                \"images/currencies/\" +\r\n                                                data.tokenDetails[\r\n                                                  this.state.selectedSendCurrency\r\n                                                ].iconName +\r\n                                                \".png\"\r\n                                              } />{this.state.selectedSendCurrency} */}\r\n                                            {/* <Select\r\n                                                value={this.state.selectedOptionSend}\r\n                                                onChange={this.handleChange.bind(this, \"send\")}\r\n                                                options={this.state.sendCurrencyList}\r\n                                              /> */}\r\n                                            {/* <select> */}\r\n                                            {/* <option\r\n                                                  value={this.state.selectedSendCurrency}\r\n                                                  data-icon={\r\n                                                    \"images/currencies/\" +\r\n                                                    this.state.selectedSendCurrency +\r\n                                                    \".png\"\r\n                                                  }\r\n                                                > {this.state.selectedSendCurrency}</option>\r\n                                                {\r\n\r\n                                                  getTokenList().map((ele) => {\r\n                                                    if (ele.symbol !== this.state.selectedSendCurrency && ele.symbol !== this.state.selectedReceiveCurrency) {\r\n                                                      return <option\r\n                                                        value={ele.symbol}\r\n                                                        data-icon={\r\n                                                          \"images/currencies/\" +\r\n                                                          ele.iconName +\r\n                                                          \".png\"\r\n                                                        }\r\n                                                      > {ele.symbol}</option>\r\n                                                    }\r\n                                                  })\r\n                                                } */}\r\n                                            {/* <option value=\"btc\" data-icon=\"images/bnb.png\"> BNB</option>\r\n                                                <option value=\"eth\" data-icon=\"images/eth.png\"> ETH</option>\r\n                                                <option\r\n                                                  value={this.state.selectedSendCurrency}\r\n                                                  data-icon={\r\n                                                    \"images/currencies/\" +\r\n                                                    data.tokenDetails[\r\n                                                      this.state.selectedSendCurrency\r\n                                                    ].iconName +\r\n                                                    \".png\"\r\n                                                  }\r\n                                                > {this.state.selectedSendCurrency}</option> */}\r\n                                            {/* </select> */}\r\n                                            {/* </div> */}\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex jc-sb\">\r\n                                          <p className=\"form-label font-normal mb-0\">≈ {this.state.actualSendFundAmount.toFixed(5)} | 1 {this.state.selectedSendCurrency} : ${this.state.currencyPrices[this.state.selectedSendCurrency]}</p>\r\n                                          {/* <p className=\"form-label font-normal mb-0\">~ $39,075</p> */}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"form-ic\">\r\n                                        <a className=\"grey-arrow\"\r\n                                          href=\"javascript:void(0);\"\r\n                                          onClick={() => {\r\n                                            this.changeCurrency(true);\r\n                                          }}\r\n                                        >\r\n                                          <img src=\"images/green-arrow.png\" alt=\"\" />\r\n                                        </a>\r\n                                        <a className=\"green-arrow\"\r\n                                          href=\"javascript:void(0);\"\r\n                                          onClick={() => {\r\n                                            this.changeCurrency(true);\r\n                                          }}\r\n                                        >\r\n                                          <img src=\"images/green-arrow.png\" alt=\"\" />\r\n                                        </a>\r\n                                      </div>\r\n                                      <div className=\"flex-1 w-100-sm flex-auto-sm\">\r\n                                        <div className=\"inputs-wrap dark-controls-n\">\r\n                                          <div className=\"inputs-wrap-control\">\r\n                                            <div className=\"input-box1 ver2\">\r\n                                              <label htmlFor=\"\" className=\"form-label\">to</label>\r\n                                              <div className=\"i-outer\">\r\n                                                <input\r\n                                                  type=\"text\"\r\n                                                  className=\"form-control-n\"\r\n                                                  placeholder=\"0\"\r\n                                                  readOnly=\"\"\r\n                                                  disabled\r\n                                                  value={this.state.sendFundAmount}\r\n                                                />\r\n                                                <span className=\"currency-ic-n ver2\">\r\n                                                  $\r\n                                                </span>\r\n                                              </div>\r\n                                            </div>\r\n                                            <div className=\"input-box2 ver2\">\r\n                                              <label htmlFor=\"\" className=\"form-label\">BLOCKCHAIN</label>\r\n                                              {/* <button className=\"ani-1\"><img src=\"images/eth-icon.png\" alt=\"\" /> Ethereum</button> */}\r\n                                              <Select\r\n                                                value={this.state.selectedNetworkOptionReceive}\r\n                                                onChange={this.handleChange.bind(this, \"receiveNetwork\")}\r\n                                                options={this.state.recieveNetworkList}\r\n                                                styles={{\r\n                                                  control: (styles) => ({ ...styles, backgroundColor: '#20232A', color: 'white', height: '50px', borderRadius: '0', fontWeight: \"bold\", border: \"2px solid #0D0E13\", borderRight: \"0px\", fontSize: \"16px\" }),\r\n                                                  singleValue: (provided, state) => ({\r\n                                                    ...provided,\r\n                                                    color: \"white\",\r\n                                                    // fontSize: state.selectProps.myFontSize\r\n                                                  }),\r\n                                                  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n                                                    // const color = chroma(data.color);\r\n                                                    console.log({ data, isDisabled, isFocused, isSelected });\r\n                                                    return {\r\n                                                      ...styles,\r\n                                                      backgroundColor: isFocused ? \"#999999\" : null,\r\n                                                      color: \"black\",\r\n                                                      fontWeight: \"bold\"\r\n                                                    };\r\n                                                  },\r\n                                                  indicatorSeparator: (styles) => ({ display: 'none' })\r\n                                                }}\r\n                                              />\r\n\r\n                                            </div>\r\n                                            <div className=\"input-box2 ver2\">\r\n                                              <label htmlFor=\"\" className=\"form-label\">TOKEN</label>\r\n                                              {/* <button className=\"border-left-0 ani-1\"><img src=\"images/eth-icon.png\" alt=\"\" /> ETH</button> */}\r\n                                              <Select\r\n                                                value={this.state.selectedOptionReceive}\r\n                                                onChange={this.handleChange.bind(this, \"receive\")}\r\n                                                options={this.state.recieveCurrencyList}\r\n                                                styles={{\r\n                                                  control: (styles) => ({ ...styles, backgroundColor: '#20232A', color: \"white\", height: '50px', borderRadius: '0', fontWeight: \"bold\", border: \"2px solid #0D0E13\", fontSize: \"16px\" }),\r\n                                                  singleValue: (provided, state) => ({\r\n                                                    ...provided,\r\n                                                    color: \"white\",\r\n                                                    // fontSize: state.selectProps.myFontSize\r\n                                                  }),\r\n                                                  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n                                                    // const color = chroma(data.color);\r\n                                                    console.log({ data, isDisabled, isFocused, isSelected });\r\n                                                    return {\r\n                                                      ...styles,\r\n                                                      backgroundColor: isFocused ? \"#999999\" : null,\r\n                                                      color: \"black\",\r\n                                                      fontWeight: \"bold\",\r\n                                                      borderRadius: \"0\"\r\n                                                    };\r\n                                                  },\r\n                                                  indicatorSeparator: (styles) => ({ display: 'none' }),\r\n                                                }}\r\n                                              />\r\n                                            </div>\r\n                                            {/* <div className=\"relative select-item-wrap curICPL02\"> */}\r\n                                            {/* <Select\r\n                                                value={this.state.selectedOptionReceive}\r\n                                                onChange={this.handleChange.bind(this, \"receive\")}\r\n                                                options={this.state.recieveCurrencyList}\r\n                                              /> */}\r\n                                            {/* <select>\r\n                                                <option\r\n                                                  value={this.state.selectedReceiveCurrency}\r\n                                                  data-icon={\r\n                                                    \"images/currencies/\" +\r\n                                                    this.state.selectedReceiveCurrency +\r\n                                                    \".png\"\r\n                                                  }\r\n                                                > {this.state.selectedReceiveCurrency}</option>\r\n                                                {\r\n                                                  getTokenList().map((ele) => {\r\n                                                    if (ele.symbol !== this.state.selectedSendCurrency && ele.symbol !== this.state.selectedReceiveCurrency) {\r\n                                                      return <option\r\n                                                        value={ele.symbol}\r\n                                                        data-icon={\r\n                                                          \"images/currencies/\" +\r\n                                                          ele.iconName +\r\n                                                          \".png\"\r\n                                                        }\r\n                                                      > {ele.symbol}</option>\r\n                                                    }\r\n                                                  })\r\n                                                }\r\n                                              </select> */}\r\n                                            {/* </div> */}\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex jc-sb\">\r\n                                          <p className=\"form-label font-normal mb-0\">≈ {this.state.approxReceiveFundAmount.toFixed(5)} | 1 {this.state.selectedReceiveCurrency} : ${this.state.currencyPrices[this.state.selectedReceiveCurrency]}</p>\r\n                                          {/* <p className=\"form-label font-normal mb-0\">~ $39,075</p> */}\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                      {this.state.web3 === null ||\r\n                                        constantConfig.tokenDetails[\r\n                                          this.state.selectedSendCurrency\r\n                                        ].networkId !== web3Config.getNetworkId() ? (\r\n                                        <button className=\"btn-primary-n ani-1 connect\" style={{ background: \"#0d0e13\" }} onClick={this.connectWallet.bind(this)}><span>\r\n                                          <i\r\n                                            className={\r\n                                              data.tokenDetails[\r\n                                                this.state.selectedSendCurrency\r\n                                              ].networkId ===\r\n                                                CONSTANT.NETWORK_ID.ETHEREUM\r\n                                                ? \"ETH\"\r\n                                                : \"BNB\"\r\n                                            }\r\n                                          ></i>\r\n                                        </span>\r\n                                          <img src={\"images/receiveCurrencies/\" + this.state.selectedSendCurrency + \".png\"} alt=\"\" /> CONNECT YOUR WALLET</button>\r\n\r\n                                      ) : constantConfig.tokenDetails[\r\n                                        this.state.selectedSendCurrency\r\n                                      ].approveRequire &&\r\n                                        this.state.tokenBalances[\r\n                                        this.state.selectedSendCurrency + \"_APPROVED\"\r\n                                        ] <= this.state.actualSendFundAmount ? (\r\n                                        this.state.approveLoading ? (\r\n                                          <button className=\"btn-primary-n ani-1 connect swap\"><LoopCircleLoading\r\n                                            height={\"20px\"}\r\n                                            width={\"20px\"}\r\n                                            color={\"#ffffff\"}\r\n                                          /></button>\r\n                                        ) : (\r\n                                          <button className=\"btn-primary-n ani-1 connect swap\" onClick={() => {\r\n                                            this.approve();\r\n                                          }}>Approve</button>\r\n                                        )\r\n                                      ) : this.state.swapLoading ? (\r\n                                        <button className=\"btn-primary-n ani-1 connect swap\"><LoopCircleLoading\r\n                                          height={\"20px\"}\r\n                                          width={\"20px\"}\r\n                                          color={\"#ffffff\"}\r\n                                        /></button>\r\n                                      ) : (\r\n                                        <button className=\"btn-primary-n ani-1 connect swap swapBtn\" onClick={() => {\r\n                                          this.swap();\r\n                                        }}>SWAP</button>\r\n                                      )}\r\n                                      <div className=\"swap-outer\">\r\n                                        {this.state.sendFundAmount > 0 && this.state.sendFundAmount !== \"\" ?\r\n                                          <p className=\"font-11 color-light-n\">You are swapping ${this.state.sendFundAmount} of {this.state.selectedSendCurrency} to ${this.state.sendFundAmount} of {this.state.selectedReceiveCurrency}\r\n                                            <> |  Estimated swap time: <span className=\"color-red\">1-15 minutes</span> <i className=\"help-circle\"><i className=\"fas cust-fas fa-question-circle protip\" data-pt-gravity=\"top\" data-pt-title=\"Help Text\"></i></i></></p>\r\n                                          : null}\r\n                                        {/* New Updated Design */}\r\n                                        {/* <p className=\"font-11 color-light-n\">You are swapping <span className=\"color-white\">$100</span> of BNB to <span className=\"color-white\">$100</span> of ETH  |  Estimated swap time: <span className=\"color-red\">1-15 minutes</span> <i className=\"help-circle\"><i className=\"fas cust-fas fa-question-circle protip\" data-pt-gravity=\"top\" data-pt-title=\"Help Text\"></i></i></p> */}\r\n                                        {/* <p className=\"font-11 color-light-n\">Estimated swap time: <span className=\"color-green\">Instant</span></p> */}\r\n                                        {/* <p className=\"font-11 color-light-n\">26.31% still pending <i className=\"help-circle\"><i className=\"fas cust-fas fa-question-circle protip\" data-pt-gravity=\"top\" data-pt-title=\"Help Text\"></i></i> | &nbsp;&nbsp;<a href=\"#\" className=\"color-light-n\">Start new swap</a></p> */}\r\n                                      </div>\r\n\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div id=\"tab-2\" className=\"tab-content-n\">\r\n                                  <div className=\"\">\r\n                                    <div className=\"form-group-n d-flex items-center-n\">\r\n                                      <div className=\"flex-1 w-100-sm flex-auto-sm\">\r\n                                        <label htmlFor=\"\" className=\"form-label\">from</label>\r\n                                        <div className=\"inputs-wrap light-controls-n\">\r\n                                          <span className=\"currency-ic-n\">\r\n                                            $\r\n                                          </span>\r\n                                          <div className=\"inputs-wrap-control\">\r\n                                            <input type=\"text\" className=\"form-control-n\" placeholder=\"Enter amount\" />\r\n                                            <div className=\"relative select-item-wrap\">\r\n                                              <select className=\"select-item\" id=\"bnb2\" name=\"currency\">\r\n                                                <option value=\"btc\" data-icon=\"images/bnb.png\"> BNB</option>\r\n                                                <option value=\"eth\" data-icon=\"images/eth.png\"> ETH</option>\r\n                                              </select>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <p className=\"form-label font-normal pl-50\">≈ 0.0123 | 1 BNB : $257.63</p>\r\n                                      </div>\r\n                                      <div className=\"form-ic\">\r\n                                        <a href=\"\"><img src=\"images/form-middle-ic.png\" alt=\"\" /></a>\r\n                                      </div>\r\n                                      <div className=\"flex-1 w-100-sm flex-auto-sm\">\r\n                                        <label htmlFor=\"\" className=\"form-label\">to</label>\r\n                                        <div className=\"inputs-wrap dark-controls-n\">\r\n                                          <span className=\"currency-ic-n\">\r\n                                            $\r\n                                          </span>\r\n                                          <div className=\"inputs-wrap-control\">\r\n                                            <input type=\"text\" className=\"form-control-n\" placeholder=\"Enter amount\" />\r\n                                            <div className=\"relative select-item-wrap\">\r\n                                              <select className=\"select-item\" id=\"eth2\" name=\"demo\">\r\n                                                <option value=\"btc\" data-icon=\"images/bnb.png\"> BNB</option>\r\n                                                <option value=\"eth\" data-icon=\"images/eth.png\"> ETH</option>\r\n                                              </select>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <p className=\"form-label font-normal pl-50\">≈ 3.2025 | 1 ETH : $2,070.12</p>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                      <button className=\"btn-primary-n\">SWAP</button>\r\n                                      <p className=\"font-11 color-light-n mb-0-n\">You are swapping $100 of BNB to $100 of ETH</p>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div id=\"tab-3\" className=\"tab-content-n\">\r\n                                  <div className=\"\">\r\n                                    <div className=\"form-group-n d-flex items-center-n\">\r\n                                      <div className=\"flex-1 w-100-sm flex-auto-sm\">\r\n                                        <label htmlFor=\"\" className=\"form-label\">from</label>\r\n                                        <div className=\"inputs-wrap light-controls-n\">\r\n                                          <span className=\"currency-ic-n\">\r\n                                            $\r\n                                          </span>\r\n                                          <div className=\"inputs-wrap-control\">\r\n                                            <input type=\"text\" className=\"form-control-n\" placeholder=\"Enter amount\" />\r\n                                            <div className=\"relative select-item-wrap\">\r\n                                              <select className=\"select-item\" id=\"usd\" name=\"currency\">\r\n                                                <option value=\"USD\" data-icon=\"images/usd.png\" > USD</option>\r\n                                                <option value=\"EUR\" data-icon=\"images/eur.png\"> EUR</option>\r\n                                              </select>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <p className=\"form-label font-normal pl-50\">1 EUR = 1.1414 USD</p>\r\n                                      </div>\r\n                                      <div className=\"form-ic\">\r\n                                        <a href=\"\"><img src=\"images/form-middle-ic.png\" alt=\"\" /></a>\r\n                                      </div>\r\n                                      <div className=\"flex-1 w-100-sm flex-auto-sm\">\r\n                                        <label htmlFor=\"\" className=\"form-label\">to</label>\r\n                                        <div className=\"inputs-wrap dark-controls-n\">\r\n                                          <span className=\"currency-ic-n\">\r\n                                            $\r\n                                          </span>\r\n                                          <div className=\"inputs-wrap-control\">\r\n                                            <input type=\"text\" className=\"form-control-n\" placeholder=\"Enter amount\" />\r\n                                            <div className=\"relative select-item-wrap\">\r\n                                              <select className=\"select-item\" id=\"eur\" name=\"demo\">\r\n                                                <option value=\"EUR\" data-icon=\"images/eur.png\"> EUR</option>\r\n                                                <option value=\"USD\" data-icon=\"images/usd.png\"> USD</option>\r\n                                              </select>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <p className=\"form-label font-normal pl-50\">1 EUR = 1.1414 USD</p>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                      <button className=\"btn-primary-n\">SWAP</button>\r\n                                    </div>\r\n                                    <p className=\"font-11 color-light-n mb-0-n text-with-svg-sm\">\r\n                                      <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"cog\" className=\"svg-inline--fa fa-cog fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"></path></svg>\r\n                                      <span className=\"text-between-ic\"> Estimated gas and fees: 0.0015 USD</span>\r\n                                      <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"question-circle\" className=\"svg-inline--fa fa-question-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\"></path></svg>\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                                <div id=\"tab-4\" className=\"tab-content-n\">\r\n                                  <div className=\"\">\r\n                                    <div className=\"form-group-n d-flex items-center-n\">\r\n                                      <div className=\"flex-1 w-100-sm flex-auto-sm\">\r\n                                        <label htmlFor=\"\" className=\"form-label\">from</label>\r\n                                        <div className=\"inputs-wrap light-controls-n\">\r\n                                          <span className=\"currency-ic-n\">\r\n                                            $\r\n                                          </span>\r\n                                          <div className=\"inputs-wrap-control\">\r\n                                            <input type=\"text\" className=\"form-control-n\" placeholder=\"Enter amount\" />\r\n                                            <div className=\"relative select-item-wrap\">\r\n                                              <select className=\"select-item no-img\" id=\"jd1\" name=\"currency\">\r\n                                                <option value=\"JD.com\" > JD.com</option>\r\n                                                <option value=\"Yandex\" > Yandex</option>\r\n                                              </select>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <p className=\"form-label font-normal pl-50\">1 JD.COM = 0.8759 YANDEX\r\n                                        </p>\r\n                                      </div>\r\n                                      <div className=\"form-ic\">\r\n                                        <a href=\"\"><img src=\"images/form-middle-ic.png\" alt=\"\" /></a>\r\n                                      </div>\r\n                                      <div className=\"flex-1 w-100-sm flex-auto-sm\">\r\n                                        <label htmlFor=\"\" className=\"form-label\">to</label>\r\n                                        <div className=\"inputs-wrap dark-controls-n\">\r\n                                          <span className=\"currency-ic-n\">\r\n                                            $\r\n                                          </span>\r\n                                          <div className=\"inputs-wrap-control\">\r\n                                            <input type=\"text\" className=\"form-control-n\" placeholder=\"Enter amount\" />\r\n                                            <div className=\"relative select-item-wrap\">\r\n                                              <select className=\"select-item no-img\" id=\"jd2\" name=\"demo\">\r\n                                                <option value=\"Yandex\" > Yandex</option>\r\n                                                <option value=\"JD.com\" > JD.com</option>\r\n                                              </select>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <p className=\"form-label font-normal pl-50\">1 YANDEX = 1.1414 JD.COM\r\n                                        </p>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                      <button className=\"btn-primary-n\">SWAP</button>\r\n                                    </div>\r\n                                    <p className=\"font-11 color-light-n mb-0-n text-with-svg-sm\">\r\n                                      <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"cog\" className=\"svg-inline--fa fa-cog fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"></path></svg>\r\n                                      <span className=\"text-between-ic\"> Estimated gas and fees: 0.0015 USD</span>\r\n                                      <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"question-circle\" className=\"svg-inline--fa fa-question-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\"></path></svg>\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                          </div>\r\n                          <div className=\"swap-Textlink\">\r\n                            {this.state.web3 !== null ? (\r\n                              <div className=\"swap-Link01\">\r\n                                <a\r\n                                  className=\"icon-Box Setting\"\r\n                                  // onClick={() => { this.setState({ sideBar: !this.state.sideBar }) }}\r\n                                  href=\"javascript:void(0);\"\r\n                                >\r\n                                  <i className=\"fas fa-cog\"></i>\r\n                                </a>\r\n                                Estimated gas and fees:\r\n                                {Number(this.state.estimatedGasFee).toFixed(\r\n                                  5\r\n                                )}{\" \"}\r\n                                {this.state.selectedSendCurrency}{\" \"}\r\n                                <a\r\n                                  href=\"javascript:void(0);\"\r\n                                  className=\"gas-Est\"\r\n                                >\r\n                                  <i\r\n                                    className=\"fas fa-question-circle\"\r\n                                    aria-hidden=\"true\"\r\n                                  ></i>\r\n                                </a>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"powertextBX\">\r\n                                <div className=\"d-flex\">\r\n                                  <p>\r\n                                    Powered by\r\n                                    <img src=\"images/smLOGO.png\" />\r\n                                    {/* <a href=\"#\">Start new swap</a> */}\r\n                                  </p>\r\n                                  {/* <p className=\"ml-198\">Estimated gas and fees: <span>0.09806</span> BNB</p> */}\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                            <label className=\"slippage-outer\">\r\n                              <p className=\"active\" style={{ paddingRight: \"10px\" }}>Slippage free </p>\r\n                              <Switch\r\n                                checked={this.state.checked1}\r\n                                onChange={this.handleChange1}\r\n                                handleDiameter={14}\r\n                                offColor=\"#2e303a\"\r\n                                onColor=\"#2e303a\"\r\n                                offHandleColor=\"#91dc27\"\r\n                                onHandleColor=\"#91dc27\"\r\n                                height={18}\r\n                                width={32}\r\n                                borderRadius={0}\r\n                                activeBoxShadow=\"0px 0px 0px 0px #fffc35\"\r\n                                uncheckedIcon={false}\r\n                                checkedIcon={false}\r\n                                className=\"react-switch\"\r\n                                id=\"small-radius-switch\"\r\n                                disabled={true}\r\n                              />\r\n                              <p style={{ paddingLeft: \"10px\" }}>Slippage</p>\r\n                            </label>\r\n                            {/* <div className=\"swap-Link03\">\r\n                                                <a href=\"javascript:void();\">P2C</a> | <a href=\"javascript:void();\">P2G</a> | <a\r\n                                                    href=\"javascript:void();\">P2P</a>\r\n                                            </div>\r\n                                            <div className=\"text-Popup\" tabindex=\"-1\">\r\n                                                <span className=\"icon-Box\"><i className=\"fas fa-exclamation-circle\"></i></span>\r\n                                                <div className=\"text-content\">\r\n                                                    <p>Element Zero SmartSwap reimburses all swap fees and does not allow any\r\n                                                        loss of value due to spread or volatility. The max estimated gas cost\r\n                                                        covers the direct cost of blockchain gas. If the user is swapping BTC,\r\n                                                        there is an additional cost for 3rd party providers such as provable.xyz\r\n                                                        and blockcypher.com to validate on-chain the exact deposit amount of\r\n                                                        BTC.</p>\r\n                                                    <p>A user sending BTC will deposit the maximum estimated gas cost to a\r\n                                                        temporary wallet generated by SmartSwap and 100% owned by the user. If\r\n                                                        the total gas cost at the end of the swap is less than the estimated\r\n                                                        amount, the temporary wallet returns the balance to the user’s wallet.\r\n                                                    </p>\r\n                                                    <p>Once the final cost of gas and fees is known at the end of the swap,\r\n                                                        SmartSwap reimburses users with ZERO/1 at 100%.</p>\r\n                                                </div>\r\n                                            </div> */}\r\n                          </div>\r\n                        </>\r\n                      ) : this.state.wrapBox === \"success\" ? (\r\n                        <div className=\"wrap-Box\">\r\n                          <div\r\n                            className=\"swap-Wrap grey-Box wow fadeInRight\"\r\n                            data-wow-delay=\"0.3s\"\r\n                          >\r\n                            <div className=\"swap-Box swap-Successful\">\r\n                              <div className=\"swap-Input\">\r\n                                <div className=\"swap-Title\">\r\n                                  <div className=\"swap-Amt\">\r\n                                    <span className=\"currecy\">$</span>\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      id=\"input04\"\r\n                                      value={this.state.sendFundAmount}\r\n                                    />\r\n                                    <i className=\"recCurIcon\">\r\n                                      <img\r\n                                        src={\r\n                                          \"images/receiveCurrencies/\" +\r\n                                          this.state.selectedSendCurrency +\r\n                                          \".png\"\r\n                                        }\r\n                                      />\r\n                                    </i>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"swap-Title\">\r\n                                  <div className=\"swap-Amt\">\r\n                                    <span className=\"currecy\">$</span>\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      value={this.state.sendFundAmount}\r\n                                      readOnly\r\n                                    />\r\n                                    <i className=\"recCurIcon\">\r\n                                      <img\r\n                                        src={\r\n                                          \"images/receiveCurrencies/\" +\r\n                                          this.state.selectedReceiveCurrency +\r\n                                          \".png\"\r\n                                        }\r\n                                      />\r\n                                    </i>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              {/* <div className=\"swap-Icon\">\r\n                                <a\r\n                                  href=\"javascript:void(0);\"\r\n                                  className=\"faux-Link ani-1\"\r\n                                >\r\n                                  <img\r\n                                    src=\"images/swap-Icon.png\"\r\n                                    alt=\"\"\r\n                                    className=\"ani-1\"\r\n                                  />\r\n                                </a>\r\n                              </div> */}\r\n                              <div className=\"successMesg01\">\r\n                                <div className=\"icon-Box\">\r\n                                  <i className=\"fas fa-check\"></i>\r\n                                </div>\r\n                                Swap sent successfully\r\n                                <a\r\n                                  href=\"javascript:void(0);\"\r\n                                  onClick={() => {\r\n                                    this.scrollToLedger();\r\n                                  }}\r\n                                >\r\n                                  Check the ledger below\r\n                                </a>\r\n                              </div>\r\n                              {/* <div className=\"successMesg01 yellow-Color\"><div className=\"icon-Box\"><img src=\"images/transaction-img.png\" alt=\"\" className=\"ani-1\" /></div>\r\n                                            73.69% of the swap completed successfully\r\n                                            <a href=\"javascript:void(0);\">26.31% still pending<span><i className=\"fas cust-fas fa-question-circle protip\" data-pt-gravity=\"top\" data-pt-title=\"After you type your BTC wallet address and click the CLAIM BTC button, every pending swap will automatically deposit to your BTC wallet address. NO FURTHER ACTION IS REQUIRED\"></i></span></a>\r\n                                            </div> */}\r\n                            </div>\r\n                            <div className=\"swap-Textlink\">\r\n                              <div className=\"swap-Link03\">\r\n                                <a\r\n                                  href=\"javascript:void(0);\"\r\n                                  className=\"yellow-Color\"\r\n                                  onClick={() => this.changeWrapBox(\"swap\")}\r\n                                >\r\n                                  Start a new swap\r\n                                </a>\r\n                                {/* |  <a href=\"javascript:void();\">P2C</a>   |   <a href=\"javascript:void();\">P2G</a>   |   <a href=\"javascript:void();\">P2P</a> */}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    {this.state.showLedger ? (\r\n                      <div className=\"bb-traHSection\">\r\n                        <div className=\"transaction-History\">\r\n                          <div className=\"container-Grid\">\r\n                            <div\r\n                              className=\"Title01 wow fadeInDown\"\r\n                              data-wow-delay=\"0.3s\"\r\n                            >\r\n                              <a\r\n                                href=\"javascript:void(0)\"\r\n                                className=\"historyBTN-01 active\"\r\n                                data-toggle=\"n-collapse\"\r\n                                data-target=\"#ledgerDetailBox\"\r\n                                aria-expanded=\"false\"\r\n                                aria-controls=\"ledgerDetailBox\"\r\n                              >\r\n                                Ledger <i className=\"fas fa-sort-down\"></i>\r\n                              </a>\r\n                            </div>\r\n                            <div className=\"n-collapse in\" id=\"ledgerDetailBox\">\r\n                              {/* <div className=\"bb-traHistoryBTNbar \">\r\n                                                <a href=\"javascript:void(0);\" className=\"\">All</a> \r\n                                                <a href=\"javascript:void(0);\" className=\"\">Completed</a>\r\n                                                <a href=\"javascript:void(0);\" className=\"active\">Pending</a>\r\n                                            </div> */}\r\n                              <div className=\"transaction-histroryWrap\">\r\n                                <div className=\"transaction-histroryBox\">\r\n                                  <div className=\"Title02 orange-Color\">\r\n                                    Send\r\n                                  </div>\r\n                                  <div className=\"trasaction-Amt\">\r\n                                    {this.state.actualSendFundAmount}{\" \"}\r\n                                    {this.state.selectedSendCurrency}\r\n                                    {/* <span>({this.state.sendFundAmount})</span> */}\r\n                                  </div>\r\n                                  <div className=\"trasaction-Date\">\r\n                                    {this.state.txSentTime}\r\n                                  </div>\r\n                                  <div className=\"trasaction-Box\">\r\n                                    <div className=\"trasaction-Status\">\r\n                                      <span className=\"icon-Box\">\r\n                                        <i className=\"fas fa-check-circle\"></i>\r\n                                      </span>\r\n                                      Transaction Submitted\r\n                                    </div>\r\n                                    <div className=\"trans-Id\">\r\n                                      {this.state.txIdSent}\r\n                                    </div>\r\n                                    <a\r\n                                      href={this.state.txLinkSend}\r\n                                      className=\"view-Trans ani-1\"\r\n                                      target=\"_blank\"\r\n                                    >\r\n                                      View transaction\r\n                                    </a>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"arrow-Box\"></div>\r\n                                <div className=\"transaction-histroryBox\">\r\n                                  {this.state.txSentStatus === \"Success\" ? (\r\n                                    <div>\r\n                                      <div className=\"Title02 green-Color\">\r\n                                        Received <span></span>\r\n                                      </div>\r\n                                      <div className=\"trasaction-Amt\">\r\n                                        {this.state.receiveFundAmount}{\" \"}\r\n                                        {this.state.selectedReceiveCurrency}\r\n                                        {/* <span>(${this.state.sendFundAmount})</span>  */}\r\n                                      </div>\r\n                                      <div className=\"trasaction-Date\">\r\n                                        {this.state.txReceiveTime}\r\n                                      </div>\r\n                                      <div className=\"trasaction-Box\">\r\n                                        <div className=\"trasaction-Status\">\r\n                                          <span className=\"icon-Box\">\r\n                                            <i className=\"fas fa-check-circle\"></i>\r\n                                          </span>\r\n                                          Funds wired to your wallet{\" \"}\r\n                                        </div>\r\n                                        <div className=\"trans-Id\">\r\n                                          {this.state.txIdReceive}\r\n                                        </div>\r\n                                        <div className=\"tsb-LinkBox\">\r\n                                          <a\r\n                                            href={this.state.txLinkReturn}\r\n                                            className=\"view-Trans ani-1\"\r\n                                            target=\"_blank\"\r\n                                          >\r\n                                            View transaction\r\n                                          </a>\r\n                                          {/* <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"false\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a> */}\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div>\r\n                                      <div className=\"Title02 pending\">\r\n                                        Pending <span></span>\r\n                                      </div>\r\n                                      <div className=\"trasaction-Amt\">\r\n                                        ... {this.state.selectedReceiveCurrency}{\" \"}\r\n                                      </div>\r\n                                      <div className=\"trasaction-Box pendingColor\">\r\n                                        <div className=\"trasaction-Status pending-Text\">\r\n                                          Pending{\" \"}\r\n                                          <span className=\"pending-loader\">\r\n                                            <img src=\"images/loader2.gif\" />\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n                                      <p>\r\n                                        {this.state.allowCurrentTxExpedite === 1 ? (\r\n                                          <>\r\n                                            <a\r\n                                              href=\"javascript:void(0);\"\r\n                                              className=\"ani-1 green\"\r\n                                            >\r\n                                              Waiting to be match with counter-party...\r\n                                            </a>\r\n                                            <a\r\n                                              href=\"javascript:void(0);\"\r\n                                              className=\"ani-1\"\r\n                                              style={{ color: \"white\" }}\r\n                                              onClick={() => this.expedite(this.state.currentTxExpediteData)}\r\n                                            >\r\n                                              Expedite\r\n                                            </a>\r\n                                          </>) : this.state.allowCurrentTxExpedite === 2 ? (\r\n                                            \"Expediting....\"\r\n                                          ) : this.state.allowCurrentTxExpedite === 3 ? (\r\n                                            <a style={{ color: \"#91dc27\" }}>Expedited <i class=\"far fa-check-circle\"></i></a>\r\n                                          ) :\r\n                                          <>\r\n                                            <a\r\n                                              href=\"javascript:void(0);\"\r\n                                              className=\"ani-1 green\"\r\n                                            >\r\n                                              Waiting to be match with counter-party...\r\n                                            </a>\r\n                                            <Counter />\r\n                                          </>\r\n                                        }\r\n                                      </p>\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : null}\r\n                    <div className=\"bb-traHSection\">\r\n                      <div className=\"container-Grid\">\r\n                        {/* <div className=\"bb-traHistoryBTNbar \">\r\n                                        <a href=\"javascript:void(0);\" className=\"\">All</a>\r\n                                        <a href=\"javascript:void(0);\" className=\"\">Completed</a>\r\n                                        <a href=\"javascript:void(0);\" className=\"active\">Pending</a>\r\n                                    </div> */}\r\n                        {web3Config.getAddress() !== null ? (\r\n                          !this.state.showTxHistory ? (\r\n                            <div className=\"bb-traHistoryBTNbar\">\r\n                              <a\r\n                                href=\"javascript:void(0)\"\r\n                                className=\"ssbtn05\"\r\n                                onClick={() => this.showHistory(\"all\", true)}\r\n                              >\r\n                                <h4 className=\"orange-Color\">History</h4>\r\n                              </a>\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"bb-traHistoryBTNbar\">\r\n                              <a\r\n                                href=\"javascript:void(0)\"\r\n                                onClick={() => this.showHistory(\"all\", false)}\r\n                              >\r\n                                <h4 className=\"orange-Color\">Hide</h4>\r\n                              </a>\r\n                              &nbsp;\r\n                              <a\r\n                                href=\"javascript:void(0)\"\r\n                                onClick={() => this.showHistory(\"all\", true)}\r\n                              >\r\n                                <h4 className=\"orange-Color\">All</h4>\r\n                              </a>\r\n                              &nbsp;\r\n                              <a\r\n                                href=\"javascript:void(0)\"\r\n                                onClick={() =>\r\n                                  this.showHistory(\"pending\", true)\r\n                                }\r\n                              >\r\n                                <h4 className=\"orange-Color\">Pending</h4>\r\n                              </a>\r\n                              &nbsp;\r\n                            </div>\r\n                          )\r\n                        ) : null}\r\n\r\n                        {this.state.showTxHistory\r\n                          ? this.state.loadingHistory ?\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                              <Loader\r\n                                type=\"Grid\"\r\n                                color=\"#00BFFF\"\r\n                                height={70}\r\n                                width={70}\r\n                              />\r\n                            </div>\r\n                            :\r\n                            this.state.showAllTx\r\n                              ? this.state.allTxHistoryUI\r\n                              : this.state.allPendingTxHistoryUI\r\n                          : null}\r\n\r\n                        {/* {this.state.allTxHistoryUI !== null ? this.state.allTxHistoryUI : null} */}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"bb-traHSection\">\r\n                                <div className=\"container-Grid\">\r\n                                <div className=\"bb-traHistoryBTNbar \">\r\n                                    <a href=\"javascript:void(0);\" className=\"\">All</a> \r\n                                    <a href=\"javascript:void(0);\" className=\"\">Completed</a>\r\n                                    <a href=\"javascript:void(0);\" className=\"active\">Pending</a>\r\n                                </div>\r\n                                    <div className=\"transaction-histroryWrap\">\r\n                                        <div className=\"transaction-histroryBox\">\r\n                                            <div className=\"Title02 orange-Color\">Send</div>\r\n                                            <div className=\"trasaction-Amt\"> 50 ETH <span>($10,000)</span> </div>\r\n                                            <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n                                            <div className=\"trasaction-Box\">\r\n                                                <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Transaction Submitted</div>\r\n                                                <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n                                                <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"arrow-Box\"></div>\r\n                                        <div className=\"transaction-histroryBox\">\r\n                                            <div className=\"Title02 green-Color\">Received <span>(73.69%)</span></div>\r\n                                            <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\r\n                                            <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n                                            <div className=\"trasaction-Box\">\r\n                                                <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n                                                <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n                                                <div className=\"tsb-LinkBox\">\r\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1 active\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"true\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\r\n                                                </div>\r\n                                                <div className=\"clearfix n-collapse in\" id=\"trsBox01\" aria-expanded=\"true\" >\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\r\n                                            <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n                                            <div className=\"trasaction-Box\">\r\n                                                <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n                                                <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n                                                <div className=\"tsb-LinkBox\">\r\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox02\" aria-expanded=\"false\" aria-controls=\"trsBox02\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\r\n                                                </div>\r\n                                                <div className=\"n-collapse clearfix\" id=\"trsBox02\">\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\r\n                                            <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n                                            <div className=\"trasaction-Box\">\r\n                                                <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n                                                <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n                                                <div className=\"tsb-LinkBox\">\r\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n                                                    <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox03\" aria-expanded=\"false\" aria-controls=\"trsBox03\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\r\n                                                </div>\r\n                                                <div className=\"n-collapse clearfix\" id=\"trsBox03\">\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                    <div className=\"tsb-transHistoryBox\">\r\n                                                        <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n                                                        <span>0.00910955 Ether ($3.43)</span>\r\n                                                        <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Title02 pending\">Pending <span>(73.69%)</span></div>\r\n                                            <div className=\"trasaction-Amt\">10 ETH  <span>($2,500)</span></div>\r\n                                            <div className=\"trasaction-Box pendingColor\">\r\n                                                <div className=\"trasaction-Status pending-Text\">Pending <span className=\"pending-loader\"><img src=\"images/loader2.gif\" /></span></div>\r\n                                            </div>\r\n                                            <p><span><a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a></span><a href=\"javascript:void(0);\" className=\"ani-1\">Wait until a match will be found or cancel and redeem the 10 ETH pending to your wallet</a></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                    <div className=\"swap-textBox\">\r\n                      <div className=\"container-Grid\">\r\n                        <div\r\n                          className=\"swap-boxWrap wow fadeInUp\"\r\n                          data-wow-delay=\"0.3s\"\r\n                        >\r\n                          <div className=\"swap-Box01\">\r\n                            <div className=\"icon-Box icon04\">\r\n                              <svg>\r\n                                <g>\r\n                                  <path className=\"cst0\" d=\"M31.7,19.4l-1-1c-1.3-1.3-3-2.3-4.7-2.8L22.5,19c2-0.1,3.9,0.6,5.4,2.1l1,1c2.8,2.8,2.8,7.3,0,10.1L17,44.1\r\n                                    c-2.8,2.8-7.3,2.8-10.1,0l-1-1c-2.8-2.8-2.8-7.3,0-10.1l7.5-7.5c-0.3-1.4-0.5-3.3-0.1-5.3L3.2,30.2c-4.3,4.3-4.3,11.3,0,15.6l1,1\r\n                                    c4.3,4.3,11.3,4.3,15.6,0L31.7,35C36,30.7,36,23.7,31.7,19.4\"/>\r\n                                  <path className=\"cst1\" d=\"M27.3,31.1c-1.9,0-3.8-0.7-5.2-2.1l-1-1c-2.8-2.8-2.8-7.3,0-10.1L32.9,5.9c2.8-2.8,7.3-2.8,10.1,0l1,1\r\n                                    c2.8,2.8,2.8,7.3,0,10.1l-7,7c0.3,1.4,0.4,3.3-0.1,5.5l9.8-9.8c4.3-4.3,4.3-11.3,0-15.6l-1-1c-4.3-4.3-11.3-4.3-15.6,0L18.3,15.1\r\n                                    c-4.3,4.3-4.3,11.3,0,15.6l1,1c1.3,1.3,2.9,2.2,4.6,2.7L27.3,31.1z\"/>\r\n                                </g>\r\n                              </svg>\r\n                            </div>\r\n                            <div className=\"text-Content\">\r\n                              <div className=\"text-Title\">\r\n                                100% <br /> multichain\r\n                              </div>\r\n                              <p> No wraps, no side-chain, no light chain, 100% true one-click swap between all blockchains</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"swap-Box01\">\r\n                            <div className=\"icon-Box icon01\">\r\n                              <svg>\r\n                                <g>\r\n                                  <path className=\"cst0\" d=\"M26.6,48.5c-0.8,0-1.5-0.6-1.5-1.5V1.5c0-0.8,0.6-1.5,1.5-1.5c0.8,0,1.5,0.6,1.5,1.5V47\r\n                                    C28.1,47.8,27.4,48.5,26.6,48.5\"/>\r\n                                  <path className=\"cst1\" d=\"M45.7,48.5H7.5c-0.8,0-1.5-0.6-1.5-1.5c0-0.8,0.6-1.5,1.5-1.5h38.2c0.8,0,1.5,0.6,1.5,1.5\r\n                                    C47.2,47.8,46.5,48.5,45.7,48.5\"/>\r\n                                  <path className=\"cst1\" d=\"M46.2,12.4H7.1c-0.8,0-1.5-0.6-1.5-1.5c0-0.8,0.6-1.5,1.5-1.5h39.2c0.8,0,1.5,0.6,1.5,1.5\r\n                                    C47.7,11.8,47,12.4,46.2,12.4\"/>\r\n                                  <path className=\"cst1\" d=\"M19.9,25.3L19.9,25.3c0-0.3-0.1-0.4-0.2-0.6l-8.5-14.5C11,9.8,10.5,9.5,10,9.5c-0.5,0-1,0.3-1.3,0.7L0.2,24.7\r\n                                    C0.1,24.9,0.1,25,0,25.2v0.1c0,0.1,0,0.1,0,0.2v0c0,3.8,4.4,6.8,10,6.8s10-3,10-6.8v0C19.9,25.4,19.9,25.4,19.9,25.3 M10,13.9\r\n                                    l6,10.2H4L10,13.9z M10,29.4c-3.1,0-5.4-1.1-6.5-2.5h13C15.4,28.3,13,29.4,10,29.4\"/>\r\n                                  <path className=\"cst0\" d=\"M52.9,25.3L52.9,25.3c0-0.3-0.1-0.4-0.2-0.6l-8.5-14.5c-0.3-0.5-0.7-0.7-1.3-0.7c-0.5,0-1,0.3-1.3,0.7\r\n                                    l-8.5,14.5c-0.1,0.2-0.1,0.3-0.2,0.5v0.1c0,0.1,0,0.1,0,0.2v0c0,3.8,4.4,6.8,10,6.8s10-3,10-6.8v0C52.9,25.4,52.9,25.4,52.9,25.3\r\n                                    M42.9,13.9l6,10.2H37L42.9,13.9z M42.9,29.4c-3.1,0-5.4-1.1-6.5-2.5h13C48.4,28.3,46,29.4,42.9,29.4\"/>\r\n                                </g>\r\n                              </svg>\r\n                            </div>\r\n                            <div className=\"text-Content\">\r\n                              <div className=\"text-Title\">\r\n                                100% <br />\r\n                                value match\r\n                              </div>\r\n                              <p>Select the slippage free option to receive new crypto equal to the exact value you sent\r\n                                <i className=\"help-circle\">\r\n                                  <i\r\n                                    className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top\"\r\n                                    data-pt-title=\"The slippage option finds the best price in the market with a slippage limit option under your trade options\"\r\n                                    aria-hidden=\"true\"\r\n                                  ></i>\r\n                                </i>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"swap-Box01\">\r\n                            <div className=\"icon-Box icon02\">\r\n                              <svg>\r\n                                <g>\r\n                                  <path className=\"cst1\" d=\"M36.3,16.3h-3.6v-3.9C32.7,5.6,27.1,0,20.3,0S7.9,5.6,7.9,12.4v3.9H5.6c-3.1,0-5.6,2.5-5.6,5.6v20.8\r\n                                    c0,3.1,2.5,5.6,5.6,5.6h30.6c3.1,0,5.6-2.5,5.6-5.6V21.9C41.9,18.8,39.3,16.3,36.3,16.3 M10.8,12.4c0-5.2,4.2-9.5,9.5-9.5\r\n                                    c5.2,0,9.5,4.2,9.5,9.5v3.9H10.8V12.4z M38.8,42.7c0,1.4-1.1,2.6-2.6,2.6H5.6c-1.4,0-2.6-1.1-2.6-2.6V21.9c0-1.4,1.1-2.6,2.6-2.6\r\n                                    h30.6c1.4,0,2.6,1.1,2.6,2.6V42.7z\"/>\r\n                                  <path className=\"cst0\" d=\"M25.9,30c0-2.8-2.3-5-5-5c-2.7,0-5,2.3-5,5c0,2.2,1.5,4.1,3.5,4.7v3.2c0,0.8,0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5\r\n                                    v-3.2C24.4,34.1,25.9,32.2,25.9,30 M20.9,31.9c-1,0-1.9-0.9-1.9-1.9c0-1,0.9-1.9,1.9-1.9c1,0,1.9,0.9,1.9,1.9\r\n                                    C22.8,31.1,21.9,31.9,20.9,31.9\"/>\r\n                                </g>\r\n                              </svg>\r\n                            </div>\r\n                            <div className=\"text-Content\">\r\n                              <div className=\"text-Title\">\r\n                                100%\r\n                                <br />\r\n                                safe\r\n                              </div>\r\n                              <p>\r\n                                No hot wallet, no deposits, no accounts, no custodial wallets\r\n                                <i className=\"help-circle\">\r\n                                  <i\r\n                                    className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top\"\r\n                                    data-pt-title=\"All transactions take place on-chain via the blockchains swapping through trustless smart contracts\"\r\n                                    aria-hidden=\"true\"\r\n                                  ></i>\r\n                                </i>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"swap-Box01\">\r\n                            <div className=\"icon-Box icon03\">\r\n                              <svg>\r\n                                <g>\r\n                                  <path className=\"cst0\" d=\"M26.5,38.9V42h-2.7v-3c-2.7-0.2-5.4-1-6.9-2.2l1.5-3.4c1.4,1,3.4,1.8,5.4,2v-4.6c-3.1-0.8-6.5-1.8-6.5-5.7\r\n                                  c0-2.9,2.1-5.5,6.5-5.9v-3.1h2.7v3c2.1,0.2,4.1,0.7,5.6,1.7L30.8,24c-1.4-0.8-2.9-1.3-4.2-1.4v4.7C29.6,28,33,29,33,32.9\r\n                                  C33,35.8,30.9,38.3,26.5,38.9 M23.8,26.6v-4c-1.5,0.3-2,1.1-2,2C21.7,25.7,22.5,26.2,23.8,26.6 M28.5,33.3c0-1-0.8-1.5-2-1.9v3.8\r\n                                  C27.9,34.9,28.5,34.2,28.5,33.3\"/>\r\n                                  <path className=\"cst1\" d=\"M26.4,4.1V0.7c0-0.3-0.2-0.6-0.6-0.7c-0.4-0.1-0.8-0.1-1.1,0.1l-6.3,4.9c-0.2,0.2-0.3,0.3-0.3,0.5\r\n                                  c0,0.2,0.1,0.4,0.3,0.5l6.3,4.9c0.3,0.2,0.6,0.3,1.1,0.2s0.6-0.3,0.6-0.7V7.2c10.9,1,19.5,10.1,19.5,21.3\r\n                                  c0,11.8-9.6,21.4-21.4,21.4c-11.8,0-21.4-9.6-21.4-21.4c0-6.3,2.7-11.9,7-15.8L8.7,9.9C3.4,14.4,0,21.1,0,28.5C0,42,11,53,24.5,53\r\n                                  S49,42,49,28.5C49,15.6,39.1,5.1,26.4,4.1\"/>\r\n                                </g>\r\n                              </svg>\r\n                            </div>\r\n                            <div className=\"text-Content\">\r\n                              <div className=\"text-Title\">\r\n                                100%\r\n                                <br />\r\n                                reimbursement\r\n                              </div>\r\n                              <p>\r\n                                Fees and gas reimbursed fully with SMART\r\n                                <i className=\"help-circle\">\r\n                                  <i\r\n                                    className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top-right-corner\"\r\n                                    data-pt-title=\"#reimburTip\"\r\n                                    data-pt-width=\"402\"\r\n                                    aria-hidden=\"true\"\r\n                                  ></i>\r\n                                </i>\r\n                              </p>\r\n                            </div>\r\n                            <div id=\"reimburTip\" style={{ display: \"none\" }}>\r\n                              <p style={{ marginTop: '0px' }}>SmartSwap users have the option to receive 100% reimbursement for their gas and swap fees. Users are able to claim reimbursements via the reimbursement staking contract. To release reimbursements users must stake the 1:1 equal amount of SMART for one year, but will be able to release partial amounts of the reimbursement if withdrawn at any time before the 1 year period . The pending balance accumulates and the user is able to claim the rest.</p>\r\n                              <p style={{ marginBottom: '0px' }}>Example </p>\r\n                              <p style={{ marginTop: '0px', marginBottom: '0px' }}>If over the year a user spent over $1000 or more on gas, at any time he can be reimbursed for such cost even if the SMART token value is higher due to appreciation. </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"swap-Box01\">\r\n                            <div className=\"icon-Box icon05\">\r\n                              <svg>\r\n                                <g>\r\n                                  <path className=\"cst0\" d=\"M26,35.8v3h-2.7v-3c-2.7-0.2-5.3-1-6.7-2.2l1.5-3.3c1.3,1,3.3,1.7,5.3,1.9v-4.5c-3-0.7-6.4-1.7-6.4-5.6\r\n                                    c0-2.9,2.1-5.3,6.4-5.8v-3H26v2.9c2,0.2,4,0.7,5.5,1.7l-1.3,3.3c-1.4-0.8-2.8-1.2-4.1-1.4v4.6c3,0.7,6.3,1.7,6.3,5.5\r\n                                    C32.3,32.9,30.2,35.3,26,35.8 M23.3,23.8V20c-1.5,0.3-2,1.1-2,2C21.3,23,22.1,23.5,23.3,23.8 M27.9,30.4c0-0.9-0.8-1.5-1.9-1.9v3.7\r\n                                    C27.4,31.9,27.9,31.2,27.9,30.4\"/>\r\n                                  <path className=\"cst1\" d=\"M50.2,0.4c-0.6-0.6-1.6-0.6-2.1,0l-7.7,7.7c-4.3-4-10-6.4-16.3-6.4c-13.2,0-24,10.8-24,24\r\n                                    C0,32,2.5,37.7,6.4,42l-5,5c-0.6,0.6-0.6,1.6,0,2.1c0.3,0.3,0.7,0.4,1.1,0.4c0.4,0,0.8-0.1,1.1-0.4l5.1-5.1\r\n                                    c4.1,3.5,9.5,5.6,15.4,5.6c13.2,0,24-10.8,24-24c0-5.8-2.1-11.2-5.6-15.4l7.7-7.7C50.8,2,50.8,1,50.2,0.4 M3,25.7\r\n                                    C3,14.1,12.4,4.8,24,4.8c5.5,0,10.4,2.1,14.1,5.5L8.6,39.9C5.2,36.1,3,31.1,3,25.7 M45,25.7c0,11.5-9.4,21-21,21\r\n                                    c-5,0-9.6-1.8-13.2-4.7l29.4-29.4C43.2,16.1,45,20.7,45,25.7\"/>\r\n                                </g>\r\n                              </svg>\r\n                            </div>\r\n                            <div className=\"text-Content\">\r\n                              <div className=\"text-Title\">\r\n                                100% <br /> free license\r\n                              </div>\r\n                              <p>Build your own SmartSwap at no cost or become an affiliate </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"swap-Box01\">\r\n                            <div className=\"icon-Box icon06\">\r\n                              <svg>\r\n                                <g>\r\n                                  <path className=\"cst0\" d=\"M5.8,13.6c0,0,6-3.9,10.1,3.1c0,0,3.3,1.2,2.2-1.8S10.7,9,5.8,13.6\" />\r\n                                  <path className=\"cst0\" d=\"M6.6,19.2c0,0,3.7-3.3,7.5,0C14.1,19.2,10.7,22.1,6.6,19.2\" />\r\n                                  <path className=\"cst0\" d=\"M36,13.6c0,0-6-3.9-10.1,3.1c0,0-3.3,1.2-2.2-1.8C24.9,12,31.1,9,36,13.6\" />\r\n                                  <path className=\"cst0\" d=\"M35.2,19.2c0,0-3.7-3.3-7.5,0C27.6,19.2,31,22.1,35.2,19.2\" />\r\n                                  <path className=\"cst0\" d=\"M27.6,35c-3.8,0-5.5-4-5.5-4H21h-1.1c0,0-1.7,4-5.5,4s-7.2-4.6-7.2-4.6s2.6,6.8,6.9,6.8s6.9-2.4,6.9-2.4\r\n                                    s2.5,2.4,6.9,2.4s6.9-6.8,6.9-6.8S31.4,35,27.6,35\"/>\r\n                                  <path className=\"cst1\" d=\"M41.5,4.8C41.2,4.5,33.8,0,21,0S0.8,4.6,0.5,4.8L0,5.1v25.6l0,0.2c2.6,12.2,19.7,22,20.4,22.4l0.5,0.3l0.5-0.3\r\n                                    c0.7-0.4,17.8-10.2,20.4-22.4L42,5L41.5,4.8z M39.9,30.6C38,39,28.1,46.6,23.2,49.8V42h-4.4v7.9C13.9,46.6,3.9,39.1,2,30.6V6.2\r\n                                    C3.8,5.2,10.5,2,20.9,2c10.5,0,17.1,3.2,18.9,4.2L39.9,30.6L39.9,30.6z\"/>\r\n                                </g>\r\n                              </svg>\r\n                            </div>\r\n                            <div className=\"text-Content\">\r\n                              <div className=\"text-Title\">\r\n                                100% <br /> anonymous\r\n                              </div>\r\n                              <p>Complete privacy guard with no KYC / AML needed</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"swap-Box01\">\r\n                            <div className=\"icon-Box icon07\">\r\n                              <svg>\r\n                                <g>\r\n                                  <path className=\"cst0\" d=\"M42.2,37.6H16c-3.1,0-5.7-2.5-5.7-5.7V5.7C10.3,2.5,12.8,0,16,0h26.3c3.1,0,5.7,2.5,5.7,5.7v26.3\r\n                                    C47.9,35.1,45.4,37.6,42.2,37.6 M16,3.1c-1.4,0-2.6,1.1-2.6,2.6v26.3c0,1.4,1.1,2.6,2.6,2.6h26.3c1.4,0,2.6-1.1,2.6-2.6V5.7\r\n                                    c0-1.4-1.1-2.6-2.6-2.6H16z\"/>\r\n                                  <path className=\"cst1\" d=\"M17.7,39.8v3.5c0,1.4-1.1,2.6-2.6,2.6H5.7c-1.4,0-2.6-1.1-2.6-2.6v-9.4c0-1.4,1.1-2.6,2.6-2.6H8v-3.1H5.7\r\n                                    c-3.1,0-5.7,2.5-5.7,5.7v9.4c0,3.1,2.5,5.7,5.7,5.7h9.4c3.1,0,5.7-2.5,5.7-5.7v-3.5H17.7z\"/>\r\n                                </g>\r\n                              </svg>\r\n                            </div>\r\n                            <div className=\"text-Content\">\r\n                              <div className=\"text-Title\">\r\n                                100% <br /> scalable\r\n                              </div>\r\n                              <p>No LP, no pools, true decentralized CEX and OTC liquidity bridge</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"swap-Box01\">\r\n                            <div className=\"icon-Box icon09\">\r\n                              <svg>\r\n                                <rect x=\"15.9\" y=\"14.3\" transform=\"matrix(-0.7819 0.6234 -0.6234 -0.7819 43.8185 24.7639)\" className=\"cst0\" width=\"3.4\" height=\"11.6\" />\r\n                                <rect x=\"29.8\" y=\"28\" className=\"cst0\" width=\"8.9\" height=\"3.4\" />\r\n                                <rect x=\"12.5\" y=\"38.4\" transform=\"matrix(-0.4212 0.9069 -0.9069 -0.4212 63.2795 39.8947)\" className=\"cst0\" width=\"12.8\" height=\"3.4\" />\r\n                                <g>\r\n                                  <path className=\"cst1\" d=\"M24.5,36.1c-3.9,0-7.2-3.2-7.2-7.2s3.2-7.2,7.2-7.2s7.2,3.2,7.2,7.2S28.4,36.1,24.5,36.1 M24.5,25.2\r\n                                    c-2.1,0-3.7,1.7-3.7,3.7c0,2.1,1.7,3.7,3.7,3.7s3.7-1.7,3.7-3.7C28.2,26.9,26.5,25.2,24.5,25.2\"/>\r\n                                  <path className=\"cst1\" d=\"M9.4,18.8C4.2,18.8,0,14.6,0,9.4S4.2,0,9.4,0c5.2,0,9.4,4.2,9.4,9.4S14.5,18.8,9.4,18.8 M9.4,3.4\r\n                                    c-3.3,0-6,2.7-6,6s2.7,6,6,6s6-2.7,6-6S12.7,3.4,9.4,3.4\"/>\r\n                                  <path className=\"cst1\" d=\"M15.1,55.1c-3,0-5.4-2.4-5.4-5.4c0-3,2.4-5.4,5.4-5.4s5.4,2.4,5.4,5.4C20.5,52.7,18.1,55.1,15.1,55.1\r\n                                    M15.1,47.7c-1.1,0-2,0.9-2,2c0,1.1,0.9,2,2,2c1.1,0,2-0.9,2-2C17.1,48.5,16.2,47.7,15.1,47.7\"/>\r\n                                  <path className=\"cst1\" d=\"M47.9,40.7c-6,0-10.9-4.9-10.9-10.9s4.9-10.9,10.9-10.9c6,0,10.9,4.9,10.9,10.9S54,40.7,47.9,40.7 M47.9,22.2\r\n                                    c-4.2,0-7.5,3.4-7.5,7.5s3.4,7.5,7.5,7.5s7.5-3.4,7.5-7.5S52.1,22.2,47.9,22.2\"/>\r\n                                </g>\r\n                              </svg>\r\n                            </div>\r\n                            <div className=\"text-Content\">\r\n                              <div className=\"text-Title\">\r\n                                100% <br /> decentralized\r\n                              </div>\r\n                              <p>DAO approach with a closed system lacking any single point of failure privilege</p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* <!--======================= SWAP BLOCK END =====================--> */}\r\n                </div>\r\n\r\n                <div\r\n                  className=\"mainBlock\"\r\n                  style={\r\n                    this.state.cloneData.bgimage\r\n                      ? { paddingTop: 0, display: \"none\" }\r\n                      : { paddingTop: 0 }\r\n                  }\r\n                >\r\n                  {/* <div className=\"error-Msg\">\r\n                            <label>\r\n                                For BSC testnet use this RPC\r\n                                URL:https://data-seed-prebsc-2-s3.binance.org:8545\r\n              </label>\r\n                        </div> */}\r\n                  {/* <br />\r\n                        <br /> */}\r\n                  {/* <!--======================= SWAP BLOCK START =====================--> */}\r\n                  <div className=\"swap-Block\">\r\n                    <div className=\"swap-textBox\" style={{ paddingTop: 0 }}>\r\n                      <div className=\"container-Grid\" onPointerEnter={() => { this.updateTotalAmounts() }}>\r\n                        <div\r\n                          className=\"ssBTNbar01 wow fadeInUp\" data-wow-delay=\"0.2s\"\r\n                          style={{ justifyContent: \"center\" }}\r\n                        >\r\n                          <Link to=\"/ownLicence\" className=\"ssBtn01 ani-1\">\r\n                            FREE SMARTSWAP LICENSE\r\n                          </Link>\r\n                          <Link\r\n                            to=\"/\"\r\n                            className=\"ssBtn02 ani-1\"\r\n                            onClick={() => {\r\n                              this.openPopup(\"LiquidityProvider\");\r\n                            }}\r\n\r\n                          >\r\n                            <span>BECOME A SWAP PROVIDER</span>{\" \"}\r\n                          </Link>\r\n                        </div>\r\n                        {/* <div className=\"ssTitle01 wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                          Alternative to AMMs with zero pools or LPs needed\r\n                        </div> */}\r\n                        {/* <div className=\"ssText01 wow fadeInUp\" data-wow-delay=\"0.4s\" style={{ marginTop: \"10px\" }}>\r\n                          SmartSwap is the world's first smart decentralized\r\n                          exchange (SDEX) providing a one-click slippage-free\r\n                          cross-chain swap in a simple layer that decentralizes\r\n                          the access to all CEX (Centralize exchanges) and OTC\r\n                          (Over-the-counter) industry. The best way to think of\r\n                          SDEX is like PayPal creating a simple one-click layer\r\n                          on top of banks to send and receive funds.\r\n                        </div> */}\r\n                        <div className=\"ssTitle01 wow fadeInRight\" data-wow-delay=\"0.2s\">Supporting blockchains</div>\r\n                        <Carousel className=\"wow fadeInRight caro-1\" data-wow-delay=\"0.3s\"\r\n                          swipeable={false}\r\n                          draggable={false}\r\n                          showDots={false}\r\n                          responsive={responsive}\r\n                          ssr={true} // means to render carousel on server-side.\r\n                          infinite={true}\r\n                          autoPlay={false}\r\n                          autoPlaySpeed={5000}\r\n                          keyBoardControl={true}\r\n                          customTransition=\"all 1sec\"\r\n                          transitionDuration={900}\r\n                          containerclassName=\"carousel-container ani-1\"\r\n                          // removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                          deviceType={this.props.deviceType}\r\n                          dotListclassName=\"custom-dot-list-style\"\r\n                          itemclassName=\"carousel-item-padding-40-px\"\r\n                        >\r\n                          <div className=\"sbSlide\">\r\n                            {\" \"}\r\n                            <img src={SBLogo01} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide\">\r\n                            {\" \"}\r\n                            <img src={SBLogo02} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide\">\r\n                            {\" \"}\r\n                            <img src={SBLogo03} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo04} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo05} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo06} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo07} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo08} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo09} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo010} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo011} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo03} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo04} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo05} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo06} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo07} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo08} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo09} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo010} alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"sbSlide disable\">\r\n                            {\" \"}\r\n                            <img src={SBLogo011} alt=\"\" />{\" \"}\r\n                          </div>\r\n                        </Carousel>\r\n\r\n                        <div className=\"ssTitle01 wow fadeInLeft mb-25\" data-wow-delay=\"0.2s\">\r\n                          SMART Tokenomics in Action\r\n                        </div>\r\n                        <div className=\"ssText01 wow fadeInLeft\" data-wow-delay=\"0.4s\" style={{ marginTop: \"0px\" }}>\r\n                          SmartSwap does not utilize LPs or pools therefore fees\r\n                          are used to support SMART through automatic buybacks.{\" \"}\r\n                        </div>\r\n\r\n                        <div className=\"stActMBX\">\r\n                          <div className=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.1s\">\r\n                            {\" \"}\r\n                            <span>\r\n                              Total Amount Swapped\r\n                            </span>\r\n                            <div className=\"container\">\r\n                              $<AnimatedNumber\r\n                                includeComma\r\n                                animateToNumber={this.state.amounts.totalAmountSwapped}\r\n                                fontStyle={{ fontSize: 25 }}\r\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                              ></AnimatedNumber>\r\n                            </div>{\" \"}\r\n                          </div>\r\n                          <div className=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.2s\">\r\n                            {\" \"}\r\n                            <span>Fees Generated</span>\r\n                            <div className=\"container\">\r\n                              $<AnimatedNumber\r\n                                includeComma\r\n                                animateToNumber={this.state.amounts.feesGenerated}\r\n                                fontStyle={{ fontSize: 25 }}\r\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                              ></AnimatedNumber>\r\n                            </div>{\" \"}\r\n                          </div>\r\n                          <div className=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.3s\">\r\n                            {\" \"}\r\n                            <span>\r\n                              Smart Bought and Burned\r\n                            </span>\r\n                            <div className=\"container\">\r\n                              <AnimatedNumber\r\n                                includeComma\r\n                                animateToNumber={this.state.amounts.smartBoughtBurned}\r\n                                fontStyle={{ fontSize: 25 }}\r\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                              ></AnimatedNumber>\r\n                            </div>{\" \"}\r\n                          </div>\r\n                          <div className=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.4s\">\r\n                            {\" \"}\r\n                            <span>Total Fees Reimbursed</span>\r\n                            <div className=\"container\">\r\n                              $<AnimatedNumber\r\n                                includeComma\r\n                                animateToNumber={this.state.amounts.totalFeesReimbursed}\r\n                                fontStyle={{ fontSize: 25 }}\r\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                              ></AnimatedNumber> </div>{\" \"}\r\n                          </div>\r\n                          <div className=\"stActSbx01 wow zoomIn\" data-wow-delay=\"0.5s\">\r\n                            {\" \"}\r\n                            <span>\r\n                              Total reimbursement staking\r\n                            </span>\r\n                            <div className=\"container\">\r\n                              <AnimatedNumber\r\n                                includeComma\r\n                                animateToNumber={this.state.amounts.totalReimbursementStaking}\r\n                                fontStyle={{ fontSize: 25 }}\r\n                                configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                              ></AnimatedNumber>\r\n                            </div>{\" \"}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"ssTitle01 wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                          SmartSwap AMA Series:\r\n                          <span>\r\n                            Alon Goren (Draper-Goren-Holm) and Yoda (Jude) Regev\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"videoMcontent wow fadeInLeft\" data-wow-delay=\"0.4s\">\r\n                          <div className=\"video-responsive\">\r\n                            <iframe\r\n                              width=\"560\"\r\n                              height=\"315\"\r\n                              src=\"https://www.youtube.com/embed/LKtJ6oaFak0\"\r\n                              title=\"YouTube video player\"\r\n                              frameBorder=\"0\"\r\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                              allowFullScreen\r\n                            ></iframe>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className=\"ssBTNbar01 wow fadeInUp mt-145 mb-135\" data-wow-delay=\"0.2s\"\r\n                          style={{ justifyContent: \"center\" }}\r\n                        >\r\n                          <Link to=\"/ownLicence\" className=\"ssBtn01\">\r\n                            FREE SMARTSWAP LICENSE\r\n                          </Link>\r\n                          <Link\r\n                            to=\"/\"\r\n                            className=\"ssBtn02\"\r\n                            onClick={() => {\r\n                              this.openPopup(\"LiquidityProvider\");\r\n                            }}\r\n                          >\r\n                            <span>BECOME A SWAP PROVIDER</span>{\" \"}\r\n                          </Link>\r\n                        </div>\r\n                        {/* <div className=\"ssTitle01\">Market Prices </div>\r\n                                    <div className=\"ssSearchBox\">\r\n                                        <div className=\"ssSearchMBox01\">\r\n                                            <i className=\"fas fa-search\"></i>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Search coin name or token name\"\r\n                                                onChange={(e) => this.tableSearchHandler(e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"ssSearchMBox02\">\r\n                                            Choose amount of token to compare prices\r\n                      <div className=\"sswapSelectbx\">\r\n                                                <select\r\n                                                    name=\"slct\"\r\n                                                    id=\"slct\"\r\n                                                    onChange={(e) => this.dropDownSearch(e)}\r\n                                                >\r\n                                                    <option value=\"1\">1</option>\r\n                                                    <option value=\"100\">100</option>\r\n                                                    <option value=\"1000\">1000</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"sswapTable01\">\r\n                                        <table\r\n                                            width=\"100%\"\r\n                                            border=\"0\"\r\n                                            cellspacing=\"0\"\r\n                                            cellpadding=\"10\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th\r\n                                                        colspan=\"3\"\r\n                                                        align=\"left\"\r\n                                                        valign=\"middle\"\r\n                                                        scope=\"col\"\r\n                                                        style={{ backgroundColor: '#0e0424' }}\r\n                                                    >\r\n                                                        <div className=\"TableBTN01\">\r\n                                                            Select: <button className=\"active\">BUY</button>{' '}\r\n                                                            <button>SELL</button>\r\n                                                        </div>\r\n                                                    </th>\r\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\r\n                                                        Smart.Exchange\r\n                          </th>\r\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\r\n                                                        CoinGecko\r\n                          </th>\r\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\r\n                                                        CoinMarketCap\r\n                          </th>\r\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\r\n                                                        UniSwap\r\n                          </th>\r\n                                                    <th align=\"left\" valign=\"middle\" scope=\"col\">\r\n                                                        PancakeSwap\r\n                          </th>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td\r\n                                                        width=\"50\"\r\n                                                        align=\"center\"\r\n                                                        valign=\"middle\"\r\n                                                        scope=\"col\"\r\n                                                    >\r\n                                                        #\r\n                          </td>\r\n                                                    <td align=\"left\" valign=\"middle\" scope=\"col\">\r\n                                                        <b>Coin</b>\r\n                                                    </td>\r\n                                                    <td align=\"left\" valign=\"middle\" scope=\"col\">\r\n                                                        <b>Symbol</b>\r\n                                                    </td>\r\n                                                    <td align=\"left\" valign=\"middle\">\r\n                                                        <strong>Final Cost</strong>\r\n                                                    </td>\r\n                                                    <td align=\"left\" valign=\"middle\">\r\n                                                        <strong>Final Cost</strong>\r\n                                                    </td>\r\n                                                    <td align=\"left\" valign=\"middle\">\r\n                                                        <strong>Final Cost</strong>\r\n                                                    </td>\r\n                                                    <td align=\"left\" valign=\"middle\">\r\n                                                        <strong>Final Cost</strong>\r\n                                                    </td>\r\n                                                    <td align=\"left\" valign=\"middle\">\r\n                                                        <strong>Final Cost</strong>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                                {this.state.tableDataToDisplay.length > 0 &&\r\n                                                    this.state.tableDataToDisplay.map((data, i) => {\r\n                                                        return (\r\n                                                            <tr key={i}>\r\n                                                                <td\r\n                                                                    data-label=\"#\"\r\n                                                                    align=\"center\"\r\n                                                                    valign=\"middle\"\r\n                                                                >\r\n                                                                    {i + 1}\r\n                                                                </td>\r\n                                                                <td\r\n                                                                    data-label=\"Coin\"\r\n                                                                    align=\"left\"\r\n                                                                    valign=\"middle\"\r\n                                                                >\r\n                                                                    <div className=\"coinBX\">\r\n                                                                        {' '}\r\n                                                                        <i>\r\n                                                                            <img\r\n                                                                                src={`images/coins/${data.fullName}.png`}\r\n                                                                            />\r\n                                                                        </i>{' '}\r\n                                                                        {data.fullName}{' '}\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td\r\n                                                                    data-label=\"Symbol\"\r\n                                                                    align=\"left\"\r\n                                                                    valign=\"middle\"\r\n                                                                >\r\n                                                                    {data.shortName}\r\n                                                                </td>\r\n                                                                <td align=\"left\" valign=\"middle\">\r\n                                                                    ${parseFloat(data.priceUsd).toFixed(4)}\r\n                                                                </td>\r\n                                                                <td align=\"left\" valign=\"middle\">\r\n                                                                    ${parseFloat(data.coingeckoValue).toFixed(4)}\r\n                                                                </td>\r\n                                                                <td align=\"left\" valign=\"middle\">\r\n                                                                    $\r\n                                  {parseFloat(data.coinMarketCapValue).toFixed(\r\n                                                                    4\r\n                                                                )}\r\n                                                                </td>\r\n                                                                <td align=\"left\" valign=\"middle\">\r\n                                                                    ${parseFloat(data.uniswapValue).toFixed(4)}\r\n                                                                </td>\r\n                                                                <td align=\"left\" valign=\"middle\">\r\n                                                                    $\r\n                                  {parseFloat(\r\n                                                                    data.pancakeswapValue.usdValue\r\n                                                                ).toFixed(4)}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    })}\r\n                                                \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"sswapInfoBXM\">\r\n                                        <div className=\"sswapText\">\r\n                                            All prices before fees and reimbursement\r\n                    </div>\r\n\r\n                                        <div className=\"sswapPowerdBOX\">\r\n                                            Powered by{' '}\r\n                                            <a href=\"#\">\r\n                                                {' '}\r\n                                                <img src=\"images/coinGecko-logo.png\"></img>{' '}\r\n                                            </a>{' '}\r\n                      |\r\n                      <a href=\"#\">\r\n                                                {' '}\r\n                                                <img src=\"images/coinMarketcap-logo01.png\"></img>{' '}\r\n                                            </a>{' '}\r\n                      |\r\n                      <a href=\"#\">\r\n                                                {' '}\r\n                                                <img src=\"images/uniswap-logo.png\"></img>{' '}\r\n                                            </a>{' '}\r\n                      |\r\n                      <a href=\"#\">\r\n                                                {' '}\r\n                                                <img src=\"images/pancake-logo.png\"></img>{' '}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"sswapBreadCome\">\r\n                                        <a href=\"#\">\r\n                                            <i className=\"fas fa-angle-left\"></i>\r\n                                        </a>\r\n                                        <a href=\"#\" className=\"active\">\r\n                                            1\r\n                    </a>\r\n                                        <a href=\"#\">2</a>\r\n                                        <a href=\"#\">3</a>\r\n                                        <a href=\"#\">4</a>\r\n                                        <a href=\"#\">5</a>\r\n                    ...\r\n                    <a href=\"#\">45</a>\r\n                                        <a href=\"#\">\r\n                                            <i className=\"fas fa-angle-right\"></i>\r\n                                        </a>\r\n                                    </div> */}\r\n\r\n                        {/* <div className=\"ssBTNbar01\">\r\n                                        <Link to=\"/ownLicence\" className=\"ssBtn02\">\r\n                                            Get your own free license{' '}\r\n                                        </Link>\r\n                                        <Link to=\"/SmartSwapLicence\" className=\"ssBtn03\">\r\n                                            become a partner{' '}\r\n                                        </Link>\r\n                                    </div> */}\r\n\r\n                        <div className=\"ssTitle01 wow fadeInUp mb-10\" data-wow-delay=\"0.2s\">License Partners</div>\r\n                        <div\r\n                          className=\"VPMainBX wow fadeInUp\" data-wow-delay=\"0.4s\"\r\n                          style={{\r\n                            justifyContent: \"center\",\r\n                            marginBottom: \"80px\",\r\n                          }}\r\n                        >\r\n                          <div className=\"VPSubBX01\">\r\n                            {\" \"}\r\n                            <img src=\"images/lp-logo01.png\" alt=\"\" />{\" \"}\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            {\" \"}\r\n                            <img src=\"images/lp-logo02.png\" alt=\"\" />{\" \"}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"ssTitle01 wow fadeInUp mb-10\" data-wow-delay=\"0.2s\">Venture Partners</div>\r\n\r\n                        <div className=\"VPMainBX wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-01.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-02.png?v1\"\r\n                              alt=\"\"\r\n                            />\r\n                            Hassan (Hatu) Sheikh\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-03.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/bitangels.png\"\r\n                              alt=\"\"\r\n                            />\r\n                            Michael Terpin\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-04.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-05.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/silent.png\"\r\n                              alt=\"\"\r\n                            />\r\n                            Andrea Castiglione\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-07.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-08.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-09.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-010.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/mexc.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-012.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-013.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/fairum.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-014.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-015.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-016.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-017.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-018.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-019.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-020.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-021.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-022.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-023.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-024.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-025.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-026.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-027.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-029.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-030.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-031V2.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-032.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-033.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-034.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-035.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-036.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-037.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-038.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-039.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/vpICON-040.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"VPSubBX01\">\r\n                            <img\r\n                              src=\"images/venture-partners/legion.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        {/* <div className=\"smrtSwapNewsletterBX wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                          <button className='smrtNLBTN01'>Connect Your Wallet To Become An Affiliate</button>\r\n\r\n                          <div className=\"smrtSwapNewslSBX\">\r\n                            <input\r\n                              type=\"text\"\r\n                              value=\"smartswap.exchange/ref/917Ak92j06noRka\"\r\n                            />\r\n                            <button className=\"submitBTN ani-1\">COPY LINK</button>\r\n                          </div>\r\n                          <div className=\"smrtSwapInfoSBX\">\r\n                          Share your link and receive 0.1% in SMART tokens for each swap you refer\r\n                            <i className=\"help-circle\">\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>\r\n                            </i>\r\n                            | Total commission: <span>4526.32</span> SMART\r\n                          </div>\r\n                        </div> */}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* <!--======================= SWAP BLOCK END =====================--> */}\r\n                </div>\r\n              </div>\r\n              {/* <!--======================= SELECT POPUP START =====================--> */}\r\n              {/* <SelectToken/> */}\r\n              {/* <!--======================= SELECT POPUP END =====================--> */}\r\n              {/* <!--======================= WALLET POPUP START =====================--> */}\r\n              <WalletPopup\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n              ></WalletPopup>\r\n              {/* <!--======================= WALLET POPUP END =====================-->\r\n                    <!--======================= COIN POPUP START =====================--> */}\r\n              <CoinPopup\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n                setCurrency={this.setSendCurrency}\r\n                popId={\"sendCurPop\"}\r\n                opositeSelectedCurrrency={this.state.selectedReceiveCurrency}\r\n                selectedCurrrency={this.state.selectedSendCurrency}\r\n              ></CoinPopup>\r\n              <CoinPopup\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n                setCurrency={this.setReceiveCurrency}\r\n                popId={\"receiveCurPop\"}\r\n                opositeSelectedCurrrency={this.state.selectedSendCurrency}\r\n                selectedCurrrency={this.state.selectedReceiveCurrency}\r\n              ></CoinPopup>\r\n\r\n              <LiquidityProvider\r\n                closePopup={this.closePopup}\r\n                openPopup={this.openPopup}\r\n              ></LiquidityProvider>\r\n\r\n              <LiquidityFountainSP\r\n                closePopup={this.closePopup}\r\n                openPopup={this.openPopup}\r\n              />\r\n              <About\r\n                closePopup={this.closePopup}\r\n                openPopup={this.openPopup}\r\n              ></About>\r\n              <PeerPopup\r\n                closePopup={this.closePopup}\r\n                openPopup={this.openPopup}\r\n              ></PeerPopup>\r\n              <HowItWorks\r\n                closePopup={this.closePopup}\r\n                openPopup={this.openPopup}\r\n              ></HowItWorks>\r\n              {/* <DepositToken\r\n                closePopup={this.closePopup}\r\n                openPopup={this.openPopup}\r\n              ></DepositToken> */}\r\n              <CefiToDefi\r\n                closePopup={this.closePopup}\r\n                openPopup={this.openPopup}\r\n              ></CefiToDefi>\r\n              <NoDomain\r\n                closePopup={this.closePopup}\r\n                openPopup={this.openPopup}\r\n                subDomainName={this.state.subDomainName}\r\n              ></NoDomain>\r\n              {/* <!--======================= COIN POPUP END =====================-->\r\n                    <!--======================= SIDE POPUP START =====================--> */}\r\n              <SidePopup\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n                closePopup={() => { this.setState({ sideBar: false }) }}\r\n                openPopup={this.openPopup}\r\n                sideBar={this.state.sideBar}\r\n              ></SidePopup>\r\n              {/* <!--======================= SIDE POPUP END =====================--> */}\r\n              {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gnaJlUA20lk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n            </div>\r\n          </main>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\SmartSwap_frontend\\src\\pages\\extension.js",["528","529"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport constantConfig, { getTokenList, tokenDetails } from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport CONSTANT from \"../constants\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport axios from \"axios\";\r\nimport { isValidAddress } from 'ethereumjs-util';\r\n\r\n\r\nconst $ = window.$;\r\nexport default class Extension extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { checked1: false };\r\n    this.handleChange1 = this.handleChange1.bind(this);\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setSendCurrency = this.setSendCurrency.bind(this);\r\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\r\n    this.updateCloneData = this.updateCloneData.bind(this);\r\n    this.clearPreview = this.clearPreview.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n    this.expedite = this.expedite.bind(this);\r\n    const { match, location, history } = props;\r\n    this.state = {\r\n      web3: null,\r\n      web3Check: false,\r\n      btnClick: false,\r\n      swapFactory: null,\r\n      swapLoading: false,\r\n      selectedSendCurrency: \"BNB\",\r\n      selectedReceiveCurrency: \"ETH\",\r\n      instanceSwapFactoryBinance: null,\r\n      instanceSwapFactoryEthereum: null,\r\n      instanceSwapFactoryPolygon: null,\r\n      instanceReimbursementBinance: null,\r\n      instanceReimbursementEthereum: null,\r\n      tokenInstance: {},\r\n      txLink: \"\",\r\n      wrapBox: \"swap\",\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      allTxHistoryUI: null,\r\n      allPendingTxHistoryUI: null,\r\n      showTxHistory: false,\r\n      showLedger: false,\r\n      currencyPrices: {},\r\n      estimatedGasFee: \"0\",\r\n      tableData: [],\r\n      isSearchTable: false,\r\n      tableSearchResult: [],\r\n      tableDataToDisplay: [],\r\n      liveETHPrice: 0,\r\n      wbnbPrice: 0,\r\n      sideBar: false,\r\n      tokenBalances: {\r\n        JNTR: 0,\r\n        \"JNTR/b\": 0,\r\n        \"JNTR/e\": 0,\r\n        JNTR_APPROVED: 0,\r\n        \"JNTR/b_APPROVED\": 0,\r\n        \"JNTR/e_APPROVED\": 0,\r\n      },\r\n      cloneData:\r\n        typeof location.state === \"undefined\"\r\n          ? {}\r\n          : location.state.cloneData\r\n            ? location.state.cloneData\r\n            : {},\r\n      isloading: false,\r\n      isSubdomain: false,\r\n      noSubDomain: false,\r\n      subDomainName: \"\",\r\n      comingSoonHover:false,\r\n      amounts: {\r\n        totalAmountSwapped: 0,\r\n        feesGenerated: 0,\r\n        smartBoughtBurned: 0,\r\n        totalFeesReimbursed: 0,\r\n        totalReimbursementStaking: 0\r\n      },\r\n      licenseeAddress: {\r\n        56: \"0x0000000000000000000000000000000000000000\",\r\n        1: \"0x0000000000000000000000000000000000000000\",\r\n        97: \"0x0000000000000000000000000000000000000000\",\r\n        42: \"0x0000000000000000000000000000000000000000\",\r\n        80001: \"0x0000000000000000000000000000000000000000\",\r\n        137: \"0x0000000000000000000000000000000000000000\",\r\n      },\r\n      loadingHistory: false,\r\n      selectedOptionSend: { value: tokenDetails.BNB.symbol, label: tokenDetails.BNB.symbol, networkId: tokenDetails.BNB.networkId },\r\n      selectedOptionReceive: { value: tokenDetails.ETH.symbol, label: tokenDetails.ETH.symbol, networkId: tokenDetails.ETH.networkId },\r\n      selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(\"BNB\", \"ETH\"),\r\n      sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"ETH\" && value.label !== \"BNB\";\r\n      }),\r\n      recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"BNB\" && value.label !== \"ETH\";\r\n      }),\r\n      web3Provider: {\r\n        [process.env.REACT_APP_ETH_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_BSC_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_POLYGON_CHAIN_ID]: null,\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange1(checked1) {\r\n    this.setState({ checked1 });\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.state.sideBar == true) {\r\n      this.setState({\r\n        sideBar: false\r\n      });\r\n    }\r\n  }\r\n  updateCloneData = (data) => {\r\n    this.setState({\r\n      cloneData: data,\r\n    });\r\n  };\r\n\r\n  clearPreview = () => {\r\n    const r = document.querySelector(\":root\");\r\n    r.style.removeProperty(\"--text-color\");\r\n    r.style.removeProperty(\"--button-bg-color\");\r\n    r.style.removeProperty(\"--req-bg\");\r\n    this.setState({\r\n      cloneData: {},\r\n    });\r\n    this.props.history.push({\r\n      pathname: \"\",\r\n      state: {\r\n        cloneData: {},\r\n      },\r\n    });\r\n  };\r\n\r\n  getData = async (domain) => {\r\n    this.setState({\r\n      isloading: true,\r\n    });\r\n    try {\r\n      const res = await axios.get(\r\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\r\n      );\r\n      console.log(res);\r\n      if (res.data.response_code === 200) {\r\n        if (domain[0].substring(0, 2) === \"0x\") {\r\n          if (isValidAddress(domain[0])) {\r\n            web3Config.setLicenseeData(res.data.result)\r\n          }\r\n        } else {\r\n          const r = document.querySelector(\":root\");\r\n          r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\r\n          r.style.setProperty(\r\n            \"--button-bg-color\",\r\n            res.data.result.seconderyColor\r\n          );\r\n          r.style.setProperty(\r\n            \"--req-bg\",\r\n            `url(${res.data.result.backGroundImage})`\r\n          );\r\n          r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\r\n          var style = document.createElement('style');\r\n          style.type = 'text/css';\r\n          style.innerHTML = `* { font-family: ${res.data.result.fontStyle} !important; }`;\r\n          document.getElementsByTagName('head')[0].appendChild(style);\r\n          // r.style.setProperty(\"font-family\", res.data.result.fontStyle, \"important\");\r\n          // window.document.body.setAttribute('style', 'font-family:Arial !important');\r\n          this.setState({\r\n            cloneData: {\r\n              bgimage: res.data.result.backGroundImage,\r\n              logoImage: res.data.result.logo,\r\n              subDomain: res.data.result.subDomain,\r\n              primaryColor: res.data.result.primaryColors,\r\n              secondaryColor: res.data.result.seconderyColor,\r\n              fontStyle: res.data.result.fontStyle,\r\n              backgroundOverLay: res.data.result.backgroundOverLay,\r\n              swapButtonColor: res.data.result.swapButton,\r\n              logoUrl: res.data.result.logoUrl,\r\n              sideBar: res.data.result.sideBar\r\n            },\r\n            licenseeAddress: {\r\n              56: res.data.result.bscLicenseAddress,\r\n              1: res.data.result.ethLicenseAddress,\r\n              97: res.data.result.bscLicenseAddress,\r\n              42: res.data.result.ethLicenseAddress\r\n            }\r\n          });\r\n        }\r\n      } else if (res.data.response_code === 404) {\r\n        this.setState({\r\n          noSubDomain: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.openPopup(\"NoDomain\");\r\n        }, 100);\r\n      }\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.log(error.response);\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  setSendCurrency(currency) {\r\n    this.setState({ selectedSendCurrency: currency }, () => {\r\n      this.closePopup(\"sendCurPop\");\r\n    });\r\n  }\r\n  setReceiveCurrency(currency) {\r\n    this.setState({ selectedReceiveCurrency: currency }, () => {\r\n      this.closePopup(\"receiveCurPop\");\r\n    });\r\n  }\r\n \r\n  async expedite(txId, processAmount, sentChainId) {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    console.log(networkId)\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n\r\n    if (sentChainId !== networkId) {\r\n      notificationConfig.warning(\"Change metamask network to \" + CONSTANT.NETWORK_ID[sentChainId] + \"!\");\r\n      return;\r\n    }\r\n\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n    let allFees = await this.calculateSwapFees(processAmount);\r\n    await swapFactory.expedite(txId, (((Number(allFees.processingFees) * 0.10 + Number(allFees.processingFees))) * 10 ** 18).toFixed(),\r\n      (hash) => {\r\n        this.setState({\r\n        \r\n        });\r\n      },\r\n      (receipt) => {\r\n    \r\n        notificationConfig.success(\"Expedite Success\");\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isloading ? (\r\n          <p>Loading</p>\r\n        ) : (\r\n          <main id=\"main\" className=\"smartSwap\">\r\n            <div className=\"fullscreen-bg\">\r\n              <div className=\"fsbg_sad01\"></div>\r\n              <div className=\"fsbg_container\">\r\n                <video loop autoPlay muted className=\"fullscreen-bg__video\">\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.webm\"} type=\"video/webm\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.mp4\"} type=\"video/mp4\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.ogv\"} type=\"video/ogg\" />\r\n                </video>\r\n              </div>\r\n            </div>\r\n            <div className=\"main\">\r\n              {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n              <RightSideMenu\r\n                web3={this.state.web3}\r\n                openPopup={this.openPopup}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n              ></RightSideMenu>\r\n              {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n              <Header\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n                isSubdomain={this.state.isSubdomain}\r\n                clearPreview={this.clearPreview}\r\n              ></Header>\r\n              {/* <!--======================= HEADER END =====================--> */}\r\n              <div className=\"backgroundBlock\" onClick={this.handleClick} >\r\n                <div\r\n                  className={\r\n                    this.state.cloneData.bgimage\r\n                      ? \"mainBlock required-bg\"\r\n                      : \"mainBlock\"\r\n                  }\r\n                  style={\r\n                    this.state.cloneData.bgimage\r\n                      ? this.state.cloneData.fontStyle &&\r\n                        this.state.cloneData.fontStyle !== \"Default\"\r\n                        ? {\r\n                          fontFamily: this.state.cloneData.fontStyle,\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                        : {\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                      : null\r\n                  }\r\n                >\r\n                  <div className=\"container-Grid\">\r\n                    <div className=\"boost-outer\">\r\n                      <div className=\"boost-left ver2\">\r\n                        <h2>Best Market Prices on dApps</h2>\r\n                        <p>Super easy one click smart bridge solution allowing you to pay with any token from any blockchain to any project on any blockchain.</p>\r\n                        <p className=\"green ver2\">Gain $100 of SMART when using SmartBridge\r\n                          <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"left\" data-pt-title=\"help text\" aria-hidden=\"true\"></i></i>\r\n                        </p>\r\n                        <a class=\"ssBtn01 ani-1 cs-btn\" href=\"#\" onMouseEnter={(e)=>this.setState({comingSoonHover:true})} onMouseLeave={(e)=>this.setState({comingSoonHover:false})}>{this.state.comingSoonHover ?\"COMING SOON\" :\"ADD TO BROWSER\"}</a>\r\n                        {/* <a class=\"ssBtn01 ani-1 cs-btn\" href=\"#\">COMING SOON</a> */}\r\n                      </div>\r\n                      <div className=\"boost-right ver2\">\r\n                        <img src=\"images/extension-screen.png\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\SmartSwap_frontend\\src\\config\\web3Config.js",[],"D:\\React\\SmartSwap_frontend\\src\\config\\notificationConfig.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\CreateLicense.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\CoinPopup.js",["530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport CONSTANT from \"../constants\";\r\n\r\n\r\nconst PrePath = CONSTANT.PrePath;\r\nexport default class CoinPopup extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.coinList)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id={this.props.popId}>\r\n                <div className=\"container-Grid\">\r\n                    {/* <div className=\"tab-Nav\">\r\n                        <a href=\"javascript:void(0)\" className={\"tab-Link ani-1 active\" + this.props.popId} data-id=\"tab-01\">Tokens</a>\r\n                        <a href=\"javascript:void(0)\" className={\"tab-Link ani-1 hideMobile\" + this.props.popId} data-id=\"tab-02\">LP Tokens</a>\r\n                    </div> */}\r\n                    <div className={\"tab-Content\" + this.props.popId} id=\"tab-01\">\r\n                        <div className=\"wallet-popupBlock\">\r\n                            {/* <div className=\"search-Mbx\">\r\n                                <div className=\"popupViewFMbox\">\r\n                                    <a href=\"#\"><i className=\"fas fa-square\"></i></a>\r\n                                    <a href=\"#\" className=\"active\"><i className=\"fas fa-th-list\"></i></a>\r\n                                </div>\r\n\r\n                                <div className=\"search-Bx\"> <a href=\"javascript:void(0);\"><span className=\"icon-Box\"><i\r\n                                                className=\"fas fa-search\"></i></span></a>\r\n                                    <input type=\"text\" placeholder=\"Search by symbol or coin name\" />\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"wallet-boxWrap\">\r\n                                {\r\n                                    Object.keys(this.state.coinList).map((key) => {\r\n                                        // [Number(key), obj[key]]\r\n                                        if (key === this.props.opositeSelectedCurrrency || this.state.coinList[key].networkId === this.state.coinList[this.props.opositeSelectedCurrrency].networkId) {\r\n                                            return null\r\n                                        } else {\r\n                                            return (\r\n                                                <div className=\"wallet-Bx ani-1\">\r\n                                                    <div className=\"img-Box\">\r\n                                                        <span className=\"round-Bg\">\r\n                                                            <span className=\"icon-Box icon16\">\r\n                                                                <img src={PrePath + \"/images/currencies/\" + this.state.coinList[key].iconName + \".png\"} />\r\n                                                            </span>\r\n                                                        </span>\r\n                                                        <div className=\"title-Name\">{key}</div>\r\n                                                    </div>\r\n                                                    <a href=\"javascript:void(0);\" className=\"faux-Link\" onClick={() => this.props.setCurrency(key)}></a>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon16\"></span></span>\r\n                                        <div className=\"title-Name\">SMART</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon01\"></span></span>\r\n                                        <div className=\"title-Name\">ZERO/1</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon02\"></span></span>\r\n                                        <div className=\"title-Name\">Secured Tether USD</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon05\"></span></span>\r\n                                        <div className=\"title-Name\">Paxos Standard</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon06\"></span></span>\r\n                                        <div className=\"title-Name\">StatusNetwork</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon07\"></span></span>\r\n                                        <div className=\"title-Name\">HuobiToken</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon08\"></span></span>\r\n                                        <div className=\"title-Name\">ChainLink Token</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon09\"></span></span>\r\n                                        <div className=\"title-Name\">OmiseGO</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon10\"></span></span>\r\n                                        <div className=\"title-Name\">BAT</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon11\"></span></span>\r\n                                        <div className=\"title-Name\">IOSToken</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon12\"></span></span>\r\n                                        <div className=\"title-Name\">Dai Stablecoin v1.0</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <a href=\"javascript:void(0);\" className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\Deposit-withdraw.js",["570","571","572","573","574","575","576","577","578"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport constantConfig from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport ReimbursementContract from \"../helper/reimbursementContract\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class DepositToken extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false,\r\n            depositTokenAmt: 0,\r\n            withdrawTokenAmt: 0,\r\n            network: null,\r\n            vaultAddress: null,\r\n            depositLoading: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config,\r\n            network: newProps.network,\r\n            vaultAddress: newProps.vaultAddress,\r\n            tokenAddress: newProps.tokenAddress\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#DepositToken .tab-Link\").hover(function () {\r\n            $(\".tab-Link\").removeClass(\"active\")\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-Content\").hide();\r\n            $(\"#\" + $(this).attr(\"data-id\")).show();\r\n        });\r\n\r\n    }\r\n\r\n    async handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        if (Number(value) >= 0 && value.length <= 5) {\r\n            this.setState({\r\n                [name]: value\r\n            })\r\n        } else {\r\n            return\r\n        }\r\n\r\n    };\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n    async depositTokens() {\r\n        this.setState({ depositLoading: true })\r\n        let { network, vaultAddress, tokenAddress } = this.props;\r\n        let { depositTokenAmt } = this.state;\r\n        await web3Config.connectWallet(0);\r\n        let newNetworkId = web3Config.getNetworkId()\r\n\r\n        if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\r\n            notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\r\n            this.setState({ depositLoading: false })\r\n            return;\r\n        }\r\n        if (\r\n            network === \"Ethereum\" &&\r\n            (newNetworkId === 97 || newNetworkId === 56)\r\n        ) {\r\n            notificationConfig.warning(\"Change metamask network to Ethereum!\");\r\n            this.setState({ depositLoading: false })\r\n            return;\r\n        } else if (\r\n            network === \"BSC\" &&\r\n            (newNetworkId === 42 || newNetworkId === 1)\r\n        ) {\r\n            notificationConfig.warning(\"Change metamask network to Binance!\");\r\n            this.setState({ depositLoading: false })\r\n            return;\r\n        }\r\n\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        let reimbursementContract = new ReimbursementContract(web3, networkId);\r\n\r\n        let setDepositTokensData = {};\r\n\r\n        setDepositTokensData[\"to\"] = vaultAddress;\r\n        setDepositTokensData[\"amount\"] = depositTokenAmt;\r\n        setDepositTokensData[\"tokenAddress\"] = tokenAddress;\r\n\r\n        reimbursementContract.depositTokens(\r\n            setDepositTokensData,\r\n            (hash) => {\r\n                this.setState({\r\n                    // swapLoading: true,\r\n                    // txIdSent: hash,\r\n                    // txLinkSend: data[networkId].explorer + '/tx/' + hash,\r\n                });\r\n            },\r\n            async (receipt) => {\r\n                notificationConfig.success('Deposit Tokens Successfully!');\r\n                this.setState({ depositLoading: false })\r\n            },\r\n            async (error) => {\r\n                if (error.code === 4001) {\r\n                    notificationConfig.error(\"Transaction rejected!\")\r\n                }\r\n                this.setState({ depositLoading: false })\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    async withdrawTokens() {\r\n        this.setState({ withdrawLoading: true })\r\n        let { network, vaultAddress } = this.props;\r\n        let { withdrawTokenAmt } = this.state;\r\n        await web3Config.connectWallet(0);\r\n        let newNetworkId = web3Config.getNetworkId()\r\n\r\n        if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\r\n            notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\r\n            this.setState({ withdrawLoading: false })\r\n            return;\r\n        }\r\n        if (\r\n            network === \"Ethereum\" &&\r\n            (newNetworkId === 97 || newNetworkId === 56)\r\n        ) {\r\n            notificationConfig.warning(\"Change metamask network to Ethereum!\");\r\n            this.setState({ withdrawLoading: false })\r\n            return;\r\n        } else if (\r\n            network === \"BSC\" &&\r\n            (newNetworkId === 42 || newNetworkId === 1)\r\n        ) {\r\n            notificationConfig.warning(\"Change metamask network to Binance!\");\r\n            this.setState({ withdrawLoading: false })\r\n            return;\r\n        }\r\n\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        let reimbursementContract = new ReimbursementContract(web3, networkId);\r\n\r\n        let setWithdrawTokensData = {};\r\n\r\n        setWithdrawTokensData[\"vault\"] = vaultAddress;\r\n        setWithdrawTokensData[\"amount\"] = withdrawTokenAmt;\r\n        setWithdrawTokensData[\"reimbursementAddress\"] = constantConfig[networkId].reimbursementContract\r\n        // setWithdrawTokensData[\"tokenAddress\"] = tokenAddress;\r\n\r\n        reimbursementContract.withdrawTokens(\r\n            setWithdrawTokensData,\r\n            (hash) => {\r\n                this.setState({\r\n                    // swapLoading: true,\r\n                    // txIdSent: hash,\r\n                    // txLinkSend: data[networkId].explorer + '/tx/' + hash,\r\n                });\r\n            },\r\n            async (receipt) => {\r\n                notificationConfig.success('Withdraw Tokens Successfully!');\r\n                this.setState({ withdrawLoading: false })\r\n            },\r\n            async (error) => {\r\n                if (error.code === 4001) {\r\n                    notificationConfig.error(\"Transaction rejected!\")\r\n                }\r\n                this.setState({ withdrawLoading: false })\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"DepositToken\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"MainTabBox\" style={{ paddingTop: '80px' }}>\r\n                        <div className=\"tab-Nav\">\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-A1\">Deposit</a>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-A2\">Withdrawal</a>\r\n                        </div>\r\n\r\n\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-A1\">\r\n\r\n                            <div className=\"wtMBX\" style={{ marginTop: '130px' }}>\r\n                                <div class=\"gwFormSbox01\">\r\n                                    <div class=\"gwFormTitle01\">Amount</div>\r\n                                    <input name=\"depositTokenAmt\" id=\"fontStyle\" class=\"subdomain\" style={{ padding: '20px 15px', width: '100%', backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px' }} onChange={this.handleInputChange.bind(this)} >\r\n                                    </input>\r\n                                    <div class=\"smlInfotxt01\" style={{ textAlign: 'left' }}>Max available to deposit 1,000,000 [TOKEN]</div>\r\n                                </div>\r\n                                <div class=\"gwFormSFormbox03\">\r\n                                    {this.state.depositLoading ?\r\n                                        <button class=\"gwFormBTN01 greenBack\">\r\n                                            <Loader type=\"ThreeDots\" color=\"#fff\" height={15} width={80} />\r\n                                        </button>\r\n                                        :\r\n                                        <button class=\"gwFormBTN01 greenBack\" onClick={() => { this.depositTokens() }}>\r\n                                            DEPOSIT\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }}>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link \" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-A2\">SmartSwap vs Atomic Swap & Other Swaps</a>\r\n                        </div>\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-A2\">\r\n                            <div className=\"wtMBX\" style={{ marginTop: '130px' }}>\r\n                                <div class=\"gwFormSbox01\">\r\n                                    <div class=\"gwFormTitle01\">Amount</div>\r\n                                    <input name=\"withdrawTokenAmt\" id=\"fontStyle\" class=\"subdomain\" style={{ padding: '20px 15px', width: '100%', backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px' }} onChange={this.handleInputChange.bind(this)} >\r\n                                    </input>\r\n                                    <div class=\"smlInfotxt01\" style={{ textAlign: 'left' }}>Max available to withdraw 1,000,000 [TOKEN]</div>\r\n                                </div>\r\n                                <div class=\"gwFormSFormbox03\">\r\n\r\n                                    {this.state.withdrawLoading ?\r\n                                        <button class=\"gwFormBTN01 blackBack\">\r\n                                            <Loader type=\"ThreeDots\" color=\"#fff\" height={15} width={80} />\r\n                                        </button>\r\n                                        :\r\n                                        <button class=\"gwFormBTN01 blackBack\" onClick={() => { this.withdrawTokens() }}>\r\n                                            WITHDRAW\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"DepositToken\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\constants.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\SidePopup.js",["579","580"],"import React, { PureComponent } from \"react\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport InputRange from 'react-input-range';\r\n\r\nexport default class SidePopup extends PureComponent {\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config\r\n        }\r\n        this.state = { value: 50 };\r\n    }\r\n  \r\n\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={`side-Popup  ${this.props.sideBar && 'active'}` }>\r\n                <div className=\"popup-Box\">\r\n\r\n                    <div className=\"sidePopup-tablink\">\r\n                        <span className=\"spTitle01\">Swap limit </span>\r\n                        {/* <a href=\"#\" className=\"active\">Swap Limit</a> */}\r\n                    </div> \r\n\r\n                    {/* <!-- Gas limit Content  -->  */}\r\n\r\n\r\n                      <div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Expedite swap via SP :<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"left\" data-pt-title=\"<p>In case that there is no spread between average market price to the actual market price on CEX, user will cover expedite fees which will be deduct from the total receiving tokens. those expedite fee will be no more than 0.8% to allow the SP to buy immediately at market price. </p><p>for example, if SP is looking to gain 0.5% spread and the current spread between average market price to the market price is 0.4%, than user will cover only 0.1% expedite fee</p> <p>Any paid expedite fee will be 100% reimbursement to the user with SMART tokens</p>\" aria-hidden=\"true\"></i></i></div>\r\n                            <div className=\"amt-Text\">\r\n                            <div className=\"apollo-element apollo-element-active apollo-field-switcher\"> \r\n                                            <div className=\"apollo-fieldset\">\r\n                                                <label> <input type=\"checkbox\"  name=\"shortcode[active]\" value=\"1\" data-depend-id=\"active\" data-atts=\"active\" />\r\n                                                    <em data-on=\"on\" data-off=\"off\"></em><span></span>\r\n                                                </label> \r\n                                            </div> \r\n                                        </div>\r\n                                        </div>\r\n                        </div> \r\n\r\n                        <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\" style={{marginTop: '10px', marginBottom: 'auto'}}>Maximum spread for expedite :<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></div>\r\n                            <div className=\"amt-Text\">\r\n                                <div className=\"dragorInput v3\">\r\n                                    <InputRange\r\n                                        step={1}\r\n                                        maxValue={100}\r\n                                        minValue={0}\r\n                                        value={this.state.value}\r\n                                        onChange={value => this.setState({ value })}\r\n                                        formatLabel={value => `${value}%`}\r\n                                        onChangeComplete={value => console.log(value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                         \r\n                        {/* <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\">Send:</div>\r\n                            <div className=\"amt-Text \">\r\n                                <span className=\"amtCurrecy \">$</span>\r\n                                <input type=\"text\" defaultValue=\"100\" />\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\">Receive 1:1 same face value :</div>\r\n                            <div className=\"cheMBX inline\"> \r\n                                <div className=\"md-radio\">\r\n                                    <input type=\"radio\"  id=\"rr05\" name=\"stepin48\" /> \r\n                                        <label htmlFor=\"rr05\">As Market<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i> </label>\r\n                                </div> \r\n                                <div className=\"md-radio\">\r\n                                    <input type=\"radio\" defaultChecked id=\"rr06\" name=\"stepin48\" /> \r\n                                        <label htmlFor=\"rr06\">As sent<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i> </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\">Minimum amount to swap with :</div>\r\n                            <div className=\"amt-Text \">\r\n                                <span className=\"amtCurrecy \">$</span>\r\n                                <input type=\"text\" defaultValue=\"100\" />\r\n                            </div>\r\n                        </div> \r\n                        {/* <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\">Max users to swap with :</div>\r\n                            <div className=\"amt-Text\">10</div>\r\n                        </div> */}\r\n                        {/* <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Ethereum gas :</div>\r\n                            <div className=\"amt-Text\">0.000253 ETH</div>\r\n                        </div> */}\r\n                        {/* <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Bitcoin transfer commission :</div>\r\n                            <div className=\"amt-Text\">0.000235 BTC</div>\r\n                        </div> */}\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Gas cost :</div>\r\n                            <div className=\"amt-Text\">0.000253 ETH</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">3<sup>rd</sup> party on-chain validation :</div>\r\n                            <div className=\"amt-Text\">0.000135 ETH</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Transfer commission :</div>\r\n                            <div className=\"amt-Text\">$0</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">SmartSwap transaction fee : <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top\" data-pt-title=\"80% of fees goes to support liquidity for SMART token and 20% goes to Atom Foundation to support development\"\r\n                                    aria-hidden=\"true\"></i></i></div>\r\n                            <div className=\"amt-Text\">$0 / 0%</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Slippage :</div>\r\n                            <div className=\"amt-Text\">$0 / 0%</div>\r\n                        </div> \r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Estimated cost :</div>\r\n                            <div className=\"amt-Text red-Color\">-$5.7556 (0.01235 ETH | 0.0002 BTC)</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">1:1 SMART rebate :</div>\r\n                            <div className=\"amt-Text green-Color\">+$5.7556 (5.7556 ZERO/1)</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Final cost to use SmartSwap :</div>\r\n                            <div className=\"amt-Text\">$0 / 0%</div>\r\n                        </div>\r\n                        <ul className=\"text-Box\">\r\n                            <li><span className=\"icon-Box\"><i className=\"fas fa-exclamation-circle\"></i></span><span>SmartSwap reimburses all swap fees and does not allow any loss of value due to spread or volatility. The estimated fees cost covers the swap fees and the direct cost of blockchain gas. If the user is swapping BTC, there is an additional cost for 3rd party providers to validate on-chain the exact deposit amount of BTC.</span></li>\r\n                            <li><span> user sending BTC will deposit the maximum estimated gas cost to a temporary wallet generated by SmartSwap and 100% owned by the user. If the total gas cost at the end of the swap is less than the estimated amount, the temporary wallet returns the balance to the user’s wallet.</span></li>\r\n                            <li><span>SmartSwap users have the option to receive 100% reimbursement for their gas and swap fees. Users are able to claim reimbursements via the reimbursement staking contract. To release reimbursements users must stake the 1:1 equal amount of SMART for one year, but will be able to release partial amounts of the reimbursement if withdrawn at any time before the 1 year period. The pending balance accumulates and the user is able to claim the rest.  </span></li>\r\n                            <li style={{marginBottom: '0px'}}><span>Example</span></li>\r\n                            <li><span>If over the year a user spent over $1000 or more on gas, at any time he can be reimbursed for such cost even if the SMART token value is higher due to appreciation.</span></li>\r\n                        </ul>\r\n                    </div>  \r\n\r\n                    {/* <!-- swap limit Content  --> */}\r\n                    {/* <div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Send :</div>\r\n                            <div className=\"amt-Text\">\r\n                                <span className=\"amtCurrecy\">$</span>\r\n                                <input type=\"text\" value=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sidepTitle01\">Receive 1:1</div>\r\n                        <div className=\"radioWrap\">\r\n                            <div className=\"md-radio\">\r\n                                <input type=\"radio\" id=\"radio145\" name=\"stepin50\" value=\"option145\" checked=\"\" />\r\n                                <label htmlFor=\"radio145\">Same face value as market <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top\" data-pt-title=\"Help Text Here\"\r\n                                    aria-hidden=\"true\"></i></i></label>\r\n                            </div>\r\n                            <div className=\"md-radio\">\r\n                                <input type=\"radio\" id=\"radio146\" name=\"stepin50\" value=\"option146\" />\r\n                                <label htmlFor=\"radio146\">Same face value as sends</label>\r\n                            </div>\r\n                            \r\n                        </div> \r\n                        <ul className=\"text-Box\">\r\n                            <li><span className=\"icon-Box\"><i className=\"fas fa-exclamation-circle\"></i></span><span>SmartSwap reimburses all swap fees and does not allow any loss of value due to spread or volatility. The estimated fees cost covers the swap fees and the direct cost of blockchain gas. If the user is swapping BTC, there is an additional cost for 3rd party providers to validate on-chain the exact deposit amount of BTC.</span></li>\r\n                            <li><span>A user sending BTC will deposit the maximum estimated gas cost to a temporary wallet generated by SmartSwap and 100% owned by the user. If the total gas cost at the end of the swap is less than the estimated amount, the temporary wallet returns the balance to the userâ€™s wallet.</span></li>\r\n                            <li><span>Once the final cost of gas and fees is known at the end of the swap, SmartSwap reimburses users with SMART at 100%.</span></li>\r\n                        </ul>\r\n                    </div> */}\r\n\r\n\r\n\r\n\r\n\r\n                    <a href=\"javascript:void\" className=\"close-Icon\" onClick={this.props.closePopup }><img src=\"images/close-btn.png\" alt=\"\"/></a>\r\n\r\n                </div>\r\n            </div>       \r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\withdraw_token.js",["581","582","583"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\n\r\nexport default class WithDrawToken extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: 45000,\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.coinList)\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"WithdrawToken\">\r\n\r\n                <div className=\"container-Grid\">\r\n \r\n                        \r\n                        <div className=\"wtMBX\">\r\n                        <div class=\"peerTitle01\">Withdraw Token</div>\r\n                            <div class=\"gwFormSbox01\">\r\n                                <div class=\"gwFormTitle01\">Tokens name</div>\r\n                                    <select name=\"fontStyle\" id=\"fontStyle\" class=\"subdomain\" style={{padding: '20px 15px',  width: '100%',  backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px'}} >\r\n                                        <option value=\"a\">Token Name A</option>\r\n                                        <option value=\"b\">Token Name B</option> \r\n                                    </select>\r\n                            </div>\r\n                            <div class=\"gwFormSbox01\">\r\n                                <div class=\"gwFormTitle01\">Tokens to withdraw</div>\r\n                                    <input name=\"fontStyle\" id=\"fontStyle\" class=\"subdomain\" style={{padding: '20px 15px',  width: '100%',  backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px'}} > \r\n                                    </input>\r\n                                    <div class=\"smlInfotxt01\" style={{textAlign: 'left'}}>Max 7,589.653 SMART</div>\r\n                            </div>\r\n                            <div class=\"gwFormSFormbox03\"><button class=\"gwFormBTN01 blackBack\">WITHDRAW</button></div>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n \r\n\r\n                </div>\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"WithdrawToken\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\helper\\reimbursementContract.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\Header.js",["584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618"],"import React, { PureComponent } from \"react\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Header extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      web3: props.web3,\r\n      web3Config: props.web3Config,\r\n      address: null\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      web3: newProps.web3,\r\n      web3Config: newProps.web3Config,\r\n      address: newProps.web3Config.getAddress()\r\n    }, () => {\r\n      if (newProps.web3Config.getAddress() !== null) {\r\n        this.updateAcc()\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    const { isSubdomain, cloneData } = this.props;\r\n\r\n    if ((cloneData && cloneData.isPreview) || isSubdomain) {\r\n      setTimeout(() => {\r\n        window\r\n          .$(window)\r\n          .resize(function () {\r\n            if (window.$(this).width() > 768) {\r\n              window\r\n                .$(\r\n                  \".wallet-Popup, .side-Popup, #security-DigitalPopup, .menuSideBarContainer\"\r\n                )\r\n                .mCustomScrollbar(); //apply scrollbar with your options\r\n            } else {\r\n              window\r\n                .$(\r\n                  \".wallet-Popup, .side-Popup, #security-DigitalPopup, .menuSideBarContainer\"\r\n                )\r\n                .mCustomScrollbar(\"destroy\"); //destroy scrollbar\r\n            }\r\n          })\r\n          .trigger(\"resize\");\r\n\r\n        // var menuOpen = false;\r\n        // window.$(\"#DotMenu\").click(function (event) {  \r\n        //   window.$(\".menuSideBar\").animate({ right: \"0\", opacity: \"1\" }, 500); \r\n        //   menuOpen = true;\r\n        //   event.stopPropagation();\r\n        // });\r\n\r\n\r\n        // window.$(\".main, .MenuClose\").click(function (e) {\r\n        //   if (menuOpen) {\r\n        //     if (!window.$(e.target).is(\".menuSideBar *, .menuSideBar\")) {\r\n        //       window\r\n        //         .$(\".menuSideBar\")\r\n        //         .animate({ right: \"-100%\", opacity: \"0\" }, 500);\r\n        //     }\r\n        //   }\r\n        // });\r\n        // window.$(\".MenuClose, .footerV2-LanBoxLink\").click(function (e) {\r\n        //   if (menuOpen) {\r\n        //     window\r\n        //       .$(\".menuSideBar\")\r\n        //       .animate({ right: \"-100%\", opacity: \"0\" }, 500);\r\n        //   }\r\n        // });\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async updateAcc() {\r\n    setInterval(async () => {\r\n      await web3Config.checkAccount()\r\n      this.setState({\r\n        address: web3Config.getAddress()\r\n      })\r\n    }, 10000)\r\n  }\r\n\r\n  render() {\r\n    const { cloneData, clearPreview } = this.props;\r\n    // console.log({ cloneData, clearPreview });\r\n    const urlData = cloneData.logoUrl;\r\n    const logoPath = cloneData.logoImage\r\n      ? cloneData.logoImage\r\n      : \"images/logo.png\";\r\n    return (\r\n      <header className=\"header wow fadeInDown\">\r\n        <div className=\"logo\">\r\n          <a className=\"urlData\" href={urlData ? urlData : \"/\"} target=\"_blank\">\r\n            <img className=\"logoimage\" src={logoPath} alt=\"\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"leftMenu\">\r\n          <Link to='/' className=\"active\">SMARTSWAP</Link>\r\n          <Link to='/extension'>SMARTBRIDGE EXTENSION</Link>\r\n          <Link to='/projects'>SMARTBRIDGE FOR PROJECTS</Link>\r\n        </div>\r\n        <div className=\"rightMenu\">\r\n          {cloneData && cloneData.isPreview && (\r\n            <>\r\n              <Link\r\n                className=\"ssBtn03 clone-button\"\r\n                to={{\r\n                  pathname: \"/ownLicence\",\r\n                  state: {\r\n                    cloneData: cloneData,\r\n                  },\r\n                }}\r\n              >\r\n                Continue\r\n              </Link>\r\n              <button className=\"ssBtn03 clone-button\" onClick={clearPreview}>\r\n                Cancel Preview\r\n              </button>\r\n            </>\r\n          )}\r\n          {/* <a style={{color:\"orange\",marginRight:\"20px\"}} target=\"_blank\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSf9vPdd87ai-O_ZMIY5Wr88DF6KTLMheTL1nzvm9fXEgJTXJg/viewform\">Smartswap PreSale </a> */}\r\n          <div className=\"rmUserWallet\">\r\n            {this.state.web3 !== null\r\n              ? this.state.address.slice(0, 6) +\r\n              \"...\" +\r\n              this.state.address.slice(38, 42)\r\n              : null}\r\n          </div>\r\n          <a\r\n            href=\"javascript:void(0);\"\r\n            className=\"rmDotLink  \"\r\n            id=\"DotMenu\"\r\n            style={{ color: this.state.web3 !== null ? \"#91dc27\" : \"white\" }}\r\n          >\r\n            {/* <i className=\"fas fa-ellipsis-h\"></i> */}\r\n            {/* <i className=\"fas fa-circle\"></i> */}\r\n          </a>\r\n        </div>\r\n        <div id=\"langBox\" className=\"autoClose n-collapse\">\r\n          <div\r\n            className={\r\n              cloneData.logoImage\r\n                ? \"langBoxContainer subdomain clearfix\"\r\n                : \"langBoxContainer clearfix\"\r\n            }\r\n          >\r\n            <div className=\"lanbox01\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\" className=\"active\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon01\"></i>\r\n                </div>\r\n                English\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon02\"></i>\r\n                </div>\r\n                中文繁體\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon03\"></i>\r\n                </div>\r\n                Tiếng Việt\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon04\"></i>\r\n                </div>\r\n                العربية\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon05\"></i>\r\n                </div>\r\n                Deutsch\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon06\"></i>\r\n                </div>\r\n                Pусский\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon07\"></i>\r\n                </div>\r\n                Español\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon08\"></i>\r\n                </div>\r\n                <span style={{ unicodeBidi: \"bidi-override\" }}>תירבע</span>\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon09\"></i>\r\n                </div>\r\n                BAHASA INDONESIA\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon010\"></i>\r\n                </div>\r\n                Türkçe\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon011\"></i>\r\n                </div>\r\n                Português\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon012\"></i>\r\n                </div>\r\n                हिन्दी\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon013\"></i>\r\n                </div>\r\n                Français\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon014\"></i>\r\n                </div>\r\n                한국어\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon015\"></i>\r\n                </div>\r\n                日本語\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 ani-1\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon015 translateLanguage\"></i>\r\n                </div>\r\n                <div id=\"google_translate_element\"></div>\r\n              </a>{\" \"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\SmartSwap_frontend\\src\\components\\WalletPopup.js",["619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659"],"import React, { PureComponent } from \"react\";\r\nimport web3Config from \"../config/web3Config\";\r\n\r\nexport default class WalletPopup extends PureComponent {\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"wallet-Popup\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"wallet-popupBlock\">\r\n                        <div className=\"search-Mbx\">\r\n\r\n                            <div className=\"search-Bx\"> <a href=\"javascript:void(0);\">\r\n                                <span className=\"icon-Box\"><i className=\"fas fa-search\"></i></span></a>\r\n                                <input type=\"text\" placeholder=\"Search wallet by Name\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"wallet-boxWrap\">\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon03.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Guarda</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon02.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">MyEtherWaCllet</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon01.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">MetaMask</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon04.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Mist</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon05.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Exodus</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon06.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Atomic</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon07.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Jaxx</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon08.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Ethaddress</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon09.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">TrustWallet</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon10.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Coinomi</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon11.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Bread Wallet</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon12.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">imToken Wallet</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <a href=\"javascript:void(0);\" className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\helper\\swapFactoryContract.js",["660"],"D:\\React\\SmartSwap_frontend\\src\\config\\constantConfig.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\RightSideMenu.js",["661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705"],"import React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport web3Config from \"../config/web3Config\";\r\n\r\nconst $ = window.$;\r\nexport default class RightSideMenu extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.showWithId = this.showWithId.bind(this);\r\n    this.state = {\r\n      web3: props.web3,\r\n      web3Config: props.web3Config,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      web3: newProps.web3,\r\n      web3Config: newProps.web3Config,\r\n    });\r\n    // remove this line when stop testing on swap provider\r\n    //this.props.openPopup(\"LiquidityProvider\")\r\n  }\r\n\r\n  showWithId(popup, id) {\r\n    this.props.openPopup(popup);\r\n    $(\"[data-id=\" + this.state.currentTab + \"]\").removeClass(\"active\");\r\n    $(\".tab-Link\").removeClass(\"active\");\r\n    $(\"[data-id=\" + id + \"]\").addClass(\"active\");\r\n    $(\".tab-Content\").hide();\r\n    $(\"#\" + id).fadeIn(\"slow\");\r\n    this.setState({\r\n      currentTab: id,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { cloneData } = this.props;\r\n    const showSideBar =\r\n      cloneData.sideBar === \"true\"\r\n        ? true\r\n        : cloneData.sideBar === undefined\r\n          ? true\r\n          : false;\r\n    return (\r\n      <>\r\n        {showSideBar && (\r\n          <div\r\n            className={\r\n              cloneData.logoImage ? \"menuSideBar subdomain\" : \"menuSideBar\"\r\n            }\r\n            style={\r\n              cloneData.fontStyle && cloneData.fontStyle !== \"Default\"\r\n                ? {\r\n                  right: \"-100%\",\r\n                  opacity: \"0\",\r\n                  fontFamily: cloneData.fontStyle,\r\n                }\r\n                : { right: \"-100%\", opacity: \"0\" }\r\n            }\r\n          >\r\n            <div className=\"menuSideBarContainer\">\r\n              <div className=\"msb-Waddress\">\r\n                <span className=\"waltFix01\">\r\n                  {web3Config.getAddress() !== null\r\n                    ? web3Config.getAddress().slice(0, 45)\r\n                    : null}\r\n                </span>\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"rmDotLink active MenuClose\"\r\n                >\r\n                  {/* <i className=\"fas fa-times\"></i> */}\r\n                  <img src=\"images/menu-close.png\" alt=\"\" />\r\n                </a>\r\n              </div>\r\n              <div className=\"leftMenu mobile-block\">\r\n                <Link to='/' className=\"active\">SMARTSWAP</Link>\r\n                <Link to='/extension'>SMARTBRIDGE EXTENSION</Link>\r\n                <Link to='/projects'>SMARTBRIDGE FOR PROJECTS</Link>\r\n              </div>\r\n              <div className=\"msb-Linkbox01\">\r\n                <Link to=\"/ownLicence\">Launch Branded SmartSwap</Link>\r\n                {/* <a\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    this.props.openPopup(\"LiquidityProvider\");\r\n                  }}\r\n                >\r\n                  Become an Swap Provider (SP){\" \"}\r\n                </a> */}\r\n                <a href=\"#\">Buy SMART</a>\r\n              </div>\r\n              <div className=\"msb-Linkbox02\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"active\"\r\n                  data-toggle=\"n-collapse\"\r\n                  data-target=\"#msbSL-01\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"msbSL-01\"\r\n                >\r\n                  Learn <i className=\"fas fa-caret-down\"></i>\r\n                </a>\r\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-01\">\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"HowItWorks\", \"tab-4\");\r\n                    }}\r\n                  >\r\n                    How it Works{\" \"}\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"HowItWorks\", \"tab-5\");\r\n                    }}\r\n                  >\r\n                    SmartSwap vs Atomic Swap\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"CefiToDefi\", \"tab-7\");\r\n                    }}\r\n                  >\r\n                    Decentralize CEX: CeFi {\"<>\"} DeFi\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"CefiToDefi\", \"tab-8\");\r\n                    }}\r\n                  >\r\n                    What is a Swap Provider\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={() => {\r\n                      this.props.openPopup(\"LiquidityFountainSP\");\r\n                    }}\r\n                  >\r\n                    Liquidity Fountain for SPs\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"CefiToDefi\", \"tab-9\");\r\n                    }}\r\n                  >\r\n                    SmartSwap Liquidity Process\r\n                  </a>\r\n                  <a href=\"javascript:void(0);\">Ledger</a>\r\n                  <a href=\"javascript:void(0);\">100% Fee Reimbursement</a>\r\n                </div>\r\n              </div>\r\n              <div className=\"msb-Linkbox02\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"active\"\r\n                  data-toggle=\"n-collapse\"\r\n                  data-target=\"#msbSL-02\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"msbSL-02\"\r\n                >\r\n                  Library <i className=\"fas fa-caret-down\"></i>\r\n                </a>\r\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-02\">\r\n                  {/* <a href=\"javascript:void(0);\">GitHub</a> */}\r\n                  <a\r\n                    href=\"https://docsend.com/view/24h32qhisbiunjqk\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    Whitepaper\r\n                  </a>\r\n                  {/* <a href=\"javascript:void(0);\">Light Paper</a> */}\r\n                  {/* <a href=\"javascript:void(0);\">Technical Documentation</a> */}\r\n                  {/* <a href=\"javascript:void(0);\">Pitch Deck</a> */}\r\n                  <a\r\n                    href=\"https://docsend.com/view/24h32qhisbiunjqk\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    One Page\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"msb-Linkbox02\">\r\n                        <a href=\"javascript:void(0);\" className=\"active\" data-toggle=\"n-collapse\" data-target=\"#msbSL-03\"\r\n                            aria-expanded=\"false\" aria-controls=\"msbSL-03\">Library <i className=\"fas fa-caret-down\"></i></a>\r\n                        <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-03\">\r\n                            <a href=\"javascript:void(0);\">SmartSwap</a>\r\n                            <a href=\"javascript:void(0);\">Branded Social Currency</a>\r\n                        </div>\r\n                    </div> */}\r\n              {/* <div className=\"msb-Linkbox02\">\r\n                        <a href=\"javascript:void(0);\" className=\"active\" data-toggle=\"n-collapse\" data-target=\"#msbSL-04\"\r\n                            aria-expanded=\"false\" aria-controls=\"msbSL-04\">Apply for License <i\r\n                                className=\"fas fa-caret-down\"></i></a>\r\n                        <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-04\">\r\n                            <a href=\"javascript:void(0);\">SmartSwap</a>\r\n                            <a href=\"javascript:void(0);\">Branded Social Currency</a>\r\n                        </div>\r\n                    </div> */}\r\n              <div className=\"msb-Linkbox02\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"active\"\r\n                  data-toggle=\"n-collapse\"\r\n                  data-target=\"#msbSL-05\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"msbSL-05\"\r\n                >\r\n                  Community <i className=\"fas fa-caret-down\"></i>\r\n                </a>\r\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-05\">\r\n                  {/*   */}\r\n                  <a href=\"https://twitter.com/SmartSwapEx\" target=\"_blank\">\r\n                    <i className=\"fab fa-twitter\"></i>Twitter\r\n                  </a>\r\n                  <a href=\"https://t.me/smartswap_exchange\" target=\"_blank\">\r\n                    <i className=\"fab fa-telegram\"></i>Telegram\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"msb-Linkbox02\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"active\"\r\n                  data-toggle=\"n-collapse\"\r\n                  data-target=\"#msbSL-06\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"msbSL-06\"\r\n                >\r\n                  About <i className=\"fas fa-caret-down\"></i>\r\n                </a>\r\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-06\">\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={() => {\r\n                      this.props.openPopup(\"About\");\r\n                    }}\r\n                  >\r\n                    About Us\r\n                  </a>\r\n                  <a href=\"javascript:void(0);\">Privacy Policy</a>\r\n                  <a href=\"javascript:void(0);\">Terms of Use</a>\r\n                  <a href=\"javascript:void(0);\">Cookie Policy</a>\r\n                  <div className=\"footerV2-LanBoxM\">\r\n                    <a\r\n                      href=\"javascript:void();\"\r\n                      className=\"footerV2-LanBoxLink n-collapsed\"\r\n                      data-toggle=\"n-collapse\"\r\n                      data-target=\"#langBox\"\r\n                      aria-expanded=\"false\"\r\n                      aria-controls=\"langBox\"\r\n                    >\r\n                      <i>\r\n                        {\" \"}\r\n                        <img src=\"images/l-Icon01.png\" alt=\"\" />{\" \"}\r\n                      </i>\r\n                      English\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"auditLogo\">\r\n                <a href=\"javascript:void(0);\">\r\n                  <img src=\"images/callistoLogo.png\" alt=\"\" />\r\n                </a>\r\n              </div>\r\n              {/* <div className=\"msb-Linkbox02\">\r\n                        <a href=\"javascript:void(0);\" className=\"active\" data-toggle=\"n-collapse\" data-target=\"#msbSL-07\"\r\n                            aria-expanded=\"false\" aria-controls=\"msbSL-07\">Help <i className=\"fas fa-caret-down\"></i></a>\r\n                        <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-07\">\r\n                            <a href=\"javascript:void(0);\">Start Tutorial</a>\r\n                            <a href=\"javascript:void(0);\">Report an Issue</a>\r\n                            <a href=\"javascript:void(0);\">Contact Request</a>\r\n                            <a href=\"javascript:void(0);\">Help Center</a>\r\n                            \r\n                        </div>\r\n                    </div> */}\r\n              <div className=\"footer-Bottom\">\r\n                <div className=\"footer-Logo\">\r\n                  <a href=\"javascript:void(0);\">\r\n                    <img src=\"images/menu-rb-logo.png\" alt=\"\" />\r\n                  </a>\r\n                </div>\r\n                <p>© 2021 SmartSwap Exchange All rights reserved</p>\r\n                <div className=\"footer-Text\">\r\n                  <p className=\"pob\">\r\n                    Powered by <img src=\"images/atomFoundation-logo.png\" alt=\"\" />\r\n                  </p>\r\n                  <p>\r\n                    Atom Foundation is a Decentralized Financial (DeFi) liquidity ecosystem powered by proprietary protocols which underlines zero volatility platforms, a NFT (Non-fungible token) and altcoin marketplace with downside protection, post dex offerings (PDO), a dynamic AMM with multiple swap exchanges, cross network aggregation, as well as a CBDC alternative and price support game theoretic model.{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\SmartSwap_frontend\\src\\components\\DropDown.js",[],"D:\\React\\SmartSwap_frontend\\src\\helper\\validation.js",["706"],"import {\r\n    EventEmitter\r\n} from \"events\";\r\nimport { contractAddressesByPairs } from \"../config/constantConfig\";\r\n\r\n\r\n\r\nclass Validation extends EventEmitter {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    floatOnly(event) {\r\n        if (event.shiftKey === true) event.preventDefault();\r\n\r\n        var code = event.keyCode;\r\n\r\n        if (\r\n            (code >= 48 && code <= 57) ||\r\n            (code >= 96 && code <= 105) ||\r\n            code === 8 ||\r\n            code === 9 ||\r\n            code === 37 ||\r\n            code === 39 ||\r\n            code === 46 ||\r\n            code === 190 ||\r\n            code === 110\r\n        ) {\r\n            // allowed characters\r\n        } else event.preventDefault();\r\n\r\n        if (\r\n            event.target.value.indexOf(\".\") !== -1 &&\r\n            (code === 190 || code === 110)\r\n        )\r\n            event.preventDefault();\r\n    }\r\n\r\n    getPairAddress(sendCurrency, receiveCurrency) {\r\n        return contractAddressesByPairs.smartswap[sendCurrency + \"/\" + receiveCurrency];\r\n    }\r\n\r\n    handleActions(action) {\r\n        switch (action.type) { }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst validation = new Validation();\r\n//dispatcher.register(Validation.handleActions.bind(validation));\r\nexport default validation;","D:\\React\\SmartSwap_frontend\\src\\components\\liquidity_fountain_for_SPs.js",["707","708","709"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\n\r\nexport default class LiquidityFountainSP extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: 45000,\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.coinList)\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"LiquidityFountainSP\">\r\n\r\n                <div className=\"container-Grid\">\r\n\r\n                    <div className=\"peerTitle01\">Liquidity Fountain for SPs</div>\r\n                    <div className=\"peerText01\">When users swap tokens on SmartSwap, the protocol takes the market price. SP’s are buying those tokens on the CEX through the API integrated on their account. The API is set to buy the tokens below the average market price to gain a spread. The structure creates a send, receive, repeat loop similar to a fountain that mines for SPs more of their favorite tokens without having to lock funds or wrap any tokens.</div>\r\n\r\n\r\n                    <div className='lfforSPIMGBX'><img src=\"images/lfforSP-img.png\" alt=\"\" /></div>\r\n\r\n                </div>\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"LiquidityFountainSP\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\Counter.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\About.js",["710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport \"../assets/AboutPopup.css\"\r\n\r\nexport default class About extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.coinList)\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"About\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"LiProTitle01\">About Us</div>\r\n                    <div className=\"ppAboutText01\"> Smart.exchange is a decentralized organization managed by a DAO community and created by Atom Foundation early 2017. The first published patent was in 2018 when there was no DeFi awareness. At this time, investors did not even know what slippage was so the solution pre-dated the problem. Now, with the emergence of AMMs, SmartSwap solves a known need in the industry.</div>\r\n\r\n\r\n                    <section id=\"team-Block\">\r\n                        <div className=\"advisor-team-Box\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"s20TeamContainer clearfix\" id=\"our_advisor\">\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20ttextbox02\">Our Advisors</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"mailto:dee@jointer.io\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-01.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/4/t2-ss_nNs3qoe.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/4/t2-ss_nNs3qoe.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Dee Hock</span>Founder and former CEO of Visa Credit Card Association</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"mailto:david@jointer.io\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-02.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/5/t3-ss_X2yzDCr.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/5/t3-ss_X2yzDCr.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>David Weild IV</span>V. Chairman at NASDAQ and the “father” of the JOBS Act</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"mailto:mike@jointer.io\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-03.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/6/t4-ss_cODnYZo.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/6/t4-ss_cODnYZo.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span> Mike Lorrey</span>CTO Advisor<br />\r\n                                            The co-creator of the prototype of Bitcoin</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"mailto:ken@jointer.io\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-04.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/8/t6-ss_PqgnxCI.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/8/t6-ss_PqgnxCI.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Ken Goldman</span>Former Chief Financial Officer of Yahoo! </div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/bourgi87/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-05.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/10/sam_burgin_icon_HVcCc9e.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/10/sam_burgin_icon_HVcCc9e.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span> Sam Bourgi</span> Chief Editor Hacked.com</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-105500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-106500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/koen-maris-3791811/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-06.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/33/01_cT0OyEA_6fmgSuE.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/33/01_cT0OyEA_6fmgSuE.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Koen Maris</span>IOTA Advisor Cybersecurity</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-106000-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-107000-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/alongoren/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-07.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Alon Goren</span>Founding Partner at Goren Holm Ventures</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-106500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-107500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/robertneivert/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-08.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/36/500-logo.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/36/500-logo.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Robert Neivert</span>Venture Partner at 500 Startups Head of blockchain program</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"previous-advisor-team-Box\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"s20TeamContainer clearfix\" id=\"previous_advisor\">\r\n                                    <div className=\"s20Teambox01 clearfix\" data-102500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-103500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20ttextbox02\">PREVIOUS Advisors</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-103000-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-104000-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"# \" target=\"_blank\" rel=\"noopener noreferrer\" className=\"teamLinkIcon\"> </a>\r\n                                                <div className=\"teamImgNPbox\"><img className=\"  mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-09.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img className=\"lozad mCS_img_loaded\" data-src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" alt=\" \" src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Professor Eric S. Maskin</span>Harvard University Nobel Memorial Prize in Economics Mechanism Design Expert </div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-103500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-104500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"# \" target=\"_blank\" className=\"teamLinkIcon\" rel=\"noopener noreferrer\"> </a>\r\n                                                <div className=\"teamImgNPbox\"><img className=\" mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-010.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img className=\"lozad mCS_img_loaded\" data-src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" alt=\"\" src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Professor Alvin E. Roth</span>Stanford University Nobel Memorial Prize in Economics Market Design expert</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-104500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-105500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com\" target=\"_blank\" className=\"teamLinkIcon\" rel=\"noopener noreferrer\"> </a>\r\n                                                <div className=\"teamImgNPbox\"><img className=\"lozad mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-011.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img className=\"lozad mCS_img_loaded\" data-src=\"https://www.jointer.io/images/jntr_about/t5-ss-V2.png\" alt=\"\" src=\"https://www.jointer.io/images/jntr_about/t5-ss-V2.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Chris Cox</span>Former Chairman of the U.S. Securities and Exchange Comission [SEC] former U.S. Congress Member </div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/daniel-p-ahn-7283967/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"teamLinkIcon\"> </a>\r\n                                                <div className=\"teamImgNPbox\"><img className=\"lozad mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-012.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img className=\"lozad mCS_img_loaded\" data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/7/t5-ss.png\" alt=\"\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/7/t5-ss.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Daniel P. Ahn PhD</span>Chief Economist<br />\r\n                                            U.S. Department of State </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"management-team-Box\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"s20TeamContainer clearfix npSMfix01\" id=\"managment\">\r\n                                    <div className=\"s20Teambox01 clearfix\">\r\n                                        <div className=\"s20ttextbox02\">Management</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-123000-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-124000-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/jude-g-regev-09110214/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-013.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Yoda G Regev<br />\r\n                                            CEO & CTO</span>Serial Entrepreneur with 5 Startups and 3 exits</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-122500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-123500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/kylewhitepr/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-014.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Kyle White<br />\r\n                                            CMO</span>Venture Marketing Advisor totaling $16B market cap</div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"s20Teambox01 clearfix\" data-121500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-122500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/debbierosenblum\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img  alt=\"\" src=\"images/team/teamImg-015.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Debbie Rosenblum<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\tCPO</span>People Architect, Strategic Leader + Decisive Doer</div>\r\n                                    </div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"operation-team-Box\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"s20TeamContainer clearfix \" id=\"operations\">\r\n                                    <div className=\"s20Teambox01 clearfix\">\r\n                                        <div className=\"s20ttextbox02\">Operations</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-016.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Amber Urquhart</span>Investment LP</div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-017.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Dan Mahoney</span>Fundraising Manager</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/blankUser.jpg\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Max Dier</span>PDO DAO Manager</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/ahmad-bancin.jpg\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Ahmad Bancin</span>Community Admin</div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-020.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Verlin Auliane</span>Graphic Designer</div>\r\n                                    </div> */}\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-021.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Joe Meinen</span>Social Specialist</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-022.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Corlynne O’Sullivan</span>Crypto Marketing</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-023.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Joyce Hanson</span>Writer</div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n\r\n                    <div className='VPMainBX'>\r\n                        <div className='VPSubBX01'>\r\n                            <div className=\"ventureBXTitle01\">Venture Partners </div>\r\n                        </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-01.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-02.png\" alt=\"\" />Hassan (Hatu) Sheikh </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-03.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-04.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/bitangels.png\" alt=\"\" />Michael Terpin </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-05.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/silent.png\" alt=\"\" />Andrea Castiglione</div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-07.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-08.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-09.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-010.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/mexc.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-012.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-013.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/fairum.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-014.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-015.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-016.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-017.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-018.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-019.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-020.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-021.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-022.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-023.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-024.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-025.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-026.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-027.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-029.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-030.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-031.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-032.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-033.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-034.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-035.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-036.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-037.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-038.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-039.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-040.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/legion.png\" alt=\"\" /> </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"About\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\LiquidityProvider.js",["754","755","756"],"import React, { PureComponent } from \"react\";\r\nimport SpIntroduction from \"./SpIntroduction\";\r\nimport SpContractDeployForm from \"./SpContractDeployForm\";\r\nimport { tokenDetails } from \"../../config/constantConfig\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from \"axios\";\r\nimport ccxt from \"ccxt\";\r\n\r\nconst MIN_AMOUNT_A = 500;\r\nconst MIN_SPREAD_RANGE=0;\r\nconst MAX_SPREAD_RANGE=1;\r\nconst MAX_WITHDRAW_PERCENT=45;\r\nconst SANDBOX_MODE=false;\r\nconst PRICE_SOURCE=\"coingecko\"; // coingecko OR binance\r\n\r\nexport default class LiquidityProvider extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: null,\r\n            web3Config: null,\r\n            coinList: tokenDetails\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (typeof window.ethereum !== 'undefined') {            \r\n            // detect Network account change\r\n            window.ethereum.on('chainChanged', networkId => {\r\n                console.log('chainChanged', networkId);\r\n                this.setState({\r\n                    web3: null\r\n                });\r\n            });\r\n    \r\n            window.ethereum.on('accountsChanged', accounts => {\r\n                console.log('account Changed');\r\n                this.setState({\r\n                    web3: null\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTokenUsdValuesFromCoingecko();\r\n    }\r\n\r\n    getTokenUsdValuesFromCoingecko = async () => {\r\n        if(PRICE_SOURCE === \"coingecko\"){\r\n            let url = \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,tether,binancecoin,cardano,polkadot,uniswap,ripple,matic-network&vs_currencies=USD&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true\";\r\n            \r\n            let response = await axios.get(url).then((res) => {\r\n                return res.data;\r\n            }).catch((err) => {\r\n                console.log(\"errorOrigin: getTokenUsdValuesFromCoingecko\", err);\r\n            });\r\n      \r\n            this.setState({\r\n                tokenPrices: {\r\n                    'ETH': response[\"ethereum\"][\"usd\"],\r\n                    'BNB': response[\"binancecoin\"][\"usd\"],\r\n                    'MATIC': response[\"matic-network\"][\"usd\"]\r\n                }\r\n            });\r\n        }\r\n\r\n        if(PRICE_SOURCE === \"binance\"){\r\n            const exchange = new ccxt.binance();\r\n            exchange.set_sandbox_mode(SANDBOX_MODE);\r\n            \r\n            let ticker = await exchange.fetchTicker('BNBUSDT');\r\n            let bnbPrice = ticker.last;            \r\n\r\n            ticker = await exchange.fetchTicker('ETHUSDT');\r\n            let ethPrice = ticker.last;\r\n            if(SANDBOX_MODE === false){\r\n                ticker = await exchange.fetchTicker('MATICUSDT');\r\n            } else {\r\n                ticker = {\r\n                    last: 1.80\r\n                }\r\n                console.log(\"MATIC price is static in sanbox mode. Price 1 matic = $1.80\");\r\n            }\r\n            let maticPrice = ticker.last;\r\n\r\n            this.setState({ \r\n                tokenPrices: {\r\n                    'ETH': ethPrice,\r\n                    'BNB': bnbPrice,\r\n                    'MATIC': maticPrice\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"LiquidityProvider\">\r\n                <div className=\"container-Grid details-n\">\r\n                    <SpIntroduction />\r\n                    <SpContractDeployForm \r\n                        minAmountA={MIN_AMOUNT_A} \r\n                        minSpreadRange={MIN_SPREAD_RANGE} \r\n                        maxSpreadRange={MAX_SPREAD_RANGE}\r\n                        maxWithdrawPercent={MAX_WITHDRAW_PERCENT}\r\n                        tokenPrices={this.state.tokenPrices}\r\n                        sandboxMode={SANDBOX_MODE}\r\n                    />\r\n                </div>\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"LiquidityProvider\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\NoDomain.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\PeerPopup.js",["757","758","759","760","761","762","763","764","765"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class PeerPopup extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#PeerPopup .tab-Link\").hover(function () {\r\n            $(\".tab-Link\").removeClass(\"active\")\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-Content\").hide();\r\n            $(\"#\" + $(this).attr(\"data-id\")).show();\r\n        });\r\n\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"PeerPopup\">\r\n                <div className=\"container-Grid\"> \r\n                <div className=\"MainTabBox\">\r\n                    <div className=\"tab-Nav\">\r\n                        <a href=\"javascript:void(0)\" className=\"tab-Link\"  onClick={ev=>{ev.preventDefault();}} data-id=\"tab-1\">Peer to Contract</a>\r\n                        <a href=\"javascript:void(0)\" className=\"tab-Link\"  onClick={ev=>{ev.preventDefault();}} data-id=\"tab-2\">Peer to Peer</a>\r\n                        <a href=\"javascript:void(0)\" className=\"tab-Link\"  onClick={ev=>{ev.preventDefault();}} data-id=\"tab-3\">Peer to Contract and Group</a>\r\n                    </div> \r\n\r\n\r\n                    <div className={\"tab-Content \" + this.props.popId} id=\"tab-1\">\r\n                         <div className=\"peerTitle01\">Peer to Contract</div>\r\n                         <div className=\"peerText01\">SmartSwap holds liquidity pools with locked LP funds, executing P2C (Peer-to-Contract) swaps. The liquidity pools execute swap orders when there is no counter party. Users that provide liquidity receive spread + SMART rewards in both native tokens and major cryptocurrencies like BNB or ETH.</div>\r\n\r\n                    </div> \r\n                    <div className={\"tab-Content \" + this.props.popId} id=\"tab-2\">\r\n                         <div className=\"peerTitle01\">Peer to Peer</div>\r\n                         <div className=\"peerText01\">P2P has two distinct processes. First, SmartSwap defaults to the P2P swap to check if there is someone that wants to swap against the order placed. Second, SmartSwap P2P allows users to generate a transaction ID that can be sent directly to a specific person they want to swap with. The transaction ID is created and the users send their digital assets to that transaction ID. Once the swap takes place, SmartSwap swaps for the same face value. If there is any delta it will be returned to the appropriate party.</div>\r\n\r\n                    </div> \r\n                    <div className={\"tab-Content \" + this.props.popId} id=\"tab-3\">\r\n                         <div className=\"peerTitle01\">Peer to Contract and Group</div>\r\n                         <div className=\"peerText01\">If the liquidity contract does not have enough liquidity, the swap turns into a P2P&C swap, which means the swap partially executes and the rest remains pending until the contract rebalances itself through counterparties or liquidity providers (CEX or OTC) using a CeFi gateway that acts as a decentralized FLASH Swap. SmartSwap utilizes the Peer-to-Contract and Group (P2P&C) to search for as many counterparties as needed to cover the full face value of the transaction.</div>\r\n\r\n                    </div> \r\n\r\n                    </div> \r\n\r\n                </div>\r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n                <a href=\"javascript:void(0);\"  onClick={() => { this.props.closePopup(\"PeerPopup\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\pages\\select_token.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\CefiToDefi.js",["766","767","768","769","770","771","772","773","774","775","776","777","778"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class CefiToDefi extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#CefiToDefi .tab-Link\").hover(function () {\r\n            $(\".tab-Link\").removeClass(\"active\")\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-Content\").hide();\r\n            $(\"#\" + $(this).attr(\"data-id\")).show();\r\n        });\r\n\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"CefiToDefi\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"MainTabBox\">\r\n                        <div className=\"tab-Nav\">\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-7\">\r\n                                CeFi to DeFi</a>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-8\">What is a Swap Provider</a>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-9\">SmartSwap Liquidity Process</a>\r\n                        </div>\r\n\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-7\">\r\n                            <div className=\"peerTitle01\">DECENTRALIZED CeFi {'<>'} DeFi BRIDGE</div>\r\n                            <div className=\"peerText01\">Now, without signing up to a CEX, doing time-consuming KYC on multiple platforms, or dealing with order book volatility, users can still benefit from CEX liquidity through SmartSwap. SmartSwap provides a true bridge between CeFi and DeFi with one simple click access to liquidity, even while keeping self custody of the assets.</div>\r\n                        </div>\r\n\r\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }} >\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-8\">\r\n                                What is a Swap Provider</a>\r\n                        </div>\r\n\r\n\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-8\">\r\n\r\n                            <div className=\"peerTitle01\">What is a Swap Provider?</div>\r\n                            <div className=\"peerText01\">SmartSwap allows anyone with a Centralized Exchange account, like Binance, to utilize a simple decentralized API and become an Swap Provider (SP). The SP’s drive liquidity into SmartSwap allows the SP to earn automatic spread on their favorite tokens.<br />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"lpBTNBar01\">\r\n                                <button className=\"ssBtn02\" onClick={() => { this.props.closePopup(\"CefiToDefi\"); this.props.openPopup(\"LiquidityProvider\") }}>BECOME AN SP</button> </div>\r\n                        </div>\r\n\r\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }} >\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-9\">SmartSwap Liquidity Process</a>\r\n                        </div>\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-9\">\r\n                            <div className=\"peerTitle01\">SmartSwap Liquidity Process</div>\r\n                            <div className=\"peerText01-v2\"><i>1</i> User initiates a swap order </div>\r\n                            <div className=\"peerText01-v2\"><i>2</i> SmartSwap searches for a counterparty (Peer-to-Peer) </div>\r\n                            <div className=\"peerText01-v2\"><i>3</i> If there is not enough liquidity, the swap order automatically triggers the liquidity from Swap Providers  </div>\r\n                            <div className=\"peerText01-v2\"><i>4</i> If a counterparty is not found and there is not enough liquidity from Swap Providers, the swap will remain pending until the Swap Providers recycle their liquidity like a fountain.</div>\r\n                            <div className=\"peerText01-v2\"><i>5</i> If pending orders execute at a later time, users receive in return the exact same face value at the time of execution. </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"CefiToDefi\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\LedgerHistory.js",["779","780","781","782","783","784","785","786","787"],"import React, { PureComponent, useState } from \"react\";\r\n\r\nexport default function LedgerHistory(props) {\r\n\r\n    const [isExpedite, setIsExpedite] = useState(false);\r\n\r\n    return (\r\n\r\n        <div className=\"transaction-histroryWrap\">\r\n            <div className=\"transaction-histroryBox\">\r\n                <div className=\"Title02 orange-Color\">Send</div>\r\n                <div className=\"trasaction-Amt\"> {Number(props.processAmount).toFixed(6)} {props.sentCurrency}\r\n                    {props.tokenAPrices === undefined ? null : <span>(${(Number(props.processAmount) * Number(props.tokenAPrices)).toFixed(2)})</span>}\r\n                </div>\r\n                <div className=\"trasaction-Date\">{props.sentTxTime}</div>\r\n                <div className=\"trasaction-Box\">\r\n                    <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Transaction Submitted</div>\r\n                    <div className=\"trans-Id\">{props.txHash}</div>\r\n                    <a href={props.sentTxLink} className=\"view-Trans ani-1\" target=\"_blank\">View transaction</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"arrow-Box\"></div>\r\n            <div className=\"transaction-histroryBox\">\r\n                {props.oracleTx !== undefined ? (\r\n                    <div>\r\n                        <div className=\"Title02 green-Color\">Received <span></span></div>\r\n                        <div className=\"trasaction-Amt\"> {Number(props.estimatedForeignAmount).toFixed(6)} {props.recivedCurrency}\r\n                            <span> (${(Number(props.estimatedForeignAmount) * Number(props.tokenBPrices)).toFixed(2)})</span>\r\n                        </div>\r\n                        <div className=\"trasaction-Date\">{props.recivedTxTime}</div>\r\n                        <div className=\"trasaction-Box\">\r\n                            <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n                            <div className=\"trans-Id\">{props.oracleTx}</div>\r\n                            <div className=\"tsb-LinkBox\">\r\n                                <a href={props.recivedTxLink} className=\"view-Trans ani-1\" target=\"_blank\">View transaction</a>\r\n                                {/* <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1 active\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"true\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>) : (\r\n                    <div>\r\n                        <div className=\"Title02 pending\">\r\n                            Pending <span></span>\r\n                        </div>\r\n                        <div className=\"trasaction-Amt\">\r\n                            ... {props.recivedCurrency}{' '}\r\n                        </div>\r\n                        <div className=\"trasaction-Box pendingColor\">\r\n                            <div className=\"trasaction-Status pending-Text\">\r\n                                Pending{' '}\r\n                                <span className=\"pending-loader\">\r\n                                    <img src=\"images/loader2.gif\" />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <p>\r\n                            {/* <span>\r\n                        <a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a>\r\n                    </span> */}\r\n                            {props.canExpedite ?\r\n                                props.isExpedited ?\r\n                                    <a style={{ color: \"#91dc27\" }}>Expedited <i class=\"far fa-check-circle\"></i></a>\r\n                                    :\r\n                                    isExpedite ?\r\n                                        <a style={{ color: \"#F29339\" }}>Expediting...</a>\r\n                                        :\r\n                                        <>\r\n                                            <a\r\n                                                href=\"javascript:void(0);\"\r\n                                                className=\"ani-1\"\r\n                                            >\r\n                                                Waiting to be match with counter-party\r\n                                            </a>\r\n                                            <a\r\n                                                href=\"javascript:void(0);\"\r\n                                                className=\"ani-1\"\r\n                                                style={{ color: \"white\" }}\r\n                                                onClick={() => { setIsExpedite(true); props.expedite(props) }}\r\n                                            >\r\n                                                Expedite\r\n                                            </a>\r\n                                        </>\r\n                                : null}\r\n                        </p>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                {/* <div className=\"Title02 pending\">Pending <span>(73.69%)</span></div>\r\n                <div className=\"trasaction-Amt\">10 ETH  <span>($2,500)</span></div>\r\n                <div className=\"trasaction-Box pendingColor\">\r\n                    <div className=\"trasaction-Status pending-Text\">Pending <span className=\"pending-loader\"><img src=\"images/loader2.gif\" /></span></div>\r\n                </div>\r\n                <p><span><a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a></span><a href=\"javascript:void(0);\" className=\"ani-1\">Wait until a match will be found or cancel and redeem the 10 ETH pending to your wallet</a></p> */}\r\n            </div>\r\n        </div>\r\n\r\n        // test\r\n\r\n        // <div className=\"transaction-histroryWrap\">\r\n        //     <div className=\"transaction-histroryBox\">\r\n        //         <div className=\"Title02 orange-Color\">Send</div>\r\n        //         <div className=\"trasaction-Amt\"> 50 ETH <span>($10,000)</span> </div>\r\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n        //         <div className=\"trasaction-Box\">\r\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Transaction Submitted</div>\r\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n        //             <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n        //         </div>\r\n        //     </div>\r\n        //     <div className=\"arrow-Box\"></div>\r\n        //     <div className=\"transaction-histroryBox\">\r\n        //         <div className=\"Title02 green-Color\">Received <span>(73.69%)</span></div>\r\n        //         <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\r\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n        //         <div className=\"trasaction-Box\">\r\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n        //             <div className=\"tsb-LinkBox\">\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1 active\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"true\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\r\n        //             </div>\r\n        //             <div className=\"clearfix n-collapse in\" id=\"trsBox01\" aria-expanded=\"true\" >\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //         <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\r\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n        //         <div className=\"trasaction-Box\">\r\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n        //             <div className=\"tsb-LinkBox\">\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox02\" aria-expanded=\"false\" aria-controls=\"trsBox02\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\r\n        //             </div>\r\n        //             <div className=\"n-collapse clearfix\" id=\"trsBox02\">\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //         <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\r\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n        //         <div className=\"trasaction-Box\">\r\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n        //             <div className=\"tsb-LinkBox\">\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox03\" aria-expanded=\"false\" aria-controls=\"trsBox03\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\r\n        //             </div>\r\n        //             <div className=\"n-collapse clearfix\" id=\"trsBox03\">\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //         <div className=\"Title02 pending\">Pending <span>(73.69%)</span></div>\r\n        //         <div className=\"trasaction-Amt\">10 ETH  <span>($2,500)</span></div>\r\n        //         <div className=\"trasaction-Box pendingColor\">\r\n        //             <div className=\"trasaction-Status pending-Text\">Pending <span className=\"pending-loader\"><img src=\"images/loader2.gif\" /></span></div>\r\n        //         </div>\r\n        //         <p><span><a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a></span><a href=\"javascript:void(0);\" className=\"ani-1\">Wait until a match will be found or cancel and redeem the 10 ETH pending to your wallet</a></p>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\HowItWorks.js",["788","789","790","791","792","793","794","795","796"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class HowItWorks extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#HowItWorks .tab-Link\").hover(function () {\r\n            $(\".tab-Link\").removeClass(\"active\")\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-Content\").hide();\r\n            $(\"#\" + $(this).attr(\"data-id\")).show();\r\n        });\r\n\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"HowItWorks\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"MainTabBox\" style={{ paddingTop: '80px' }}>\r\n                        <div className=\"tab-Nav\">\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-4\">How it Works</a>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-5\">SmartSwap vs Atomic Swap & Other Swaps</a>\r\n                        </div>\r\n\r\n\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-4\">\r\n                            <div className=\"peerTitle01\">How it Works</div>\r\n                            <div className=\"peerText01\">\r\n                                <p>Smartswap’s contract utilizes a zero volatility patent pending method which prevents slippage and wholly reimburses users fees and gas costs. The swap works by letting users choose a token they want to swap (Token A) and then select a receiving token (Token B). Unlike a Decentralized Exchange (DEX) or Automated Market Maker (AMM), SmartSwap asks users the USD face value of the tokens they want to swap, rather than the token amount they want to receive.</p>\r\n\r\n                                <p>Subsequently, with SmartSwap, users do not choose the value of Token A or how many tokens of Token B they want to receive. Instead, SmartSwap prices Token A and Token B based on the current average market price between multiple reliable exchanges.</p>\r\n\r\n                                <p>Furthermore, when the user sends $1000 face value of Token A to receive Token B there is no possibility for them to receive $999 or $1001. SmartSwap executes the order with the exact same face value. In the case of an unmatched swap (due to counterparty different order amount or market volatility) the SmartSwap alters the order to receive less of Token B in order to match the face value, or alternatively return any excess to the user of which it belongs.</p>\r\n\r\n                                <p>Unlike AMM such uniswap, smartswap doesn't have any liquidity pools or liquidity providers (LP) structure. instead the smartswap work as a decentralized P2P with unique swap providers (SP) solution like a fountain driving liquidity from centralized exchanges </p>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }}>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link \" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-5\">SmartSwap vs Atomic Swap & Other Swaps</a>\r\n                        </div>\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-5\">\r\n                            <div className=\"peerTitle01\">SmartSwap vs Atomic Swap</div>\r\n                            <div className=\"peerText01\"> SmartSwap utilizes technology that allows cross-chain swaps between two assets without validator risk, wrapping, or side-chain utilization. The cross-chain swap is a true one-click swap between blockchain networks. The cross-chain swap has the ability to act like a bridge between blockchain networks based smart contracts such as Ethereum<br /><br />\r\n\r\n                                At the moment, SmartSwap supports swaps between BNB {'<>'} ETH and ERC20{'<>'}BEP20. SmartSwap capabilities present the first one-click swap that is not considered an atomic swap or reliant on time-locked swaps.\r\n\r\n                            </div>\r\n                            <div className='smrtvsatoTable01'>\r\n\r\n                                <table width=\"100%\" border=\"0\" cellSpacing=\"0\" cellPadding=\"10\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th scope=\"col\">&nbsp;</th>\r\n                                            <th align=\"center\" valign=\"middle\" scope=\"col\">DEXs <br />\r\n                                                <span>(Uniswap, Pancake, etc)</span></th>\r\n                                            <th align=\"center\" valign=\"middle\" scope=\"col\">Binance Bridge</th>\r\n                                            <th align=\"center\" valign=\"middle\" scope=\"col\">\r\n                                                <img src=\"images/menu-rb-logo.png\" alt=\"\" />\r\n                                            </th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Decentralized cross-chain</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>One click cross-chain</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Unlimited liquidity</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Slippage free</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Fee reimbursement</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Gas reimbursement</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Token price correlated to platform usage</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"HowItWorks\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\dispatcher.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpIntroduction.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpContractDeployForm.js",["797"],"import React, { Component } from \"react\";\r\nimport ActiveContract from \"./ActiveContract\";\r\nimport Web3 from 'web3';\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport InputRange from 'react-input-range';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { LoopCircleLoading } from 'react-loadingg';\r\nimport AxiosRequest from \"../../helper/axiosRequest\";\r\nimport { tokenDetails } from \"../../config/constantConfig\";\r\nimport constantConfig from '../../config/constantConfig';\r\nimport web3Config from \"../../config/web3Config\";\r\nimport notificationConfig from '../../config/notificationConfig';\r\nimport SwapFactoryContractPairWise from '../../helper/swapFactoryContractPairWise';\r\nvar _ = require('lodash');\r\n\r\n\r\nexport default class SpContractDeployForm extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.setDropdownWrapperRef = this.setDropdownWrapperRef.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.state = {\r\n            web3: null,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false,\r\n            btnClick: false,\r\n            selectedTokenA: 'ETH',\r\n            selectedTokenB: 'BNB',\r\n            // input fields\r\n            spAccount: null,\r\n            networkId: null,\r\n            tokenA: null,\r\n            tokenB: null,\r\n            amountA: null,\r\n            walletAddressToSend: null,\r\n            walletAddressToReceive: null,\r\n            gasAndFeeAmount: 0,\r\n            minGasAndFeeAmount: 0,\r\n            maxGasAndFeeAmount: 100,\r\n            minStepForGasAndFeeAmount: 0,\r\n            cexList: constantConfig.cexTypes,\r\n            selectedCex: 'BINANCE',\r\n            cexListOpen: false,\r\n            swapSpeedMode: 'UPFRONT',\r\n            withdrawPercent: 45,\r\n            spreadAmount: 100,\r\n            spProfitPercent: 0.5,\r\n            accumulateFundsLimit: 100,\r\n            stopRepeatsMode: 3,\r\n            stopRepeatsOnDate: new Date(),\r\n            stopRepeatsAfterCalls: 200,\r\n            withdrawMode: 3,\r\n            withdrawOnDate: new Date(),\r\n            withdrawAfterCalls: 250,\r\n            txid: null,\r\n            smartSwapContractAddress: 'Deploy contract to get this address.',\r\n            confirmed: false,\r\n            deployed: false,\r\n            deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n            loadingIcon: false,\r\n            serverError: null,\r\n            errorMessage: null,\r\n            clientSideError: false,\r\n            clientSideErrorMessage: {\r\n                spProfitPercent: null,\r\n                amountA: null,\r\n                spProfitPercentOnContract: null,\r\n                amountAOnContract: null\r\n            },\r\n            spData: []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            // detect Network account change\r\n            window.ethereum.on('chainChanged', networkId => {\r\n                console.log('chainChanged', networkId);\r\n                this.resetWallet();\r\n\r\n                this.connectWallet();\r\n            });\r\n\r\n            window.ethereum.on('accountsChanged', accounts => {\r\n                console.log('account Changed');\r\n                this.resetWallet();\r\n                // on account change currently disconnecting wallet so we can again check active contract on wallet connect \r\n\r\n                this.connectWallet();\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loading: true,\r\n            tokenA: this.state.coinList[this.state.selectedTokenA]['address'],\r\n            tokenB: this.state.coinList[this.state.selectedTokenB]['address']\r\n        });\r\n\r\n        this.setGasFeeAndAmountMinMaxRanges('ETH');\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    toggleCexList(changedCex = null) {\r\n        const currentState = this.state.cexListOpen;\r\n        this.setState({\r\n            cexListOpen: !currentState\r\n        });\r\n\r\n        if (changedCex) {\r\n            this.setState({\r\n                selectedCex: changedCex\r\n            });\r\n            this.resetWallet();\r\n        }\r\n    }\r\n\r\n    handleClickOutside(event) {\r\n        if (this.dropdownWrapperRef && !this.dropdownWrapperRef.contains(event.target)) {\r\n            this.setState({\r\n                isOpen1: false,\r\n                isOpen2: false,\r\n                cexListOpen: false\r\n            });\r\n        }\r\n    }\r\n\r\n    setDropdownWrapperRef(node) {\r\n        this.dropdownWrapperRef = node;\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n        this.setState(prevState => ({\r\n            [collapse]: !prevState[collapse]\r\n        }));\r\n        //this.toggleActiveContractSection();\r\n    };\r\n\r\n    resetWallet() {\r\n        this.setState({\r\n            web3: null,\r\n            confirmed: false,\r\n            spData: null\r\n        });\r\n    }\r\n\r\n    changeTokenA(token) {\r\n\r\n\r\n        this.setState({\r\n            selectedTokenA: token,\r\n            tokenA: this.state.coinList[token]['address'],\r\n            networkId: web3Config.getNetworkId(),\r\n            spAccount: web3Config.getAddress(),\r\n            isOpen1: false\r\n        });\r\n        this.setGasFeeAndAmountMinMaxRanges(token);\r\n        //notificationConfig.info('Token reset. Please set Gas and Fee again.');\r\n        this.resetWallet();\r\n    };\r\n\r\n    changeTokenB(token) {\r\n        this.setState({\r\n            selectedTokenB: token,\r\n            tokenB: this.state.coinList[token]['address'],\r\n            isOpen2: false\r\n        });\r\n\r\n        this.resetWallet();\r\n    };\r\n\r\n    swapTokens() {\r\n        this.changeTokenA(this.state.selectedTokenB);\r\n        this.changeTokenB(this.state.selectedTokenA);\r\n    }\r\n\r\n    getAlternateToken(token) {\r\n        let tokensList = Object.assign({}, this.state.coinList);\r\n        delete tokensList[token];\r\n        return Object.entries(tokensList)[0];\r\n    }\r\n\r\n    checkAmountA(value, minValue) {\r\n        var clientSideErrorMessage;\r\n        if (Number(value) < minValue) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.amountA = `Minimum amount is $${minValue}`;\r\n            this.setState({ clientSideErrorMessage });\r\n            //notificationConfig.success(`Test ${testType} fetched`);\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                amountA: Number(value)\r\n            });\r\n\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.amountA = null;\r\n            this.setState({ clientSideErrorMessage });\r\n        }\r\n\r\n        this.clientSideError();\r\n    }\r\n\r\n    changeSpread(value, minSpreadRange, maxSpreadRange) {\r\n        var clientSideErrorMessage;\r\n        if (Number(value) > maxSpreadRange || Number(value) < minSpreadRange) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.spProfitPercent = `Please provide a valid input between ${minSpreadRange}-${maxSpreadRange} range`;\r\n            this.setState({ clientSideErrorMessage });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                spProfitPercent: Number(value)\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.spProfitPercent = null;\r\n            this.setState({ clientSideErrorMessage });\r\n        }\r\n\r\n        this.clientSideError();\r\n    };\r\n\r\n    setGasFeeAndAmountMinMaxRanges(selectedToken) {\r\n        let token = this.state.coinList[(selectedToken).toUpperCase()];\r\n        this.setState({\r\n            minGasAndFeeAmount: token.minGasAndFeeAmount,\r\n            gasAndFeeAmount: token.gasAndFeeAmount,\r\n            maxGasAndFeeAmount: token.maxGasAndFeeAmount,\r\n            minStepForGasAndFeeAmount: token.minStepForGasAndFeeAmount\r\n        });\r\n    }\r\n\r\n    validateWithdrawOnContractFromCexSlider(maxWithdrawPercent) {\r\n        if (this.state.withdrawPercent > maxWithdrawPercent) {\r\n            notificationConfig.error('You must keep balance on your CEX account at least 55% of the total amount');\r\n            this.setState({\r\n                withdrawPercent: maxWithdrawPercent\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    clientSideError() {\r\n        let check = !Object.values(this.state.clientSideErrorMessage).every(o => o === null);\r\n\r\n        console.log({\r\n            error: check\r\n        });\r\n\r\n        if (check) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                clientSideError: false\r\n            });\r\n        }\r\n        return check;\r\n    };\r\n\r\n    async connectWallet() {\r\n\r\n        if (typeof window.ethereum == 'undefined') {\r\n            console.log('MetaMask is not installed!');\r\n            notificationConfig.error('Metamask not found.');\r\n            return;\r\n        }\r\n\r\n        this.setState({ btnClick: true });\r\n        await web3Config.connectWallet(0);\r\n        let networkId = web3Config.getNetworkId();\r\n\r\n        if (!constantConfig.allowedNetwork.includes(networkId)) {\r\n            notificationConfig.error('Please Select Ethereum, BSC or Polygon Network');\r\n            this.setState({ btnClick: false });\r\n            return;\r\n        }\r\n\r\n        let token = _.find(this.state.coinList, { \"networkId\": Number(networkId) });\r\n        let selectedTokenA = _.find(this.state.coinList, {\r\n            \"symbol\": (this.state.selectedTokenA).toString().toUpperCase()\r\n        });\r\n\r\n        if (networkId !== Number(selectedTokenA.networkId)) {\r\n            notificationConfig.error(`Please connect wallet to ${selectedTokenA.networkName} network or switch token A to active network.`);\r\n            return;\r\n        }\r\n\r\n        if (token) {\r\n            //this.changeTokenA(token.symbol); // enable if connect wallet button autometic switch to active network\r\n            //this.setGasFeeAndAmountMinMaxRanges(token.symbol); // if above condition true then we need to enable this to reset gas fee slider token and amount\r\n            //let alternateToken = this.getAlternateToken(token.symbol); // if above condition true then changeTokenB will need a random token so use this\r\n            this.changeTokenB(this.state.selectedTokenB);\r\n            this.setState({\r\n                web3: web3Config.getWeb3(),\r\n                btnClick: false,\r\n                networkId: networkId,\r\n                spAccount: web3Config.getAddress(),\r\n                spData: null\r\n            });\r\n\r\n            await this.getActiveContracts();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async deployContract(event) {\r\n\r\n        let allowedNetworks = constantConfig.allowedNetwork;\r\n\r\n        if (!Web3.utils.isAddress(this.state.walletAddressToSend)) {\r\n            notificationConfig.error('Please provide a valid wallet address that send token A');\r\n            return;\r\n        }\r\n\r\n        if (!Web3.utils.isAddress(this.state.walletAddressToReceive)) {\r\n            notificationConfig.error('Please provide a valid wallet address that receive token B');\r\n            return;\r\n        }\r\n\r\n        if (this.state.tokenA === this.state.tokenB) {\r\n            notificationConfig.error(\"Token A and Token B can't be the same\");\r\n            return;\r\n        }\r\n\r\n        if (!allowedNetworks.includes(Number(this.state.networkId))) {\r\n            notificationConfig.error(\"Selected network is not allowed.\");\r\n            return;\r\n        }\r\n\r\n        if (Number(this.state.spProfitPercent) > 1 || Number(this.state.spProfitPercent) < 0) {\r\n            this.setState({\r\n                clientSideErrorMessage: \"Please provide a valid input between 0-1 range\",\r\n                clientSideError: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                clientSideError: false\r\n            });\r\n        }\r\n\r\n        let validationPass = await this.validateWithdrawOnContractFromCexSlider(this.props.maxWithdrawPercent);\r\n        if (validationPass === false) {\r\n            return;\r\n        }\r\n\r\n        // set this to disable deploy button\r\n        this.setState({\r\n            deployed: true,\r\n            loadingIcon: true,\r\n            deployButtonText: \"Deploying...\",\r\n            errorMessage: null\r\n        });\r\n\r\n        console.log(`deploying contact on network - ${web3Config.getNetworkId()}`)\r\n\r\n        let args = {};\r\n        if (Number(this.state.stopRepeatsMode) === 1) {\r\n            console.log('Stop mode 1');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: this.state.stopRepeatsOnDate,\r\n                stopRepeatsAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsMode) === 2) {\r\n            console.log('Stop mode 2');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: null,\r\n                stopRepeatsAfterCalls: this.state.stopRepeatsAfterCalls\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsMode) === 3) {\r\n            console.log('Stop mode 3');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: null,\r\n                stopRepeatsAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.withdrawMode) === 1) {\r\n            console.log('Stop mode 1');\r\n            Object.assign(args, {\r\n                withdrawOnDate: this.state.withdrawOnDate,\r\n                withdrawAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.withdrawMode) === 2) {\r\n            console.log('Stop mode 2');\r\n            Object.assign(args, {\r\n                withdrawOnDate: null,\r\n                withdrawAfterCalls: this.state.withdrawAfterCalls\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.withdrawMode) === 3) {\r\n            console.log('Stop mode 3');\r\n            Object.assign(args, {\r\n                withdrawOnDate: null,\r\n                withdrawAfterCalls: null\r\n            });\r\n        }\r\n\r\n        const tokenA = _.find(this.state.coinList, { \"address\": this.state.tokenA });\r\n        const tokenB = _.find(this.state.coinList, { \"address\": this.state.tokenB });\r\n\r\n        let finalArgs = {\r\n            data: Object.assign(args, {\r\n                spAccount: web3Config.getAddress(),\r\n                networkId: web3Config.getNetworkId(),\r\n                tokenA: this.state.tokenA,\r\n                tokenB: this.state.tokenB,\r\n                amountA: this.state.amountA === null ? ('').toString() : this.state.amountA,\r\n                walletAddressToSend: this.state.walletAddressToSend === null ? ('').toString() : this.state.walletAddressToSend,\r\n                walletAddressToReceive: this.state.walletAddressToReceive === null ? ('').toString() : this.state.walletAddressToReceive,\r\n                gasAndFeeAmount: Web3.utils.toWei((this.state.gasAndFeeAmount).toString()),\r\n                swapSpeedMode: this.state.swapSpeedMode,\r\n                spProfitPercent: this.state.spProfitPercent,\r\n                accumulateFundsLimit: this.state.accumulateFundsLimit,\r\n                stopRepeatsMode: this.state.stopRepeatsMode,\r\n                withdrawMode: this.state.withdrawMode,\r\n                withdrawPercent: this.state.withdrawPercent,\r\n                cexType: this.state.selectedCex\r\n            }),\r\n            path: 'become-swap-provider',\r\n            method: 'POST'\r\n        };\r\n\r\n        console.log(finalArgs)\r\n\r\n        try {\r\n            let response = await AxiosRequest.request(finalArgs);\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n                console.log('record created!');\r\n                let swapFactory = new SwapFactoryContractPairWise(this.state.web3, tokenA.symbol, tokenB.symbol, 'LiquidityProvider');\r\n                swapFactory.addSwapProvider(\r\n                    response.data.tokenA.address,\r\n                    response.data.tokenB.address,\r\n                    response.data.walletAddresses.toSend,\r\n                    response.data.walletAddresses.toReceive,\r\n                    Web3.utils.fromWei((response.data.gasAndFeeAmount.$numberDecimal).toString(), 'ether'),\r\n                    async (hash) => {\r\n                        if (hash !== null || hash !== undefined) {\r\n                            // update tx hash to db\r\n                            let args = {\r\n                                data: {\r\n                                    docId: response.data._id,\r\n                                    txid: hash\r\n                                },\r\n                                path: 'update-tx-hash',\r\n                                method: 'POST'\r\n                            }\r\n                            response = await AxiosRequest.request(args);\r\n                            console.log(response);\r\n                        }\r\n                    },\r\n                    async (response) => {\r\n                        console.log({\r\n                            \"Contract response:\": response\r\n                        });\r\n                        if (response.code === 4001 || response.code === -32603) {\r\n                            this.setState({\r\n                                confirmed: false,\r\n                                deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n                                deployed: false,\r\n                                loadingIcon: false,\r\n                                isActiveContractExist: false\r\n                            });\r\n                            if (response.code === 4001) {\r\n                                notificationConfig.error('Deploying cancelled. Please try again');\r\n                            }\r\n                            if (response.code === -32603) {\r\n                                notificationConfig.error('Intrinsic gas too low');\r\n                            }\r\n                            await this.getActiveContracts();\r\n                        }\r\n\r\n                        if (response.status === 1) {\r\n                            const newSpContactAddress = response.logs[0].address;\r\n                            // get deployment status\r\n                            await this.getContractDepolymentStatus(newSpContactAddress);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (response.status === 400) {\r\n                this.setState({\r\n                    loadingIcon: false,\r\n                    deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n                    deployed: false,\r\n                    errorMessage: response.data[0]\r\n                });\r\n                notificationConfig.error('Something went wrong!');\r\n            }\r\n\r\n            if (response.status === 401 || response.status === 422) {\r\n                this.setState({\r\n                    loadingIcon: false,\r\n                    deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n                    deployed: false,\r\n                    serverError: response.data.errorMessage.error\r\n                });\r\n                notificationConfig.error(response.data.errorMessage.error);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n            notificationConfig.error('Server Error!');\r\n            this.setState({\r\n                loadingIcon: false,\r\n                deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n                deployed: false\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async getActiveContracts() {\r\n\r\n        this.setState({\r\n            deployed: true,\r\n            deployButtonText: 'Getting active contract'\r\n        });\r\n\r\n        let args = {\r\n            data: {\r\n                spAccount: web3Config.getAddress(),\r\n                networkId: web3Config.getNetworkId(),\r\n                cexType: (this.state.selectedCex).toUpperCase(),\r\n                tokenA: this.state.tokenA,\r\n                tokenB: this.state.tokenB\r\n            },\r\n            path: 'active-contracts',\r\n            method: 'POST'\r\n        }\r\n\r\n        try {\r\n            let response = await AxiosRequest.request(args);\r\n            if (response.status === 200) {\r\n\r\n                const isactiveContractExist = response.data.find(obj => {\r\n                    if ((obj.networkId === web3Config.getNetworkId()) && ((web3Config.getAddress()).toLowerCase() === obj.walletAddresses.spAccount)) {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                })\r\n\r\n                if (isactiveContractExist) {\r\n                    notificationConfig.success('Active contract found.');\r\n                    this.setState({\r\n                        spData: response.data,\r\n                        confirmed: true,\r\n                        deployed: false,\r\n                        deployButtonText: 'DEPLOY SMART CONTRACT'\r\n                    });\r\n                    return true;\r\n                } else {\r\n                    this.setState({\r\n                        deployed: false,\r\n                        deployButtonText: 'DEPLOY SMART CONTRACT'\r\n                    });\r\n                    notificationConfig.error('No active contract for the selected network.');\r\n                    return false;\r\n                }\r\n            } else if (response.status === 404) {\r\n                this.setState({\r\n                    deployed: false,\r\n                    deployButtonText: 'DEPLOY SMART CONTRACT'\r\n                });\r\n                notificationConfig.error('No active contract.');\r\n                return false;\r\n            } else {\r\n                console.log(response);\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setState({\r\n                web3: null,\r\n                deployed: false,\r\n                deployButtonText: 'CONNECT YOUR WALLET'\r\n            });\r\n            notificationConfig.error('Failed to connect to server.');\r\n        }\r\n    }\r\n\r\n\r\n    async getContractDepolymentStatus(smartContractAddress) {\r\n        let args = {\r\n            data: {\r\n                spAccount: this.state.spAccount,\r\n                networkId: web3Config.getNetworkId(),\r\n                smartContractAddress: smartContractAddress,\r\n                tokenA: this.state.tokenA,\r\n                tokenB: this.state.tokenB\r\n            },\r\n            path: 'get-contract-status',\r\n            method: 'POST'\r\n        }\r\n\r\n        var networkPromise = await AxiosRequest.request(args);\r\n        var timeOutPromise = new Promise(function (resolve, reject) {\r\n            setTimeout(resolve, 5000, 'Timeout Done');\r\n        });\r\n        Promise.all(\r\n            [networkPromise, timeOutPromise]).then(async (responses) => {\r\n                if (responses[0].data === true) {\r\n                    await this.getActiveContracts();\r\n                    this.setState({\r\n                        smartSwapContractAddress: (smartContractAddress).toLowerCase(),\r\n                        confirmed: true,\r\n                        deployButtonText: \"Contract Deployed\",\r\n                        loadingIcon: false,\r\n                        isActiveContractExist: true\r\n                    });\r\n                    notificationConfig.success('Swap provider Added');\r\n                } else {\r\n                    await this.getContractDepolymentStatus(smartContractAddress);\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        const smallError = {\r\n            fontSize: \"13px\",\r\n            lineHeight: \"20px\"\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <div className=\"LiProFormMbox\">\r\n\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className=\"LiProTitle02\">SEND</div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiProTitle02\">RECEIVED</div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className=\"LiProLable\">Choose the token A to sell on Smartswap<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Total amount circulating as a swap provider. \r\n        <br/><br/>\r\n        For example, selecting $100,000 means up $100,000 circulates to support SmartSwap liquidity\" aria-hidden=\"true\"></i></i></div>\r\n                        <div className=\"bspMBX01\">\r\n                            <div className=\"bspSBX01 fw\">\r\n                                <div className=\"LiproDropdown\">\r\n                                    <button className='LiproDDbtn01' onClick={() => this.toggle(1)} >\r\n                                        <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[this.state.selectedTokenA]['icon']} alt=\"\" /></span> {this.state.coinList[this.state.selectedTokenA]['symbol']}</div>\r\n                                        <i className=\"fas fa-caret-down\"></i>\r\n                                    </button>\r\n                                    <div className=\"ddContainer\" ref={this.setDropdownWrapperRef}>\r\n                                        <Collapse isOpen={this.state.isOpen1} className={\"collapse-css-transition\"} >\r\n                                            {\r\n                                                Object.keys(this.state.coinList).map((coin) => (\r\n                                                    this.state.selectedTokenB !== this.state.coinList[coin]['symbol'] &&\r\n                                                    (this.state.coinList[coin]['approveRequire'] === false) &&\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            this.changeTokenA(this.state.coinList[coin]['symbol']);\r\n                                                        }}\r\n                                                        key={this.state.coinList[coin]['symbol']} className='LiproDDbtn01'\r\n                                                    >\r\n                                                        <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[coin]['icon']} alt=\"\" /></span> {this.state.coinList[coin]['symbol']}</div>\r\n                                                    </button>\r\n                                                ))\r\n                                            }\r\n                                        </Collapse>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"FlyICO03\">\r\n                            {/* <button onClick={() => this.swapTokens()}>{\"<>\"}</button> */}\r\n                            <button className=\"swap-token-side grey-arrow\" href=\"javascript:void(0);\" onClick={() => this.swapTokens()}>\r\n                                <img src=\"images/green-arrow.png\" alt=\"Swap token sides\"></img>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiProLable\">Choose token B to receive from SmartSwap</div>\r\n                        <div className=\"LiproDropdown\">\r\n                            <button className='LiproDDbtn01' onClick={() => this.toggle(2)} >\r\n                                <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[this.state.selectedTokenB]['icon']} alt=\"\" /></span> {this.state.coinList[this.state.selectedTokenB]['symbol']}</div>\r\n                                <i className=\"fas fa-caret-down\"></i>\r\n                            </button>\r\n                            <div className=\"ddContainer\" ref={this.setDropdownWrapperRef}>\r\n                                <Collapse isOpen={this.state.isOpen2} className={\"collapse-css-transition\"} >\r\n                                    {\r\n                                        Object.keys(this.state.coinList).map((coin) => (\r\n                                            (this.state.selectedTokenA !== this.state.coinList[coin]['symbol']) &&\r\n                                            (this.state.coinList[coin]['approveRequire'] === false) &&\r\n                                            <button\r\n                                                onClick={() => {\r\n                                                    this.changeTokenB(this.state.coinList[coin]['symbol']);\r\n                                                }}\r\n                                                key={this.state.coinList[coin]['symbol']} className='LiproDDbtn01'\r\n                                            >\r\n                                                <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[coin]['icon']} alt=\"\" /></span> {this.state.coinList[coin]['symbol']}</div>\r\n                                            </button>\r\n                                        ))\r\n                                    }\r\n                                </Collapse>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className=\"LiProLable\">Your CEX wallet address <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Enter you CEX wallet (for example your Binance wallet address) that will become a swap provider. \" aria-hidden=\"true\"></i></i></div>\r\n                        <div className=\"LiproInput01\">\r\n                            <input\r\n                                type=\"text\"\r\n                                defaultValue=''\r\n                                onChange={event => this.setState({ walletAddressToSend: event.target.value })}\r\n                                ref={(input) => this.walletAddressToSend = input}\r\n                            />\r\n                        </div>\r\n                        <br></br>\r\n                        {this.state.errorMessage !== null && this.state.errorMessage.includes(\"walletAddressToSend\") &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.errorMessage}</label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiProLable\">Your CEX wallet address <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Enter the wallet that receives SP results and rewards. This wallet address may be the same CEX wallet address as the token A address. \r\n        <br/><br/>\r\n        N.B. that on some CEX it may be two different wallet addresses, one to send and one to receive.\" aria-hidden=\"true\"></i></i></div>\r\n                        <div className=\"LiproInput01\">\r\n                            <input\r\n                                type=\"text\"\r\n                                defaultValue=''\r\n                                onChange={event => this.setState({ walletAddressToReceive: event.target.value })}\r\n                                ref={(input) => this.walletAddressToReceive = input}\r\n                            />\r\n                        </div>\r\n                        <br></br>\r\n                        {this.state.errorMessage !== null && this.state.errorMessage.includes(\"walletAddressToReceive\") &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.errorMessage}</label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"LiProfSbox01 \">\r\n                        <div className=\"LiProLable d-flex\">Choose the total amount you are authorizing the API<br></br> to use\r\n                            <i className=\"help-circle\">\r\n                                <i\r\n                                    className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top\"\r\n                                    data-pt-title=\"The total amount includes the amount that will be send to your smart contract, the stable coin amount that will be left on your CEX account and the funds that will be use to place short order when needed.\"\r\n                                    aria-hidden=\"true\"\r\n                                ></i>\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiproInput01 withLable01\" style={{ marginTop: \"12px\" }}>\r\n                            <span>$</span>\r\n                            <input\r\n                                type=\"text\"\r\n                                defaultValue=''\r\n                                placeholder=\"50000\"\r\n                                onChange={event => this.checkAmountA(event.target.value, this.props.minAmountA)}\r\n                                ref={(input) => this.amountA = input}\r\n                            />\r\n                        </div>\r\n                        <br></br>\r\n                        {this.state.errorMessage !== null && this.state.errorMessage.includes(\"amountA\") &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.errorMessage}</label>\r\n                            </div>\r\n                        }\r\n                        {this.state.clientSideError === true && (this.state.clientSideErrorMessage.amountA !== null) &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.clientSideErrorMessage.amountA}</label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className='LiProfSbox01'>\r\n                        <div className=\"mb-20px-n\">\r\n                            <div className=\"LiProLable\">CEX\r\n                                <i className=\"help-circle\">\r\n                                    <i\r\n                                        className=\"fas fa-question-circle protip\"\r\n                                        data-pt-position=\"top\"\r\n                                        data-pt-title=\"Choose CEX Of your choice from the below listed CEX. Note that once cex set it can't be changed in the future. Choose carefully\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></i>\r\n                                </i>\r\n                            </div>\r\n                            <div className=\"LiproDropdown\">\r\n                                <button className='LiproDDbtn01' onClick={() => this.toggleCexList()}>\r\n                                    <div className=\"ddIconBX\">\r\n                                        <span>\r\n                                            <img src={this.state.cexList[this.state.selectedCex]['icon']} alt=\"\" />\r\n                                        </span>\r\n                                        {this.state.cexList[this.state.selectedCex]['symbol']}\r\n                                    </div>\r\n                                    <i className=\"fas fa-caret-down\"></i>\r\n                                </button>\r\n                                <div className=\"ddContainer\">\r\n                                    <Collapse isOpen={(this.state.cexListOpen)} ref={this.setDropdownWrapperRef} className={\"collapse-css-transition\"} >\r\n                                        {\r\n                                            Object.keys(this.state.cexList).map((cex) => (\r\n                                                <button\r\n                                                    //disabled={this.props.contractData.cexData.type !== null}\r\n                                                    key={this.state.cexList[cex]['symbol']} className='LiproDDbtn01'\r\n                                                    onClick={() => {\r\n                                                        this.toggleCexList(this.state.cexList[cex]['symbol']);\r\n                                                    }}\r\n                                                >\r\n                                                    <div className=\"ddIconBX\">\r\n                                                        <span>\r\n                                                            <img src={this.state.cexList[cex]['icon']} alt=\"\" />\r\n                                                        </span> {this.state.cexList[cex]['symbol']}\r\n                                                    </div>\r\n                                                </button>\r\n                                            ))\r\n                                        }\r\n                                    </Collapse>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='spacerLine'></div>\r\n\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className=\"LiProTitle02\">CHOOSE YOUR SWAPPING SPEED<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"right\" data-pt-title=\"The Smart swap using a matcher to match between users to users and if there are no users available, between users to swap providers (SP). the matcher taking under consideration, which SP can complete the swap fully, faster and cheaper. \r\n                        <br/><br/>\r\n                        SP can hold stable coin (USDT) on their controlled CEX account, which will be trigger by API to buy in real time tokens and send over to the SP's smarts contact which will be  use as a counterparty to other users. same exchange processing withdraw after few long minutes and also each blockchain network as different proccing speed, those facts can put some SP with holding upfront tokens on their smart contract with advantage over other SP that requires to buy those tokens and then send them over.\r\n                        <br/><br/>\r\n                        As a SP you can choose if you want to send tokens to your smart contract in real time, or if you want to act faster by depositing tokens upfront to to your smart contract.\" aria-hidden=\"true\"></i></i></div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiProTitle02\"> </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className='LipRadioFix01' >\r\n                            <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"spS01\"\r\n                                    name=\"s001\"\r\n                                    onChange={event => this.setState({ swapSpeedMode: 'UPFRONT' })}\r\n                                    checked={this.state.swapSpeedMode === 'UPFRONT'}\r\n                                    ref={(input) => this.swapSpeedMode1 = input}\r\n                                />\r\n                                <label htmlFor=\"spS01\"></label>\r\n                            </div>\r\n                            <div className=\"LiProFlexBX01 padFixer01\">\r\n                                <div className=\"LipRTitle01\">Deposit token A to the smart contract upfront<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"right\" data-pt-title=\"This option required from you hold upfront 45% of the sell token in the smart contract, and another 55% as stable coin (USDT) on your centralized account (that 55% will be used to buy the sell tokens in real time and placing a short order against the receiving token to secure it's face value from volatility).\r\n                                <br/><br/>\r\n                                Once you will deploy your smart contract, you will need to deposit directly to your smart contract address the 45% the funds as tokens that you want to sell. \r\n                                <br/><br/>\r\n                                For example if you want to and you are looking to gain profit of 0.05% as a spread. in exchange for ETH and you are looking to gain profit of 0.05% as a spread, you will need to deposit $45,000 of BNB to your smart contract, so users that buying those BNB will get those tokens instantly without waiting for your centralized account to send it over to the smart contract (which can takes few long minutes). Wen swaps take place your CEX account will be trigger to buy in real time new BNB at the best price in the exchange and then send them to feed back your smart contract, while on the same time the smartswap will send to your CEX account $45,225 of ETH (which is the same amount plus the spread that you agree to), then the API will open a short position to make sure those ETH will be sold back to stablecoins without any lost to volatility.\" aria-hidden=\"true\"></i></i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className='LipRadioFix01' >\r\n                            <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"spS02\"\r\n                                    name=\"s002\"\r\n                                    onChange={event => this.setState({ swapSpeedMode: 'UPFRONT' })}\r\n                                    checked={this.state.swapSpeedMode === 'REALTIME'}\r\n                                    ref={(input) => this.swapSpeedMode2 = input}\r\n                                    disabled={true}\r\n                                />\r\n                                <label htmlFor=\"spS02\"></label>\r\n                            </div>\r\n                            <div className=\"LiProFlexBX01 padFixer01\">\r\n                                <div className=\"LipRTitle01\">Deposit token A to the smart contract in real time<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Selecting this option allows zero up front tokens and 100% of your funds may wait as stablecoins (USDT) on your centralized exchange account. Once your account is triggered to provide liquidity to SmartSwap, the controlled account uses the authorized stablecoin account to buy the tokens and send them to your smart contract address.\r\n                                <br/><br/>\r\n                                N.B. The process to send tokens from centralized  exchange accounts to your smart contract may take few minutes depending on the exchange and the speed of network. Therefore, the SmartSwap may choose other SPs over you which have tokens available on their smart contract already and can execute the swap faster for the end user.\" aria-hidden=\"true\"></i></i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.errorMessage !== null && this.state.errorMessage.includes(\"swapSpeedMode\") &&\r\n                        <div className=\"error-Msg\" style={smallError}>\r\n                            <label>{this.state.errorMessage}</label>\r\n                        </div>\r\n                    }\r\n                    <div className=\"LiProfSbox03 withdrawSlider\">\r\n                        {/* withdraw % slider */}\r\n                        <div className=\"dragorInput v2\">\r\n                            <InputRange\r\n                                step={1}\r\n                                maxValue={100}\r\n                                minValue={0}\r\n                                value={this.state.withdrawPercent}\r\n                                formatLabel={value => `${value}%`}\r\n                                onChange={value => this.setState({ withdrawPercent: value })}\r\n                                onChangeComplete={() => this.validateWithdrawOnContractFromCexSlider(this.props.maxWithdrawPercent)}\r\n                            />\r\n                        </div>\r\n                        <p className=\"withdrawOnContractAlert\">\r\n                            You must keep balance on your CEX account at least 55% of the total amount\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className='spacerLine'></div>\r\n\r\n                    <div className=\"LiProfSbox03\">\r\n                        <div className=\"LiProTitle02\">GAS AND FEES</div>\r\n                        <div className=\"LiProLable mtFix01\">Set the maximum amount which the smart contract is authorized to withdraw from your CEX account to cover the gas and fees. Once the total is reached, the contract stops performing until reauthorized with a new limit</div>\r\n                        <div className=\"dragorInput v2\">\r\n                            <InputRange\r\n                                step={this.state.minStepForGasAndFeeAmount}\r\n                                maxValue={this.state.maxGasAndFeeAmount}\r\n                                minValue={this.state.minGasAndFeeAmount}\r\n                                value={this.state.gasAndFeeAmount}\r\n                                formatLabel={value => this.state.selectedTokenA + ` ${value}`}\r\n                                onChange={value => this.setState({ gasAndFeeAmount: value })}\r\n                                ref={(input) => this.gasAndFeeAmount = input}\r\n                            />\r\n                        </div>\r\n                        <br></br>\r\n                        {this.state.errorMessage !== null && this.state.errorMessage.includes(\"gasAndFeeAmount\") &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.errorMessage}</label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className='spacerLine'></div>\r\n                    <div className=\"LiProfSbox03\">\r\n                        <div className=\"LiProTitle02\">PROFIT</div>\r\n                    </div>\r\n                    <div className='LiProFlexBX01 smFixer07'>\r\n                        <div className=\"LiProfSbox01\">\r\n                            <div className=\"LiProLable\">Choose the minimum that you want to gain on each swap <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Set a profit limit that triggers your funds for swapping. Take under consideration all costs such as exchange fees. \r\n                            <br/><br/>\r\n                            For example, you can choose that you want your funds to swap only if it's gain 0.5% profits. When you set the profit limit, take under consideration all the costs that you may pay to your CEX for such transaction short position, blockchain cost, (which by themselves can be range from 0.1 to 0.3% - depend on the CEX and network).\" aria-hidden=\"true\"></i></i></div>\r\n                        </div>\r\n                        <div className=\"LiProfSbox02\">\r\n                            <div className=\"LiproInput01 withLable01\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder={this.state.spProfitPercent}\r\n                                    onChange={event => this.changeSpread(event.target.value, this.props.minSpreadRange, this.props.maxSpreadRange)}\r\n                                    ref={(input) => this.spProfitPercent = input}\r\n                                    min={this.props.minSpreadRange}\r\n                                    max={this.props.maxSpreadRange}\r\n                                />\r\n                                <span>%</span>\r\n                            </div>\r\n                            <br></br>\r\n                            {this.state.errorMessage !== null && this.state.errorMessage.includes(\"spProfitPercent\") &&\r\n                                <div className=\"error-Msg\" style={smallError}>\r\n                                    <label>{this.state.errorMessage}</label>\r\n                                </div>\r\n                            }\r\n                            {this.state.clientSideError === true && (this.state.clientSideErrorMessage.spProfitPercent !== null) &&\r\n                                <div className=\"error-Msg\" style={smallError}>\r\n                                    <label>{this.state.clientSideErrorMessage.spProfitPercent}</label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='LiProFlexBX01 smFixer07'>\r\n                        <div className=\"LiProfSbox01\">\r\n                            <div className=\"LiProLable\">Choose the minimum amount that you are willing to swap with<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Take under consideration, performing a swap costs gas and fees which are reimbursed via SMART\" aria-hidden=\"true\"></i></i></div>\r\n                        </div>\r\n                        <div className=\"LiProfSbox02\">\r\n                            <div className=\"LiproInput01 withLable01\">\r\n                                <span>$</span>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder={this.state.accumulateFundsLimit}\r\n                                    onChange={event => this.setState({ accumulateFundsLimit: event.target.value })}\r\n                                    ref={(input) => this.accumulateFundsLimit = input}\r\n                                />\r\n                            </div>\r\n                            <br></br>\r\n                            {this.state.errorMessage !== null && this.state.errorMessage.includes(\"accumulateFundsLimit\") &&\r\n                                <div className=\"error-Msg\" style={smallError}>\r\n                                    <label>{this.state.errorMessage}</label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='spacerLine'></div>\r\n                    <div className=\"LiProfSbox03\">\r\n                        <div className=\"LiProTitle02\">REPEAT</div>\r\n                    </div>\r\n\r\n                    <div className='LiProFlexBX01 tabFixer smFixer02' style={{ alignItems: 'flex-start' }}>\r\n                        <div className=\"LiProfSbox01\" style={{ paddingTop: '10px' }}>\r\n                            <div className=\"LiProLable\">Stop repeat on CEX <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"This option denotes how many transactions you approve as a Swap Provider. Once the limit is reached, the API stops performing any repeats. Once the repeat stops, there is no way to change the process besides deploying a new Swap Provider contract with new rules.\" aria-hidden=\"true\"></i></i></div>\r\n                        </div>\r\n                        <div className=\"LiProfSbox02\">\r\n\r\n                            <div className='LipRadioFix01' >\r\n                                <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"s01\"\r\n                                        name=\"s11\"\r\n                                        value=\"s01\"\r\n                                        onChange={event => this.setState({ stopRepeatsMode: 1 })}\r\n                                        checked={this.state.stopRepeatsMode === 1}\r\n                                        ref={(input) => this.stopRepeatsMode1 = input}\r\n                                    />\r\n                                    <label htmlFor=\"s01\"></label>\r\n                                </div>\r\n                                <div className='LiProFlexBX01 padFixer01'>\r\n                                    <div className=\"LiproInput01\">\r\n                                        <DatePicker\r\n                                            selected={this.state.stopRepeatsOnDate}\r\n                                            onChange={(date) => this.setState({ stopRepeatsOnDate: date })}\r\n                                            peekNextMonth\r\n                                            showMonthDropdown\r\n                                            showYearDropdown\r\n                                            dropdownMode=\"select\"\r\n                                            dateFormat=\"dd/MM/yyyy\"\r\n                                            ref={(input) => this.stopRepeatsOnDate = input}\r\n                                        />\r\n                                        <i className=\"fas fa-calendar-alt FlyICO\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='LipRadioFix01' >\r\n                                <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"s02\"\r\n                                        name=\"s12\"\r\n                                        value=\"s02\"\r\n                                        onChange={event => this.setState({ stopRepeatsMode: 2 })}\r\n                                        checked={this.state.stopRepeatsMode === 2}\r\n                                        ref={(input) => this.stopRepeatsMode2 = input}\r\n                                    />\r\n                                    <label htmlFor=\"s02\"></label>\r\n                                </div>\r\n                                <div className=\"LiProFlexBX01 padFixer01\">\r\n                                    <div className=\"LiproInput01 withLable02\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder={this.state.stopRepeatsAfterCalls}\r\n                                            onChange={event => this.setState({ stopRepeatsAfterCalls: event.target.value })}\r\n                                            ref={(input) => this.stopRepeatsAfterCalls = input}\r\n                                        />\r\n                                        {/* <div className=\"FlyICO02\">Days</div> */}\r\n                                        <span>Repeats</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='LipRadioFix01' >\r\n                                <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"s03\"\r\n                                        name=\"s13\"\r\n                                        value=\"s03\"\r\n                                        onChange={event => this.setState({ stopRepeatsMode: 3 })}\r\n                                        checked={this.state.stopRepeatsMode === 3}\r\n                                        ref={(input) => this.stopRepeatsMode3 = input}\r\n                                    />\r\n                                    <label htmlFor=\"s03\"></label>\r\n                                </div>\r\n                                <div className=\"LiProFlexBX01 padFixer01\">\r\n                                    <div className=\"LipRTitle01\">Never stop<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Run SP repeats non-stop as long as there is funds available in your CEX account.\" aria-hidden=\"true\"></i></i></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if ((this.state.web3 === null ||\r\n                            constantConfig.tokenDetails[\r\n                                this.state.selectedTokenA\r\n                            ].networkId !== web3Config.getNetworkId())) {\r\n                            return (<div className=\"LiProfSbox03\">\r\n                                <div className='LiProformBTNbar'>\r\n                                    <button\r\n                                        onClick={this.connectWallet.bind(this)}\r\n                                    >CONNECT YOUR WALLET</button>\r\n                                </div>\r\n                            </div>)\r\n\r\n                        } else {\r\n                            return (<div className=\"LiProfSbox03\">\r\n                                <div className='LiProformBTNbar'>\r\n                                    <button\r\n                                        onClick={this.deployContract.bind(this)} disabled={this.state.deployed}\r\n                                    >\r\n                                        {this.state.deployButtonText}\r\n                                        {this.state.loadingIcon === true &&\r\n                                            <LoopCircleLoading\r\n                                                height={'20px'}\r\n                                                width={'20px'}\r\n                                                color={'#ffffff'}\r\n                                            />\r\n                                        }\r\n                                    </button>\r\n                                </div>\r\n                            </div>)\r\n                        }\r\n                    }\r\n                    )()}\r\n\r\n                    {/* <div className='spacerLine'></div>\r\n                    {this.state.serverError !== null &&\r\n                        <div className=\"error-Msg\" style={{display: 'none;'}}>\r\n                            <label>{this.state.serverError}</label>\r\n                        </div>\r\n                    } */}\r\n                </div>\r\n                <div className='spacerLine'></div>\r\n                {\r\n                    ((this.state.confirmed === true) && (this.state.spData !== null) && (this.state.spData.length > 0)) &&\r\n                    <>\r\n                        <div className=\"LiProTitle03\">Below is your Swap Provider smart contract address</div>\r\n                        {this.state.spData.map((data, index) => {\r\n                            return <ActiveContract\r\n                                key={index}\r\n                                index={index + 1}\r\n                                contractData={data}\r\n                                coinList={this.state.coinList}\r\n                                stepOpen={true}\r\n                                web3={this.state.web3}\r\n                                tokenPrices={this.props.tokenPrices}\r\n                                minAmountA={this.props.minAmountA}\r\n                                maxWithdrawPercent={this.props.maxWithdrawPercent}\r\n                                sandboxMode={this.props.sandboxMode}\r\n                            />\r\n                        })}\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n};\r\n","D:\\React\\SmartSwap_frontend\\src\\helper\\axiosRequest.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\ActiveContract.js",["798","799","800","801","802","803","804","805","806","807","808","809"],"import React, { Component } from \"react\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport notificationConfig from '../../config/notificationConfig';\r\nimport SPContract from '../../helper/spContract';\r\nimport AxiosRequest from \"../../helper/axiosRequest\";\r\nimport DateFormat from \"dateformat\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport InputRange from 'react-input-range';\r\nimport Web3 from 'web3';\r\nimport constantConfig from '../../config/constantConfig';\r\nimport { LoopCircleLoading } from 'react-loadingg';\r\nimport web3Config from \"../../config/web3Config\";\r\n\r\nvar _ = require('lodash');\r\n\r\nexport default class ActiveContract extends Component {\r\n    _isMounted = false;\r\n    _isCexUpdated = false;\r\n    constructor(props) {\r\n        super();\r\n\r\n        let gasAndFeeAmount = Web3.utils.fromWei((props.contractData.gasAndFeeAmount.$numberDecimal).toString(), 'ether');\r\n\r\n        let stopRepeatsOnDateOnContract = null, stopRepeatsAfterCallsOnContract = null, cexApiKeyMasked = null, cexApiSecretMasked = null, spContractBalInUsd = 0;\r\n\r\n        if (props.contractData.stopRepeats.mode === 1) {\r\n            let toDate = new Date(props.contractData.stopRepeats.onDate);\r\n            stopRepeatsOnDateOnContract = toDate;\r\n        }\r\n\r\n        if (props.contractData.stopRepeats.mode === 2) {\r\n            stopRepeatsAfterCallsOnContract = props.contractData.stopRepeats.afterCalls;\r\n        }\r\n\r\n        if (props.contractData.cexData.key !== null) {\r\n            cexApiKeyMasked = this.inputMask('key', props.contractData.cexData.key, false);\r\n        }\r\n\r\n        if (props.contractData.cexData.secret !== null) {\r\n            cexApiSecretMasked = this.inputMask('secret', props.contractData.cexData.secret, false);\r\n        }\r\n\r\n        if (props.sandboxMode === true) {\r\n            spContractBalInUsd = props.contractData.totalWithdrawnAmount.$numberDecimal;\r\n        }\r\n\r\n        const cexType = props.contractData.cexData.type !== null ? (props.contractData.cexData.type).toUpperCase() : 'BINANCE';\r\n\r\n        this.state = {\r\n            web3: props.web3,\r\n            coinList: props.coinList,\r\n            spContractBal: 0,\r\n            spContractBalInUsd: spContractBalInUsd,\r\n            tokenPrices: props.tokenPrices,\r\n\r\n            // contract data\r\n            spAccount: web3Config.getAddress(),\r\n            tokenA: props.contractData.tokenA.address,\r\n            tokenB: props.contractData.tokenB.address,\r\n            networkIdOnContract: Number(props.contractData.networkId),\r\n            gasAndFeeAmountOnContract: Number(gasAndFeeAmount),\r\n            minGasAndFeeAmountOnContractSide: 0,\r\n            maxGasAndFeeAmountOnContractSide: 0,\r\n            minStepForGasAndFeeAmountOnContractSide: 0,\r\n            spProfitPercentOnContract: props.contractData.spProfitPercent,\r\n            createdAt: props.contractData.createdAt,\r\n            amountAOnContract: props.contractData.totalAmount.$numberDecimal,\r\n            tempAmountAOnContract: props.contractData.totalAmount.$numberDecimal,\r\n            accumulateFundsLimitOnContract: props.contractData.accumulateFundsLimit,\r\n            stopRepeatsModeOnContract: props.contractData.stopRepeats.mode,\r\n            stopRepeatsOnDateOnContract: stopRepeatsOnDateOnContract,\r\n            stopRepeatsAfterCallsOnContract: stopRepeatsAfterCallsOnContract,\r\n            cexApiKey: props.contractData.cexData.key,\r\n            cexApiSecret: props.contractData.cexData.secret,\r\n            cexApiKeyMasked: cexApiKeyMasked,\r\n            cexApiSecretMasked: cexApiSecretMasked,\r\n            cexApiKeyEditable: true,\r\n            cexApiSecretEditable: true,\r\n            swapSpeedModeOnContract: props.contractData.swapSpeedMode,\r\n            withdrawPercentOnContract: props.contractData.withdrawPercent,\r\n            tempWithdrawPercentOnContract: props.contractData.withdrawPercent,\r\n            spContractAddress: props.contractData.smartContractAddress,\r\n\r\n            // error messages\r\n            clientSideError: false,\r\n            clientSideErrorMessage: {\r\n                spProfitPercentOnContract: null,\r\n                amountAOnContract: null\r\n            },\r\n            errorMessage: null,\r\n\r\n            // effects\r\n            stepOpen: props.stepOpen,\r\n            reAuthrizeing: false,\r\n            toggleStopRepeatsSection: false,\r\n            updating: false,\r\n            updated: false,\r\n            updateButtonText: \"SAVE TO UPDATE CONTRACT\",\r\n            loadingIcon: false,\r\n\r\n            // tests vars\r\n            tests: null,\r\n            testPassed: false,\r\n            testing: false,\r\n\r\n            //\r\n            cexList: constantConfig.cexTypes,\r\n            selectedCex: cexType,\r\n            cexListOpen: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            // detect Network account change\r\n            window.ethereum.on('chainChanged', networkId => {\r\n                console.log('chainChanged', networkId);\r\n                this.setState({\r\n                    web3: null,\r\n                    spAccount: null,\r\n                    tests: null,\r\n                    testPassed: false\r\n                });\r\n            });\r\n\r\n            window.ethereum.on('accountsChanged', accounts => {\r\n                console.log('account Changed');\r\n                this.setState({\r\n                    web3: null,\r\n                    spAccount: null,\r\n                    tests: null,\r\n                    testPassed: false\r\n                });\r\n                // on account change currently disconnecting wallet so we can again check active contract on wallet connect \r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this._isMounted) {\r\n            if (this.props.sandboxMode === false) {\r\n                this.getContractBal();\r\n            }\r\n            this.getAllTests();\r\n        }\r\n    }\r\n\r\n    getTokenData(tokenAddress, key) {\r\n        if (tokenAddress !== null) {\r\n            let token = _.find(this.state.coinList, { \"address\": tokenAddress });\r\n            //console.log(token);\r\n            if (token !== null) {\r\n                return token[key];\r\n            }\r\n        }\r\n    };\r\n\r\n    toggleStep() {\r\n        const currentState = this.state.stepOpen;\r\n        this.setState({\r\n            stepOpen: !currentState\r\n        });\r\n    }\r\n\r\n    toggleCexList(changedCex = null) {\r\n        const currentState = this.state.cexListOpen;\r\n        this.setState({\r\n            cexListOpen: !currentState\r\n        });\r\n\r\n        if (changedCex) {\r\n            this.setState({\r\n                selectedCex: changedCex\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    copyText = async () => {\r\n        const textToCopy = this.state.spContractAddress;\r\n        if (textToCopy === undefined || textToCopy === null) {\r\n            notificationConfig.error('Address copied error. Address blank.');\r\n        }\r\n        if (navigator.clipboard && window.isSecureContext) {\r\n            // navigator clipboard api method'\r\n            return navigator.clipboard.writeText(textToCopy)\r\n                .then(() => {\r\n                    notificationConfig.success('Address copied. Make sure to cross-check');\r\n                }).catch(() => {\r\n                    notificationConfig.error('Address copied error.');\r\n                });\r\n        } else {\r\n            // text area method\r\n            let textArea = document.createElement(\"textarea\");\r\n            textArea.value = textToCopy;\r\n            // make the textarea out of viewport\r\n            textArea.style.position = \"fixed\";\r\n            textArea.style.left = \"-999999px\";\r\n            textArea.style.top = \"-999999px\";\r\n            document.body.appendChild(textArea);\r\n            textArea.focus();\r\n            textArea.select();\r\n            return new Promise((res, rej) => {\r\n                // here the magic happens\r\n                document.execCommand('copy') ? res() : rej();\r\n                textArea.remove();\r\n                notificationConfig.success('Address copied. Make sure to cross-check');\r\n            });\r\n        }\r\n    }\r\n\r\n    getContractBal = async () => {\r\n        const rpcUrl = constantConfig[Number(this.state.networkIdOnContract)].rpcUrl;\r\n        const web3 = new Web3(new Web3.providers.HttpProvider(rpcUrl));\r\n        const address = this.state.spContractAddress;\r\n        const spBal = await web3.eth.getBalance(Web3.utils.toChecksumAddress(address), function (error, result) {\r\n            return result;\r\n        });\r\n        let token = _.find(this.state.coinList, { \"networkId\": Number(this.state.networkIdOnContract) });\r\n        const usdtFaceValue = this.state.tokenPrices[token.symbol];\r\n\r\n        if (spBal) {\r\n            let spContractBal = Web3.utils.fromWei((spBal).toString(), 'ether');\r\n            let spUsdtBal = Number(usdtFaceValue) * Number(spContractBal);\r\n            this.setState({\r\n                spContractBal: spContractBal,\r\n                spContractBalInUsd: Number(spUsdtBal).toFixed(2)\r\n            });\r\n        }\r\n    }\r\n\r\n    withdraw = async () => {\r\n        var BN = Web3.utils.BN;\r\n        var zeroDigit = new BN(0);\r\n        let spContract = new SPContract(this.state.web3, this.state.spContractAddress);\r\n        let assetAddress = this.state.tokenA;\r\n        let amount = Web3.utils.toWei((this.state.spContractBal).toString(), 'ether');\r\n        amount = new BN((amount).toString());\r\n\r\n        let validAddresses = [\r\n            \"0x0000000000000000000000000000000000000001\",\r\n            \"0x0000000000000000000000000000000000000002\",\r\n            \"0x0000000000000000000000000000000000000004\",\r\n        ];\r\n\r\n        if (validAddresses.includes(assetAddress)) {\r\n            if (amount.gt(zeroDigit)) {\r\n                spContract.withdraw(\r\n                    assetAddress,\r\n                    amount, // should pass in wei\r\n                    async (hash) => { },\r\n                    async (response) => {\r\n                        console.log({\r\n                            \"SP Contract response:\": response\r\n                        });\r\n\r\n                        if (response.code === 4001) {\r\n                            notificationConfig.info('Withdraw transaction cancelled.');\r\n                        }\r\n\r\n                        if (response.status === 1) {\r\n                            await this.getContractBal();\r\n                            notificationConfig.success('Withdraw applied successfully.');\r\n                        }\r\n                    }\r\n                );\r\n            } else {\r\n                notificationConfig.error(\"Contract does't have sufficient balance.\");\r\n            }\r\n        } else {\r\n            notificationConfig.error('Invalid asset address.');\r\n        }\r\n\r\n    }\r\n\r\n    checkAmountAOnUpdating(value, minValue) {\r\n        var clientSideErrorMessage;\r\n        if (Number(value) < minValue) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.amountAOnContract = `Minimum amount is $${minValue}`;\r\n            this.setState({ clientSideErrorMessage });\r\n            //notificationConfig.success(`Test ${testType} fetched`);\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                amountAOnContract: Number(value)\r\n            });\r\n\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.amountAOnContract = null;\r\n            this.setState({ clientSideErrorMessage });\r\n        }\r\n\r\n        this.clientSideError();\r\n    }\r\n\r\n    clientSideError() {\r\n        let check = !Object.values(this.state.clientSideErrorMessage).every(o => o === null);\r\n\r\n        console.log({\r\n            error: check\r\n        });\r\n\r\n        if (check) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                clientSideError: false\r\n            });\r\n        }\r\n        return check;\r\n    }\r\n\r\n    validateWithdrawOnContractFromCexSlider = async (onContract = false, maxWithdrawPercent) => {\r\n        if (onContract === true) {\r\n            if (this.state.withdrawPercentOnContract > Number(maxWithdrawPercent)) {\r\n                notificationConfig.error(`You must keep balance on your CEX account at least ${100 - maxWithdrawPercent}% of the total amount`);\r\n                this.setState({\r\n                    withdrawPercentOnContract: this.state.tempWithdrawPercentOnContract\r\n                });\r\n                return false;\r\n            }\r\n        } else {\r\n            if (this.state.withdrawPercent > Number(maxWithdrawPercent)) {\r\n                notificationConfig.error('You must keep balance on your CEX account at least 55% of the total amount');\r\n                this.setState({\r\n                    withdrawPercent: Number(maxWithdrawPercent)\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    reAuthrizeFeeAndGasLimit = async () => {\r\n        if (this.props.contractData._id) {\r\n            this.setState({\r\n                reAuthrizeing: true\r\n            });\r\n            let newLimit = this.state.gasAndFeeAmountOnContract;\r\n\r\n            let spContract = new SPContract(this.state.web3, this.state.spContractAddress);\r\n            spContract.setFeeAmountLimit(\r\n                newLimit,\r\n                async (hash) => { },\r\n                async (response) => {\r\n                    console.log({\r\n                        \"SP Contract response:\": response\r\n                    });\r\n\r\n                    if (response.status === 1) {\r\n                        this.setState({\r\n                            gasAndFeeAmountOnContract: newLimit\r\n                        });\r\n\r\n                        //spContract.getFeeAmountLimit();\r\n                        await AxiosRequest.request({\r\n                            data: {\r\n                                smartContractAddress: this.state.spContractAddress,\r\n                                gasAndFeeAmount: Web3.utils.toWei((newLimit).toString(), 'ether')\r\n                            },\r\n                            path: \"update\",\r\n                            method: \"POST\"\r\n                        });\r\n\r\n                        notificationConfig.success('NEW GAS AND FEES LIMIT SET');\r\n\r\n                        this.setState({\r\n                            reAuthrizeing: false\r\n                        });\r\n\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    changeSpreadOnUpdating(value, minSpreadRange, maxSpreadRange) {\r\n        var clientSideErrorMessage;\r\n        if (Number(value) > Number(maxSpreadRange) || Number(value) < Number(minSpreadRange)) {\r\n\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.spProfitPercentOnContract = `Please provide a valid input between ${minSpreadRange}-${maxSpreadRange} range`;\r\n            this.setState({ clientSideErrorMessage });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                spProfitPercentOnContract: Number(value)\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.spProfitPercentOnContract = null;\r\n            this.setState({ clientSideErrorMessage });\r\n        }\r\n\r\n        this.clientSideError();\r\n    };\r\n\r\n    toggleStopRepeatsSection() {\r\n        this.setState(prevState => ({\r\n            toggleStopRepeatsSection: !prevState.toggleStopRepeatsSection\r\n        }));\r\n    }\r\n\r\n    inputMask(input, value, setState = true) {\r\n        let maskedValue = value.replace(/.(?=.{4,}$)/g, '*');\r\n        if (input === \"key\") {\r\n            if (setState) {\r\n                this.setState({\r\n                    cexApiKey: value,\r\n                    cexApiKeyMasked: maskedValue\r\n                });\r\n            } else {\r\n                return maskedValue\r\n            }\r\n        }\r\n        if (input === \"secret\") {\r\n            if (setState) {\r\n                this.setState({\r\n                    cexApiSecret: value,\r\n                    cexApiSecretMasked: maskedValue\r\n                });\r\n            } else {\r\n                return maskedValue\r\n            }\r\n        }\r\n    }\r\n\r\n    clearKeys(input) {\r\n        if (input === \"key\") {\r\n            this.setState({\r\n                cexApiKey: null,\r\n                cexApiKeyMasked: null,\r\n                cexApiKeyEditable: false\r\n            });\r\n            this.dispatchEventHandler(this.cexApiKey, null);\r\n        }\r\n        if (input === \"secret\") {\r\n            this.setState({\r\n                cexApiSecret: null,\r\n                cexApiSecretMasked: null,\r\n                cexApiSecretEditable: false\r\n            });\r\n            this.dispatchEventHandler(this.cexApiSecret, null);\r\n        }\r\n    }\r\n\r\n    dispatchEventHandler(inputRef, value, type = 'value', eventType = 'input') {\r\n        const valueSetter = Object.getOwnPropertyDescriptor(inputRef, type).set;\r\n        const prototype = Object.getPrototypeOf(inputRef);\r\n        const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, type).set;\r\n        if (valueSetter && valueSetter !== prototypeValueSetter) {\r\n            prototypeValueSetter.call(inputRef, value);\r\n        } else {\r\n            valueSetter.call(inputRef, value);\r\n        }\r\n\r\n        if (eventType === 'mousemove') {\r\n            inputRef.dispatchEvent(new MouseEvent(eventType, { bubbles: true }));\r\n        } else {\r\n            inputRef.dispatchEvent(new Event(eventType, { bubbles: true }));\r\n        }\r\n    }\r\n\r\n    updateContract = async () => {\r\n\r\n        if (this.amountAOnContract < Number(this.props.minAmountA)) {\r\n            this.checkAmountAOnUpdating(this.state.amountAOnContract, this.props.minAmountA);\r\n            return;\r\n        }\r\n\r\n\r\n        let withdrawAmountValidation = await this.validateWithdrawOnContractFromCexSlider(true, this.props.maxWithdrawPercent);\r\n        if (withdrawAmountValidation === false || withdrawAmountValidation === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.cexApiKey === null || this.state.cexApiKey.length === 0) {\r\n            notificationConfig.error(\"API key can't be blank.\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.cexApiSecret === null || this.state.cexApiSecret.length === 0) {\r\n            notificationConfig.error(\"API secret can't be blank.\");\r\n            return;\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 2) {\r\n            if (this.state.stopRepeatsAfterCallsOnContract === null || this.state.stopRepeatsAfterCallsOnContract.length === 0) {\r\n                notificationConfig.error(\"You must choose how many time to repeat on CEX\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 1) {\r\n            if (this.state.stopRepeatsOnDateOnContract === null || this.state.stopRepeatsOnDateOnContract.length === 0) {\r\n                notificationConfig.error(\"You must choose a date when to stop repeat on CEX\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (\r\n            this.state.withdrawPercentOnContract === null\r\n            ||\r\n            this.state.withdrawPercentOnContract < 0\r\n            ||\r\n            this.state.withdrawPercentOnContract > 100\r\n        ) {\r\n            notificationConfig.error(\"Invalid Withdraw Percent.\");\r\n            return;\r\n        }\r\n\r\n        if (this.clientSideError() === true) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            updating: true,\r\n            loadingIcon: true\r\n        });\r\n\r\n        let args = {};\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 1) {\r\n            console.log('Stop mode 1');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: this.state.stopRepeatsOnDateOnContract,\r\n                stopRepeatsAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 2) {\r\n            console.log('Stop mode 2');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: null,\r\n                stopRepeatsAfterCalls: this.state.stopRepeatsAfterCallsOnContract\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 3) {\r\n            console.log('Stop mode 3');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: null,\r\n                stopRepeatsAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (this.props.contractData.cexData.type === null && this._isCexUpdated === false) {\r\n            console.log({ _isCexUpdated: this._isCexUpdated });\r\n            Object.assign(args, {\r\n                cexType: this.state.selectedCex\r\n            });\r\n\r\n            // this ensures that - cex type can't be changed once set  \r\n            this._isCexUpdated = true;\r\n        }\r\n\r\n\r\n        let finalArgs = {\r\n            data: Object.assign(args, {\r\n                smartContractAddress: this.state.spContractAddress,\r\n                amountA: this.state.amountAOnContract,\r\n                spProfitPercent: this.state.spProfitPercentOnContract,\r\n                accumulateFundsLimit: this.state.accumulateFundsLimitOnContract,\r\n                stopRepeatsMode: this.state.stopRepeatsModeOnContract,\r\n                cexApiKey: this.state.cexApiKey,\r\n                cexApiSecret: this.state.cexApiSecret,\r\n                swapSpeedMode: this.state.swapSpeedModeOnContract === null ? 'UPFRONT' : this.state.swapSpeedModeOnContract,\r\n                withdrawPercent: this.state.withdrawPercentOnContract,\r\n                withdrawReinitiate: true\r\n            }),\r\n            path: 'update',\r\n            method: 'POST'\r\n        };\r\n\r\n        console.log(finalArgs);\r\n        try {\r\n            let response = await AxiosRequest.request(finalArgs);\r\n            if (response.status === 200) {\r\n                setTimeout(async () => {\r\n                    console.log('Updated');\r\n                    if (response.data.messageType === 'success') {\r\n                        notificationConfig.success(response.data.message);\r\n                    }\r\n                    if (response.data.messageType === 'info') {\r\n                        notificationConfig.info(response.data.message);\r\n                    }\r\n\r\n                    this.setState({\r\n                        updated: true,\r\n                        updateButtonText: \"CONTRACT UPDATED SUCCESSFULLY\",\r\n                        updating: false,\r\n                        loadingIcon: false,\r\n                        tempWithdrawPercentOnContract: this.state.withdrawPercentOnContract,\r\n                        tempAmountAOnContract: this.state.amountAOnContract\r\n                    });\r\n                }, 3000);\r\n\r\n                setTimeout(async () => {\r\n                    this.setState({\r\n                        updated: false,\r\n                        updateButtonText: 'SAVE TO UPDATE CONTRACT'\r\n                    });\r\n\r\n                    this.getAllTests();\r\n\r\n                }, 5000);\r\n            }\r\n\r\n            if (response.status === 422) {\r\n                if (response.data.messageType === 'error') {\r\n                    notificationConfig.error(response.data.message);\r\n                    this.setState({\r\n                        updated: false,\r\n                        updateButtonText: 'SAVE TO UPDATE CONTRACT',\r\n                        updating: false,\r\n                        loadingIcon: false\r\n                    });\r\n                }\r\n            }\r\n        } catch (err) {\r\n            notificationConfig.error('Something went wrong!');\r\n        }\r\n\r\n    }\r\n\r\n    getAllTests = async () => {\r\n        // fetch all tests and set to tests var\r\n        try {\r\n            let response = await AxiosRequest.request({\r\n                data: {\r\n                    owner: (web3Config.getAddress()).toLowerCase(),\r\n                    networkId: Number(web3Config.getNetworkId()),\r\n                    smartContractAddress: this.state.spContractAddress,\r\n                    type: 'testsCheck',\r\n                    cexType: this.props.contractData.cexData.type !== null ? (this.props.contractData.cexData.type).toUpperCase() : \"BINANCE\" // to insure cex saved in db for SP\r\n                },\r\n                path: \"test-suite\",\r\n                method: \"POST\"\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                this.setState({\r\n                    tests: response.data.response,\r\n                    testPassed: response.data.result\r\n                });\r\n            }\r\n\r\n            if (response.status === 500) {\r\n                notificationConfig.error('Sever error');\r\n            }\r\n        } catch (e) {\r\n            console.log('Error from getAllTests: ', e.constructor.name, e.message)\r\n        }\r\n    }\r\n\r\n    testSuite = async (testType = '', repeat = false) => {\r\n        try {\r\n\r\n            const cexType = this.props.contractData.cexData.type !== null ? (this.props.contractData.cexData.type).toUpperCase() : \"BINANCE\";\r\n            let filter = {\r\n                owner: (web3Config.getAddress()).toLowerCase(),\r\n                networkId: Number(web3Config.getNetworkId()),\r\n                smartContractAddress: this.state.spContractAddress,\r\n                type: testType,\r\n                cexType: cexType\r\n            };\r\n\r\n            if (testType === \"accountCheck\") {\r\n                if (cexType === 'BINANCE') {\r\n                    filter['accountType'] = 'SPOT_USDTM';\r\n                }\r\n\r\n                if (cexType === 'MEXC') {\r\n                    filter['accountType'] = 'BOTH';\r\n                }\r\n            }\r\n\r\n            if (testType === \"balanceCheck\") {\r\n                filter['accountType'] = 'SPOT';\r\n            }\r\n\r\n            if (testType === \"transferCheck\") {\r\n                filter['transferType'] = 'TWO_WAY';\r\n            }\r\n\r\n            if (testType === \"testsCheck\") {\r\n                filter['repeatTests'] = repeat;\r\n            }\r\n\r\n            let response = await AxiosRequest.request({\r\n                data: filter,\r\n                path: \"test-suite\",\r\n                method: \"POST\"\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                var property = { ...this.state.tests.key }\r\n                property = true;\r\n                this.setState({ property });\r\n                //notificationConfig.success(`Test ${testType} fetched`);\r\n                return response.data.result;\r\n            }\r\n\r\n            if (response.status === 500) {\r\n                notificationConfig.error('Sever error');\r\n            }\r\n\r\n            return false;\r\n\r\n        } catch (e) {\r\n            console.log('Error from testSuite: ', e.constructor.name, e.message)\r\n        }\r\n    }\r\n\r\n    repeatTests = async (testType = '') => {\r\n        try {\r\n\r\n            if (this.state.testing === false) {\r\n                this.setState({\r\n                    testing: true\r\n                });\r\n\r\n                await this.testSuite(\"testsCheck\", true);\r\n\r\n                notificationConfig.info('Testing swap proider configuratons');\r\n                let failedTests = [], passedTests = [];\r\n                await this.getAllTests().then(async () => {\r\n                    // get all failed tests\r\n                    if (this.state.tests !== null) {\r\n                        for (let [key, value] of Object.entries(this.state.tests)) {\r\n                            var property;\r\n                            if (key === '_id' || key === 'id') {\r\n                                continue;\r\n                            } else {\r\n                                if (value === false) {\r\n                                    property = { ...this.state.tests.key };\r\n                                    property = false;\r\n                                    this.setState({ property });\r\n                                    failedTests.push(key);\r\n                                } else {\r\n                                    property = { ...this.state.tests.key };\r\n                                    property = true;\r\n                                    this.setState({ property });\r\n                                    passedTests.push(key);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }).catch(e => {\r\n                    console.log('Error from repeatTests: ', e.constructor.name, e.message);\r\n                    notificationConfig.error(`Something went wrong while testing swap provider.`);\r\n                });\r\n\r\n                if (failedTests.length > 0) {\r\n                    for (let test = 0; test < failedTests.length; test++) {\r\n                        await this.testSuite(failedTests[test]);\r\n                    }\r\n                }\r\n\r\n                await this.getAllTests();\r\n\r\n                this.setState({\r\n                    testing: false\r\n                });\r\n\r\n            } else {\r\n                notificationConfig.info('Testing already in progress.');\r\n            }\r\n\r\n\r\n\r\n        } catch (e) {\r\n            console.log('Error from repeatTests: ', e.constructor.name, e.message)\r\n        }\r\n    }\r\n\r\n\r\n    // render component\r\n    render() {\r\n        const smallError = {\r\n            fontSize: \"13px\",\r\n            lineHeight: \"20px\"\r\n        };\r\n\r\n        return (\r\n            <div className=\"contract-data-section\">\r\n                {(this.props.contractData !== null) &&\r\n                    <div id={this.props.contractData._id}>\r\n                        <div className=\"spContrlMBX spContrlMBX-n relative mt-30px-n\">\r\n                            <div className=\"d-flex step-title-trans-n items-center-n \">\r\n                                <span className=\"step-num-n\">{this.props.index}</span>\r\n                                <div className='spCountrlTitle01 spCountrlTitle01-n '>\r\n                                    SEND {this.getTokenData(this.state.tokenA, \"symbol\")}\r\n                                    {' <> '}\r\n                                    RECEIVE {this.getTokenData(this.state.tokenB, \"symbol\")}\r\n                                    <div className='spContrlInfotxt pb-0'>\r\n                                        Created at {DateFormat(this.state.createdAt, \"mmmm dS, yyyy, h:MM:ssTT\")}\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"toggle-ic-n\" onClick={this.toggleStep.bind(this)}>\r\n                                    <i className={\"fas fa-caret-\" + ((this.state.stepOpen ? 'down' : 'up'))}></i>\r\n                                </span>\r\n                                <div className={\"step-\" + (this.state.stepOpen ? 'open' : 'close')} style={{ width: '100%' }}>\r\n                                    <div className=\"box-border-primary-n box-border-n text-center-n\">\r\n                                        <div className=\"spContrlInfotxt02\">Open new API and whitelist the smart contract address on your account on you CEX <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"left\" data-pt-title=\"Before you set an API, make sure first that your account has active trade Futures (some CEX asking users to sign on risk disclosure before it become active)\r\n                                    <br/><br/>\r\n                                    Then go to the right API section to open new API and approve the follow restrictions:\r\n                                    <br/><br/>\r\n                                    1. Enable Reading<br/>\r\n                                    2. Enable Spot & Margin Trading<br/>\r\n                                    3. Enable Futures<br/>\r\n                                    4. Enable Withdrawals<br/>\r\n                                    <br/>\r\n                                    * in order to enable withdrawals some CEX will ask you to restrict access to trusted IP, in that case use the IP address 44.235.252.39 \" aria-hidden=\"true\"></i></i></div>\r\n                                        <div className=\"spContrlInfotxt02\">Restrict access to trusted IP: <span className=\"text-primary\"> 44.235.252.39</span></div>\r\n                                    </div>\r\n                                    <div className='spContrlInfotxt02 mb-20px-n'>YOUR SMART CONTRACT ADDRESS\r\n                                        <i className=\"help-circle\">\r\n                                            <i\r\n                                                className=\"fas fa-question-circle protip\"\r\n                                                data-pt-position=\"top\"\r\n                                                data-pt-title=\"To secure the API completely you need to whitelist your smart contract address under the Address Management which is usually placed on the Withdraw section.\r\n                                        <br/><br/>\r\n                                        Your smart contract address is your withdrawal Address.\r\n                                        <br/><br/>\r\n                                        Authorize your withdrawal Address to withdrawal only the token that you are selling. for example if you selling BNB, choose the BNB as a coin the and the BSC as the Network\"\r\n                                                aria-hidden=\"true\">\r\n                                            </i>\r\n                                        </i>\r\n                                    </div>\r\n                                    <div className='spContrlInputBX' style={{ width: '100%' }}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder={\"Your contract address for \" + this.getTokenData(this.state.tokenA, \"symbol\")}\r\n                                            value={this.state.spContractAddress}\r\n                                            readOnly={true}\r\n                                        />\r\n                                        <a\r\n                                            href=\"javascript:void(0)\"\r\n                                            onClick={() => this.copyText(this.state.spContractAddress)}\r\n                                            className=\"LicCopyBTN v2\"\r\n                                        >\r\n                                            <i className=\"fas fa-copy\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='spContrlInfotxt mb-20px-n'>\r\n                                        Balance: {this.state.spContractBal} {this.getTokenData(this.state.tokenA, \"symbol\")} | ${this.state.spContractBalInUsd} USD\r\n                                        <button className='withdrawButton' onClick={this.withdraw.bind(this)}>\r\n                                            <span>Withdraw all funds back to your Wallet</span>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">YOUR TOTAL AMOUNT YOU AUTHORIZED THE API TO USE\r\n                                                <i className=\"help-circle\">\r\n                                                    <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"The total amount includes the amount that will be send to your smart contract, the stable coin amount that will be left on your CEX account and the funds that will be use to place short order when needed.\" aria-hidden=\"true\">\r\n                                                    </i>\r\n                                                </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01 withLable01\" style={{ marginTop: \"12px\" }}>\r\n                                                <span>$</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"50000\"\r\n                                                    defaultValue={this.state.amountAOnContract}\r\n                                                    onChange={event => this.checkAmountAOnUpdating(event.target.value, this.props.minAmountA)}\r\n                                                    ref={(input) => this.amountAOnContract = input}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-edit\"></i>\r\n                                                </a>\r\n                                            </div>\r\n                                            <br></br>\r\n                                            {this.state.clientSideError === true && (this.state.clientSideErrorMessage.amountAOnContract !== null) &&\r\n                                                <div className=\"error-Msg\" style={smallError}>\r\n                                                    <label>{this.state.clientSideErrorMessage.amountAOnContract}</label>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='spContrlInfotxt02'>CHANGE THE SWAP SPEED\r\n                                        <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"right\" data-pt-title=\"The Smart swap using a matcher to match between users to users and if there are no users available, between users to swap providers (SP). the matcher taking under consideration, which SP can complete the swap fully, faster and cheaper. \r\n                            <br/><br/>\r\n                            SP can hold stable coin (USDT) on their controlled CEX account, which will be trigger by API to buy in real time tokens and send over to the SP's smarts contact which will be  use as a counterparty to other users. same exchange processing withdraw after few long minutes and also each blockchain network as different proccing speed, those facts can put some SP with holding upfront tokens on their smart contract with advantage over other SP that requires to buy those tokens and then send them over.\r\n                            <br/><br/>\r\n                            As a SP you can choose if you want to send tokens to your smart contract in real time, or if you want to act faster by depositing tokens upfront to to your smart contract.\" aria-hidden=\"true\"></i></i>\r\n                                    </div>\r\n                                    <div className='spscFix01 d-flex'>\r\n                                        <div className=\"LiProfSbox01 pr-20px\">\r\n                                            <div className='LipRadioFix01'>\r\n                                                <div className=\"md-radio md-radio-inline \">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        id={\"radio_05_\" + this.props.index}\r\n                                                        name={\"radio_05_\" + this.props.index}\r\n                                                        //defaultChecked\r\n                                                        onChange={event => this.setState({ swapSpeedModeOnContract: 'UPFRONT' })}\r\n                                                        checked={this.state.swapSpeedModeOnContract === 'UPFRONT'}\r\n                                                    />\r\n                                                    <label htmlFor={\"radio_05_\" + this.props.index}></label>\r\n                                                </div>\r\n                                                <div className=\"LiProFlexBX01 padFixer01\">\r\n                                                    <div className=\"LipRTitle01\">Deposit token A to the smart contract upfront<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"right\" data-pt-title=\"This option required from you hold upfront 45% of the sell token in the smart contract, and another 55% as stable coin (USDT) on your centralized account (that 55% will be used to buy the sell tokens in real time and placing a short order against the receiving token to secure it's face value from volatility).\r\n                                <br/><br/>\r\n                                Once you will deploy your smart contract, you will need to deposit directly to your smart contract address the 45% the funds as tokens that you want to sell. \r\n                                <br/><br/>\r\n                                For example if you want to and you are looking to gain profit of 0.05% as a spread. in exchange for ETH and you are looking to gain profit of 0.05% as a spread, you will need to deposit $45,000 of BNB to your smart contract, so users that buying those BNB will get those tokens instantly without waiting for your centralized account to send it over to the smart contract (which can takes few long minutes). Wen swaps take place your CEX account will be trigger to buy in real time new BNB at the best price in the exchange and then send them to feed back your smart contract, while on the same time the smartswap will send to your CEX account $45,225 of ETH (which is the same amount plus the spread that you agree to), then the API will open a short position to make sure those ETH will be sold back to stablecoins without any lost to volatility.\" aria-hidden=\"true\"></i></i></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 pl-20px\">\r\n                                            <div className='LipRadioFix01' >\r\n                                                <div className=\"md-radio md-radio-inline \">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        id={\"radio_06_\" + this.props.index}\r\n                                                        name={\"radio_06_\" + this.props.index}\r\n                                                        //defaultChecked\r\n                                                        onChange={event => this.setState({ swapSpeedModeOnContract: 'REALTIME' })}\r\n                                                        checked={this.state.swapSpeedModeOnContract === 'REALTIME'}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                    <label htmlFor={\"radio_06_\" + this.props.index}></label>\r\n                                                </div>\r\n                                                <div className=\"LiProFlexBX01 padFixer01\">\r\n                                                    <div className=\"LipRTitle01\">\r\n                                                        Deposit token A to the smart contract in real time\r\n                                                        <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Selecting this option allows zero up front tokens and 100% of your funds may wait as stablecoins (USDT) on your centralized exchange account. Once your account is triggered to provide liquidity to SmartSwap, the controlled account uses the authorized stablecoin account to buy the tokens and send them to your smart contract address.\r\n                                <br/><br/>\r\n                                N.B. The process to send tokens from centralized  exchange accounts to your smart contract may take few minutes depending on the exchange and the speed of network. Therefore, the SmartSwap may choose other SPs over you which have tokens available on their smart contract already and can execute the swap faster for the end user.\" aria-hidden=\"true\"></i></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* withdraw % slider */}\r\n                                        <div className='spContrlSBX withdrawSlider'>\r\n                                            <div className=\"dragorInput v2\">\r\n                                                <InputRange\r\n                                                    step={1}\r\n                                                    maxValue={100}\r\n                                                    minValue={0}\r\n                                                    value={this.state.withdrawPercentOnContract}\r\n                                                    formatLabel={value => `${value}%`}\r\n                                                    onChange={value => this.setState({ withdrawPercentOnContract: value })}\r\n                                                    onChangeComplete={() => this.validateWithdrawOnContractFromCexSlider(true, this.props.maxWithdrawPercent)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <p className=\"withdrawOnContractAlert\">\r\n                                            You must keep balance on your CEX account at least 55% of the total amount\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                    <div className='spContrlInfotxt02'>AUTHORIZE NEW GAS AND FEES LIMIT\r\n                                        <i className=\"help-circle\">\r\n                                            <i\r\n                                                className=\"fas fa-question-circle protip\"\r\n                                                data-pt-position=\"top\"\r\n                                                data-pt-title=\"Authorize more funds to gas and fees to keep your SP contract active.\"\r\n                                                aria-hidden=\"true\"\r\n                                            ></i>\r\n                                        </i>\r\n                                    </div>\r\n                                    <div className='spContrlSBX'>\r\n\r\n                                        <div className='spContrlSSBX01'>\r\n                                            <div className=\"dragorInput v2\">\r\n                                                <InputRange\r\n                                                    minValue={this.getTokenData(this.state.tokenA, \"minGasAndFeeAmount\")}\r\n                                                    maxValue={this.getTokenData(this.state.tokenA, \"maxGasAndFeeAmount\")}\r\n                                                    step={this.getTokenData(this.state.tokenA, \"minStepForGasAndFeeAmount\")}\r\n                                                    value={this.state.gasAndFeeAmountOnContract}\r\n                                                    formatLabel={value => this.getTokenData(this.state.tokenA, \"symbol\") + ` ${value}`}\r\n                                                    onChange={value => this.setState({ gasAndFeeAmountOnContract: value })} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='spContrlSSBX02'>\r\n                                            <button\r\n                                                className='spContrlBTN01'\r\n                                                onClick={this.reAuthrizeFeeAndGasLimit.bind(this)}\r\n                                                disabled={this.state.reAuthrizeing}\r\n                                            >\r\n                                                AUTHORIZE NEW LIMIT\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">CHANGE THE MINIMUM SPREAD YOU WANT TO GAIN ON EACH SWAP\r\n                                                <i className=\"help-circle\">\r\n                                                    <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Set a profit limit that triggers your funds for swapping. Take under consideration all costs such as exchange fees. \r\n                            <br/><br/>\r\n                            For example, you can choose that you want your funds to swap only if it's gain 0.5% profits. When you set the profit limit, take under consideration all the costs that you may pay to your CEX for such transaction short position, blockchain cost, (which by themselves can be range from 0.1 to 0.3% - depend on the CEX and network).\" aria-hidden=\"true\">\r\n                                                    </i>\r\n                                                </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01 withLable01 input-with-ic-n\" style={{ marginTop: \"12px\" }}>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"0.5\"\r\n                                                    defaultValue={this.state.spProfitPercentOnContract}\r\n                                                    onChange={event => this.changeSpreadOnUpdating(event.target.value, 0, 1)}\r\n                                                    ref={(input) => this.spProfitPercentOnContract = input}\r\n                                                />\r\n                                                <span>%</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br></br>\r\n                                        {this.state.clientSideError === true && (this.state.clientSideErrorMessage.spProfitPercentOnContract !== null) &&\r\n                                            <div className=\"error-Msg\" style={smallError}>\r\n                                                <label>{this.state.clientSideErrorMessage.spProfitPercentOnContract}</label>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n\r\n\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">YOUR MINIMUM AMOUNT TO SWAP WITH\r\n                                                <i className=\"help-circle\">\r\n                                                    <i\r\n                                                        className=\"fas fa-question-circle protip\"\r\n                                                        data-pt-position=\"top\"\r\n                                                        data-pt-title=\"Take under consideration, performing a swap costs gas and fees which are reimbursed via SMART\"\r\n                                                        aria-hidden=\"true\">\r\n                                                    </i>\r\n                                                </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01 withLable01 input-with-ic-n\" style={{ marginTop: \"12px\" }}>\r\n                                                <span>$</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"100\"\r\n                                                    defaultValue={this.state.accumulateFundsLimitOnContract}\r\n                                                    onChange={event => this.setState({ accumulateFundsLimitOnContract: event.target.value })}\r\n                                                    ref={(input) => this.accumulateFundsLimitOnContract = input}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-edit\"></i>\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">STOP REPEAT ON CEX\r\n                                                <i className=\"help-circle\">\r\n                                                    <i\r\n                                                        className=\"fas fa-question-circle protip\"\r\n                                                        data-pt-position=\"top\"\r\n                                                        data-pt-title=\"This option denotes how many transactions you approve as a Swap Provider. Once the limit is reached, the API stops performing any repeats. Once the repeat stops, there is no way to change the process besides deploying a new Swap Provider contract with new rules.\"\r\n                                                        aria-hidden=\"true\">\r\n                                                    </i>\r\n                                                </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01 input-with-ic-n\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"\"\r\n                                                    readOnly={true}\r\n                                                    defaultValue={\r\n                                                        this.state.stopRepeatsModeOnContract === 3 ? 'Never stop'\r\n                                                            : this.state.stopRepeatsModeOnContract === 1 ? \"On date: \" + DateFormat(this.state.stopRepeatsOnDateOnContract, \"mmmm dS, yyyy, h:MM:ssTT\")\r\n                                                                : 'After ' + this.state.stopRepeatsAfterCallsOnContract + ' repeats'}\r\n                                                //onChange={event => this.setState({ cexApiKey: event.target.value })}\r\n                                                //ref={(input) => this.cexApiKey = input}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-edit\" onClick={() => this.toggleStopRepeatsSection()}></i>\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                        {(this.state.toggleStopRepeatsSection) &&\r\n                                            <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                                <div className='LipRadioFix01'>\r\n                                                    <div className=\"md-radio md-radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            id={\"radio_07_\" + this.props.index}\r\n                                                            name={\"radio_07_\" + this.props.index}\r\n                                                            onChange={event => this.setState({ stopRepeatsModeOnContract: 1 })}\r\n                                                            checked={this.state.stopRepeatsModeOnContract === 1}\r\n                                                            ref={(input) => this.stopRepeatsMode4 = input}\r\n                                                        />\r\n                                                        <label htmlFor={\"radio_07_\" + this.props.index}></label>\r\n                                                    </div>\r\n                                                    <div className='LiProFlexBX01 padFixer01'>\r\n                                                        <div className=\"LiproInput01\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.stopRepeatsOnDateOnContract}\r\n                                                                onChange={(date) => this.setState({ stopRepeatsOnDateOnContract: date })}\r\n                                                                peekNextMonth\r\n                                                                showMonthDropdown\r\n                                                                showYearDropdown\r\n                                                                dropdownMode=\"select\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                            />\r\n                                                            <i className=\"fas fa-calendar-alt FlyICO\"></i>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='LipRadioFix01' >\r\n                                                    <div className=\"md-radio md-radio-inline \">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            id={\"radio_08_\" + this.props.index}\r\n                                                            name={\"radio_08_\" + this.props.index}\r\n                                                            onChange={event => this.setState({ stopRepeatsModeOnContract: 2 })}\r\n                                                            checked={this.state.stopRepeatsModeOnContract === 2}\r\n                                                            ref={(input) => this.stopRepeatsMode5 = input}\r\n                                                        />\r\n                                                        <label htmlFor={\"radio_08_\" + this.props.index}></label>\r\n                                                    </div>\r\n                                                    <div className=\"LiProFlexBX01 padFixer01\">\r\n                                                        <div className=\"LiproInput01 withLable02\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                value={this.state.stopRepeatsAfterCallsOnContract}\r\n                                                                onChange={event => this.setState({ stopRepeatsAfterCallsOnContract: event.target.value })}\r\n                                                            />\r\n                                                            <span>Repeats</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='LipRadioFix01' >\r\n                                                    <div className=\"md-radio md-radio-inline \">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            id={\"radio_09_\" + this.props.index}\r\n                                                            name={\"radio_09_\" + this.props.index}\r\n                                                            onChange={event => this.setState({ stopRepeatsModeOnContract: 3 })}\r\n                                                            checked={this.state.stopRepeatsModeOnContract === 3}\r\n                                                            ref={(input) => this.stopRepeatsMode6 = input}\r\n                                                        />\r\n                                                        <label htmlFor={\"radio_09_\" + this.props.index}></label>\r\n                                                    </div>\r\n                                                    <div className=\"LiProFlexBX01 padFixer01\">\r\n                                                        <div className=\"LipRTitle01\">Never stop<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Run SP repeats non-stop as long as there is funds available in your CEX account.\" aria-hidden=\"true\"></i></i></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"spacerLine\"></div>\r\n                                    <div className=\"spContrlInfotxt02 mb-30px-n pt-20px\">\r\n                                        After creating an API on your CEX update here the API and Secret key\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">CEX\r\n                                                <i className=\"help-circle\">\r\n                                                    <i\r\n                                                        className=\"fas fa-question-circle protip\"\r\n                                                        data-pt-position=\"top\"\r\n                                                        data-pt-title=\"Choose CEX Of your choice from the below listed CEX. Note that once cex set it can't be changed in the future. Choose carefully\"\r\n                                                        aria-hidden=\"true\"\r\n                                                    ></i>\r\n                                                </i>\r\n                                            </div>\r\n                                            <div className=\"LiproDropdown\">\r\n                                                <button className='LiproDDbtn01' onClick={() => this.toggleCexList()}>\r\n                                                    <div className=\"ddIconBX\">\r\n                                                        <span>\r\n                                                            <img src={this.state.cexList[this.state.selectedCex]['icon']} alt=\"\" />\r\n                                                        </span>\r\n                                                        {this.state.cexList[this.state.selectedCex]['symbol']}\r\n                                                    </div>\r\n                                                    <i className=\"fas fa-caret-down\"></i>\r\n                                                </button>\r\n                                                <div className=\"ddContainer\">\r\n                                                    <Collapse isOpen={(this.state.cexListOpen) && (this.props.contractData.cexData.type === null)} className={\"collapse-css-transition\"} >\r\n                                                        {\r\n                                                            Object.keys(this.state.cexList).map((cex) => (\r\n                                                                <button\r\n                                                                    //disabled={this.props.contractData.cexData.type !== null}\r\n                                                                    key={this.state.cexList[cex]['symbol']} className='LiproDDbtn01'\r\n                                                                    onClick={() => {\r\n                                                                        this.toggleCexList(this.state.cexList[cex]['symbol']);\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <div className=\"ddIconBX\">\r\n                                                                        <span>\r\n                                                                            <img src={this.state.cexList[cex]['icon']} alt=\"\" />\r\n                                                                        </span> {this.state.cexList[cex]['symbol']}\r\n                                                                    </div>\r\n                                                                </button>\r\n                                                            ))\r\n                                                        }\r\n                                                    </Collapse>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">API Key<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Add your specific API key to the CEX of your choice\" aria-hidden=\"true\"></i></i></div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    defaultValue={this.state.cexApiKeyMasked !== null ? this.state.cexApiKeyMasked : 'Your Cex API Key'}\r\n                                                    onChange={event => this.setState({ cexApiKey: event.target.value })}\r\n                                                    ref={(input) => this.cexApiKey = input}\r\n                                                    onClick={() => this.clearKeys('key')}\r\n                                                //readOnly={this.state.cexApiKeyEditable}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-times\" onClick={() => this.clearKeys('key')}></i>\r\n                                                </a>\r\n                                            </div>\r\n                                            <br></br>\r\n                                            {this.state.errorMessage !== null && this.state.errorMessage.includes(\"cexApiKey\") &&\r\n                                                <div className=\"error-Msg\" style={smallError}>\r\n                                                    <label>{this.state.errorMessage}</label>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n '>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">Secret Key<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Add your specific Secret Key to the CEX of your choice\" aria-hidden=\"true\"></i></i></div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    defaultValue={this.state.cexApiSecretMasked !== null ? this.state.cexApiSecretMasked : 'Your Cex API Secret'}\r\n                                                    onChange={event => this.setState({ cexApiSecret: event.target.value })}\r\n                                                    ref={(input) => this.cexApiSecret = input}\r\n                                                    onClick={() => this.clearKeys('secret')}\r\n                                                //readOnly={this.state.cexApiSecretEditable}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" onClick={() => this.clearKeys('secret')} className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-times\"></i>\r\n                                                </a>\r\n                                            </div>\r\n                                            <br></br>\r\n                                            {this.state.errorMessage !== null && this.state.errorMessage.includes(\"cexApiSecret\") &&\r\n                                                <div className=\"error-Msg\" style={smallError}>\r\n                                                    <label>{this.state.errorMessage}</label>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/** update button */}\r\n                                    {(() => {\r\n                                        if (\r\n                                            (this.state.web3 !== null || constantConfig[Number(this.state.networkIdOnContract)] === this.state.web3.getNetworkId())\r\n                                            && this.props.contractData._id !== null) {\r\n                                            return (\r\n                                                <div className=\"LiProfSbox03\">\r\n                                                    <div className={this.state.updated ? 'LiProformBTNbar mx-100 mb-30px-n btn-dark' : 'LiProformBTNbar mx-100 mb-30px-n'}>\r\n\r\n                                                        <button onClick={() => this.updateContract()} disabled={this.state.updating || this.state.updated}>\r\n                                                            {(this.state.updated) &&\r\n                                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                                                            }\r\n                                                            &nbsp;\r\n                                                            {this.state.updateButtonText}\r\n                                                            {this.state.loadingIcon === true &&\r\n                                                                <LoopCircleLoading\r\n                                                                    height={'20px'}\r\n                                                                    width={'20px'}\r\n                                                                    color={'#ffffff'}\r\n                                                                />\r\n                                                            }\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                    )()}\r\n\r\n                                    { /** test cases */}\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.contractOwnerCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check contract deployed for wallet address {this.state.spAccount !== null ? this.state.spAccount : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.contractGasAndFeeCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check contract gas & fee set at limit {this.state.gasAndFeeAmount !== null ? this.state.gasAndFeeAmount : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.spProfitPercentCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check contract spread at {this.state.spProfitPercentOnContract !== null ? this.state.spProfitPercentOnContract + '%' : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.apiKeysCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check CEX API key & API Secret set\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.apiValidateCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check CEX Valid API key and secret\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.accountCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check enabled trading on CEX\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className='LiProFlexBX01'>\r\n                                <div className='spContrlInfotxt02 test-suite'>\r\n                                    <i className={this.state.tests !== null && this.state.tests.balanceCheck == true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                    &nbsp;Check account balance on CEX for allowed limit\r\n                                </div>\r\n                            </div> */}\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.transferCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Test moving USDT funds between spot and future account on CEX\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.spAddressWhiteListCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check whitelisted smart contract address on CEX for withdraw\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.ipWhiteListCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check IP whitelisted on CEX for withdraw\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.withdrawEnabledCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check enabled withdraw on CEX\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.withdrawCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Test moving fund between spot and swap provider contract address\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='spacerLine'></div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.testPassed === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;{this.state.testPassed === true ? 'Swap provider has been successfully activated.' : 'You must pass all the tests to become an active swap provider.'}\r\n                                        </div>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <button className='repeatTestsButton' onClick={this.repeatTests.bind(this)}>\r\n                                                <span>Repeat the SP checking</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/** test case end */}\r\n                                    { /* up */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\helper\\swapFactoryContractPairWise.js",[],"D:\\React\\SmartSwap_frontend\\src\\helper\\spContract.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\free-listing.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\Header02.js",["810","811","812","813","814","815","816"],"import React, { PureComponent } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport LogoM from '../assets/freelisting-images/logo.png'\r\nimport JPico from '../assets/freelisting-images/jackpot.png'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class HeadFreeListing extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n    };\r\n  }\r\n \r\n \r\n\r\n  render() {\r\n    \r\n    return (\r\n        <>\r\n        \r\n        <LHead>\r\n            \r\n            <Logo> <img src={LogoM} alt=\"logo\" /></Logo>\r\n\r\n            <Nav> \r\n                <Link to=''>SmartExtension</Link> <span>|</span>\r\n                <Link to=''>SmartBridge</Link><span>|</span>\r\n                <Link to=''>SmartPayment</Link><span>|</span>\r\n                <Link to=''>SmartSwap</Link><span>|</span>\r\n                <Link to='' className=\"active\">FREE Listing</Link> \r\n            </Nav>\r\n\r\n            <RMbox>\r\n                <a href=\"javascript:void(0);\" class=\"\"><img src={JPico} alt='Jackpot' /> </a>\r\n            <Rtimer>\r\n                <span>1</span>  \r\n                <span>1</span>:    \r\n                <span>2</span>    \r\n                <span>4</span>:    \r\n                <span>5</span>    \r\n                <span>6</span>:   \r\n                <span>3</span>    \r\n                <span>4</span>:\r\n                <span>3</span>    \r\n                <span>4</span>    \r\n            </Rtimer>\r\n            <a href=\"javascript:void(0);\" class=\"link01\" >Rewards program</a>\r\n            <a href=\"javascript:void(0);\" class=\"rmDotLink02\"></a>\r\n            </RMbox>\r\n        </LHead>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\r\n`;\r\n\r\n\r\nconst LHead = styled(FlexDiv) ` \r\n    padding:14px 40px; justify-content:flex-start;   width: 100%;\r\n`\r\nconst Logo = styled(FlexDiv) ` \r\n    margin-right:25px;\r\n`\r\nconst Nav = styled(FlexDiv) `\r\nfont-size:16px; font-weight:400;\r\n    span{ font-size:18px; font-weight:200; color: #aaaaaa; margin:0 19px;} \r\n    a{ color: #aaaaaa;  \r\n        :hover{ color: #91dc27;}\r\n        &.active{ color: #91dc27; font-weight:700; text-decoration: underline}\r\n    }\r\n`\r\nconst RMbox = styled(FlexDiv) `\r\n    margin-left:auto; \r\n    .link01{ color: #fff; font-size:14px; margin-left:36px; font-weight:700; :hover{ color: #91dc27;} }\r\n`\r\nconst Rtimer = styled(FlexDiv) `\r\n    font-size:14px; font-weight:700; color: #fff; line-height:24px;\r\n\r\n    span{ display: inline-block; background-color: #222222; border:1px solid #da9732; width:18px; text-align:center; margin:0 2px}\r\n`\r\n\r\n\r\n\r\n\r\n\r\n","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen01.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen02.js",["817","818","819","820","821","822","823","824","825","826","827","828"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport constantConfig, { getTokenList, tokenDetails } from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport CONSTANT from \"../constants\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport axios from \"axios\";\r\nimport { isValidAddress } from 'ethereumjs-util';\r\nimport styled from 'styled-components';\r\nimport HeadFreeListing from \"../components/Header02\";\r\n\r\nimport ImgIco01 from \"../assets/freelisting-images/s2ICO-01.png\";\r\nimport ImgIco02 from \"../assets/freelisting-images/s2ICO-02.png\";\r\nimport ImgIco03 from \"../assets/freelisting-images/s2ICO-03.png\";\r\nimport ImgIco04 from \"../assets/freelisting-images/s2ICO-04.png\";\r\nimport ImgIco05 from \"../assets/freelisting-images/s2ICO-05.png\";\r\nimport ImgIco06 from \"../assets/freelisting-images/s2ICO-06.png\";\r\nimport Lineimg from \"../assets/freelisting-images/line01.png\";\r\n\r\n\r\n\r\n\r\nconst $ = window.$;\r\nexport default class Screen1 extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n\r\n    };\r\n\r\n    this.state = {\r\n      web3: null,\r\n      web3Check: false,\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <main id=\"main\" className=\"smartSwap\">\r\n\r\n          <div className=\"main\">\r\n            <MContainer>\r\n              <CMbx>\r\n                <ProgressBar> <span style={{ width: '25%' }}></span> </ProgressBar>\r\n\r\n                <ProGTitle01> <i>1</i> Select the token to bridge</ProGTitle01>\r\n                <ProInputbx> <input type=\"text\" placeholder=\"Search tokens\" /> </ProInputbx>\r\n                <ProICOMbx01>\r\n                  <ProICOMbx02>\r\n\r\n                    <ProICOSbx01 className=\"selected\">\r\n                      <ProICOSbx02> <img src={ImgIco01} /> BSC </ProICOSbx02>\r\n                      <ProICOSbx02> <img src={ImgIco01} /> BNB </ProICOSbx02>\r\n                    </ProICOSbx01>\r\n\r\n                    <ProICOSbx01>\r\n                      <ProICOSbx02> <img src={ImgIco02} /> Ethereum </ProICOSbx02>\r\n                      <ProICOSbx02> <img src={ImgIco02} /> ETH </ProICOSbx02>\r\n                    </ProICOSbx01>\r\n\r\n                    <ProICOSbx01>\r\n                      <ProICOSbx02> <img src={ImgIco03} /> Polygon </ProICOSbx02>\r\n                      <ProICOSbx02> <img src={ImgIco03} /> MATIC </ProICOSbx02>\r\n                    </ProICOSbx01>\r\n\r\n                    <ProICOSbx01>\r\n                      <ProICOSbx02> <img src={ImgIco01} /> BSC </ProICOSbx02>\r\n                      <ProICOSbx02> <img src={ImgIco04} /> PDO </ProICOSbx02>\r\n                    </ProICOSbx01>\r\n\r\n                    <ProICOSbx01>\r\n                      <ProICOSbx02> <img src={ImgIco01} /> BSC </ProICOSbx02>\r\n                      <ProICOSbx02> <img src={ImgIco05} /> JNTR </ProICOSbx02>\r\n                    </ProICOSbx01>\r\n\r\n                    <ProICOSbx01>\r\n                      <ProICOSbx02> <img src={ImgIco01} /> BSC </ProICOSbx02>\r\n                      <ProICOSbx02> <img src={ImgIco06} /> SMART </ProICOSbx02>\r\n                    </ProICOSbx01>\r\n\r\n                  </ProICOMbx02>\r\n                </ProICOMbx01>\r\n\r\n                <BtnMbox>\r\n                  <button className=\"Btn02\"> <i className=\"fas fa-chevron-left\"></i> Back</button>\r\n                  <button className=\"Btn01\"> NEXT STEP</button>\r\n\r\n\r\n                </BtnMbox>\r\n\r\n\r\n\r\n\r\n              </CMbx>\r\n            </MContainer>\r\n\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\r\n`;\r\n\r\nconst MContainer = styled(FlexDiv)` \r\n  width:100%; max-width:1360px; margin:0 auto;\r\n`\r\nconst CMbx = styled(FlexDiv)`\r\n  width:100%;  margin-top:90px;\r\n`\r\nconst ProgressBar = styled.div`\r\nwidth:100%; height:4px; background-color: #303030; display:flex ; margin-bottom:55px;\r\n\r\n    span{ display:inline-block; height:4px; -webkit-box-shadow: 0 0 15px 5px rgba(145,220,39,0.5); box-shadow: 0 0 15px 5px rgba(145,220,39,0.5);  background-color:#91dc27; border-radius:0 2px 2px 0;}\r\n`\r\n\r\nconst ProGTitle01 = styled(FlexDiv)` \r\n    font-size:24px; color:#ffffff; font-weight:700; justify-content:flex-start; width:100%; margin-bottom:50px; \r\n    i{ display:flex; font-style:normal; width:41px; height:41px; border:2px solid #fff; align-items:center; justify-content:center; margin-right:28px;  } \r\n`\r\nconst ProInputbx = styled(FlexDiv)`\r\n    width:100%;\r\n\r\n    input{ width:100%; display:block; border:2px solid #000; border-radius:0; background-color:#21232b; padding:20px; font-size:16px; color:#ffffff; font-weight:400; }\r\n`\r\nconst ProICOMbx01 = styled.div` width:100%; `\r\nconst ProICOMbx02 = styled(FlexDiv)`\r\n    align-items:flex-start; justify-content: flex-start; margin:30px -18px 0 -18px;\r\n`\r\nconst ProICOSbx01 = styled.button`\r\n  width:calc(25% - 36px); margin:0 18px 30px 18px; background-color:#21232b; height:60px; border:0px; outline:none; padding:0;\r\n  display: flex; align-items: center; justify-content: flex-start;\r\n  :hover{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  }\r\n  &.selected{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  }\r\n` \r\nconst ProICOSbx02 = styled(FlexDiv)`\r\n  width:50%; padding:0 18px; justify-content:flex-start; font-size:14px; font-weight:400; color:#fff;\r\n  img{ margin-right:15px;}\r\n  &:nth-child(01){ background-image:url(${Lineimg}); background-repeat:no-repeat; background-position:right 50%;} \r\n`\r\nconst BtnMbox = styled(FlexDiv)`\r\n  border-top:1px solid #303030;  width:100%; margin-top:30px; justify-content: space-between; padding-top:48px;\r\n\r\n  .Btn01{ color:#fff; background-color:#0d0e13; width:100%; max-width:430px; text-align:center; padding:18px 15px; border:2px solid #91dc27; font-size:18px; font-weight:700; margin-bottom:20px; -webkit-box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); :hover{ background-color:#91dc27;}}\r\n\r\n  .Btn02{ background-color:transparent; color:#a6a2b0; border:0; font-size:14px; font-weight:400; :hover{ color:#91dc27;}}\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen03.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen04.js",["829","830","831","832","833","834"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport constantConfig, { getTokenList, tokenDetails } from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport CONSTANT from \"../constants\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport axios from \"axios\";\r\nimport { isValidAddress } from 'ethereumjs-util';\r\nimport styled from 'styled-components';\r\nimport HeadFreeListing from \"../components/Header02\";\r\n\r\nimport ImgIco01 from \"../assets/freelisting-images/s2ICO-01.png\";\r\nimport ImgIco02 from \"../assets/freelisting-images/s2ICO-02.png\";\r\nimport ImgIco03 from \"../assets/freelisting-images/s2ICO-03.png\";\r\nimport ImgIco04 from \"../assets/freelisting-images/s2ICO-04.png\";\r\nimport ImgIco05 from \"../assets/freelisting-images/s2ICO-05.png\";\r\nimport ImgIco06 from \"../assets/freelisting-images/s2ICO-06.png\";\r\nimport ImgIco07 from \"../assets/freelisting-images/s2ICO-07.png\";\r\nimport ImgIco08 from \"../assets/freelisting-images/s2ICO-08.png\";\r\nimport ImgIco09 from \"../assets/freelisting-images/s2ICO-09.png\";\r\n\r\n\r\n\r\nimport Lineimg from \"../assets/freelisting-images/line01.png\";\r\n\r\n\r\n\r\n\r\nconst $ = window.$;\r\nexport default class Screen4 extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n\r\n    };\r\n\r\n    this.state = {\r\n      web3: null,\r\n      web3Check: false,\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <main id=\"main\" className=\"smartSwap\">\r\n\r\n          <div className=\"main\">\r\n            <MContainer>\r\n              <CMbx>\r\n                <ProgressBar> <span style={{ width: '75%' }}></span> </ProgressBar>\r\n\r\n                <ProGTitle01> <i>3</i> Select the EVM destination chains</ProGTitle01>\r\n                <ProInputbx> <input type=\"text\" placeholder=\"Search chain\" /> </ProInputbx>\r\n                <ProICOMbx01>\r\n                  <ProICOMbx02>\r\n\r\n                  <ProICOSbx01  className=\"md-checkbox\">\r\n                        <input type=\"checkbox\" defaultChecked id=\"arr01\" name=\"bsc\" /><label for=\"arr01\"> <img src={ImgIco01} /> BSC </label>  \r\n                    </ProICOSbx01>\r\n                    <ProICOSbx01  className=\"md-checkbox\">\r\n                        <input type=\"checkbox\" defaultChecked id=\"arr02\" name=\"bsc\" /><label for=\"arr02\"> <img src={ImgIco02} /> Ethereum </label>  \r\n                    </ProICOSbx01>\r\n                    <ProICOSbx01  className=\"md-checkbox\">\r\n                        <input type=\"checkbox\" defaultChecked id=\"arr03\" name=\"bsc\" /><label for=\"arr03\"> <img src={ImgIco03} /> Polygon </label>  \r\n                    </ProICOSbx01>\r\n                    <ProICOSbx01  className=\"md-checkbox\">\r\n                        <input type=\"checkbox\" id=\"arr04\" name=\"bsc\" /><label for=\"arr04\"> <img src={ImgIco07} /> Fantom </label>  \r\n                    </ProICOSbx01>\r\n                    <ProICOSbx01  className=\"md-checkbox\">\r\n                        <input type=\"checkbox\" id=\"arr05\" name=\"bsc\" /><label for=\"arr05\"> <img src={ImgIco08} /> Avalanche </label>  \r\n                    </ProICOSbx01>\r\n                    <ProICOSbx01  className=\"md-checkbox\">\r\n                        <input type=\"checkbox\" id=\"arr06\" name=\"bsc\" /><label for=\"arr06\"> <img src={ImgIco09} /> Moonriver </label>  \r\n                    </ProICOSbx01>\r\n \r\n\r\n                  </ProICOMbx02>\r\n                </ProICOMbx01>\r\n\r\n                <BtnMbox>\r\n                  <button className=\"Btn02\"> <i className=\"fas fa-chevron-left\"></i> Back</button>\r\n                  <button className=\"Btn01\"> NEXT STEP</button>\r\n\r\n\r\n                </BtnMbox>\r\n\r\n\r\n\r\n\r\n              </CMbx>\r\n            </MContainer>\r\n\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\r\n`;\r\n\r\nconst MContainer = styled(FlexDiv)` \r\n  width:100%; max-width:1360px; margin:0 auto;\r\n`\r\nconst CMbx = styled(FlexDiv)`\r\n  width:100%;  margin-top:90px;\r\n`\r\nconst ProgressBar = styled.div`\r\nwidth:100%; height:4px; background-color: #303030; display:flex ; margin-bottom:55px;\r\n\r\n    span{ display:inline-block; height:4px; -webkit-box-shadow: 0 0 15px 5px rgba(145,220,39,0.5); box-shadow: 0 0 15px 5px rgba(145,220,39,0.5);  background-color:#91dc27; border-radius:0 2px 2px 0;}\r\n`\r\n\r\nconst ProGTitle01 = styled(FlexDiv)` \r\n    font-size:24px; color:#ffffff; font-weight:700; justify-content:flex-start; width:100%; margin-bottom:50px; \r\n    i{ display:flex; font-style:normal; width:41px; height:41px; border:2px solid #fff; align-items:center; justify-content:center; margin-right:28px;  } \r\n`\r\nconst ProInputbx = styled(FlexDiv)`\r\n    width:100%;\r\n\r\n    input{ width:100%; display:block; border:2px solid #000; border-radius:0; background-color:#21232b; padding:20px; font-size:16px; color:#ffffff; font-weight:400; }\r\n`\r\nconst ProICOMbx01 = styled.div` width:100%; `\r\nconst ProICOMbx02 = styled(FlexDiv)`\r\n    align-items:flex-start; justify-content: flex-start; margin:30px -18px 0 -18px;\r\n`\r\nconst ProICOSbx01 = styled.div`\r\n  width:calc(25% - 36px); margin:0 18px 30px 18px; background-color:#21232b; height:60px; border:0px; outline:none; padding:0;\r\n  display: flex; align-items: center; justify-content: flex-start;\r\n  /* :hover{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  } \r\n  &.selected{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  } */\r\n\r\n  input[type=\"checkbox\"]:checked+label{ -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  }\r\n  label{ width:100%; display:block; line-height:60px; margin-left:0px; padding-left:52px; display: flex;  align-items: center;  justify-content: flex-start; font-size:14px; color:#ffffff;   img{margin:-3px 12px 0 0; }\r\n\r\n\r\n}\r\n\r\n  label:before{ background: transparent;  border: 2px solid #aaaaaa; left: 13px;  top: 18px;}\r\n  input[type=\"checkbox\"]:checked+label:after{  top: 18px; width: 18px; height: 10px; left: 19px;}\r\n  input[type=\"checkbox\"]:checked+label:before{ border:2px solid #aaaaaa}\r\n\r\n\r\n\r\n` \r\nconst ProICOSbx02 = styled(FlexDiv)`\r\n  width:50%; padding:0 18px; justify-content:flex-start; font-size:14px; font-weight:400; color:#fff;\r\n  img{ margin-right:15px;}\r\n  &:nth-child(01){ background-image:url(${Lineimg}); background-repeat:no-repeat; background-position:right 50%;} \r\n`\r\nconst BtnMbox = styled(FlexDiv)`\r\n  border-top:1px solid #303030;  width:100%; margin-top:30px; justify-content: space-between; padding-top:48px;\r\n\r\n  .Btn01{ color:#fff; background-color:#0d0e13; width:100%; max-width:430px; text-align:center; padding:18px 15px; border:2px solid #91dc27; font-size:18px; font-weight:700; margin-bottom:20px; -webkit-box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); :hover{ background-color:#91dc27;}}\r\n\r\n  .Btn02{ background-color:transparent; color:#a6a2b0; border:0; font-size:14px; font-weight:400; :hover{ color:#91dc27;}}\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen05.js",["835","836","837","838","839","840","841","842","843","844","845","846","847","848","849"],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen07.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen06.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen08.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen09.js",[],"D:\\react\\SmartSwap_frontend\\src\\index.js",[],"D:\\react\\SmartSwap_frontend\\src\\reportWebVitals.js",[],"D:\\react\\SmartSwap_frontend\\src\\App.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\projects.js",["850"],"D:\\react\\SmartSwap_frontend\\src\\pages\\free-listing.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\extension.js",["851","852"],"D:\\react\\SmartSwap_frontend\\src\\pages\\smartSwapLicence.js",["853","854","855","856"],"D:\\react\\SmartSwap_frontend\\src\\pages\\home.js",["857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896"],"D:\\react\\SmartSwap_frontend\\src\\pages\\ownLicence02.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\ownLicence.js",["897","898","899","900","901","902","903","904","905","906","907","908"],"D:\\react\\SmartSwap_frontend\\src\\constants.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen01.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen08.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen06.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen07.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen04.js",["909","910","911","912","913","914"],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen02.js",["915","916","917","918","919","920","921","922","923","924","925","926"],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen03.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen05.js",["927","928","929","930","931","932","933","934","935","936","937","938","939","940","941"],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen09.js",[],"D:\\react\\SmartSwap_frontend\\src\\config\\notificationConfig.js",[],"D:\\react\\SmartSwap_frontend\\src\\config\\web3Config.js",[],"D:\\react\\SmartSwap_frontend\\src\\config\\constantConfig.js",[],"D:\\react\\SmartSwap_frontend\\src\\helper\\swapFactoryContract.js",["942"],"D:\\react\\SmartSwap_frontend\\src\\helper\\validation.js",["943"],"D:\\react\\SmartSwap_frontend\\src\\helper\\reimbursementContract.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\Header.js",["944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978"],"D:\\react\\SmartSwap_frontend\\src\\components\\CreateLicense.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\CoinPopup.js",["979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018"],"D:\\react\\SmartSwap_frontend\\src\\components\\RightSideMenu.js",["1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063"],"D:\\react\\SmartSwap_frontend\\src\\components\\Header02.js",["1064","1065","1066","1067","1068","1069","1070"],"D:\\react\\SmartSwap_frontend\\src\\components\\SidePopup.js",["1071","1072"],"D:\\react\\SmartSwap_frontend\\src\\components\\WalletPopup.js",["1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113"],"D:\\react\\SmartSwap_frontend\\src\\components\\Deposit-withdraw.js",["1114","1115","1116","1117","1118","1119","1120","1121","1122"],"D:\\react\\SmartSwap_frontend\\src\\components\\withdraw_token.js",["1123","1124","1125"],"D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\LiquidityProvider.js",["1126","1127","1128"],"D:\\react\\SmartSwap_frontend\\src\\components\\Counter.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\DropDown.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\select_token.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\CefiToDefi.js",["1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141"],"D:\\react\\SmartSwap_frontend\\src\\components\\NoDomain.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\liquidity_fountain_for_SPs.js",["1142","1143","1144"],"D:\\react\\SmartSwap_frontend\\src\\components\\LedgerHistory.js",["1145","1146","1147","1148","1149","1150","1151","1152","1153"],"D:\\react\\SmartSwap_frontend\\src\\components\\HowItWorks.js",["1154","1155","1156","1157","1158","1159","1160","1161","1162"],"D:\\react\\SmartSwap_frontend\\src\\components\\PeerPopup.js",["1163","1164","1165","1166","1167","1168","1169","1170","1171"],"D:\\react\\SmartSwap_frontend\\src\\components\\About.js",["1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215"],"D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpContractDeployForm.js",["1216"],"D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpIntroduction.js",[],"D:\\react\\SmartSwap_frontend\\src\\dispatcher.js",[],"D:\\react\\SmartSwap_frontend\\src\\helper\\swapFactoryContractPairWise.js",[],"D:\\react\\SmartSwap_frontend\\src\\helper\\axiosRequest.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\ActiveContract.js",["1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228"],"D:\\react\\SmartSwap_frontend\\src\\helper\\spContract.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen10.js",["1229","1230","1231"],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen11.js",["1232","1233","1234","1235","1236","1237","1238","1239","1240"],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen11.js",["1241","1242","1243","1244","1245","1246","1247","1248","1249"],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen10.js",["1250","1251","1252"],{"ruleId":"1253","replacedBy":"1254"},{"ruleId":"1255","replacedBy":"1256"},{"ruleId":"1257","severity":1,"message":"1258","line":2505,"column":27,"nodeType":"1259","endLine":2509,"endColumn":28},{"ruleId":"1257","severity":1,"message":"1258","line":2524,"column":31,"nodeType":"1259","endLine":2528,"endColumn":32},{"ruleId":"1257","severity":1,"message":"1258","line":2535,"column":31,"nodeType":"1259","endLine":2535,"endColumn":142},{"ruleId":"1257","severity":1,"message":"1258","line":2543,"column":31,"nodeType":"1259","endLine":2543,"endColumn":142},{"ruleId":"1257","severity":1,"message":"1258","line":2580,"column":31,"nodeType":"1259","endLine":2584,"endColumn":32},{"ruleId":"1257","severity":1,"message":"1258","line":2592,"column":31,"nodeType":"1259","endLine":2592,"endColumn":137},{"ruleId":"1257","severity":1,"message":"1258","line":2601,"column":31,"nodeType":"1259","endLine":2601,"endColumn":137},{"ruleId":"1257","severity":1,"message":"1258","line":2680,"column":80,"nodeType":"1259","endLine":2680,"endColumn":118},{"ruleId":"1260","severity":1,"message":"1261","line":2682,"column":56,"nodeType":"1262","messageId":"1263","endLine":2683,"endColumn":89},{"ruleId":"1260","severity":1,"message":"1261","line":2683,"column":95,"nodeType":"1262","messageId":"1263","endLine":2684,"endColumn":39},{"ruleId":"1257","severity":1,"message":"1258","line":2709,"column":27,"nodeType":"1259","endLine":2709,"endColumn":62},{"ruleId":"1257","severity":1,"message":"1258","line":2717,"column":27,"nodeType":"1259","endLine":2717,"endColumn":62},{"ruleId":"1257","severity":1,"message":"1258","line":486,"column":45,"nodeType":"1259","endLine":486,"endColumn":102},{"ruleId":"1264","severity":1,"message":"1265","line":486,"column":53,"nodeType":"1262","messageId":"1266","endLine":486,"endColumn":74},{"ruleId":"1257","severity":1,"message":"1258","line":510,"column":49,"nodeType":"1259","endLine":510,"endColumn":103},{"ruleId":"1264","severity":1,"message":"1265","line":510,"column":57,"nodeType":"1262","messageId":"1266","endLine":510,"endColumn":78},{"ruleId":"1267","severity":1,"message":"1268","line":126,"column":28,"nodeType":"1269","messageId":"1270","endLine":126,"endColumn":30},{"ruleId":"1267","severity":1,"message":"1268","line":210,"column":28,"nodeType":"1269","messageId":"1270","endLine":210,"endColumn":30},{"ruleId":"1271","severity":1,"message":"1272","line":268,"column":5,"nodeType":"1273","messageId":"1274","endLine":271,"endColumn":6},{"ruleId":"1257","severity":1,"message":"1258","line":2541,"column":41,"nodeType":"1259","endLine":2546,"endColumn":42},{"ruleId":"1264","severity":1,"message":"1265","line":2542,"column":48,"nodeType":"1262","messageId":"1266","endLine":2542,"endColumn":69},{"ruleId":"1257","severity":1,"message":"1258","line":2549,"column":41,"nodeType":"1259","endLine":2554,"endColumn":42},{"ruleId":"1264","severity":1,"message":"1265","line":2550,"column":48,"nodeType":"1262","messageId":"1266","endLine":2550,"endColumn":69},{"ruleId":"1257","severity":1,"message":"1258","line":2757,"column":41,"nodeType":"1259","endLine":2757,"endColumn":52},{"ruleId":"1257","severity":1,"message":"1258","line":2806,"column":41,"nodeType":"1259","endLine":2806,"endColumn":52},{"ruleId":"1257","severity":1,"message":"1258","line":2860,"column":41,"nodeType":"1259","endLine":2860,"endColumn":52},{"ruleId":"1257","severity":1,"message":"1258","line":2899,"column":33,"nodeType":"1259","endLine":2903,"endColumn":34},{"ruleId":"1264","severity":1,"message":"1265","line":2902,"column":40,"nodeType":"1262","messageId":"1266","endLine":2902,"endColumn":61},{"ruleId":"1257","severity":1,"message":"1258","line":2911,"column":33,"nodeType":"1259","endLine":2914,"endColumn":34},{"ruleId":"1264","severity":1,"message":"1265","line":2912,"column":40,"nodeType":"1262","messageId":"1266","endLine":2912,"endColumn":61},{"ruleId":"1275","severity":1,"message":"1276","line":2926,"column":37,"nodeType":"1259","endLine":2926,"endColumn":68},{"ruleId":"1275","severity":1,"message":"1276","line":2996,"column":39,"nodeType":"1259","endLine":3002,"endColumn":41},{"ruleId":"1275","severity":1,"message":"1276","line":3015,"column":39,"nodeType":"1259","endLine":3021,"endColumn":41},{"ruleId":"1257","severity":1,"message":"1258","line":3043,"column":33,"nodeType":"1259","endLine":3048,"endColumn":34},{"ruleId":"1264","severity":1,"message":"1265","line":3044,"column":40,"nodeType":"1262","messageId":"1266","endLine":3044,"endColumn":61},{"ruleId":"1257","severity":1,"message":"1258","line":3059,"column":33,"nodeType":"1259","endLine":3063,"endColumn":34},{"ruleId":"1264","severity":1,"message":"1265","line":3060,"column":40,"nodeType":"1262","messageId":"1266","endLine":3060,"endColumn":61},{"ruleId":"1257","severity":1,"message":"1258","line":3081,"column":31,"nodeType":"1259","endLine":3088,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3082,"column":38,"nodeType":"1262","messageId":"1266","endLine":3082,"endColumn":58},{"ruleId":"1277","severity":1,"message":"1278","line":3121,"column":37,"nodeType":"1259","messageId":"1279","endLine":3125,"endColumn":38,"fix":"1280"},{"ruleId":"1277","severity":1,"message":"1278","line":3156,"column":43,"nodeType":"1259","messageId":"1279","endLine":3160,"endColumn":44,"fix":"1281"},{"ruleId":"1275","severity":1,"message":"1276","line":3179,"column":45,"nodeType":"1259","endLine":3179,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":3186,"column":45,"nodeType":"1259","endLine":3189,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":3187,"column":52,"nodeType":"1262","messageId":"1266","endLine":3187,"endColumn":73},{"ruleId":"1257","severity":1,"message":"1258","line":3192,"column":45,"nodeType":"1259","endLine":3197,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":3193,"column":52,"nodeType":"1262","messageId":"1266","endLine":3193,"endColumn":73},{"ruleId":"1257","severity":1,"message":"1282","line":3203,"column":45,"nodeType":"1259","endLine":3203,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":3206,"column":45,"nodeType":"1259","endLine":3209,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":3207,"column":52,"nodeType":"1262","messageId":"1266","endLine":3207,"endColumn":73},{"ruleId":"1257","severity":1,"message":"1258","line":3235,"column":31,"nodeType":"1259","endLine":3239,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3236,"column":38,"nodeType":"1262","messageId":"1266","endLine":3236,"endColumn":58},{"ruleId":"1257","severity":1,"message":"1258","line":3245,"column":31,"nodeType":"1259","endLine":3248,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3246,"column":38,"nodeType":"1262","messageId":"1266","endLine":3246,"endColumn":58},{"ruleId":"1257","severity":1,"message":"1258","line":3252,"column":31,"nodeType":"1259","endLine":3255,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3253,"column":38,"nodeType":"1262","messageId":"1266","endLine":3253,"endColumn":58},{"ruleId":"1257","severity":1,"message":"1258","line":3259,"column":31,"nodeType":"1259","endLine":3264,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3260,"column":38,"nodeType":"1262","messageId":"1266","endLine":3260,"endColumn":58},{"ruleId":"1267","severity":1,"message":"1268","line":126,"column":28,"nodeType":"1269","messageId":"1270","endLine":126,"endColumn":30},{"ruleId":"1257","severity":1,"message":"1258","line":332,"column":25,"nodeType":"1259","endLine":332,"endColumn":183},{"ruleId":"1275","severity":1,"message":"1276","line":63,"column":65,"nodeType":"1259","endLine":63,"endColumn":155},{"ruleId":"1283","severity":1,"message":"1284","line":68,"column":53,"nodeType":"1259","endLine":68,"endColumn":149},{"ruleId":"1257","severity":1,"message":"1258","line":68,"column":53,"nodeType":"1259","endLine":68,"endColumn":149},{"ruleId":"1264","severity":1,"message":"1265","line":68,"column":61,"nodeType":"1262","messageId":"1266","endLine":68,"endColumn":82},{"ruleId":"1283","severity":1,"message":"1284","line":79,"column":37,"nodeType":"1259","endLine":79,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":79,"column":37,"nodeType":"1259","endLine":79,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":79,"column":45,"nodeType":"1262","messageId":"1266","endLine":79,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":86,"column":37,"nodeType":"1259","endLine":86,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":86,"column":37,"nodeType":"1259","endLine":86,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":86,"column":45,"nodeType":"1262","messageId":"1266","endLine":86,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":93,"column":37,"nodeType":"1259","endLine":93,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":93,"column":37,"nodeType":"1259","endLine":93,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":93,"column":45,"nodeType":"1262","messageId":"1266","endLine":93,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":100,"column":37,"nodeType":"1259","endLine":100,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":100,"column":37,"nodeType":"1259","endLine":100,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":100,"column":45,"nodeType":"1262","messageId":"1266","endLine":100,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":107,"column":37,"nodeType":"1259","endLine":107,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":107,"column":37,"nodeType":"1259","endLine":107,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":107,"column":45,"nodeType":"1262","messageId":"1266","endLine":107,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":114,"column":37,"nodeType":"1259","endLine":114,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":114,"column":37,"nodeType":"1259","endLine":114,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":114,"column":45,"nodeType":"1262","messageId":"1266","endLine":114,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":121,"column":37,"nodeType":"1259","endLine":121,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":121,"column":37,"nodeType":"1259","endLine":121,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":121,"column":45,"nodeType":"1262","messageId":"1266","endLine":121,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":128,"column":37,"nodeType":"1259","endLine":128,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":128,"column":37,"nodeType":"1259","endLine":128,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":128,"column":45,"nodeType":"1262","messageId":"1266","endLine":128,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":135,"column":37,"nodeType":"1259","endLine":135,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":135,"column":37,"nodeType":"1259","endLine":135,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":135,"column":45,"nodeType":"1262","messageId":"1266","endLine":135,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":142,"column":37,"nodeType":"1259","endLine":142,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":142,"column":37,"nodeType":"1259","endLine":142,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":142,"column":45,"nodeType":"1262","messageId":"1266","endLine":142,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":149,"column":37,"nodeType":"1259","endLine":149,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":149,"column":37,"nodeType":"1259","endLine":149,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":149,"column":45,"nodeType":"1262","messageId":"1266","endLine":149,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":156,"column":17,"nodeType":"1259","endLine":156,"endColumn":70},{"ruleId":"1257","severity":1,"message":"1258","line":156,"column":17,"nodeType":"1259","endLine":156,"endColumn":70},{"ruleId":"1264","severity":1,"message":"1265","line":156,"column":25,"nodeType":"1262","messageId":"1266","endLine":156,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":203,"column":29,"nodeType":"1259","endLine":203,"endColumn":137},{"ruleId":"1264","severity":1,"message":"1265","line":203,"column":37,"nodeType":"1262","messageId":"1266","endLine":203,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":204,"column":29,"nodeType":"1259","endLine":204,"endColumn":148},{"ruleId":"1264","severity":1,"message":"1265","line":204,"column":37,"nodeType":"1262","messageId":"1266","endLine":204,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":233,"column":29,"nodeType":"1259","endLine":233,"endColumn":138},{"ruleId":"1264","severity":1,"message":"1265","line":233,"column":37,"nodeType":"1262","messageId":"1266","endLine":233,"endColumn":57},{"ruleId":"1283","severity":1,"message":"1284","line":264,"column":17,"nodeType":"1259","endLine":264,"endColumn":128},{"ruleId":"1257","severity":1,"message":"1258","line":264,"column":17,"nodeType":"1259","endLine":264,"endColumn":128},{"ruleId":"1264","severity":1,"message":"1265","line":264,"column":25,"nodeType":"1262","messageId":"1266","endLine":264,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":188,"column":21,"nodeType":"1259","endLine":188,"endColumn":103},{"ruleId":"1264","severity":1,"message":"1265","line":188,"column":29,"nodeType":"1262","messageId":"1266","endLine":188,"endColumn":46},{"ruleId":"1283","severity":1,"message":"1284","line":66,"column":17,"nodeType":"1259","endLine":66,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":66,"column":17,"nodeType":"1259","endLine":66,"endColumn":129},{"ruleId":"1264","severity":1,"message":"1265","line":66,"column":25,"nodeType":"1262","messageId":"1266","endLine":66,"endColumn":46},{"ruleId":"1277","severity":1,"message":"1278","line":96,"column":11,"nodeType":"1259","messageId":"1279","endLine":96,"endColumn":81,"fix":"1285"},{"ruleId":"1257","severity":1,"message":"1258","line":132,"column":11,"nodeType":"1259","endLine":137,"endColumn":12},{"ruleId":"1264","severity":1,"message":"1265","line":133,"column":18,"nodeType":"1262","messageId":"1266","endLine":133,"endColumn":39},{"ruleId":"1257","severity":1,"message":"1258","line":152,"column":15,"nodeType":"1259","endLine":152,"endColumn":63},{"ruleId":"1264","severity":1,"message":"1265","line":152,"column":23,"nodeType":"1262","messageId":"1266","endLine":152,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":161,"column":15,"nodeType":"1259","endLine":161,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":161,"column":23,"nodeType":"1262","messageId":"1266","endLine":161,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":170,"column":15,"nodeType":"1259","endLine":170,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":170,"column":23,"nodeType":"1262","messageId":"1266","endLine":170,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":179,"column":15,"nodeType":"1259","endLine":179,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":179,"column":23,"nodeType":"1262","messageId":"1266","endLine":179,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":188,"column":15,"nodeType":"1259","endLine":188,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":188,"column":23,"nodeType":"1262","messageId":"1266","endLine":188,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":197,"column":15,"nodeType":"1259","endLine":197,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":197,"column":23,"nodeType":"1262","messageId":"1266","endLine":197,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":206,"column":15,"nodeType":"1259","endLine":206,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":206,"column":23,"nodeType":"1262","messageId":"1266","endLine":206,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":215,"column":15,"nodeType":"1259","endLine":215,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":215,"column":23,"nodeType":"1262","messageId":"1266","endLine":215,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":224,"column":15,"nodeType":"1259","endLine":224,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":224,"column":23,"nodeType":"1262","messageId":"1266","endLine":224,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":233,"column":15,"nodeType":"1259","endLine":233,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":233,"column":23,"nodeType":"1262","messageId":"1266","endLine":233,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":242,"column":15,"nodeType":"1259","endLine":242,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":242,"column":23,"nodeType":"1262","messageId":"1266","endLine":242,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":251,"column":15,"nodeType":"1259","endLine":251,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":251,"column":23,"nodeType":"1262","messageId":"1266","endLine":251,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":260,"column":15,"nodeType":"1259","endLine":260,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":260,"column":23,"nodeType":"1262","messageId":"1266","endLine":260,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":269,"column":15,"nodeType":"1259","endLine":269,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":269,"column":23,"nodeType":"1262","messageId":"1266","endLine":269,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":278,"column":15,"nodeType":"1259","endLine":278,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":278,"column":23,"nodeType":"1262","messageId":"1266","endLine":278,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":287,"column":15,"nodeType":"1259","endLine":287,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":287,"column":23,"nodeType":"1262","messageId":"1266","endLine":287,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":28,"column":57,"nodeType":"1259","endLine":28,"endColumn":87},{"ruleId":"1264","severity":1,"message":"1265","line":28,"column":65,"nodeType":"1262","messageId":"1266","endLine":28,"endColumn":86},{"ruleId":"1283","severity":1,"message":"1284","line":38,"column":33,"nodeType":"1259","endLine":38,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":38,"column":33,"nodeType":"1259","endLine":38,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":38,"column":41,"nodeType":"1262","messageId":"1266","endLine":38,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":44,"column":33,"nodeType":"1259","endLine":44,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":44,"column":33,"nodeType":"1259","endLine":44,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":44,"column":41,"nodeType":"1262","messageId":"1266","endLine":44,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":50,"column":33,"nodeType":"1259","endLine":50,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":50,"column":33,"nodeType":"1259","endLine":50,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":50,"column":41,"nodeType":"1262","messageId":"1266","endLine":50,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":56,"column":33,"nodeType":"1259","endLine":56,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":56,"column":33,"nodeType":"1259","endLine":56,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":56,"column":41,"nodeType":"1262","messageId":"1266","endLine":56,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":62,"column":33,"nodeType":"1259","endLine":62,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":62,"column":33,"nodeType":"1259","endLine":62,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":62,"column":41,"nodeType":"1262","messageId":"1266","endLine":62,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":68,"column":33,"nodeType":"1259","endLine":68,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":68,"column":33,"nodeType":"1259","endLine":68,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":68,"column":41,"nodeType":"1262","messageId":"1266","endLine":68,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":74,"column":33,"nodeType":"1259","endLine":74,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":74,"column":33,"nodeType":"1259","endLine":74,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":74,"column":41,"nodeType":"1262","messageId":"1266","endLine":74,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":80,"column":33,"nodeType":"1259","endLine":80,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":80,"column":33,"nodeType":"1259","endLine":80,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":80,"column":41,"nodeType":"1262","messageId":"1266","endLine":80,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":86,"column":33,"nodeType":"1259","endLine":86,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":86,"column":33,"nodeType":"1259","endLine":86,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":86,"column":41,"nodeType":"1262","messageId":"1266","endLine":86,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":92,"column":33,"nodeType":"1259","endLine":92,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":92,"column":33,"nodeType":"1259","endLine":92,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":92,"column":41,"nodeType":"1262","messageId":"1266","endLine":92,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":98,"column":33,"nodeType":"1259","endLine":98,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":98,"column":33,"nodeType":"1259","endLine":98,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":98,"column":41,"nodeType":"1262","messageId":"1266","endLine":98,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":104,"column":33,"nodeType":"1259","endLine":104,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":104,"column":33,"nodeType":"1259","endLine":104,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":104,"column":41,"nodeType":"1262","messageId":"1266","endLine":104,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":109,"column":17,"nodeType":"1259","endLine":109,"endColumn":70},{"ruleId":"1257","severity":1,"message":"1258","line":109,"column":17,"nodeType":"1259","endLine":109,"endColumn":70},{"ruleId":"1264","severity":1,"message":"1265","line":109,"column":25,"nodeType":"1262","messageId":"1266","endLine":109,"endColumn":46},{"ruleId":"1267","severity":1,"message":"1268","line":91,"column":32,"nodeType":"1269","messageId":"1270","endLine":91,"endColumn":34},{"ruleId":"1257","severity":1,"message":"1258","line":69,"column":17,"nodeType":"1259","endLine":72,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":70,"column":24,"nodeType":"1262","messageId":"1266","endLine":70,"endColumn":45},{"ruleId":"1257","severity":1,"message":"1258","line":92,"column":17,"nodeType":"1259","endLine":92,"endColumn":29},{"ruleId":"1257","severity":1,"message":"1258","line":95,"column":17,"nodeType":"1259","endLine":102,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":96,"column":24,"nodeType":"1262","messageId":"1266","endLine":96,"endColumn":45},{"ruleId":"1257","severity":1,"message":"1258","line":106,"column":19,"nodeType":"1259","endLine":112,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":107,"column":26,"nodeType":"1262","messageId":"1266","endLine":107,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":115,"column":19,"nodeType":"1259","endLine":121,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":116,"column":26,"nodeType":"1262","messageId":"1266","endLine":116,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":124,"column":19,"nodeType":"1259","endLine":130,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":125,"column":26,"nodeType":"1262","messageId":"1266","endLine":125,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":133,"column":19,"nodeType":"1259","endLine":139,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":134,"column":26,"nodeType":"1262","messageId":"1266","endLine":134,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":142,"column":19,"nodeType":"1259","endLine":147,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":143,"column":26,"nodeType":"1262","messageId":"1266","endLine":143,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":150,"column":19,"nodeType":"1259","endLine":156,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":151,"column":26,"nodeType":"1262","messageId":"1266","endLine":151,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":159,"column":19,"nodeType":"1259","endLine":159,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":159,"column":27,"nodeType":"1262","messageId":"1266","endLine":159,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":160,"column":19,"nodeType":"1259","endLine":160,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":160,"column":27,"nodeType":"1262","messageId":"1266","endLine":160,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":164,"column":17,"nodeType":"1259","endLine":171,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":165,"column":24,"nodeType":"1262","messageId":"1266","endLine":165,"endColumn":45},{"ruleId":"1277","severity":1,"message":"1278","line":176,"column":19,"nodeType":"1259","messageId":"1279","endLine":179,"endColumn":20,"fix":"1286"},{"ruleId":"1277","severity":1,"message":"1278","line":185,"column":19,"nodeType":"1259","messageId":"1279","endLine":188,"endColumn":20,"fix":"1287"},{"ruleId":"1257","severity":1,"message":"1258","line":211,"column":17,"nodeType":"1259","endLine":218,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":212,"column":24,"nodeType":"1262","messageId":"1266","endLine":212,"endColumn":45},{"ruleId":"1277","severity":1,"message":"1278","line":223,"column":19,"nodeType":"1259","messageId":"1279","endLine":223,"endColumn":77,"fix":"1288"},{"ruleId":"1277","severity":1,"message":"1278","line":226,"column":19,"nodeType":"1259","messageId":"1279","endLine":226,"endColumn":77,"fix":"1289"},{"ruleId":"1257","severity":1,"message":"1258","line":232,"column":17,"nodeType":"1259","endLine":239,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":233,"column":24,"nodeType":"1262","messageId":"1266","endLine":233,"endColumn":45},{"ruleId":"1257","severity":1,"message":"1258","line":243,"column":19,"nodeType":"1259","endLine":248,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":244,"column":26,"nodeType":"1262","messageId":"1266","endLine":244,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":251,"column":19,"nodeType":"1259","endLine":251,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":251,"column":27,"nodeType":"1262","messageId":"1266","endLine":251,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":252,"column":19,"nodeType":"1259","endLine":252,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":252,"column":27,"nodeType":"1262","messageId":"1266","endLine":252,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":253,"column":19,"nodeType":"1259","endLine":253,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":253,"column":27,"nodeType":"1262","messageId":"1266","endLine":253,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":255,"column":21,"nodeType":"1259","endLine":262,"endColumn":22},{"ruleId":"1264","severity":1,"message":"1265","line":256,"column":28,"nodeType":"1262","messageId":"1266","endLine":256,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":273,"column":17,"nodeType":"1259","endLine":273,"endColumn":47},{"ruleId":"1264","severity":1,"message":"1265","line":273,"column":25,"nodeType":"1262","messageId":"1266","endLine":273,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":290,"column":19,"nodeType":"1259","endLine":290,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":290,"column":27,"nodeType":"1262","messageId":"1266","endLine":290,"endColumn":48},{"ruleId":"1290","severity":1,"message":"1291","line":11,"column":5,"nodeType":"1292","messageId":"1293","endLine":13,"endColumn":6},{"ruleId":"1283","severity":1,"message":"1284","line":48,"column":17,"nodeType":"1259","endLine":48,"endColumn":135},{"ruleId":"1257","severity":1,"message":"1258","line":48,"column":17,"nodeType":"1259","endLine":48,"endColumn":135},{"ruleId":"1264","severity":1,"message":"1265","line":48,"column":25,"nodeType":"1262","messageId":"1266","endLine":48,"endColumn":46},{"ruleId":"1277","severity":1,"message":"1278","line":55,"column":76,"nodeType":"1259","messageId":"1279","endLine":55,"endColumn":149,"fix":"1294"},{"ruleId":"1283","severity":1,"message":"1284","line":55,"column":76,"nodeType":"1259","endLine":55,"endColumn":149},{"ruleId":"1275","severity":1,"message":"1276","line":58,"column":72,"nodeType":"1259","endLine":58,"endColumn":264},{"ruleId":"1277","severity":1,"message":"1278","line":64,"column":76,"nodeType":"1259","messageId":"1279","endLine":64,"endColumn":151,"fix":"1295"},{"ruleId":"1283","severity":1,"message":"1284","line":64,"column":76,"nodeType":"1259","endLine":64,"endColumn":151},{"ruleId":"1275","severity":1,"message":"1276","line":67,"column":72,"nodeType":"1259","endLine":67,"endColumn":264},{"ruleId":"1277","severity":1,"message":"1278","line":73,"column":76,"nodeType":"1259","messageId":"1279","endLine":73,"endColumn":150,"fix":"1296"},{"ruleId":"1283","severity":1,"message":"1284","line":73,"column":76,"nodeType":"1259","endLine":73,"endColumn":150},{"ruleId":"1275","severity":1,"message":"1276","line":76,"column":72,"nodeType":"1259","endLine":76,"endColumn":264},{"ruleId":"1277","severity":1,"message":"1278","line":83,"column":76,"nodeType":"1259","messageId":"1279","endLine":83,"endColumn":149,"fix":"1297"},{"ruleId":"1283","severity":1,"message":"1284","line":83,"column":76,"nodeType":"1259","endLine":83,"endColumn":149},{"ruleId":"1275","severity":1,"message":"1276","line":86,"column":72,"nodeType":"1259","endLine":86,"endColumn":264},{"ruleId":"1277","severity":1,"message":"1278","line":92,"column":76,"nodeType":"1259","messageId":"1279","endLine":92,"endColumn":165,"fix":"1298"},{"ruleId":"1283","severity":1,"message":"1284","line":92,"column":76,"nodeType":"1259","endLine":92,"endColumn":165},{"ruleId":"1275","severity":1,"message":"1276","line":95,"column":72,"nodeType":"1259","endLine":95,"endColumn":286},{"ruleId":"1277","severity":1,"message":"1278","line":101,"column":76,"nodeType":"1259","messageId":"1279","endLine":101,"endColumn":175,"fix":"1299"},{"ruleId":"1283","severity":1,"message":"1284","line":101,"column":76,"nodeType":"1259","endLine":101,"endColumn":175},{"ruleId":"1275","severity":1,"message":"1276","line":104,"column":72,"nodeType":"1259","endLine":104,"endColumn":276},{"ruleId":"1277","severity":1,"message":"1278","line":110,"column":76,"nodeType":"1259","messageId":"1279","endLine":110,"endColumn":166,"fix":"1300"},{"ruleId":"1283","severity":1,"message":"1284","line":110,"column":76,"nodeType":"1259","endLine":110,"endColumn":166},{"ruleId":"1277","severity":1,"message":"1278","line":118,"column":76,"nodeType":"1259","messageId":"1279","endLine":118,"endColumn":170,"fix":"1301"},{"ruleId":"1283","severity":1,"message":"1284","line":118,"column":76,"nodeType":"1259","endLine":118,"endColumn":170},{"ruleId":"1275","severity":1,"message":"1276","line":121,"column":72,"nodeType":"1259","endLine":121,"endColumn":256},{"ruleId":"1277","severity":1,"message":"1278","line":182,"column":76,"nodeType":"1259","messageId":"1279","endLine":182,"endColumn":178,"fix":"1302"},{"ruleId":"1283","severity":1,"message":"1284","line":182,"column":76,"nodeType":"1259","endLine":182,"endColumn":178},{"ruleId":"1277","severity":1,"message":"1278","line":191,"column":76,"nodeType":"1259","messageId":"1279","endLine":191,"endColumn":168,"fix":"1303"},{"ruleId":"1283","severity":1,"message":"1284","line":191,"column":76,"nodeType":"1259","endLine":191,"endColumn":168},{"ruleId":"1283","severity":1,"message":"1284","line":220,"column":76,"nodeType":"1259","endLine":220,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":220,"column":76,"nodeType":"1259","endLine":220,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":230,"column":76,"nodeType":"1259","endLine":230,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":230,"column":76,"nodeType":"1259","endLine":230,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":239,"column":76,"nodeType":"1259","endLine":239,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":239,"column":76,"nodeType":"1259","endLine":239,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":248,"column":76,"nodeType":"1259","endLine":248,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":248,"column":76,"nodeType":"1259","endLine":248,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":266,"column":76,"nodeType":"1259","endLine":266,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":266,"column":76,"nodeType":"1259","endLine":266,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":275,"column":76,"nodeType":"1259","endLine":275,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":275,"column":76,"nodeType":"1259","endLine":275,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":284,"column":76,"nodeType":"1259","endLine":284,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":284,"column":76,"nodeType":"1259","endLine":284,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":370,"column":17,"nodeType":"1259","endLine":370,"endColumn":121},{"ruleId":"1257","severity":1,"message":"1258","line":370,"column":17,"nodeType":"1259","endLine":370,"endColumn":121},{"ruleId":"1264","severity":1,"message":"1265","line":370,"column":25,"nodeType":"1262","messageId":"1266","endLine":370,"endColumn":46},{"ruleId":"1283","severity":1,"message":"1284","line":111,"column":17,"nodeType":"1259","endLine":111,"endColumn":133},{"ruleId":"1257","severity":1,"message":"1258","line":111,"column":17,"nodeType":"1259","endLine":111,"endColumn":133},{"ruleId":"1264","severity":1,"message":"1265","line":111,"column":25,"nodeType":"1262","messageId":"1266","endLine":111,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":52,"column":25,"nodeType":"1259","endLine":52,"endColumn":129},{"ruleId":"1264","severity":1,"message":"1265","line":52,"column":33,"nodeType":"1262","messageId":"1266","endLine":52,"endColumn":53},{"ruleId":"1257","severity":1,"message":"1258","line":53,"column":25,"nodeType":"1259","endLine":53,"endColumn":129},{"ruleId":"1264","severity":1,"message":"1265","line":53,"column":33,"nodeType":"1262","messageId":"1266","endLine":53,"endColumn":53},{"ruleId":"1257","severity":1,"message":"1258","line":54,"column":25,"nodeType":"1259","endLine":54,"endColumn":129},{"ruleId":"1264","severity":1,"message":"1265","line":54,"column":33,"nodeType":"1262","messageId":"1266","endLine":54,"endColumn":53},{"ruleId":"1283","severity":1,"message":"1284","line":88,"column":17,"nodeType":"1259","endLine":88,"endColumn":126},{"ruleId":"1257","severity":1,"message":"1258","line":88,"column":17,"nodeType":"1259","endLine":88,"endColumn":126},{"ruleId":"1264","severity":1,"message":"1265","line":88,"column":25,"nodeType":"1262","messageId":"1266","endLine":88,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":52,"column":29,"nodeType":"1259","endLine":52,"endColumn":136},{"ruleId":"1264","severity":1,"message":"1265","line":52,"column":37,"nodeType":"1262","messageId":"1266","endLine":52,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":54,"column":29,"nodeType":"1259","endLine":54,"endColumn":147},{"ruleId":"1264","severity":1,"message":"1265","line":54,"column":37,"nodeType":"1262","messageId":"1266","endLine":54,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":55,"column":29,"nodeType":"1259","endLine":55,"endColumn":147},{"ruleId":"1264","severity":1,"message":"1265","line":55,"column":37,"nodeType":"1262","messageId":"1266","endLine":55,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":64,"column":29,"nodeType":"1259","endLine":64,"endColumn":136},{"ruleId":"1264","severity":1,"message":"1265","line":64,"column":37,"nodeType":"1262","messageId":"1266","endLine":64,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":81,"column":29,"nodeType":"1259","endLine":81,"endColumn":136},{"ruleId":"1264","severity":1,"message":"1265","line":81,"column":37,"nodeType":"1262","messageId":"1266","endLine":81,"endColumn":57},{"ruleId":"1283","severity":1,"message":"1284","line":94,"column":17,"nodeType":"1259","endLine":94,"endColumn":126},{"ruleId":"1257","severity":1,"message":"1258","line":94,"column":17,"nodeType":"1259","endLine":94,"endColumn":126},{"ruleId":"1264","severity":1,"message":"1265","line":94,"column":25,"nodeType":"1262","messageId":"1266","endLine":94,"endColumn":46},{"ruleId":"1277","severity":1,"message":"1278","line":19,"column":21,"nodeType":"1259","messageId":"1279","endLine":19,"endColumn":93,"fix":"1304"},{"ruleId":"1277","severity":1,"message":"1278","line":35,"column":33,"nodeType":"1259","messageId":"1279","endLine":35,"endColumn":108,"fix":"1305"},{"ruleId":"1275","severity":1,"message":"1276","line":51,"column":37,"nodeType":"1259","endLine":51,"endColumn":69},{"ruleId":"1257","severity":1,"message":"1282","line":61,"column":37,"nodeType":"1259","endLine":61,"endColumn":69},{"ruleId":"1257","severity":1,"message":"1282","line":64,"column":41,"nodeType":"1259","endLine":64,"endColumn":73},{"ruleId":"1257","severity":1,"message":"1258","line":67,"column":45,"nodeType":"1259","endLine":70,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":68,"column":54,"nodeType":"1262","messageId":"1266","endLine":68,"endColumn":75},{"ruleId":"1257","severity":1,"message":"1258","line":73,"column":45,"nodeType":"1259","endLine":78,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":74,"column":54,"nodeType":"1262","messageId":"1266","endLine":74,"endColumn":75},{"ruleId":"1257","severity":1,"message":"1258","line":52,"column":29,"nodeType":"1259","endLine":52,"endColumn":136},{"ruleId":"1264","severity":1,"message":"1265","line":52,"column":37,"nodeType":"1262","messageId":"1266","endLine":52,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":53,"column":29,"nodeType":"1259","endLine":53,"endColumn":147},{"ruleId":"1264","severity":1,"message":"1265","line":53,"column":37,"nodeType":"1262","messageId":"1266","endLine":53,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":72,"column":29,"nodeType":"1259","endLine":72,"endColumn":137},{"ruleId":"1264","severity":1,"message":"1265","line":72,"column":37,"nodeType":"1262","messageId":"1266","endLine":72,"endColumn":57},{"ruleId":"1283","severity":1,"message":"1284","line":160,"column":17,"nodeType":"1259","endLine":160,"endColumn":126},{"ruleId":"1257","severity":1,"message":"1258","line":160,"column":17,"nodeType":"1259","endLine":160,"endColumn":126},{"ruleId":"1264","severity":1,"message":"1265","line":160,"column":25,"nodeType":"1262","messageId":"1266","endLine":160,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":696,"column":81,"nodeType":"1262","messageId":"1266","endLine":696,"endColumn":102},{"ruleId":"1257","severity":1,"message":"1258","line":847,"column":41,"nodeType":"1259","endLine":851,"endColumn":42},{"ruleId":"1264","severity":1,"message":"1265","line":848,"column":50,"nodeType":"1262","messageId":"1266","endLine":848,"endColumn":70},{"ruleId":"1257","severity":1,"message":"1258","line":881,"column":49,"nodeType":"1259","endLine":881,"endColumn":104},{"ruleId":"1264","severity":1,"message":"1265","line":881,"column":57,"nodeType":"1262","messageId":"1266","endLine":881,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":1056,"column":49,"nodeType":"1259","endLine":1056,"endColumn":104},{"ruleId":"1264","severity":1,"message":"1265","line":1056,"column":57,"nodeType":"1262","messageId":"1266","endLine":1056,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":1089,"column":49,"nodeType":"1259","endLine":1089,"endColumn":104},{"ruleId":"1264","severity":1,"message":"1265","line":1089,"column":57,"nodeType":"1262","messageId":"1266","endLine":1089,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":1229,"column":49,"nodeType":"1259","endLine":1229,"endColumn":104},{"ruleId":"1264","severity":1,"message":"1265","line":1229,"column":57,"nodeType":"1262","messageId":"1266","endLine":1229,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":1255,"column":49,"nodeType":"1259","endLine":1255,"endColumn":145},{"ruleId":"1264","severity":1,"message":"1265","line":1255,"column":57,"nodeType":"1262","messageId":"1266","endLine":1255,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":43,"column":17,"nodeType":"1259","endLine":43,"endColumn":56},{"ruleId":"1264","severity":1,"message":"1265","line":43,"column":25,"nodeType":"1262","messageId":"1266","endLine":43,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":56,"column":13,"nodeType":"1259","endLine":56,"endColumn":59},{"ruleId":"1264","severity":1,"message":"1265","line":56,"column":21,"nodeType":"1262","messageId":"1266","endLine":56,"endColumn":42},{"ruleId":"1283","severity":1,"message":"1284","line":57,"column":13,"nodeType":"1259","endLine":57,"endColumn":63},{"ruleId":"1257","severity":1,"message":"1258","line":57,"column":13,"nodeType":"1259","endLine":57,"endColumn":63},{"ruleId":"1264","severity":1,"message":"1265","line":57,"column":21,"nodeType":"1262","messageId":"1266","endLine":57,"endColumn":42},{"ruleId":"1275","severity":1,"message":"1276","line":57,"column":37,"nodeType":"1259","endLine":57,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":58,"column":37,"nodeType":"1259","endLine":58,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":62,"column":37,"nodeType":"1259","endLine":62,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":63,"column":37,"nodeType":"1259","endLine":63,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":67,"column":37,"nodeType":"1259","endLine":67,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":68,"column":37,"nodeType":"1259","endLine":68,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":72,"column":37,"nodeType":"1259","endLine":72,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":73,"column":37,"nodeType":"1259","endLine":73,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":77,"column":37,"nodeType":"1259","endLine":77,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":78,"column":37,"nodeType":"1259","endLine":78,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":82,"column":37,"nodeType":"1259","endLine":82,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":83,"column":37,"nodeType":"1259","endLine":83,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":63,"column":107,"nodeType":"1259","endLine":63,"endColumn":129},{"ruleId":"1275","severity":1,"message":"1276","line":66,"column":107,"nodeType":"1259","endLine":66,"endColumn":129},{"ruleId":"1275","severity":1,"message":"1276","line":69,"column":107,"nodeType":"1259","endLine":69,"endColumn":129},{"ruleId":"1275","severity":1,"message":"1276","line":72,"column":92,"nodeType":"1259","endLine":72,"endColumn":114},{"ruleId":"1275","severity":1,"message":"1276","line":75,"column":92,"nodeType":"1259","endLine":75,"endColumn":114},{"ruleId":"1275","severity":1,"message":"1276","line":78,"column":92,"nodeType":"1259","endLine":78,"endColumn":114},{"ruleId":"1275","severity":1,"message":"1276","line":59,"column":37,"nodeType":"1259","endLine":59,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":60,"column":37,"nodeType":"1259","endLine":60,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":62,"column":32,"nodeType":"1259","endLine":62,"endColumn":50},{"ruleId":"1275","severity":1,"message":"1276","line":67,"column":37,"nodeType":"1259","endLine":67,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":68,"column":37,"nodeType":"1259","endLine":68,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":81,"column":37,"nodeType":"1259","endLine":81,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":82,"column":37,"nodeType":"1259","endLine":82,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":84,"column":32,"nodeType":"1259","endLine":84,"endColumn":50},{"ruleId":"1275","severity":1,"message":"1276","line":89,"column":37,"nodeType":"1259","endLine":89,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":90,"column":37,"nodeType":"1259","endLine":90,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":103,"column":37,"nodeType":"1259","endLine":103,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":104,"column":37,"nodeType":"1259","endLine":104,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":106,"column":32,"nodeType":"1259","endLine":106,"endColumn":50},{"ruleId":"1275","severity":1,"message":"1276","line":111,"column":37,"nodeType":"1259","endLine":111,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":112,"column":37,"nodeType":"1259","endLine":112,"endColumn":59},{"ruleId":"1267","severity":1,"message":"1268","line":126,"column":28,"nodeType":"1269","messageId":"1270","endLine":126,"endColumn":30},{"ruleId":"1267","severity":1,"message":"1268","line":126,"column":28,"nodeType":"1269","messageId":"1270","endLine":126,"endColumn":30},{"ruleId":"1257","severity":1,"message":"1258","line":332,"column":25,"nodeType":"1259","endLine":332,"endColumn":183},{"ruleId":"1257","severity":1,"message":"1258","line":486,"column":45,"nodeType":"1259","endLine":486,"endColumn":102},{"ruleId":"1264","severity":1,"message":"1265","line":486,"column":53,"nodeType":"1262","messageId":"1266","endLine":486,"endColumn":74},{"ruleId":"1257","severity":1,"message":"1258","line":510,"column":49,"nodeType":"1259","endLine":510,"endColumn":103},{"ruleId":"1264","severity":1,"message":"1265","line":510,"column":57,"nodeType":"1262","messageId":"1266","endLine":510,"endColumn":78},{"ruleId":"1267","severity":1,"message":"1268","line":210,"column":28,"nodeType":"1269","messageId":"1270","endLine":210,"endColumn":30},{"ruleId":"1271","severity":1,"message":"1272","line":268,"column":5,"nodeType":"1273","messageId":"1274","endLine":271,"endColumn":6},{"ruleId":"1257","severity":1,"message":"1258","line":2541,"column":41,"nodeType":"1259","endLine":2546,"endColumn":42},{"ruleId":"1264","severity":1,"message":"1265","line":2542,"column":48,"nodeType":"1262","messageId":"1266","endLine":2542,"endColumn":69},{"ruleId":"1257","severity":1,"message":"1258","line":2549,"column":41,"nodeType":"1259","endLine":2554,"endColumn":42},{"ruleId":"1264","severity":1,"message":"1265","line":2550,"column":48,"nodeType":"1262","messageId":"1266","endLine":2550,"endColumn":69},{"ruleId":"1257","severity":1,"message":"1258","line":2757,"column":41,"nodeType":"1259","endLine":2757,"endColumn":52},{"ruleId":"1257","severity":1,"message":"1258","line":2806,"column":41,"nodeType":"1259","endLine":2806,"endColumn":52},{"ruleId":"1257","severity":1,"message":"1258","line":2860,"column":41,"nodeType":"1259","endLine":2860,"endColumn":52},{"ruleId":"1257","severity":1,"message":"1258","line":2899,"column":33,"nodeType":"1259","endLine":2903,"endColumn":34},{"ruleId":"1264","severity":1,"message":"1265","line":2902,"column":40,"nodeType":"1262","messageId":"1266","endLine":2902,"endColumn":61},{"ruleId":"1257","severity":1,"message":"1258","line":2911,"column":33,"nodeType":"1259","endLine":2914,"endColumn":34},{"ruleId":"1264","severity":1,"message":"1265","line":2912,"column":40,"nodeType":"1262","messageId":"1266","endLine":2912,"endColumn":61},{"ruleId":"1275","severity":1,"message":"1276","line":2926,"column":37,"nodeType":"1259","endLine":2926,"endColumn":68},{"ruleId":"1275","severity":1,"message":"1276","line":2996,"column":39,"nodeType":"1259","endLine":3002,"endColumn":41},{"ruleId":"1275","severity":1,"message":"1276","line":3015,"column":39,"nodeType":"1259","endLine":3021,"endColumn":41},{"ruleId":"1257","severity":1,"message":"1258","line":3043,"column":33,"nodeType":"1259","endLine":3048,"endColumn":34},{"ruleId":"1264","severity":1,"message":"1265","line":3044,"column":40,"nodeType":"1262","messageId":"1266","endLine":3044,"endColumn":61},{"ruleId":"1257","severity":1,"message":"1258","line":3059,"column":33,"nodeType":"1259","endLine":3063,"endColumn":34},{"ruleId":"1264","severity":1,"message":"1265","line":3060,"column":40,"nodeType":"1262","messageId":"1266","endLine":3060,"endColumn":61},{"ruleId":"1257","severity":1,"message":"1258","line":3081,"column":31,"nodeType":"1259","endLine":3088,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3082,"column":38,"nodeType":"1262","messageId":"1266","endLine":3082,"endColumn":58},{"ruleId":"1277","severity":1,"message":"1278","line":3121,"column":37,"nodeType":"1259","messageId":"1279","endLine":3125,"endColumn":38,"fix":"1306"},{"ruleId":"1277","severity":1,"message":"1278","line":3156,"column":43,"nodeType":"1259","messageId":"1279","endLine":3160,"endColumn":44,"fix":"1307"},{"ruleId":"1275","severity":1,"message":"1276","line":3179,"column":45,"nodeType":"1259","endLine":3179,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":3186,"column":45,"nodeType":"1259","endLine":3189,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":3187,"column":52,"nodeType":"1262","messageId":"1266","endLine":3187,"endColumn":73},{"ruleId":"1257","severity":1,"message":"1258","line":3192,"column":45,"nodeType":"1259","endLine":3197,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":3193,"column":52,"nodeType":"1262","messageId":"1266","endLine":3193,"endColumn":73},{"ruleId":"1257","severity":1,"message":"1282","line":3203,"column":45,"nodeType":"1259","endLine":3203,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":3206,"column":45,"nodeType":"1259","endLine":3209,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":3207,"column":52,"nodeType":"1262","messageId":"1266","endLine":3207,"endColumn":73},{"ruleId":"1257","severity":1,"message":"1258","line":3235,"column":31,"nodeType":"1259","endLine":3239,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3236,"column":38,"nodeType":"1262","messageId":"1266","endLine":3236,"endColumn":58},{"ruleId":"1257","severity":1,"message":"1258","line":3245,"column":31,"nodeType":"1259","endLine":3248,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3246,"column":38,"nodeType":"1262","messageId":"1266","endLine":3246,"endColumn":58},{"ruleId":"1257","severity":1,"message":"1258","line":3252,"column":31,"nodeType":"1259","endLine":3255,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3253,"column":38,"nodeType":"1262","messageId":"1266","endLine":3253,"endColumn":58},{"ruleId":"1257","severity":1,"message":"1258","line":3259,"column":31,"nodeType":"1259","endLine":3264,"endColumn":32},{"ruleId":"1264","severity":1,"message":"1265","line":3260,"column":38,"nodeType":"1262","messageId":"1266","endLine":3260,"endColumn":58},{"ruleId":"1257","severity":1,"message":"1258","line":2505,"column":27,"nodeType":"1259","endLine":2509,"endColumn":28},{"ruleId":"1257","severity":1,"message":"1258","line":2524,"column":31,"nodeType":"1259","endLine":2528,"endColumn":32},{"ruleId":"1257","severity":1,"message":"1258","line":2535,"column":31,"nodeType":"1259","endLine":2535,"endColumn":142},{"ruleId":"1257","severity":1,"message":"1258","line":2543,"column":31,"nodeType":"1259","endLine":2543,"endColumn":142},{"ruleId":"1257","severity":1,"message":"1258","line":2580,"column":31,"nodeType":"1259","endLine":2584,"endColumn":32},{"ruleId":"1257","severity":1,"message":"1258","line":2592,"column":31,"nodeType":"1259","endLine":2592,"endColumn":137},{"ruleId":"1257","severity":1,"message":"1258","line":2601,"column":31,"nodeType":"1259","endLine":2601,"endColumn":137},{"ruleId":"1257","severity":1,"message":"1258","line":2680,"column":80,"nodeType":"1259","endLine":2680,"endColumn":118},{"ruleId":"1260","severity":1,"message":"1261","line":2682,"column":56,"nodeType":"1262","messageId":"1263","endLine":2683,"endColumn":89},{"ruleId":"1260","severity":1,"message":"1261","line":2683,"column":95,"nodeType":"1262","messageId":"1263","endLine":2684,"endColumn":39},{"ruleId":"1257","severity":1,"message":"1258","line":2709,"column":27,"nodeType":"1259","endLine":2709,"endColumn":62},{"ruleId":"1257","severity":1,"message":"1258","line":2717,"column":27,"nodeType":"1259","endLine":2717,"endColumn":62},{"ruleId":"1275","severity":1,"message":"1276","line":63,"column":107,"nodeType":"1259","endLine":63,"endColumn":129},{"ruleId":"1275","severity":1,"message":"1276","line":66,"column":107,"nodeType":"1259","endLine":66,"endColumn":129},{"ruleId":"1275","severity":1,"message":"1276","line":69,"column":107,"nodeType":"1259","endLine":69,"endColumn":129},{"ruleId":"1275","severity":1,"message":"1276","line":72,"column":92,"nodeType":"1259","endLine":72,"endColumn":114},{"ruleId":"1275","severity":1,"message":"1276","line":75,"column":92,"nodeType":"1259","endLine":75,"endColumn":114},{"ruleId":"1275","severity":1,"message":"1276","line":78,"column":92,"nodeType":"1259","endLine":78,"endColumn":114},{"ruleId":"1275","severity":1,"message":"1276","line":57,"column":37,"nodeType":"1259","endLine":57,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":58,"column":37,"nodeType":"1259","endLine":58,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":62,"column":37,"nodeType":"1259","endLine":62,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":63,"column":37,"nodeType":"1259","endLine":63,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":67,"column":37,"nodeType":"1259","endLine":67,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":68,"column":37,"nodeType":"1259","endLine":68,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":72,"column":37,"nodeType":"1259","endLine":72,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":73,"column":37,"nodeType":"1259","endLine":73,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":77,"column":37,"nodeType":"1259","endLine":77,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":78,"column":37,"nodeType":"1259","endLine":78,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":82,"column":37,"nodeType":"1259","endLine":82,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":83,"column":37,"nodeType":"1259","endLine":83,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":59,"column":37,"nodeType":"1259","endLine":59,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":60,"column":37,"nodeType":"1259","endLine":60,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":62,"column":32,"nodeType":"1259","endLine":62,"endColumn":50},{"ruleId":"1275","severity":1,"message":"1276","line":67,"column":37,"nodeType":"1259","endLine":67,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":68,"column":37,"nodeType":"1259","endLine":68,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":81,"column":37,"nodeType":"1259","endLine":81,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":82,"column":37,"nodeType":"1259","endLine":82,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":84,"column":32,"nodeType":"1259","endLine":84,"endColumn":50},{"ruleId":"1275","severity":1,"message":"1276","line":89,"column":37,"nodeType":"1259","endLine":89,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":90,"column":37,"nodeType":"1259","endLine":90,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":103,"column":37,"nodeType":"1259","endLine":103,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":104,"column":37,"nodeType":"1259","endLine":104,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":106,"column":32,"nodeType":"1259","endLine":106,"endColumn":50},{"ruleId":"1275","severity":1,"message":"1276","line":111,"column":37,"nodeType":"1259","endLine":111,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":112,"column":37,"nodeType":"1259","endLine":112,"endColumn":59},{"ruleId":"1267","severity":1,"message":"1268","line":91,"column":32,"nodeType":"1269","messageId":"1270","endLine":91,"endColumn":34},{"ruleId":"1290","severity":1,"message":"1291","line":11,"column":5,"nodeType":"1292","messageId":"1293","endLine":13,"endColumn":6},{"ruleId":"1277","severity":1,"message":"1278","line":96,"column":11,"nodeType":"1259","messageId":"1279","endLine":96,"endColumn":81,"fix":"1308"},{"ruleId":"1257","severity":1,"message":"1258","line":132,"column":11,"nodeType":"1259","endLine":137,"endColumn":12},{"ruleId":"1264","severity":1,"message":"1265","line":133,"column":18,"nodeType":"1262","messageId":"1266","endLine":133,"endColumn":39},{"ruleId":"1257","severity":1,"message":"1258","line":152,"column":15,"nodeType":"1259","endLine":152,"endColumn":63},{"ruleId":"1264","severity":1,"message":"1265","line":152,"column":23,"nodeType":"1262","messageId":"1266","endLine":152,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":161,"column":15,"nodeType":"1259","endLine":161,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":161,"column":23,"nodeType":"1262","messageId":"1266","endLine":161,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":170,"column":15,"nodeType":"1259","endLine":170,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":170,"column":23,"nodeType":"1262","messageId":"1266","endLine":170,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":179,"column":15,"nodeType":"1259","endLine":179,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":179,"column":23,"nodeType":"1262","messageId":"1266","endLine":179,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":188,"column":15,"nodeType":"1259","endLine":188,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":188,"column":23,"nodeType":"1262","messageId":"1266","endLine":188,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":197,"column":15,"nodeType":"1259","endLine":197,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":197,"column":23,"nodeType":"1262","messageId":"1266","endLine":197,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":206,"column":15,"nodeType":"1259","endLine":206,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":206,"column":23,"nodeType":"1262","messageId":"1266","endLine":206,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":215,"column":15,"nodeType":"1259","endLine":215,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":215,"column":23,"nodeType":"1262","messageId":"1266","endLine":215,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":224,"column":15,"nodeType":"1259","endLine":224,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":224,"column":23,"nodeType":"1262","messageId":"1266","endLine":224,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":233,"column":15,"nodeType":"1259","endLine":233,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":233,"column":23,"nodeType":"1262","messageId":"1266","endLine":233,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":242,"column":15,"nodeType":"1259","endLine":242,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":242,"column":23,"nodeType":"1262","messageId":"1266","endLine":242,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":251,"column":15,"nodeType":"1259","endLine":251,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":251,"column":23,"nodeType":"1262","messageId":"1266","endLine":251,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":260,"column":15,"nodeType":"1259","endLine":260,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":260,"column":23,"nodeType":"1262","messageId":"1266","endLine":260,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":269,"column":15,"nodeType":"1259","endLine":269,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":269,"column":23,"nodeType":"1262","messageId":"1266","endLine":269,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":278,"column":15,"nodeType":"1259","endLine":278,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":278,"column":23,"nodeType":"1262","messageId":"1266","endLine":278,"endColumn":43},{"ruleId":"1257","severity":1,"message":"1258","line":287,"column":15,"nodeType":"1259","endLine":287,"endColumn":44},{"ruleId":"1264","severity":1,"message":"1265","line":287,"column":23,"nodeType":"1262","messageId":"1266","endLine":287,"endColumn":43},{"ruleId":"1275","severity":1,"message":"1276","line":63,"column":65,"nodeType":"1259","endLine":63,"endColumn":155},{"ruleId":"1283","severity":1,"message":"1284","line":68,"column":53,"nodeType":"1259","endLine":68,"endColumn":149},{"ruleId":"1257","severity":1,"message":"1258","line":68,"column":53,"nodeType":"1259","endLine":68,"endColumn":149},{"ruleId":"1264","severity":1,"message":"1265","line":68,"column":61,"nodeType":"1262","messageId":"1266","endLine":68,"endColumn":82},{"ruleId":"1283","severity":1,"message":"1284","line":79,"column":37,"nodeType":"1259","endLine":79,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":79,"column":37,"nodeType":"1259","endLine":79,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":79,"column":45,"nodeType":"1262","messageId":"1266","endLine":79,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":86,"column":37,"nodeType":"1259","endLine":86,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":86,"column":37,"nodeType":"1259","endLine":86,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":86,"column":45,"nodeType":"1262","messageId":"1266","endLine":86,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":93,"column":37,"nodeType":"1259","endLine":93,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":93,"column":37,"nodeType":"1259","endLine":93,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":93,"column":45,"nodeType":"1262","messageId":"1266","endLine":93,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":100,"column":37,"nodeType":"1259","endLine":100,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":100,"column":37,"nodeType":"1259","endLine":100,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":100,"column":45,"nodeType":"1262","messageId":"1266","endLine":100,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":107,"column":37,"nodeType":"1259","endLine":107,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":107,"column":37,"nodeType":"1259","endLine":107,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":107,"column":45,"nodeType":"1262","messageId":"1266","endLine":107,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":114,"column":37,"nodeType":"1259","endLine":114,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":114,"column":37,"nodeType":"1259","endLine":114,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":114,"column":45,"nodeType":"1262","messageId":"1266","endLine":114,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":121,"column":37,"nodeType":"1259","endLine":121,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":121,"column":37,"nodeType":"1259","endLine":121,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":121,"column":45,"nodeType":"1262","messageId":"1266","endLine":121,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":128,"column":37,"nodeType":"1259","endLine":128,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":128,"column":37,"nodeType":"1259","endLine":128,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":128,"column":45,"nodeType":"1262","messageId":"1266","endLine":128,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":135,"column":37,"nodeType":"1259","endLine":135,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":135,"column":37,"nodeType":"1259","endLine":135,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":135,"column":45,"nodeType":"1262","messageId":"1266","endLine":135,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":142,"column":37,"nodeType":"1259","endLine":142,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":142,"column":37,"nodeType":"1259","endLine":142,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":142,"column":45,"nodeType":"1262","messageId":"1266","endLine":142,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":149,"column":37,"nodeType":"1259","endLine":149,"endColumn":89},{"ruleId":"1257","severity":1,"message":"1258","line":149,"column":37,"nodeType":"1259","endLine":149,"endColumn":89},{"ruleId":"1264","severity":1,"message":"1265","line":149,"column":45,"nodeType":"1262","messageId":"1266","endLine":149,"endColumn":66},{"ruleId":"1283","severity":1,"message":"1284","line":156,"column":17,"nodeType":"1259","endLine":156,"endColumn":70},{"ruleId":"1257","severity":1,"message":"1258","line":156,"column":17,"nodeType":"1259","endLine":156,"endColumn":70},{"ruleId":"1264","severity":1,"message":"1265","line":156,"column":25,"nodeType":"1262","messageId":"1266","endLine":156,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":69,"column":17,"nodeType":"1259","endLine":72,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":70,"column":24,"nodeType":"1262","messageId":"1266","endLine":70,"endColumn":45},{"ruleId":"1257","severity":1,"message":"1258","line":92,"column":17,"nodeType":"1259","endLine":92,"endColumn":29},{"ruleId":"1257","severity":1,"message":"1258","line":95,"column":17,"nodeType":"1259","endLine":102,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":96,"column":24,"nodeType":"1262","messageId":"1266","endLine":96,"endColumn":45},{"ruleId":"1257","severity":1,"message":"1258","line":106,"column":19,"nodeType":"1259","endLine":112,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":107,"column":26,"nodeType":"1262","messageId":"1266","endLine":107,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":115,"column":19,"nodeType":"1259","endLine":121,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":116,"column":26,"nodeType":"1262","messageId":"1266","endLine":116,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":124,"column":19,"nodeType":"1259","endLine":130,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":125,"column":26,"nodeType":"1262","messageId":"1266","endLine":125,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":133,"column":19,"nodeType":"1259","endLine":139,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":134,"column":26,"nodeType":"1262","messageId":"1266","endLine":134,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":142,"column":19,"nodeType":"1259","endLine":147,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":143,"column":26,"nodeType":"1262","messageId":"1266","endLine":143,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":150,"column":19,"nodeType":"1259","endLine":156,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":151,"column":26,"nodeType":"1262","messageId":"1266","endLine":151,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":159,"column":19,"nodeType":"1259","endLine":159,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":159,"column":27,"nodeType":"1262","messageId":"1266","endLine":159,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":160,"column":19,"nodeType":"1259","endLine":160,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":160,"column":27,"nodeType":"1262","messageId":"1266","endLine":160,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":164,"column":17,"nodeType":"1259","endLine":171,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":165,"column":24,"nodeType":"1262","messageId":"1266","endLine":165,"endColumn":45},{"ruleId":"1277","severity":1,"message":"1278","line":176,"column":19,"nodeType":"1259","messageId":"1279","endLine":179,"endColumn":20,"fix":"1309"},{"ruleId":"1277","severity":1,"message":"1278","line":185,"column":19,"nodeType":"1259","messageId":"1279","endLine":188,"endColumn":20,"fix":"1310"},{"ruleId":"1257","severity":1,"message":"1258","line":211,"column":17,"nodeType":"1259","endLine":218,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":212,"column":24,"nodeType":"1262","messageId":"1266","endLine":212,"endColumn":45},{"ruleId":"1277","severity":1,"message":"1278","line":223,"column":19,"nodeType":"1259","messageId":"1279","endLine":223,"endColumn":77,"fix":"1311"},{"ruleId":"1277","severity":1,"message":"1278","line":226,"column":19,"nodeType":"1259","messageId":"1279","endLine":226,"endColumn":77,"fix":"1312"},{"ruleId":"1257","severity":1,"message":"1258","line":232,"column":17,"nodeType":"1259","endLine":239,"endColumn":18},{"ruleId":"1264","severity":1,"message":"1265","line":233,"column":24,"nodeType":"1262","messageId":"1266","endLine":233,"endColumn":45},{"ruleId":"1257","severity":1,"message":"1258","line":243,"column":19,"nodeType":"1259","endLine":248,"endColumn":20},{"ruleId":"1264","severity":1,"message":"1265","line":244,"column":26,"nodeType":"1262","messageId":"1266","endLine":244,"endColumn":47},{"ruleId":"1257","severity":1,"message":"1258","line":251,"column":19,"nodeType":"1259","endLine":251,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":251,"column":27,"nodeType":"1262","messageId":"1266","endLine":251,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":252,"column":19,"nodeType":"1259","endLine":252,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":252,"column":27,"nodeType":"1262","messageId":"1266","endLine":252,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":253,"column":19,"nodeType":"1259","endLine":253,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":253,"column":27,"nodeType":"1262","messageId":"1266","endLine":253,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":255,"column":21,"nodeType":"1259","endLine":262,"endColumn":22},{"ruleId":"1264","severity":1,"message":"1265","line":256,"column":28,"nodeType":"1262","messageId":"1266","endLine":256,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":273,"column":17,"nodeType":"1259","endLine":273,"endColumn":47},{"ruleId":"1264","severity":1,"message":"1265","line":273,"column":25,"nodeType":"1262","messageId":"1266","endLine":273,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":290,"column":19,"nodeType":"1259","endLine":290,"endColumn":49},{"ruleId":"1264","severity":1,"message":"1265","line":290,"column":27,"nodeType":"1262","messageId":"1266","endLine":290,"endColumn":48},{"ruleId":"1257","severity":1,"message":"1258","line":43,"column":17,"nodeType":"1259","endLine":43,"endColumn":56},{"ruleId":"1264","severity":1,"message":"1265","line":43,"column":25,"nodeType":"1262","messageId":"1266","endLine":43,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":56,"column":13,"nodeType":"1259","endLine":56,"endColumn":59},{"ruleId":"1264","severity":1,"message":"1265","line":56,"column":21,"nodeType":"1262","messageId":"1266","endLine":56,"endColumn":42},{"ruleId":"1283","severity":1,"message":"1284","line":57,"column":13,"nodeType":"1259","endLine":57,"endColumn":63},{"ruleId":"1257","severity":1,"message":"1258","line":57,"column":13,"nodeType":"1259","endLine":57,"endColumn":63},{"ruleId":"1264","severity":1,"message":"1265","line":57,"column":21,"nodeType":"1262","messageId":"1266","endLine":57,"endColumn":42},{"ruleId":"1257","severity":1,"message":"1258","line":188,"column":21,"nodeType":"1259","endLine":188,"endColumn":103},{"ruleId":"1264","severity":1,"message":"1265","line":188,"column":29,"nodeType":"1262","messageId":"1266","endLine":188,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":28,"column":57,"nodeType":"1259","endLine":28,"endColumn":87},{"ruleId":"1264","severity":1,"message":"1265","line":28,"column":65,"nodeType":"1262","messageId":"1266","endLine":28,"endColumn":86},{"ruleId":"1283","severity":1,"message":"1284","line":38,"column":33,"nodeType":"1259","endLine":38,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":38,"column":33,"nodeType":"1259","endLine":38,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":38,"column":41,"nodeType":"1262","messageId":"1266","endLine":38,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":44,"column":33,"nodeType":"1259","endLine":44,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":44,"column":33,"nodeType":"1259","endLine":44,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":44,"column":41,"nodeType":"1262","messageId":"1266","endLine":44,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":50,"column":33,"nodeType":"1259","endLine":50,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":50,"column":33,"nodeType":"1259","endLine":50,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":50,"column":41,"nodeType":"1262","messageId":"1266","endLine":50,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":56,"column":33,"nodeType":"1259","endLine":56,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":56,"column":33,"nodeType":"1259","endLine":56,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":56,"column":41,"nodeType":"1262","messageId":"1266","endLine":56,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":62,"column":33,"nodeType":"1259","endLine":62,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":62,"column":33,"nodeType":"1259","endLine":62,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":62,"column":41,"nodeType":"1262","messageId":"1266","endLine":62,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":68,"column":33,"nodeType":"1259","endLine":68,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":68,"column":33,"nodeType":"1259","endLine":68,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":68,"column":41,"nodeType":"1262","messageId":"1266","endLine":68,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":74,"column":33,"nodeType":"1259","endLine":74,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":74,"column":33,"nodeType":"1259","endLine":74,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":74,"column":41,"nodeType":"1262","messageId":"1266","endLine":74,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":80,"column":33,"nodeType":"1259","endLine":80,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":80,"column":33,"nodeType":"1259","endLine":80,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":80,"column":41,"nodeType":"1262","messageId":"1266","endLine":80,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":86,"column":33,"nodeType":"1259","endLine":86,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":86,"column":33,"nodeType":"1259","endLine":86,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":86,"column":41,"nodeType":"1262","messageId":"1266","endLine":86,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":92,"column":33,"nodeType":"1259","endLine":92,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":92,"column":33,"nodeType":"1259","endLine":92,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":92,"column":41,"nodeType":"1262","messageId":"1266","endLine":92,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":98,"column":33,"nodeType":"1259","endLine":98,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":98,"column":33,"nodeType":"1259","endLine":98,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":98,"column":41,"nodeType":"1262","messageId":"1266","endLine":98,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":104,"column":33,"nodeType":"1259","endLine":104,"endColumn":85},{"ruleId":"1257","severity":1,"message":"1258","line":104,"column":33,"nodeType":"1259","endLine":104,"endColumn":85},{"ruleId":"1264","severity":1,"message":"1265","line":104,"column":41,"nodeType":"1262","messageId":"1266","endLine":104,"endColumn":62},{"ruleId":"1283","severity":1,"message":"1284","line":109,"column":17,"nodeType":"1259","endLine":109,"endColumn":70},{"ruleId":"1257","severity":1,"message":"1258","line":109,"column":17,"nodeType":"1259","endLine":109,"endColumn":70},{"ruleId":"1264","severity":1,"message":"1265","line":109,"column":25,"nodeType":"1262","messageId":"1266","endLine":109,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":203,"column":29,"nodeType":"1259","endLine":203,"endColumn":137},{"ruleId":"1264","severity":1,"message":"1265","line":203,"column":37,"nodeType":"1262","messageId":"1266","endLine":203,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":204,"column":29,"nodeType":"1259","endLine":204,"endColumn":148},{"ruleId":"1264","severity":1,"message":"1265","line":204,"column":37,"nodeType":"1262","messageId":"1266","endLine":204,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":233,"column":29,"nodeType":"1259","endLine":233,"endColumn":138},{"ruleId":"1264","severity":1,"message":"1265","line":233,"column":37,"nodeType":"1262","messageId":"1266","endLine":233,"endColumn":57},{"ruleId":"1283","severity":1,"message":"1284","line":264,"column":17,"nodeType":"1259","endLine":264,"endColumn":128},{"ruleId":"1257","severity":1,"message":"1258","line":264,"column":17,"nodeType":"1259","endLine":264,"endColumn":128},{"ruleId":"1264","severity":1,"message":"1265","line":264,"column":25,"nodeType":"1262","messageId":"1266","endLine":264,"endColumn":46},{"ruleId":"1283","severity":1,"message":"1284","line":66,"column":17,"nodeType":"1259","endLine":66,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":66,"column":17,"nodeType":"1259","endLine":66,"endColumn":129},{"ruleId":"1264","severity":1,"message":"1265","line":66,"column":25,"nodeType":"1262","messageId":"1266","endLine":66,"endColumn":46},{"ruleId":"1283","severity":1,"message":"1284","line":111,"column":17,"nodeType":"1259","endLine":111,"endColumn":133},{"ruleId":"1257","severity":1,"message":"1258","line":111,"column":17,"nodeType":"1259","endLine":111,"endColumn":133},{"ruleId":"1264","severity":1,"message":"1265","line":111,"column":25,"nodeType":"1262","messageId":"1266","endLine":111,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":52,"column":29,"nodeType":"1259","endLine":52,"endColumn":136},{"ruleId":"1264","severity":1,"message":"1265","line":52,"column":37,"nodeType":"1262","messageId":"1266","endLine":52,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":54,"column":29,"nodeType":"1259","endLine":54,"endColumn":147},{"ruleId":"1264","severity":1,"message":"1265","line":54,"column":37,"nodeType":"1262","messageId":"1266","endLine":54,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":55,"column":29,"nodeType":"1259","endLine":55,"endColumn":147},{"ruleId":"1264","severity":1,"message":"1265","line":55,"column":37,"nodeType":"1262","messageId":"1266","endLine":55,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":64,"column":29,"nodeType":"1259","endLine":64,"endColumn":136},{"ruleId":"1264","severity":1,"message":"1265","line":64,"column":37,"nodeType":"1262","messageId":"1266","endLine":64,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":81,"column":29,"nodeType":"1259","endLine":81,"endColumn":136},{"ruleId":"1264","severity":1,"message":"1265","line":81,"column":37,"nodeType":"1262","messageId":"1266","endLine":81,"endColumn":57},{"ruleId":"1283","severity":1,"message":"1284","line":94,"column":17,"nodeType":"1259","endLine":94,"endColumn":126},{"ruleId":"1257","severity":1,"message":"1258","line":94,"column":17,"nodeType":"1259","endLine":94,"endColumn":126},{"ruleId":"1264","severity":1,"message":"1265","line":94,"column":25,"nodeType":"1262","messageId":"1266","endLine":94,"endColumn":46},{"ruleId":"1283","severity":1,"message":"1284","line":48,"column":17,"nodeType":"1259","endLine":48,"endColumn":135},{"ruleId":"1257","severity":1,"message":"1258","line":48,"column":17,"nodeType":"1259","endLine":48,"endColumn":135},{"ruleId":"1264","severity":1,"message":"1265","line":48,"column":25,"nodeType":"1262","messageId":"1266","endLine":48,"endColumn":46},{"ruleId":"1277","severity":1,"message":"1278","line":19,"column":21,"nodeType":"1259","messageId":"1279","endLine":19,"endColumn":93,"fix":"1313"},{"ruleId":"1277","severity":1,"message":"1278","line":35,"column":33,"nodeType":"1259","messageId":"1279","endLine":35,"endColumn":108,"fix":"1314"},{"ruleId":"1275","severity":1,"message":"1276","line":51,"column":37,"nodeType":"1259","endLine":51,"endColumn":69},{"ruleId":"1257","severity":1,"message":"1282","line":61,"column":37,"nodeType":"1259","endLine":61,"endColumn":69},{"ruleId":"1257","severity":1,"message":"1282","line":64,"column":41,"nodeType":"1259","endLine":64,"endColumn":73},{"ruleId":"1257","severity":1,"message":"1258","line":67,"column":45,"nodeType":"1259","endLine":70,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":68,"column":54,"nodeType":"1262","messageId":"1266","endLine":68,"endColumn":75},{"ruleId":"1257","severity":1,"message":"1258","line":73,"column":45,"nodeType":"1259","endLine":78,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":74,"column":54,"nodeType":"1262","messageId":"1266","endLine":74,"endColumn":75},{"ruleId":"1257","severity":1,"message":"1258","line":52,"column":29,"nodeType":"1259","endLine":52,"endColumn":136},{"ruleId":"1264","severity":1,"message":"1265","line":52,"column":37,"nodeType":"1262","messageId":"1266","endLine":52,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":53,"column":29,"nodeType":"1259","endLine":53,"endColumn":147},{"ruleId":"1264","severity":1,"message":"1265","line":53,"column":37,"nodeType":"1262","messageId":"1266","endLine":53,"endColumn":57},{"ruleId":"1257","severity":1,"message":"1258","line":72,"column":29,"nodeType":"1259","endLine":72,"endColumn":137},{"ruleId":"1264","severity":1,"message":"1265","line":72,"column":37,"nodeType":"1262","messageId":"1266","endLine":72,"endColumn":57},{"ruleId":"1283","severity":1,"message":"1284","line":160,"column":17,"nodeType":"1259","endLine":160,"endColumn":126},{"ruleId":"1257","severity":1,"message":"1258","line":160,"column":17,"nodeType":"1259","endLine":160,"endColumn":126},{"ruleId":"1264","severity":1,"message":"1265","line":160,"column":25,"nodeType":"1262","messageId":"1266","endLine":160,"endColumn":46},{"ruleId":"1257","severity":1,"message":"1258","line":52,"column":25,"nodeType":"1259","endLine":52,"endColumn":129},{"ruleId":"1264","severity":1,"message":"1265","line":52,"column":33,"nodeType":"1262","messageId":"1266","endLine":52,"endColumn":53},{"ruleId":"1257","severity":1,"message":"1258","line":53,"column":25,"nodeType":"1259","endLine":53,"endColumn":129},{"ruleId":"1264","severity":1,"message":"1265","line":53,"column":33,"nodeType":"1262","messageId":"1266","endLine":53,"endColumn":53},{"ruleId":"1257","severity":1,"message":"1258","line":54,"column":25,"nodeType":"1259","endLine":54,"endColumn":129},{"ruleId":"1264","severity":1,"message":"1265","line":54,"column":33,"nodeType":"1262","messageId":"1266","endLine":54,"endColumn":53},{"ruleId":"1283","severity":1,"message":"1284","line":88,"column":17,"nodeType":"1259","endLine":88,"endColumn":126},{"ruleId":"1257","severity":1,"message":"1258","line":88,"column":17,"nodeType":"1259","endLine":88,"endColumn":126},{"ruleId":"1264","severity":1,"message":"1265","line":88,"column":25,"nodeType":"1262","messageId":"1266","endLine":88,"endColumn":46},{"ruleId":"1277","severity":1,"message":"1278","line":55,"column":76,"nodeType":"1259","messageId":"1279","endLine":55,"endColumn":149,"fix":"1315"},{"ruleId":"1283","severity":1,"message":"1284","line":55,"column":76,"nodeType":"1259","endLine":55,"endColumn":149},{"ruleId":"1275","severity":1,"message":"1276","line":58,"column":72,"nodeType":"1259","endLine":58,"endColumn":264},{"ruleId":"1277","severity":1,"message":"1278","line":64,"column":76,"nodeType":"1259","messageId":"1279","endLine":64,"endColumn":151,"fix":"1316"},{"ruleId":"1283","severity":1,"message":"1284","line":64,"column":76,"nodeType":"1259","endLine":64,"endColumn":151},{"ruleId":"1275","severity":1,"message":"1276","line":67,"column":72,"nodeType":"1259","endLine":67,"endColumn":264},{"ruleId":"1277","severity":1,"message":"1278","line":73,"column":76,"nodeType":"1259","messageId":"1279","endLine":73,"endColumn":150,"fix":"1317"},{"ruleId":"1283","severity":1,"message":"1284","line":73,"column":76,"nodeType":"1259","endLine":73,"endColumn":150},{"ruleId":"1275","severity":1,"message":"1276","line":76,"column":72,"nodeType":"1259","endLine":76,"endColumn":264},{"ruleId":"1277","severity":1,"message":"1278","line":83,"column":76,"nodeType":"1259","messageId":"1279","endLine":83,"endColumn":149,"fix":"1318"},{"ruleId":"1283","severity":1,"message":"1284","line":83,"column":76,"nodeType":"1259","endLine":83,"endColumn":149},{"ruleId":"1275","severity":1,"message":"1276","line":86,"column":72,"nodeType":"1259","endLine":86,"endColumn":264},{"ruleId":"1277","severity":1,"message":"1278","line":92,"column":76,"nodeType":"1259","messageId":"1279","endLine":92,"endColumn":165,"fix":"1319"},{"ruleId":"1283","severity":1,"message":"1284","line":92,"column":76,"nodeType":"1259","endLine":92,"endColumn":165},{"ruleId":"1275","severity":1,"message":"1276","line":95,"column":72,"nodeType":"1259","endLine":95,"endColumn":286},{"ruleId":"1277","severity":1,"message":"1278","line":101,"column":76,"nodeType":"1259","messageId":"1279","endLine":101,"endColumn":175,"fix":"1320"},{"ruleId":"1283","severity":1,"message":"1284","line":101,"column":76,"nodeType":"1259","endLine":101,"endColumn":175},{"ruleId":"1275","severity":1,"message":"1276","line":104,"column":72,"nodeType":"1259","endLine":104,"endColumn":276},{"ruleId":"1277","severity":1,"message":"1278","line":110,"column":76,"nodeType":"1259","messageId":"1279","endLine":110,"endColumn":166,"fix":"1321"},{"ruleId":"1283","severity":1,"message":"1284","line":110,"column":76,"nodeType":"1259","endLine":110,"endColumn":166},{"ruleId":"1277","severity":1,"message":"1278","line":118,"column":76,"nodeType":"1259","messageId":"1279","endLine":118,"endColumn":170,"fix":"1322"},{"ruleId":"1283","severity":1,"message":"1284","line":118,"column":76,"nodeType":"1259","endLine":118,"endColumn":170},{"ruleId":"1275","severity":1,"message":"1276","line":121,"column":72,"nodeType":"1259","endLine":121,"endColumn":256},{"ruleId":"1277","severity":1,"message":"1278","line":182,"column":76,"nodeType":"1259","messageId":"1279","endLine":182,"endColumn":178,"fix":"1323"},{"ruleId":"1283","severity":1,"message":"1284","line":182,"column":76,"nodeType":"1259","endLine":182,"endColumn":178},{"ruleId":"1277","severity":1,"message":"1278","line":191,"column":76,"nodeType":"1259","messageId":"1279","endLine":191,"endColumn":168,"fix":"1324"},{"ruleId":"1283","severity":1,"message":"1284","line":191,"column":76,"nodeType":"1259","endLine":191,"endColumn":168},{"ruleId":"1283","severity":1,"message":"1284","line":220,"column":76,"nodeType":"1259","endLine":220,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":220,"column":76,"nodeType":"1259","endLine":220,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":230,"column":76,"nodeType":"1259","endLine":230,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":230,"column":76,"nodeType":"1259","endLine":230,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":239,"column":76,"nodeType":"1259","endLine":239,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":239,"column":76,"nodeType":"1259","endLine":239,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":248,"column":76,"nodeType":"1259","endLine":248,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":248,"column":76,"nodeType":"1259","endLine":248,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":266,"column":76,"nodeType":"1259","endLine":266,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":266,"column":76,"nodeType":"1259","endLine":266,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":275,"column":76,"nodeType":"1259","endLine":275,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":275,"column":76,"nodeType":"1259","endLine":275,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":284,"column":76,"nodeType":"1259","endLine":284,"endColumn":129},{"ruleId":"1257","severity":1,"message":"1258","line":284,"column":76,"nodeType":"1259","endLine":284,"endColumn":129},{"ruleId":"1283","severity":1,"message":"1284","line":370,"column":17,"nodeType":"1259","endLine":370,"endColumn":121},{"ruleId":"1257","severity":1,"message":"1258","line":370,"column":17,"nodeType":"1259","endLine":370,"endColumn":121},{"ruleId":"1264","severity":1,"message":"1265","line":370,"column":25,"nodeType":"1262","messageId":"1266","endLine":370,"endColumn":46},{"ruleId":"1264","severity":1,"message":"1265","line":696,"column":81,"nodeType":"1262","messageId":"1266","endLine":696,"endColumn":102},{"ruleId":"1257","severity":1,"message":"1258","line":847,"column":41,"nodeType":"1259","endLine":851,"endColumn":42},{"ruleId":"1264","severity":1,"message":"1265","line":848,"column":50,"nodeType":"1262","messageId":"1266","endLine":848,"endColumn":70},{"ruleId":"1257","severity":1,"message":"1258","line":881,"column":49,"nodeType":"1259","endLine":881,"endColumn":104},{"ruleId":"1264","severity":1,"message":"1265","line":881,"column":57,"nodeType":"1262","messageId":"1266","endLine":881,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":1056,"column":49,"nodeType":"1259","endLine":1056,"endColumn":104},{"ruleId":"1264","severity":1,"message":"1265","line":1056,"column":57,"nodeType":"1262","messageId":"1266","endLine":1056,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":1089,"column":49,"nodeType":"1259","endLine":1089,"endColumn":104},{"ruleId":"1264","severity":1,"message":"1265","line":1089,"column":57,"nodeType":"1262","messageId":"1266","endLine":1089,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":1229,"column":49,"nodeType":"1259","endLine":1229,"endColumn":104},{"ruleId":"1264","severity":1,"message":"1265","line":1229,"column":57,"nodeType":"1262","messageId":"1266","endLine":1229,"endColumn":77},{"ruleId":"1257","severity":1,"message":"1258","line":1255,"column":49,"nodeType":"1259","endLine":1255,"endColumn":145},{"ruleId":"1264","severity":1,"message":"1265","line":1255,"column":57,"nodeType":"1262","messageId":"1266","endLine":1255,"endColumn":77},{"ruleId":"1275","severity":1,"message":"1276","line":60,"column":39,"nodeType":"1259","endLine":60,"endColumn":61},{"ruleId":"1275","severity":1,"message":"1276","line":65,"column":37,"nodeType":"1259","endLine":65,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":70,"column":37,"nodeType":"1259","endLine":70,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":62,"column":38,"nodeType":"1259","endLine":62,"endColumn":59},{"ruleId":"1257","severity":1,"message":"1258","line":66,"column":29,"nodeType":"1259","endLine":66,"endColumn":41},{"ruleId":"1257","severity":1,"message":"1258","line":66,"column":63,"nodeType":"1259","endLine":66,"endColumn":75},{"ruleId":"1275","severity":1,"message":"1276","line":70,"column":38,"nodeType":"1259","endLine":70,"endColumn":59},{"ruleId":"1257","severity":1,"message":"1258","line":73,"column":29,"nodeType":"1259","endLine":73,"endColumn":41},{"ruleId":"1257","severity":1,"message":"1258","line":73,"column":57,"nodeType":"1259","endLine":73,"endColumn":69},{"ruleId":"1275","severity":1,"message":"1276","line":77,"column":38,"nodeType":"1259","endLine":77,"endColumn":59},{"ruleId":"1257","severity":1,"message":"1258","line":80,"column":29,"nodeType":"1259","endLine":80,"endColumn":41},{"ruleId":"1257","severity":1,"message":"1258","line":80,"column":57,"nodeType":"1259","endLine":80,"endColumn":69},{"ruleId":"1275","severity":1,"message":"1276","line":62,"column":38,"nodeType":"1259","endLine":62,"endColumn":59},{"ruleId":"1257","severity":1,"message":"1258","line":66,"column":29,"nodeType":"1259","endLine":66,"endColumn":41},{"ruleId":"1257","severity":1,"message":"1258","line":66,"column":63,"nodeType":"1259","endLine":66,"endColumn":75},{"ruleId":"1275","severity":1,"message":"1276","line":70,"column":38,"nodeType":"1259","endLine":70,"endColumn":59},{"ruleId":"1257","severity":1,"message":"1258","line":73,"column":29,"nodeType":"1259","endLine":73,"endColumn":41},{"ruleId":"1257","severity":1,"message":"1258","line":73,"column":57,"nodeType":"1259","endLine":73,"endColumn":69},{"ruleId":"1275","severity":1,"message":"1276","line":77,"column":38,"nodeType":"1259","endLine":77,"endColumn":59},{"ruleId":"1257","severity":1,"message":"1258","line":80,"column":29,"nodeType":"1259","endLine":80,"endColumn":41},{"ruleId":"1257","severity":1,"message":"1258","line":80,"column":57,"nodeType":"1259","endLine":80,"endColumn":69},{"ruleId":"1275","severity":1,"message":"1276","line":60,"column":39,"nodeType":"1259","endLine":60,"endColumn":61},{"ruleId":"1275","severity":1,"message":"1276","line":65,"column":37,"nodeType":"1259","endLine":65,"endColumn":59},{"ruleId":"1275","severity":1,"message":"1276","line":70,"column":37,"nodeType":"1259","endLine":70,"endColumn":59},"no-native-reassign",["1325"],"no-negated-in-lhs",["1326"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1327","text":"1328"},{"range":"1329","text":"1328"},"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",{"range":"1330","text":"1328"},{"range":"1331","text":"1328"},{"range":"1332","text":"1328"},{"range":"1333","text":"1328"},{"range":"1334","text":"1328"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",{"range":"1335","text":"1328"},{"range":"1336","text":"1328"},{"range":"1337","text":"1328"},{"range":"1338","text":"1328"},{"range":"1339","text":"1328"},{"range":"1340","text":"1328"},{"range":"1341","text":"1328"},{"range":"1342","text":"1328"},{"range":"1343","text":"1328"},{"range":"1344","text":"1328"},{"range":"1345","text":"1328"},{"range":"1346","text":"1328"},{"range":"1347","text":"1328"},{"range":"1348","text":"1328"},{"range":"1349","text":"1328"},{"range":"1350","text":"1328"},{"range":"1351","text":"1328"},{"range":"1352","text":"1328"},{"range":"1353","text":"1328"},{"range":"1354","text":"1328"},{"range":"1355","text":"1328"},{"range":"1356","text":"1328"},{"range":"1357","text":"1328"},{"range":"1358","text":"1328"},{"range":"1359","text":"1328"},{"range":"1360","text":"1328"},{"range":"1361","text":"1328"},{"range":"1362","text":"1328"},{"range":"1363","text":"1328"},{"range":"1364","text":"1328"},{"range":"1365","text":"1328"},"no-global-assign","no-unsafe-negation",[148977,148977]," rel=\"noreferrer\"",[151191,151191],[3012,3012],[6443,6443],[6879,6879],[8875,8875],[9040,9040],[2418,2418],[3429,3429],[4446,4446],[5511,5511],[6527,6527],[7703,7703],[8861,8861],[9752,9752],[17032,17032],[17993,17993],[1088,1088],[2275,2275],[148977,148977],[151191,151191],[3012,3012],[6443,6443],[6879,6879],[8875,8875],[9040,9040],[1088,1088],[2275,2275],[2418,2418],[3429,3429],[4446,4446],[5511,5511],[6527,6527],[7703,7703],[8861,8861],[9752,9752],[17032,17032],[17993,17993]]