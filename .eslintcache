[{"D:\\React\\SmartSwap_frontend\\src\\index.js":"1","D:\\React\\SmartSwap_frontend\\src\\reportWebVitals.js":"2","D:\\React\\SmartSwap_frontend\\src\\App.js":"3","D:\\React\\SmartSwap_frontend\\src\\pages\\ownLicence.js":"4","D:\\React\\SmartSwap_frontend\\src\\pages\\ownLicence02.js":"5","D:\\React\\SmartSwap_frontend\\src\\pages\\smartSwapLicence.js":"6","D:\\React\\SmartSwap_frontend\\src\\pages\\projects.js":"7","D:\\React\\SmartSwap_frontend\\src\\pages\\home.js":"8","D:\\React\\SmartSwap_frontend\\src\\pages\\extension.js":"9","D:\\React\\SmartSwap_frontend\\src\\config\\web3Config.js":"10","D:\\React\\SmartSwap_frontend\\src\\config\\notificationConfig.js":"11","D:\\React\\SmartSwap_frontend\\src\\components\\CreateLicense.js":"12","D:\\React\\SmartSwap_frontend\\src\\components\\CoinPopup.js":"13","D:\\React\\SmartSwap_frontend\\src\\components\\Deposit-withdraw.js":"14","D:\\React\\SmartSwap_frontend\\src\\constants.js":"15","D:\\React\\SmartSwap_frontend\\src\\components\\SidePopup.js":"16","D:\\React\\SmartSwap_frontend\\src\\components\\withdraw_token.js":"17","D:\\React\\SmartSwap_frontend\\src\\helper\\reimbursementContract.js":"18","D:\\React\\SmartSwap_frontend\\src\\components\\Header.js":"19","D:\\React\\SmartSwap_frontend\\src\\components\\WalletPopup.js":"20","D:\\React\\SmartSwap_frontend\\src\\helper\\swapFactoryContract.js":"21","D:\\React\\SmartSwap_frontend\\src\\config\\constantConfig.js":"22","D:\\React\\SmartSwap_frontend\\src\\components\\RightSideMenu.js":"23","D:\\React\\SmartSwap_frontend\\src\\components\\DropDown.js":"24","D:\\React\\SmartSwap_frontend\\src\\helper\\validation.js":"25","D:\\React\\SmartSwap_frontend\\src\\components\\liquidity_fountain_for_SPs.js":"26","D:\\React\\SmartSwap_frontend\\src\\components\\Counter.js":"27","D:\\React\\SmartSwap_frontend\\src\\components\\About.js":"28","D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\LiquidityProvider.js":"29","D:\\React\\SmartSwap_frontend\\src\\components\\NoDomain.js":"30","D:\\React\\SmartSwap_frontend\\src\\components\\PeerPopup.js":"31","D:\\React\\SmartSwap_frontend\\src\\pages\\select_token.js":"32","D:\\React\\SmartSwap_frontend\\src\\components\\CefiToDefi.js":"33","D:\\React\\SmartSwap_frontend\\src\\components\\LedgerHistory.js":"34","D:\\React\\SmartSwap_frontend\\src\\components\\HowItWorks.js":"35","D:\\React\\SmartSwap_frontend\\src\\dispatcher.js":"36","D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpIntroduction.js":"37","D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpContractDeployForm.js":"38","D:\\React\\SmartSwap_frontend\\src\\helper\\axiosRequest.js":"39","D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\ActiveContract.js":"40","D:\\React\\SmartSwap_frontend\\src\\helper\\swapFactoryContractPairWise.js":"41","D:\\React\\SmartSwap_frontend\\src\\helper\\spContract.js":"42","D:\\React\\SmartSwap_frontend\\src\\pages\\free-listing.js":"43","D:\\React\\SmartSwap_frontend\\src\\components\\Header02.js":"44","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen01.js":"45","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen02.js":"46","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen03.js":"47","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen04.js":"48","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen05.js":"49","D:\\react\\SmartSwap_frontend\\src\\index.js":"50","D:\\react\\SmartSwap_frontend\\src\\App.js":"51","D:\\react\\SmartSwap_frontend\\src\\reportWebVitals.js":"52","D:\\react\\SmartSwap_frontend\\src\\pages\\projects.js":"53","D:\\react\\SmartSwap_frontend\\src\\pages\\extension.js":"54","D:\\react\\SmartSwap_frontend\\src\\pages\\smartSwapLicence.js":"55","D:\\react\\SmartSwap_frontend\\src\\pages\\ownLicence02.js":"56","D:\\react\\SmartSwap_frontend\\src\\pages\\ownLicence.js":"57","D:\\react\\SmartSwap_frontend\\src\\pages\\home.js":"58","D:\\react\\SmartSwap_frontend\\src\\pages\\free-listing.js":"59","D:\\react\\SmartSwap_frontend\\src\\constants.js":"60","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen05.js":"61","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen03.js":"62","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen04.js":"63","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen01.js":"64","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen02.js":"65","D:\\react\\SmartSwap_frontend\\src\\config\\web3Config.js":"66","D:\\react\\SmartSwap_frontend\\src\\config\\notificationConfig.js":"67","D:\\react\\SmartSwap_frontend\\src\\config\\constantConfig.js":"68","D:\\react\\SmartSwap_frontend\\src\\components\\Header.js":"69","D:\\react\\SmartSwap_frontend\\src\\helper\\validation.js":"70","D:\\react\\SmartSwap_frontend\\src\\components\\WalletPopup.js":"71","D:\\react\\SmartSwap_frontend\\src\\components\\SidePopup.js":"72","D:\\react\\SmartSwap_frontend\\src\\helper\\swapFactoryContract.js":"73","D:\\react\\SmartSwap_frontend\\src\\components\\RightSideMenu.js":"74","D:\\react\\SmartSwap_frontend\\src\\components\\CreateLicense.js":"75","D:\\react\\SmartSwap_frontend\\src\\components\\Header02.js":"76","D:\\react\\SmartSwap_frontend\\src\\components\\CoinPopup.js":"77","D:\\react\\SmartSwap_frontend\\src\\components\\withdraw_token.js":"78","D:\\react\\SmartSwap_frontend\\src\\components\\Counter.js":"79","D:\\react\\SmartSwap_frontend\\src\\components\\DropDown.js":"80","D:\\react\\SmartSwap_frontend\\src\\pages\\select_token.js":"81","D:\\react\\SmartSwap_frontend\\src\\components\\NoDomain.js":"82","D:\\react\\SmartSwap_frontend\\src\\components\\LedgerHistory.js":"83","D:\\react\\SmartSwap_frontend\\src\\components\\Deposit-withdraw.js":"84","D:\\react\\SmartSwap_frontend\\src\\components\\CefiToDefi.js":"85","D:\\react\\SmartSwap_frontend\\src\\components\\HowItWorks.js":"86","D:\\react\\SmartSwap_frontend\\src\\components\\PeerPopup.js":"87","D:\\react\\SmartSwap_frontend\\src\\components\\About.js":"88","D:\\react\\SmartSwap_frontend\\src\\components\\liquidity_fountain_for_SPs.js":"89","D:\\react\\SmartSwap_frontend\\src\\helper\\reimbursementContract.js":"90","D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\LiquidityProvider.js":"91","D:\\react\\SmartSwap_frontend\\src\\dispatcher.js":"92","D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpIntroduction.js":"93","D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpContractDeployForm.js":"94","D:\\react\\SmartSwap_frontend\\src\\helper\\swapFactoryContractPairWise.js":"95","D:\\react\\SmartSwap_frontend\\src\\helper\\axiosRequest.js":"96","D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\ActiveContract.js":"97","D:\\react\\SmartSwap_frontend\\src\\helper\\spContract.js":"98","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen06.js":"99","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen07.js":"100","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen08.js":"101","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen11.js":"102","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen10.js":"103","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen09.js":"104","D:\\react\\SmartSwap_frontend\\src\\pages\\welcome.js":"105","D:\\react\\SmartSwap_frontend\\src\\components\\Header03.js":"106","D:\\React\\SmartSwap_frontend\\src\\pages\\welcome.js":"107","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen11.js":"108","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen09.js":"109","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen10.js":"110","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen07.js":"111","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen08.js":"112","D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen06.js":"113","D:\\React\\SmartSwap_frontend\\src\\components\\Header03.js":"114","D:\\react\\SmartSwap_frontend\\src\\pages\\smartBridge.js":"115","D:\\react\\SmartSwap_frontend\\src\\pages\\smartExtension.js":"116","D:\\react\\SmartSwap_frontend\\src\\components\\bridge-tokens\\BridgeSwap.js":"117","D:\\react\\SmartSwap_frontend\\src\\components\\PopupToken03.js":"118","D:\\react\\SmartSwap_frontend\\src\\components\\PopupToken02.js":"119","D:\\react\\SmartSwap_frontend\\src\\components\\PopupToken01.js":"120","D:\\react\\SmartSwap_frontend\\src\\helper\\bridgeApiHelper.js":"121","D:\\react\\SmartSwap_frontend\\src\\pages\\addCustomToken.js":"122","D:\\react\\SmartSwap_frontend\\src\\helper\\erc20TokenContract.js":"123","D:\\react\\SmartSwap_frontend\\src\\helper\\bridgeContract.js":"124","D:\\react\\SmartSwap_frontend\\src\\components\\bridge-tokens\\SourceTokenPopup.js":"125","D:\\react\\SmartSwap_frontend\\src\\components\\bridge-tokens\\DestinationTokensPopup.js":"126","D:\\react\\SmartSwap_frontend\\src\\components\\bridge-tokens\\CheckAuthenticityPopup.js":"127","D:\\react\\SmartSwap_frontend\\src\\helper\\errorConstantsHelper.js":"128"},{"size":494,"mtime":1641559474000,"results":"129","hashOfConfig":"130"},{"size":375,"mtime":1641559474000,"results":"131","hashOfConfig":"130"},{"size":1273,"mtime":1661944352000,"results":"132","hashOfConfig":"130"},{"size":121265,"mtime":1651579292000,"results":"133","hashOfConfig":"130"},{"size":32162,"mtime":1641559474000,"results":"134","hashOfConfig":"130"},{"size":24363,"mtime":1641559474000,"results":"135","hashOfConfig":"130"},{"size":19553,"mtime":1649419458000,"results":"136","hashOfConfig":"130"},{"size":239022,"mtime":1661941026000,"results":"137","hashOfConfig":"130"},{"size":13098,"mtime":1660742750000,"results":"138","hashOfConfig":"130"},{"size":3587,"mtime":1641559474000,"results":"139","hashOfConfig":"130"},{"size":1006,"mtime":1641559474000,"results":"140","hashOfConfig":"130"},{"size":14238,"mtime":1641559474000,"results":"141","hashOfConfig":"130"},{"size":9937,"mtime":1641559474000,"results":"142","hashOfConfig":"130"},{"size":11191,"mtime":1641559474000,"results":"143","hashOfConfig":"130"},{"size":2149,"mtime":1660742750000,"results":"144","hashOfConfig":"130"},{"size":13364,"mtime":1651576828000,"results":"145","hashOfConfig":"130"},{"size":2709,"mtime":1641559474000,"results":"146","hashOfConfig":"130"},{"size":11590,"mtime":1641559474000,"results":"147","hashOfConfig":"130"},{"size":10155,"mtime":1649410842000,"results":"148","hashOfConfig":"130"},{"size":6604,"mtime":1641559474000,"results":"149","hashOfConfig":"130"},{"size":9797,"mtime":1660742750000,"results":"150","hashOfConfig":"130"},{"size":15377,"mtime":1660742750000,"results":"151","hashOfConfig":"130"},{"size":12931,"mtime":1660745048000,"results":"152","hashOfConfig":"130"},{"size":387,"mtime":1649225724000,"results":"153","hashOfConfig":"130"},{"size":1258,"mtime":1646913662000,"results":"154","hashOfConfig":"130"},{"size":1903,"mtime":1660742750000,"results":"155","hashOfConfig":"130"},{"size":425,"mtime":1660742750000,"results":"156","hashOfConfig":"130"},{"size":31204,"mtime":1660742750000,"results":"157","hashOfConfig":"130"},{"size":4173,"mtime":1649225724000,"results":"158","hashOfConfig":"130"},{"size":1314,"mtime":1641559474000,"results":"159","hashOfConfig":"130"},{"size":4401,"mtime":1641559474000,"results":"160","hashOfConfig":"130"},{"size":15135,"mtime":1649312774000,"results":"161","hashOfConfig":"130"},{"size":5388,"mtime":1641559474000,"results":"162","hashOfConfig":"130"},{"size":18073,"mtime":1660742750000,"results":"163","hashOfConfig":"130"},{"size":9934,"mtime":1660742750000,"results":"164","hashOfConfig":"130"},{"size":72,"mtime":1641559474000,"results":"165","hashOfConfig":"130"},{"size":3184,"mtime":1646913662000,"results":"166","hashOfConfig":"130"},{"size":60286,"mtime":1660742750000,"results":"167","hashOfConfig":"130"},{"size":1049,"mtime":1641559474000,"results":"168","hashOfConfig":"130"},{"size":82926,"mtime":1660742750000,"results":"169","hashOfConfig":"130"},{"size":3776,"mtime":1651831636000,"results":"170","hashOfConfig":"130"},{"size":3103,"mtime":1646913662000,"results":"171","hashOfConfig":"130"},{"size":2114,"mtime":1661944426000,"results":"172","hashOfConfig":"130"},{"size":2653,"mtime":1661172184000,"results":"173","hashOfConfig":"130"},{"size":3653,"mtime":1661366226000,"results":"174","hashOfConfig":"130"},{"size":6424,"mtime":1661455596000,"results":"175","hashOfConfig":"130"},{"size":4631,"mtime":1661456632000,"results":"176","hashOfConfig":"130"},{"size":7298,"mtime":1661461326000,"results":"177","hashOfConfig":"130"},{"size":9327,"mtime":1661758458000,"results":"178","hashOfConfig":"130"},{"size":494,"mtime":1668671026871,"results":"179","hashOfConfig":"180"},{"size":1717,"mtime":1668671026826,"results":"181","hashOfConfig":"180"},{"size":375,"mtime":1668671026883,"results":"182","hashOfConfig":"180"},{"size":19610,"mtime":1668671026881,"results":"183","hashOfConfig":"180"},{"size":13098,"mtime":1668671026872,"results":"184","hashOfConfig":"180"},{"size":24363,"mtime":1668671026882,"results":"185","hashOfConfig":"180"},{"size":32162,"mtime":1668671026880,"results":"186","hashOfConfig":"180"},{"size":121265,"mtime":1668671026880,"results":"187","hashOfConfig":"180"},{"size":284673,"mtime":1668686892199,"results":"188","hashOfConfig":"180"},{"size":25783,"mtime":1668671026876,"results":"189","hashOfConfig":"180"},{"size":2149,"mtime":1668671026868,"results":"190","hashOfConfig":"180"},{"size":24379,"mtime":1668671869394,"results":"191","hashOfConfig":"180"},{"size":11533,"mtime":1668671869394,"results":"192","hashOfConfig":"180"},{"size":12237,"mtime":1668671026873,"results":"193","hashOfConfig":"180"},{"size":5141,"mtime":1668680199185,"results":"194","hashOfConfig":"180"},{"size":17983,"mtime":1668671869393,"results":"195","hashOfConfig":"180"},{"size":3587,"mtime":1668671026868,"results":"196","hashOfConfig":"180"},{"size":1006,"mtime":1668671026867,"results":"197","hashOfConfig":"180"},{"size":15377,"mtime":1668671026867,"results":"198","hashOfConfig":"180"},{"size":10155,"mtime":1668671026859,"results":"199","hashOfConfig":"180"},{"size":1258,"mtime":1668671026871,"results":"200","hashOfConfig":"180"},{"size":6604,"mtime":1668671026864,"results":"201","hashOfConfig":"180"},{"size":13364,"mtime":1668671026864,"results":"202","hashOfConfig":"180"},{"size":9797,"mtime":1668671026871,"results":"203","hashOfConfig":"180"},{"size":12931,"mtime":1668671026864,"results":"204","hashOfConfig":"180"},{"size":14238,"mtime":1668671026858,"results":"205","hashOfConfig":"180"},{"size":5591,"mtime":1668682581164,"results":"206","hashOfConfig":"180"},{"size":9970,"mtime":1668671026857,"results":"207","hashOfConfig":"180"},{"size":2709,"mtime":1668671026866,"results":"208","hashOfConfig":"180"},{"size":425,"mtime":1668671026857,"results":"209","hashOfConfig":"180"},{"size":387,"mtime":1668671026858,"results":"210","hashOfConfig":"180"},{"size":15135,"mtime":1668671026881,"results":"211","hashOfConfig":"180"},{"size":1314,"mtime":1668671026862,"results":"212","hashOfConfig":"180"},{"size":18807,"mtime":1668671026860,"results":"213","hashOfConfig":"180"},{"size":11191,"mtime":1668671026858,"results":"214","hashOfConfig":"180"},{"size":5388,"mtime":1668671026857,"results":"215","hashOfConfig":"180"},{"size":9934,"mtime":1668671026859,"results":"216","hashOfConfig":"180"},{"size":4401,"mtime":1668671026863,"results":"217","hashOfConfig":"180"},{"size":31204,"mtime":1668671026856,"results":"218","hashOfConfig":"180"},{"size":1903,"mtime":1668671026866,"results":"219","hashOfConfig":"180"},{"size":11590,"mtime":1668671026870,"results":"220","hashOfConfig":"180"},{"size":4173,"mtime":1649225724000,"results":"221","hashOfConfig":"180"},{"size":72,"mtime":1668671026868,"results":"222","hashOfConfig":"180"},{"size":3184,"mtime":1646913662000,"results":"223","hashOfConfig":"180"},{"size":60286,"mtime":1660742750000,"results":"224","hashOfConfig":"180"},{"size":3776,"mtime":1651831636000,"results":"225","hashOfConfig":"180"},{"size":1297,"mtime":1668671026868,"results":"226","hashOfConfig":"180"},{"size":82926,"mtime":1660742750000,"results":"227","hashOfConfig":"180"},{"size":3103,"mtime":1646913662000,"results":"228","hashOfConfig":"180"},{"size":7116,"mtime":1668671869395,"results":"229","hashOfConfig":"180"},{"size":7205,"mtime":1668671026874,"results":"230","hashOfConfig":"180"},{"size":5157,"mtime":1668671869395,"results":"231","hashOfConfig":"180"},{"size":5550,"mtime":1668671026875,"results":"232","hashOfConfig":"180"},{"size":15461,"mtime":1668671869397,"results":"233","hashOfConfig":"180"},{"size":9340,"mtime":1668671869396,"results":"234","hashOfConfig":"180"},{"size":42960,"mtime":1668671026883,"results":"235","hashOfConfig":"180"},{"size":2165,"mtime":1668671026859,"results":"236","hashOfConfig":"180"},{"size":42960,"mtime":1662029340000,"results":"237","hashOfConfig":"130"},{"size":6208,"mtime":1661766332000,"results":"238","hashOfConfig":"130"},{"size":6368,"mtime":1661755742000,"results":"239","hashOfConfig":"130"},{"size":6241,"mtime":1661767136000,"results":"240","hashOfConfig":"130"},{"size":7173,"mtime":1661522696000,"results":"241","hashOfConfig":"130"},{"size":4057,"mtime":1661535448000,"results":"242","hashOfConfig":"130"},{"size":4548,"mtime":1661768624000,"results":"243","hashOfConfig":"130"},{"size":2165,"mtime":1662030672000,"results":"244","hashOfConfig":"130"},{"size":5485,"mtime":1668671026881,"results":"245","hashOfConfig":"180"},{"size":5209,"mtime":1668671026882,"results":"246","hashOfConfig":"180"},{"size":47346,"mtime":1668681335049,"results":"247","hashOfConfig":"180"},{"size":5328,"mtime":1668671026863,"results":"248","hashOfConfig":"180"},{"size":15896,"mtime":1668671026863,"results":"249","hashOfConfig":"180"},{"size":17019,"mtime":1668671026863,"results":"250","hashOfConfig":"180"},{"size":24623,"mtime":1668671026869,"results":"251","hashOfConfig":"180"},{"size":9683,"mtime":1668671026872,"results":"252","hashOfConfig":"180"},{"size":5666,"mtime":1668671869391,"results":"253","hashOfConfig":"180"},{"size":6996,"mtime":1668671026869,"results":"254","hashOfConfig":"180"},{"size":24181,"mtime":1668671869391,"results":"255","hashOfConfig":"180"},{"size":24769,"mtime":1668671869390,"results":"256","hashOfConfig":"180"},{"size":6367,"mtime":1668671026865,"results":"257","hashOfConfig":"180"},{"size":2442,"mtime":1668671869392,"results":"258","hashOfConfig":"180"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},"865tjn",{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"261"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"261"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"261"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"261"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"261"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"261"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"261"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":1,"source":"305","usedDeprecatedRules":"261"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"261"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"261"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":10,"source":null},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"261"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"261"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"261"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},"1xfash5",{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"373"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"373"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"373"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"373"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":75,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"373"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"403","usedDeprecatedRules":"373"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"373"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":1,"source":"305","usedDeprecatedRules":"373"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"373"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"373"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"373"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"373"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":4,"source":"428","usedDeprecatedRules":"373"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"373"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"373"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"448","usedDeprecatedRules":"373"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"373"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"373"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"373"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"373"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":10,"source":"460","usedDeprecatedRules":"373"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"373"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"468"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"468"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"468"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"468"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"468"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"468"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"373"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"373"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"373"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"373"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"373"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"373"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"373"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"546","usedDeprecatedRules":"373"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"549","usedDeprecatedRules":"373"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"373"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},"D:\\React\\SmartSwap_frontend\\src\\index.js",[],["555","556"],"D:\\React\\SmartSwap_frontend\\src\\reportWebVitals.js",[],"D:\\React\\SmartSwap_frontend\\src\\App.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\ownLicence.js",["557","558","559","560","561","562","563","564","565","566","567","568"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport InputRange from \"react-input-range\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport web3Js from \"web3\";\r\nimport Web3 from \"web3\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport Validation from \"../helper/validation\";\r\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\r\nimport tokenAbi from \"../abis/tokenAbi.json\";\r\nimport constantConfig from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport { LoopCircleLoading } from \"react-loadingg\";\r\nimport CONSTANT from \"../constants\";\r\nimport data from \"../config/constantConfig\";\r\nimport WithDrawToken from \"../components/withdraw_token\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport WalletPopup from \"../components/WalletPopup\";\r\nimport CoinPopup from \"../components/CoinPopup\";\r\nimport SidePopup from \"../components/SidePopup\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport CreateLicence from \"../components/CreateLicense\";\r\nimport axios from \"axios\";\r\nimport Highlight from \"react-highlight\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport ReimbursementContract from \"../helper/reimbursementContract\";\r\nimport { isValidAddress } from \"ethereumjs-util\";\r\nimport reimbursementAbi from \"../abis/reimbursementAbi.json\";\r\nimport tokenVaultAbi from \"../abis/tokenVaultAbi.json\";\r\nimport DepositToken from \"../components/Deposit-withdraw\";\r\n\r\nconst $ = window.$;\r\n\r\nconst validatesubDomain = (value) => {\r\n  const reg = /^[a-zA-Z0-9&_-]+$/;\r\n  const isvalid = reg.test(value);\r\n  return isvalid;\r\n};\r\nconst isValidURL = (string) => {\r\n  // var res = string.match(\r\n  //   /((http|https):\\/\\/.)(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g\r\n  // );\r\n  var res = string.match(\r\n    /^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/gm\r\n  );\r\n  return res !== null;\r\n};\r\nconst toBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nconst copyAffiliateLink = (e, id) => {\r\n  e.preventDefault();\r\n  var copyText = document.getElementById(id);\r\n  copyText.select();\r\n  document.execCommand(\"copy\");\r\n  notificationConfig.success(\"Copied Successfully!\")\r\n};\r\n\r\nexport default class ownLicence extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.setSendCurrency = this.setSendCurrency.bind(this);\r\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\r\n    this.changeTypeofLicense = this.changeTypeofLicense.bind(this);\r\n    this._onChangeRadio = this._onChangeRadio.bind(this);\r\n    this.getFees = this.getFees.bind(this);\r\n    // this.updateLicenseAddress = this.updateLicenseAddress.bind(this)\r\n    const { location } = props;\r\n    this.state = {\r\n      value: 0,\r\n      isOpen1: false,\r\n      web3: null,\r\n      web3Check: false,\r\n      btnClick: false,\r\n      swapFactory: null,\r\n      swapLoading: false,\r\n      selectedSendCurrency: \"BNB\",\r\n      selectedReceiveCurrency: \"ETH\",\r\n      instanceReimbursementBinance: null,\r\n      instanceReimbursementEthereum: null,\r\n      tokenInstance: {},\r\n      txLink: \"\",\r\n      wrapBox: \"swap\",\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      showLedger: false,\r\n      currencyPrices: {},\r\n      estimatedGasFee: \"0\",\r\n      tokenBalances: {\r\n        JNTR: 0,\r\n        \"JNTR/b\": 0,\r\n        \"JNTR/e\": 0,\r\n        JNTR_APPROVED: 0,\r\n        \"JNTR/b_APPROVED\": 0,\r\n        \"JNTR/e_APPROVED\": 0,\r\n      },\r\n      showFeeInpt: true,\r\n      zeroIntegrationShow: true,\r\n      \"bsc\": false,\r\n      \"ethereum\": false,\r\n      \"polygon\": false,\r\n      bgimage:\r\n        typeof location.state === \"undefined\"\r\n          ? \"\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.bgimage\r\n            : \"\",\r\n      logoImage:\r\n        typeof location.state === \"undefined\"\r\n          ? \"\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.logoImage\r\n            : \"\",\r\n      error: \"\",\r\n      isloading: false,\r\n      subDomain:\r\n        typeof location.state === \"undefined\"\r\n          ? \"\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.subDomain\r\n            : \"\",\r\n      logoUrl:\r\n        typeof location.state === \"undefined\"\r\n          ? \"\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.logoUrl\r\n            : \"\",\r\n      primaryColor:\r\n        typeof location.state === \"undefined\"\r\n          ? \"#fff\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.primaryColor\r\n            : \"#fff\",\r\n      showPrimaryColor: false,\r\n      showSwapButtonColor: false,\r\n      secondaryColor:\r\n        typeof location.state === \"undefined\"\r\n          ? \"#5c6bc0\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.secondaryColor\r\n            : \"#5c6bc0\",\r\n      swapButtonColor:\r\n        typeof location.state === \"undefined\"\r\n          ? \"#91dc27\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.swapButtonColor\r\n            : \"#91dc27\",\r\n      showSecondaryColor: false,\r\n      formData: {\r\n        primaryColor: { value: \"\", error: \"\", errormsg: \"\" },\r\n        secondaryColor: { value: \"\", error: \"\", errormsg: \"\" },\r\n        subDomain: { value: \"\", error: \"\", errormsg: \"\" },\r\n      },\r\n      visitDomain: \"\",\r\n      fontStyle:\r\n        typeof location.state === \"undefined\"\r\n          ? \"Default\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.fontStyle\r\n            : \"Default\",\r\n      backgroundOverLay:\r\n        typeof location.state === \"undefined\"\r\n          ? \"60\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.backgroundOverLay\r\n            : \"60\",\r\n      cloneData:\r\n        typeof location.state === \"undefined\"\r\n          ? {}\r\n          : location.state.cloneData\r\n            ? location.state.cloneData\r\n            : {},\r\n      typeofLicense: \"Zero integration\",\r\n      newColor: false,\r\n      changeFee: \"Yes\",\r\n      changeText:\r\n        typeof location.state === \"undefined\"\r\n          ? \"Yes\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.changeText\r\n            : \"Yes\",\r\n      sideBar:\r\n        typeof location.state === \"undefined\"\r\n          ? \"true\"\r\n          : location.state.cloneData\r\n            ? location.state.cloneData.sideBar\r\n            : \"true\",\r\n      displayToken: \"Display token lists\",\r\n      bscLicenseAddress: CONSTANT.ZERO_ADDRESS,\r\n      ethLicenseAddress: CONSTANT.ZERO_ADDRESS,\r\n      bscLicenseFees: 0,\r\n      ethLicenseFees: 0,\r\n      bscLicenseFeesCurrent: 0,\r\n      ethLicenseFeesCurrent: 0,\r\n      bscLicenseTokenBalance: 0,\r\n      ethLicenseTokenBalance: 0,\r\n      allowClone: false,\r\n      licenseeData: null,\r\n      depositWithdrawNetwork: null,\r\n      depositWithdrawVaultAddress: null,\r\n      depositTokenAddress: CONSTANT.ZERO_ADDRESS\r\n    };\r\n  }\r\n  componentWillMount = async () => {\r\n    await this.fetchPrice();\r\n  };\r\n  componentDidMount = async () => {\r\n    window.scrollTo(0, 0);\r\n    this.setState({\r\n      web3Ethereum: new Web3(\r\n        new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)\r\n      ),\r\n      web3Binance: new Web3(\r\n        new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE)\r\n      ),\r\n    });\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n        licenseeData: web3Config.getLicenseeData()\r\n      },\r\n      async () => {\r\n        await this.initInstance();\r\n      }\r\n    );\r\n    console.log(\"-------------license-data-------------------------------------\", web3Config.getLicenseeData())\r\n  };\r\n  async initInstance() {\r\n    let { web3Binance, web3Ethereum } = this.state;\r\n    let instanceReimbursementBinance = null;\r\n    let instanceReimbursementEthereum = null;\r\n    instanceReimbursementBinance = new web3Binance.eth.Contract(\r\n      reimbursementAbi,\r\n      constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract\r\n    );\r\n    instanceReimbursementEthereum = new web3Ethereum.eth.Contract(\r\n      reimbursementAbi,\r\n      constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract\r\n    );\r\n\r\n    this.setState(\r\n      {\r\n        instanceReimbursementBinance,\r\n        instanceReimbursementEthereum,\r\n      },\r\n      () => {\r\n        // this.listenTransferEvent();\r\n      }\r\n    );\r\n  }\r\n  updateTokenBalance = async () => {\r\n    if (this.state.web3 !== null) {\r\n      const { tokenInstance, tokenBalances, web3 } = this.state;\r\n      // Balances\r\n      tokenBalances[\"JNTR\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR\"].methods\r\n          .balanceOf(web3Config.getAddress())\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/b\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/b\"].methods\r\n          .balanceOf(web3Config.getAddress())\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/e\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/e\"].methods\r\n          .balanceOf(web3Config.getAddress())\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      // Approve Balances\r\n      tokenBalances[\"JNTR_APPROVED\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR\"].methods\r\n          .allowance(\r\n            web3Config.getAddress(),\r\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\r\n          )\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/b_APPROVED\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/b\"].methods\r\n          .allowance(\r\n            web3Config.getAddress(),\r\n            \"0x309208d15fba3207be6c760771ca3b4846e1be93\"\r\n          )\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      tokenBalances[\"JNTR/e_APPROVED\"] = web3Js.utils.fromWei(\r\n        await tokenInstance[\"JNTR/e\"].methods\r\n          .allowance(\r\n            web3Config.getAddress(),\r\n            \"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\"\r\n          )\r\n          .call(),\r\n        \"ether\"\r\n      );\r\n      this.setState(\r\n        {\r\n          tokenBalances: tokenBalances,\r\n        },\r\n        () => {\r\n          this.forceUpdate();\r\n          // this.updateButton()\r\n        }\r\n      );\r\n    }\r\n  };\r\n  async connectWallet() {\r\n    this.setState({ btnClick: true });\r\n    await web3Config.connectWallet(0);\r\n    let networkId = web3Config.getNetworkId();\r\n    if (!constantConfig.allowedNetwork.includes(networkId)) {\r\n      notificationConfig.error(\"Please Select Kovan or BSC Test Network\");\r\n      this.setState({ btnClick: false });\r\n      return;\r\n    }\r\n    // if (\r\n    //   constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\r\n    //   networkId &&\r\n    //   networkId === 97\r\n    // ) {\r\n    //   notificationConfig.warning(\"Change metamask network to Ethereum!\");\r\n    //   return;\r\n    // } else if (\r\n    //   constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !==\r\n    //   networkId &&\r\n    //   networkId === 42\r\n    // ) {\r\n    //   notificationConfig.warning(\"Change metamask network to Binance!\");\r\n    //   return;\r\n    // }\r\n    this.setState(\r\n      {\r\n        web3: web3Config.getWeb3(),\r\n        btnClick: false,\r\n      },\r\n      async () => {\r\n        await this.getData([web3Config.getAddress()])\r\n        let licenseeData = await web3Config.getLicenseeData()\r\n        if (licenseeData !== null) {\r\n          const href = window.location.href;\r\n          const domaindata = href\r\n            .replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\")\r\n            .split(\"/\")[0];\r\n          this.clearPreview();\r\n          this.setState({\r\n            licenseeData: licenseeData,\r\n            bscLicenseAddress: licenseeData.bscLicenseAddress,\r\n            ethLicenseAddress: licenseeData.ethLicenseAddress,\r\n            bscLicenseFees: licenseeData.bscLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"BSC\", licenseeData.bscLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract)).fees : 0,\r\n            ethLicenseFees: licenseeData.ethLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"Ethereum\", licenseeData.ethLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)).fees : 0,\r\n            bscLicenseTokenBalance: licenseeData.bscLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"BSC\", licenseeData.bscLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract)).tokenBalance : 0,\r\n            ethLicenseTokenBalance: licenseeData.ethLicenseAddress !== CONSTANT.ZERO_ADDRESS ? (await this.getFees(\"Ethereum\", licenseeData.ethLicenseAddress, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract)).tokenBalance : 0,\r\n            visitDomain: `http://${licenseeData.subDomain}.${domaindata}`,\r\n          }, () => {\r\n            this.setIsValidLicenseAddress()\r\n          });\r\n        }\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  async getFees(network, vaultAddress, projectContractAddress) {\r\n    let currInstance = null;\r\n    if (network === \"BSC\") {\r\n      currInstance = this.state.instanceReimbursementBinance;\r\n      let fees = Number(await currInstance.methods.getLicenseeFee(vaultAddress, projectContractAddress).call());\r\n      let tokenBalance = await currInstance.methods.getAvailableTokens(vaultAddress).call();\r\n      return { fees: fees, tokenBalance: web3Js.utils.fromWei(tokenBalance) };\r\n    } else if (network === \"Ethereum\") {\r\n      currInstance = this.state.instanceReimbursementEthereum;\r\n      let fees = Number(await currInstance.methods.getLicenseeFee(vaultAddress, projectContractAddress).call());\r\n      let tokenBalance = await currInstance.methods.getAvailableTokens(vaultAddress).call();\r\n      return { fees: fees, tokenBalance: web3Js.utils.fromWei(tokenBalance) };\r\n    }\r\n  }\r\n\r\n  getData = async (domain) => {\r\n    // this.setState({\r\n    //   isloading: true,\r\n    // });\r\n    try {\r\n      const res = await axios.get(\r\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\r\n      );\r\n      console.log(res);\r\n      if (res.data.response_code === 200) {\r\n        if (isValidAddress(domain[0])) {\r\n          await web3Config.setLicenseeData(res.data.result)\r\n        } else {\r\n          // const r = document.querySelector(\":root\");\r\n          // r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\r\n          // r.style.setProperty(\r\n          //   \"--button-bg-color\",\r\n          //   res.data.result.seconderyColor\r\n          // );\r\n          // r.style.setProperty(\r\n          //   \"--req-bg\",\r\n          //   `url(${res.data.result.backGroundImage})`\r\n          // );\r\n          // r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\r\n          // this.setState({\r\n          //   cloneData: {\r\n          //     bgimage: res.data.result.backGroundImage,\r\n          //     logoImage: res.data.result.logo,\r\n          //     subDomain: res.data.result.subDomain,\r\n          //     primaryColor: res.data.result.primaryColors,\r\n          //     secondaryColor: res.data.result.seconderyColor,\r\n          //     fontStyle: res.data.result.fontStyle,\r\n          //     backgroundOverLay: res.data.result.backgroundOverLay,\r\n          //     swapButtonColor: res.data.result.swapButton,\r\n          //     logoUrl: res.data.result.logoUrl,\r\n          //     sideBar: res.data.result.sideBar\r\n          //   },\r\n          //   licenseeAddress: {\r\n          //     56: res.data.result.bscLicenseAddress,\r\n          //     1: res.data.result.ethLicenseAddress,\r\n          //     97: res.data.result.bscLicenseAddress,\r\n          //     42: res.data.result.ethLicenseAddress\r\n          //   }\r\n          // });\r\n        }\r\n      } else if (res.data.response_code === 404) {\r\n        // this.setState({\r\n        //   noSubDomain: true,\r\n        // });\r\n        // setTimeout(() => {\r\n        //   this.openPopup(\"NoDomain\");\r\n        // }, 100);\r\n      }\r\n      // this.setState({\r\n      //   isloading: false,\r\n      // });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      // this.setState({\r\n      //   isloading: false,\r\n      // });\r\n    }\r\n  };\r\n\r\n  async swap() {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n    let { sendFundAmount } = this.state;\r\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n      notificationConfig.error(\"Enter value to swap\");\r\n      return;\r\n    }\r\n    let actualSendFundAmount = (\r\n      await this.getActualAmount(\r\n        sendFundAmount,\r\n        this.state.selectedSendCurrency\r\n      )\r\n    ).toString();\r\n    let value = 0,\r\n      swapAmount = 0;\r\n    try {\r\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\r\n    } catch (e) {\r\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n    }\r\n    swapAmount = value;\r\n    if (\r\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\r\n        .approveRequire\r\n    ) {\r\n      value = 0;\r\n    }\r\n    swapFactory.swap(\r\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\r\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\r\n      value,\r\n      swapAmount,\r\n      (hash) => {\r\n        this.setState({\r\n          swapLoading: true,\r\n          txIdSent: hash,\r\n          txLinkSend: data[networkId].explorer + \"/tx/\" + hash,\r\n        });\r\n      },\r\n      () => {\r\n        // this.init()\r\n        this.setState({\r\n          swapLoading: false,\r\n          showLedger: true,\r\n          wrapBox: \"success\",\r\n        });\r\n        notificationConfig.success(\"Swap Success\");\r\n      }\r\n    );\r\n  }\r\n  async approve() {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n    swapFactory.approveJNTRTokenForSwapFactory(\r\n      constantConfig.tokenDetails[this.state.selectedSendCurrency].address,\r\n      constantConfig[networkId].swapFactoryContract,\r\n      (hash) => {\r\n        this.setState({\r\n          approveLoading: true,\r\n          // txIdSent: hash,\r\n          // txLinkSend: data[networkId].explorer + \"/tx/\" + hash\r\n        });\r\n      },\r\n      () => {\r\n        // this.init()\r\n        this.setState({\r\n          approveLoading: false,\r\n          // showLedger: true,\r\n          // wrapBox: \"success\"\r\n        });\r\n        notificationConfig.success(\"Approve Success\");\r\n      }\r\n    );\r\n  }\r\n  async estimateGasAndFee() {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n    let { sendFundAmount } = this.state;\r\n    if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n      notificationConfig.error(\"Enter value to swap\");\r\n      return;\r\n    }\r\n    let actualSendFundAmount = (\r\n      await this.getActualAmount(\r\n        sendFundAmount,\r\n        this.state.selectedSendCurrency\r\n      )\r\n    ).toString();\r\n    let value = 0,\r\n      swapAmount = 0;\r\n    try {\r\n      value = web3Js.utils.toWei(actualSendFundAmount.toString());\r\n    } catch (e) {\r\n      value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n    }\r\n    swapAmount = value;\r\n    if (\r\n      constantConfig.tokenDetails[this.state.selectedSendCurrency]\r\n        .approveRequire\r\n    ) {\r\n      value = 0;\r\n    }\r\n    swapFactory.estimateSwapGasFee(\r\n      CONSTANT.currencyAddresses[this.state.selectedSendCurrency],\r\n      CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency],\r\n      value,\r\n      swapAmount,\r\n      \"350000\",\r\n      (estGas) => {\r\n        this.setState({\r\n          estimatedGasFee: estGas,\r\n        });\r\n      }\r\n    );\r\n  }\r\n  async recivedToken(e) {\r\n    let dollarAmount = Number(e.target.value);\r\n    this.setState(\r\n      {\r\n        sendFundAmount: dollarAmount,\r\n      },\r\n      () => {\r\n        this.setAmount(dollarAmount);\r\n      }\r\n    );\r\n  }\r\n  async setAmount(dollarAmount) {\r\n    this.setState(\r\n      {\r\n        actualSendFundAmount: await this.getActualAmount(\r\n          dollarAmount,\r\n          this.state.selectedSendCurrency\r\n        ),\r\n        approxReceiveFundAmount: await this.getActualAmount(\r\n          dollarAmount,\r\n          this.state.selectedReceiveCurrency\r\n        ),\r\n      },\r\n      () => {\r\n        this.estimateGasAndFee();\r\n      }\r\n    );\r\n  }\r\n  async getActualAmount(dollarAmount, currency) {\r\n    if (dollarAmount <= 0) return 0;\r\n    else return dollarAmount / this.state.currencyPrices[currency];\r\n  }\r\n  async fetchPrice() {\r\n    var { currencyPrices } = this.state;\r\n    const response = await fetch(\r\n      `https://api.coingecko.com/api/v3/simple/price?ids=ethereum,binancecoin&vs_currencies=usd`\r\n    );\r\n    const json = await response.json();\r\n    currencyPrices[\"ETH\"] = json[\"ethereum\"][\"usd\"];\r\n    currencyPrices[\"BNB\"] = json[\"binancecoin\"][\"usd\"];\r\n    currencyPrices[\"JNTR/e\"] = 0.062166;\r\n    currencyPrices[\"JNTR/b\"] = 0.054237;\r\n    currencyPrices[\"JNTR\"] = 0.532;\r\n    this.setState({\r\n      currencyPrices,\r\n    });\r\n  }\r\n  changeCurrency(check) {\r\n    // if(check && this.state.web3 === null){\r\n    let selectedSendCurrency = this.state.selectedSendCurrency;\r\n    let selectedReceiveCurrency = this.state.selectedReceiveCurrency;\r\n    this.setState(\r\n      {\r\n        selectedSendCurrency: selectedReceiveCurrency,\r\n        selectedReceiveCurrency: selectedSendCurrency,\r\n      },\r\n      () => {\r\n        if (this.state.sendFundAmount !== \"\")\r\n          this.setAmount(this.state.sendFundAmount);\r\n        this.forceUpdate();\r\n      }\r\n    );\r\n    // } else if(this.state.web3 !== null && check) {\r\n    //     notificationConfig.warning(\"Please change metamask network!\")\r\n    // }\r\n  }\r\n  setSendCurrency(currency) {\r\n    this.setState({ selectedSendCurrency: currency }, () => {\r\n      this.closePopup(\"sendCurPop\");\r\n    });\r\n  }\r\n  setReceiveCurrency(currency) {\r\n    this.setState({ selectedReceiveCurrency: currency }, () => {\r\n      this.closePopup(\"receiveCurPop\");\r\n    });\r\n  }\r\n  openPopup(id) {\r\n    $(\"#\" + id).fadeIn();\r\n  }\r\n  closePopup(id) {\r\n    $(\"#\" + id).fadeOut();\r\n  }\r\n\r\n  async showDepWdrwPopup(network, vaultAddress, popup, id) {\r\n    let { web3Binance, web3Ethereum } = this.state;\r\n    let instanceVault = null;\r\n    if (network === \"BSC\") {\r\n      instanceVault = new web3Binance.eth.Contract(\r\n        tokenVaultAbi,\r\n        vaultAddress\r\n      );\r\n    } else if (network === \"Ethereum\") {\r\n      instanceVault = new web3Ethereum.eth.Contract(\r\n        tokenVaultAbi,\r\n        vaultAddress\r\n      );\r\n    }\r\n    let tokenAddress = \"\";\r\n    if (instanceVault._address !== CONSTANT.ZERO_ADDRESS) {\r\n      tokenAddress = await instanceVault.methods.reimbursementToken().call();\r\n    }\r\n    this.setState({\r\n      depositTokenAddress: tokenAddress,\r\n      depositWithdrawNetwork: network,\r\n      depositWithdrawVaultAddress: vaultAddress\r\n    }, () => {\r\n      this.showWithId(popup, id)\r\n    })\r\n  }\r\n\r\n  showWithId(popup, id) {\r\n    this.openPopup(popup);\r\n    $(\"[data-id=\" + this.state.currentTab + \"]\").removeClass(\"active\");\r\n    $(\".tab-Link\").removeClass(\"active\");\r\n    $(\"[data-id=\" + id + \"]\").addClass(\"active\");\r\n    $(\".tab-Content\").hide();\r\n    $(\"#\" + id).fadeIn(\"slow\");\r\n    this.setState({\r\n      currentTab: id,\r\n    });\r\n  }\r\n\r\n  changeWrapBox(which) {\r\n    this.setState({\r\n      wrapBox: which,\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      showLedger: false,\r\n    });\r\n  }\r\n  async listenTransferEvent() {\r\n    const { instanceSwapFactoryEthereum, instanceSwapFactoryBinance } =\r\n      this.state;\r\n    if (instanceSwapFactoryEthereum !== null) {\r\n      instanceSwapFactoryEthereum.events\r\n        .ClaimApprove(\r\n          {\r\n            fromBlock: \"latest\",\r\n          },\r\n          function (error, event) {\r\n            console.log(event);\r\n          }\r\n        )\r\n        .on(\"connected\", function (subscriptionId) {\r\n          console.log(subscriptionId);\r\n        })\r\n        .on(\r\n          \"data\",\r\n          function (event) {\r\n            console.log(event); // same results as the optional callback above\r\n            if (\r\n              event.returnValues.user.toLocaleLowerCase() ===\r\n              web3Config.getAddress().toLocaleLowerCase()\r\n            ) {\r\n              let txLinkReturn =\r\n                constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].explorer +\r\n                \"/tx/\" +\r\n                event.transactionHash;\r\n              let returnAmount = web3Js.utils.fromWei(\r\n                event.returnValues.amountA.toLocaleLowerCase()\r\n              );\r\n              this.updateLedgerAfterResponse(\r\n                event.transactionHash,\r\n                txLinkReturn,\r\n                returnAmount\r\n              );\r\n            }\r\n          }.bind(this)\r\n        )\r\n        .on(\"changed\", function (event) {\r\n          console.log(event);\r\n          // remove event from local database\r\n        })\r\n        .on(\"error\", function (error, receipt) {\r\n          // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\r\n          console.log(error, receipt);\r\n        });\r\n    }\r\n    if (instanceSwapFactoryBinance !== null) {\r\n      let { web3Binance } = this.state;\r\n      let initialBlock = await web3Binance.eth.getBlockNumber();\r\n      setInterval(async () => {\r\n        const currentBlock = await web3Binance.eth.getBlockNumber();\r\n        instanceSwapFactoryBinance\r\n          .getPastEvents(\"allEvents\", {\r\n            fromBlock: initialBlock,\r\n            toBlock: currentBlock, // You can also specify 'latest'\r\n          })\r\n          .then(\r\n            async function (result) {\r\n              for (let i = 0; i < result.length; i++) {\r\n                console.log(result[i].event);\r\n                if (result[i].event === \"ClaimApprove\") {\r\n                  console.log(result[i]);\r\n                  if (\r\n                    result[i].returnValues.user.toLocaleLowerCase() ===\r\n                    web3Config.getAddress().toLocaleLowerCase()\r\n                  ) {\r\n                    let txLinkReturn =\r\n                      constantConfig[CONSTANT.NETWORK_ID.BINANCE].explorer +\r\n                      \"/tx/\" +\r\n                      result[i].transactionHash;\r\n                    let returnAmount = web3Js.utils\r\n                      .fromWei(result[i].returnValues.amountA)\r\n                      .toLocaleLowerCase();\r\n                    this.updateLedgerAfterResponse(\r\n                      result[i].transactionHash,\r\n                      txLinkReturn,\r\n                      returnAmount\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n            }.bind(this)\r\n          )\r\n          .catch((err) => console.error(err));\r\n        initialBlock = currentBlock;\r\n      }, 10000);\r\n    }\r\n  }\r\n  updateLedgerAfterResponse(hash, txLinkReturn, returnAmount) {\r\n    this.setState(\r\n      {\r\n        isSendingOrder: false,\r\n        txSentStatus: \"Success\",\r\n        txSentTime: new Date().toUTCString(),\r\n        tokenReceive: \"2\",\r\n        txReceiveTime: new Date().toUTCString(),\r\n        txIdReceive: hash,\r\n        whichButton: \"4\",\r\n        txLinkReturn: txLinkReturn,\r\n        receiveFundAmount: returnAmount,\r\n      },\r\n      async () => {\r\n        //   await this.enableInputs();\r\n      }\r\n    );\r\n  }\r\n  scrollToLedger() {\r\n    $(\"html\").animate({ scrollTop: 650 });\r\n  }\r\n\r\n  updateLicenseAddress(network, address, fees) {\r\n    // console.log(network, address)\r\n    // console.log(network === \"BSC\")\r\n    let netlicAdd = (network === \"BSC\" ? \"bscLicenseAddress\" : \"ethLicenseAddress\")\r\n    let netlicFees = (network === \"BSC\" ? \"bscLicenseFees\" : \"ethLicenseFees\")\r\n    let netlicFeesCurrent = (network === \"BSC\" ? \"bscLicenseFeesCurrent\" : \"ethLicenseFeesCurrent\")\r\n    this.setState({\r\n      [netlicAdd]: address,\r\n      [netlicFees]: fees,\r\n      [netlicFeesCurrent]: fees\r\n    }, () => {\r\n      this.setIsValidLicenseAddress();\r\n    })\r\n  }\r\n\r\n  toggle = (index) => {\r\n    let collapse = \"isOpen\" + index;\r\n    this.setState((prevState) => ({ [collapse]: !prevState[collapse] }));\r\n  };\r\n\r\n  async onNetworkChange(event) {\r\n    console.log(event.target.checked)\r\n    console.log(event.target.name)\r\n    this.setState({\r\n      [event.target.name]: event.target.checked\r\n    }, () => {\r\n      this.setIsValidLicenseAddress();\r\n    })\r\n  }\r\n\r\n  async floatOnly(event) {\r\n    if (event.shiftKey === true) event.preventDefault();\r\n\r\n    var code = event.keyCode;\r\n\r\n    if (\r\n      (code >= 48 && code <= 57) ||\r\n      (code >= 96 && code <= 105) ||\r\n      code === 8 ||\r\n      code === 9 ||\r\n      code === 37 ||\r\n      code === 39 ||\r\n      code === 46 ||\r\n      code === 190 ||\r\n      code === 110\r\n    ) {\r\n      // allowed characters\r\n    } else event.preventDefault();\r\n\r\n    if (\r\n      event.target.value.indexOf(\".\") !== -1 &&\r\n      (code === 190 || code === 110)\r\n    )\r\n      event.preventDefault();\r\n  }\r\n\r\n  async handleChange(event) {\r\n    const { value } = event.target;\r\n    this.setState({\r\n      showFeeInpt: value === \"option146\" ? true : false,\r\n      zeroIntegrationShow: value === \"\" ? true : false\r\n    }, () => {\r\n      this.setIsValidLicenseAddress()\r\n    })\r\n  };\r\n\r\n  handalFormChange = (e) => {\r\n    this.setState({\r\n      subDomain: e.target.value,\r\n    });\r\n    const isvalid = validatesubDomain(e.target.value);\r\n    if (!isvalid) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid subdomain\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errormsg: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  changeFontStyle = (e) => {\r\n    this.setState({\r\n      fontStyle: e.target.value,\r\n    });\r\n  };\r\n\r\n  toggalColor = (e, colorType, id) => {\r\n    e.stopPropagation();\r\n    document.getElementById(id).checked = true;\r\n    this.setState({\r\n      [colorType]: true,\r\n    });\r\n  };\r\n\r\n  handleChangeComplete = (color, node) => {\r\n    this.setState({ [node]: color.hex });\r\n  };\r\n\r\n  updateCloneData = (data) => {\r\n    this.setState({\r\n      cloneData: data,\r\n    });\r\n  };\r\n\r\n  closeChromePickerPopUp = (e) => {\r\n    e.stopPropagation();\r\n    this.setState({\r\n      showSecondaryColor: false,\r\n      showPrimaryColor: false,\r\n      showSwapButtonColor: false,\r\n    });\r\n  };\r\n\r\n  preview = () => {\r\n    const {\r\n      bgimage,\r\n      logoImage,\r\n      logoUrl,\r\n      subDomain,\r\n      primaryColor,\r\n      secondaryColor,\r\n      fontStyle,\r\n      backgroundOverLay,\r\n      swapButtonColor,\r\n      changeText,\r\n      sideBar,\r\n    } = this.state;\r\n    console.log(\"siedBar\", sideBar);\r\n    const isvalid = validatesubDomain(subDomain);\r\n    const isValidLogoUrl = isValidURL(logoUrl);\r\n    if (\r\n      logoImage !== \"\" &&\r\n      subDomain !== \"\" &&\r\n      isvalid &&\r\n      isValidLogoUrl\r\n    ) {\r\n      this.setState({\r\n        errormsg: \"\",\r\n        successmsg: \"\",\r\n      });\r\n      const r = document.querySelector(\":root\");\r\n      console.log(\"document\");\r\n      r.style.setProperty(\"--text-color\", primaryColor);\r\n      r.style.setProperty(\"--button-bg-color\", secondaryColor);\r\n      r.style.setProperty(\"--req-bg\", `url(${bgimage})`);\r\n      r.style.setProperty(\"--swap-btn-color\", swapButtonColor);\r\n      console.log(\"CloneForm\");\r\n      this.props.history.push({\r\n        pathname: \"/\",\r\n        state: {\r\n          cloneData: {\r\n            bgimage,\r\n            logoImage,\r\n            logoUrl,\r\n            subDomain,\r\n            primaryColor,\r\n            secondaryColor,\r\n            fontStyle,\r\n            backgroundOverLay,\r\n            isPreview: true,\r\n            swapButtonColor,\r\n            changeText,\r\n            sideBar,\r\n          },\r\n        },\r\n      });\r\n      this.updateCloneData({\r\n        bgimage,\r\n        logoImage,\r\n        subDomain,\r\n        logoUrl,\r\n        primaryColor,\r\n        secondaryColor,\r\n        fontStyle,\r\n        backgroundOverLay,\r\n        changeText,\r\n        swapButtonColor,\r\n        sideBar,\r\n      });\r\n    } else if (!isvalid) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid subdomain\",\r\n      });\r\n    } else if (!isValidLogoUrl) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid Url for behind your logo\",\r\n      });\r\n    } else if (logoImage === \"\") {\r\n      this.setState({\r\n        errormsg: \"Please add logo\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errormsg: \"All fields are mandatory\",\r\n      });\r\n    }\r\n  };\r\n\r\n  Main = async () => {\r\n    const file = document.querySelector(\"#contained-button-file\").files[0];\r\n    const image = await toBase64(file);\r\n    this.setState({\r\n      bgimage: image,\r\n    });\r\n  };\r\n\r\n  changeLogo = async () => {\r\n    const file = document.querySelector(\"#contained-button-file-logo\").files[0];\r\n    const image = await toBase64(file);\r\n    this.setState({\r\n      logoImage: image,\r\n    });\r\n  };\r\n  changeurl = (e) => {\r\n    const link = e.target.value;\r\n    this.setState({\r\n      logoUrl: link,\r\n    });\r\n  };\r\n\r\n  changeOverlay = (e) => {\r\n    this.setState({\r\n      backgroundOverLay: e.target.value,\r\n    });\r\n  };\r\n\r\n  async setIsValidLicenseAddress() {\r\n    let { showFeeInpt, bsc, ethereum, bscLicenseAddress, ethLicenseAddress } = this.state;\r\n    let isValidLicenseAddress = false;\r\n    if (showFeeInpt) {\r\n      if (bsc || ethereum) {\r\n        if (bsc && bscLicenseAddress !== CONSTANT.ZERO_ADDRESS) {\r\n          isValidLicenseAddress = true;\r\n        } else {\r\n          isValidLicenseAddress = false;\r\n        }\r\n        if (ethereum && ethLicenseAddress !== CONSTANT.ZERO_ADDRESS) {\r\n          if (bsc && bscLicenseAddress !== CONSTANT.ZERO_ADDRESS) {\r\n            isValidLicenseAddress = true;\r\n          } else {\r\n            if (ethereum && ethLicenseAddress !== CONSTANT.ZERO_ADDRESS && !bsc)\r\n              isValidLicenseAddress = true;\r\n            else\r\n              isValidLicenseAddress = false;\r\n          }\r\n        } else {\r\n          if (bsc && bscLicenseAddress !== CONSTANT.ZERO_ADDRESS && !ethereum) {\r\n            isValidLicenseAddress = true;\r\n          } else {\r\n            isValidLicenseAddress = false;\r\n          }\r\n        }\r\n      } else {\r\n        if (!bsc && !ethereum)\r\n          isValidLicenseAddress = false;\r\n        else\r\n          isValidLicenseAddress = true;\r\n      }\r\n      // isValidLicenseAddress = ((bscLicenseAddress !== CONSTANT.ZERO_ADDRESS) || (ethLicenseAddress !== CONSTANT.ZERO_ADDRESS));\r\n    } else {\r\n      isValidLicenseAddress = true;\r\n    }\r\n    this.setState({\r\n      allowClone: isValidLicenseAddress\r\n    }, () => {\r\n      this.forceUpdate()\r\n    })\r\n  }\r\n\r\n  uploadData = async () => {\r\n    const {\r\n      bgimage,\r\n      logoImage,\r\n      logoUrl,\r\n      subDomain,\r\n      primaryColor,\r\n      secondaryColor,\r\n      fontStyle,\r\n      backgroundOverLay,\r\n      swapButtonColor,\r\n      sideBar,\r\n      bscLicenseAddress,\r\n      ethLicenseAddress,\r\n      allowClone\r\n    } = this.state;\r\n    const isvalid = validatesubDomain(subDomain);\r\n    const isValidLogoUrl = logoUrl !== undefined ? isValidURL(logoUrl) : false;\r\n    if (\r\n      logoImage !== \"\" &&\r\n      subDomain !== \"\" &&\r\n      isvalid &&\r\n      isValidLogoUrl &&\r\n      allowClone\r\n    ) {\r\n      this.setState({\r\n        errormsg: \"\",\r\n        successmsg: \"\",\r\n        isloading: true,\r\n      });\r\n      try {\r\n        const res = await axios.post(\r\n          \"https://wildcard.bswap.info:1830/api/v1/subdomain/addSubDomain\",\r\n          {\r\n            licenseeAddress: web3Config.getAddress(),\r\n            bscLicenseAddress: bscLicenseAddress,\r\n            ethLicenseAddress: ethLicenseAddress,\r\n            backGroundImage: bgimage,\r\n            primaryColors: primaryColor,\r\n            seconderyColor: secondaryColor,\r\n            subDomain: subDomain,\r\n            logo: logoImage,\r\n            logoUrl: logoUrl,\r\n            fontStyle,\r\n            backgroundOverLay,\r\n            swapButton: swapButtonColor,\r\n            sideBar,\r\n          }\r\n        );\r\n        console.log(res);\r\n\r\n        if (res.data.response_code === 200) {\r\n          this.setState({\r\n            successmsg: res.data.response_message,\r\n          });\r\n          const href = window.location.href;\r\n          const domaindata = href\r\n            .replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\")\r\n            .split(\"/\")[0];\r\n          this.clearPreview();\r\n          this.setState({\r\n            isloading: false,\r\n            visitDomain: `http://${subDomain}.${domaindata}`,\r\n          });\r\n        } else if (res.data.response_code === 409) {\r\n          this.setState({\r\n            errormsg: res.data.response_message,\r\n            isloading: false,\r\n          });\r\n        } else {\r\n          notificationConfig.error(\"\")\r\n          this.setState({\r\n            errormsg: \"Something went wrong please try again later\",\r\n            isloading: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setState({\r\n          isloading: false,\r\n        });\r\n      }\r\n    } else if (!isvalid) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid subdomain\",\r\n      });\r\n      notificationConfig.error(\"Please enter valid subdomain\")\r\n    } else if (!isValidLogoUrl) {\r\n      this.setState({\r\n        errormsg: \"Please enter valid Url for behind your logo\",\r\n      });\r\n      notificationConfig.error(\"Please enter valid Url for behind your logo\")\r\n    } else if (logoImage === \"\") {\r\n      this.setState({\r\n        errormsg: \"Please add logo\",\r\n      });\r\n      notificationConfig.error(\"Please add logo\")\r\n    } else if (!allowClone) {\r\n      this.setState({\r\n        errormsg: \"Please create license contract\",\r\n      });\r\n      notificationConfig.error(\"Please create license contract\")\r\n    } else {\r\n      this.setState({\r\n        errormsg: \"All fields are mandatory\",\r\n      });\r\n      notificationConfig.error(\"All fields are mandatory\")\r\n    }\r\n  };\r\n\r\n  clearPreview = () => {\r\n    const r = document.querySelector(\":root\");\r\n    r.style.removeProperty(\"--text-color\");\r\n    r.style.removeProperty(\"--button-bg-color\");\r\n    r.style.removeProperty(\"--req-bg\");\r\n    this.updateCloneData({\r\n      cloneData: {},\r\n    });\r\n    this.props.history.push({\r\n      pathname: \"\",\r\n      state: {\r\n        cloneData: {},\r\n      },\r\n    });\r\n  };\r\n  changeTypeofLicense = (e) => {\r\n    this.setState({\r\n      typeofLicense: e.target.value,\r\n    });\r\n  };\r\n  _onChangeRadio(e) {\r\n    const name = e.target.name;\r\n    this.setState({\r\n      [name]: e.target.value,\r\n    });\r\n    if (name === \"changeText\" && e.target.value === \"No\") {\r\n      this.setState({\r\n        primaryColor: \"#ffffff\",\r\n        secondaryColor: \"#5c6bc0\",\r\n        swapButtonColor: \"#91dc27\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async setLicenseeFee(network, reimbursementAddress, vaultAddress, newFees) {\r\n\r\n    await web3Config.connectWallet(0);\r\n    let newNetworkId = web3Config.getNetworkId()\r\n\r\n    if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\r\n      notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\r\n      return;\r\n    }\r\n    if (\r\n      network === \"Ethereum\" &&\r\n      (newNetworkId === 97 || newNetworkId === 56)\r\n    ) {\r\n      notificationConfig.warning(\"Change metamask network to Ethereum!\");\r\n      return;\r\n    } else if (\r\n      network === \"BSC\" &&\r\n      (newNetworkId === 42 || newNetworkId === 1)\r\n    ) {\r\n      notificationConfig.warning(\"Change metamask network to Binance!\");\r\n      return;\r\n    }\r\n\r\n    // this.setState({ creatingLicense: true })\r\n    console.log(reimbursementAddress, vaultAddress, newFees)\r\n\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    let address = web3Config.getAddress();\r\n\r\n    let reimbursementContract = new ReimbursementContract(web3, networkId);\r\n\r\n    let setLicenseeFeeData = {};\r\n\r\n    setLicenseeFeeData[\"reimbursementAddress\"] = reimbursementAddress;\r\n    setLicenseeFeeData[\"vault\"] = vaultAddress;\r\n    setLicenseeFeeData[\"projectContract\"] = constantConfig[networkId].swapFactoryContract;\r\n    setLicenseeFeeData[\"fee\"] = Number(newFees);\r\n\r\n    reimbursementContract.setLicenseeFee(\r\n      setLicenseeFeeData,\r\n      (hash) => {\r\n        this.setState({\r\n          // swapLoading: true,\r\n          // txIdSent: hash,\r\n          // txLinkSend: data[networkId].explorer + '/tx/' + hash,\r\n        });\r\n      },\r\n      async (receipt) => {\r\n        // this.setState({ crtLicSuccess: true, creatingLicense: false })\r\n        // this.props.updateLicenseAddress(this.props.network, await reimbursementContract.getVaultAddress(receipt), licenseeFees)\r\n        notificationConfig.success('Fees Updated Successfully!');\r\n      },\r\n      async (error) => {\r\n        // this.setState({ creatingLicense: false })\r\n        if (error.code === 4001) {\r\n          notificationConfig.error(\"Transaction rejected!\")\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      bgimage,\r\n      logoImage,\r\n      logoUrl,\r\n      subDomain,\r\n      primaryColor,\r\n      showPrimaryColor,\r\n      showSecondaryColor,\r\n      secondaryColor,\r\n      errormsg,\r\n      successmsg,\r\n      fontStyle,\r\n      isloading,\r\n      visitDomain,\r\n      typeofLicense,\r\n      changeFee,\r\n      displayToken,\r\n      changeText,\r\n      swapButtonColor,\r\n      showSwapButtonColor,\r\n      sideBar,\r\n      bsc,\r\n      ethereum,\r\n      bscLicenseAddress,\r\n      ethLicenseAddress,\r\n      bscLicenseTokenBalance,\r\n      ethLicenseTokenBalance,\r\n      allowClone\r\n    } = this.state;\r\n    return (\r\n      <main id=\"main\" className=\"smartSwap\">\r\n        <div className=\"fullscreen-bg\">\r\n          <div className=\"fsbg_sad01\"></div>\r\n          <div className=\"fsbg_container\">\r\n            <video loop autoPlay muted className=\"fullscreen-bg__video\">\r\n              <source src={CONSTANT.PrePath + \"/video/14559736-hd.webm?v=1.18\"} type=\"video/webm\" />\r\n              <source src={CONSTANT.PrePath + \"/video/14559736-hd.mp4?v=1.18\"} type=\"video/mp4\" />\r\n              <source src={CONSTANT.PrePath + \"/video/14559736-hd.ogv?v=1.18\"} type=\"video/ogg\" />\r\n            </video>\r\n          </div>\r\n        </div>\r\n        <div className=\"main\">\r\n          {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n          <RightSideMenu\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n            cloneData={this.state.cloneData}\r\n          ></RightSideMenu>\r\n          {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n          <Header\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n            cloneData={this.state.cloneData}\r\n          ></Header>\r\n          {/* <!--======================= HEADER END =====================--> */}\r\n          <div className=\"mainBlock\">\r\n            {/* <!--======================= SWAP BLOCK START =====================--> */}\r\n\r\n            <Link to=\"/\" class=\"close-Icon\" style={{ zIndex: '1000', top: '70px', right: '35px' }}></Link>\r\n            <div className=\"swap-Block\">\r\n              <div className=\"container-Grid\">\r\n                <div className=\"smeTitle01-v2\"> {/*   onClick={() => { this.openPopup(\"WithdrawToken\"); }} */}\r\n                  Get Your Own License For FREE\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-textBox\">\r\n                <div className=\"container-Grid\">\r\n                  <div className=\"gwFormMbox\">\r\n                    <div className=\"gwFormLMbox\">\r\n                      <div className=\"gwFormSTitle01\">\r\n                        <span>1</span> Set up your fees and reimbursement\r\n                      </div>\r\n\r\n                      <div className=\"gwFormSbox01\">\r\n                        <div className=\"gwFormTitle01\" >Do you want to charge your users a fee above our fee?</div>\r\n                        <div className=\"gwFormSFormbox02\">\r\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                            <input type=\"radio\" id=\"rr01\" checked={this.state.showFeeInpt ? true : false} name=\"stepin46\" value=\"option146\" onChange={this.handleChange.bind(this)} />\r\n                            <label htmlFor=\"rr01\">Yes </label>\r\n                          </div>\r\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                            <input type=\"radio\" id=\"rr02\" checked={this.state.showFeeInpt ? false : true} name=\"stepin46\" value=\"option145\" onChange={this.handleChange.bind(this)} />\r\n                            <label htmlFor=\"rr02\">No</label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {this.state.showFeeInpt ?\r\n                        <div>\r\n                          <div className=\"gwFormSbox01\">\r\n                            <div className=\"gwFormTitle01\" >Choose blockchain  <i className=\"help-circle\"> <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"You can only charge fees and reimbursement users with your tokens on blockchains that your token is deploy on. If your token is for example on one chain like Ethereum users from other chains like BSC can use your license but they will not be charged with fees or reimbursement for it\" aria-hidden=\"true\"></i> </i>\r\n                            </div>\r\n                            <div className=\"gwFormSCheckbx01\">\r\n                              <div className=\"md-checkbox\">\r\n                                <input type=\"checkbox\" id=\"rr04\" name=\"bsc\" onChange={(e) => this.onNetworkChange(e)} />\r\n                                <label htmlFor=\"rr04\">BSC </label>\r\n                              </div>\r\n                              <div className=\"md-checkbox\">\r\n                                <input type=\"checkbox\" id=\"rr03\" name=\"ethereum\" onChange={(e) => this.onNetworkChange(e)} />\r\n                                <label htmlFor=\"rr03\">Ethereum </label>\r\n                              </div>\r\n                              <div className=\"md-checkbox\">\r\n                                <input type=\"checkbox\" id=\"rr05\" name=\"polygon\" onChange={(e) => this.onNetworkChange(e)} disabled />\r\n                                <label htmlFor=\"rr05\">Polygon </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {this.state.bsc ?\r\n                            <CreateLicence reimbursementAddress={constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract} network=\"BSC\" currency=\"BNB\" connectWallet={() => { this.connectWallet() }} web3={this.state.web3} updateLicenseAddress={this.updateLicenseAddress.bind(this)} web3Binance={this.state.web3Binance}></CreateLicence>\r\n                            : null}\r\n                          {this.state.ethereum ?\r\n                            <CreateLicence reimbursementAddress={constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract} network=\"Ethereum\" currency=\"ETH\" connectWallet={() => { this.connectWallet() }} web3={this.state.web3} updateLicenseAddress={this.updateLicenseAddress.bind(this)} web3Ethereum={this.state.web3Ethereum}></CreateLicence>\r\n                            : null}\r\n                          {this.state.polygon ?\r\n                            <CreateLicence network=\"Polygon\" currency=\"MATIC\"></CreateLicence>\r\n                            : null}\r\n\r\n                        </div>\r\n                        : null}\r\n\r\n                      {/* <div className=\"gwFormBRBox01\">\r\n                        <div className=\"gwFormBRTitle01\">\r\n                          <span>Ethereum</span>\r\n                        </div>\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Add your native token smart contract on Ethereum\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>TOKEN</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Add a pool contract between your TOKEN to ETH\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>TOKEN</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            How many days users need to stake to get 100%\r\n                            reimbursement?\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>DAYS</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Choose the token ratio users will need to stake\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>: 1</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <button className=\"gwFormBTN02\">\r\n                          Connect your Ethereum wallet to create a license on\r\n                          Ethereum{\" \"}\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div className=\"gwFormBRBox01\">\r\n                        <div className=\"gwFormBRTitle01\">\r\n                          <span>BSC</span>\r\n                        </div>\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Add your native token smart contract on BSC\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>TOKEN</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Add a pool contract between your TOKEN to BNB\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>TOKEN</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            How many days users need to stake to get 100%\r\n                            reimbursement?\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>DAYS</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"gwFormSbox01\">\r\n                          <div className=\"gwFormTitle01\">\r\n                            Choose the token ratio users will need to stake\r\n                            <i className=\"help-circle\">\r\n                              {\" \"}\r\n                              <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Help Text\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </i>\r\n                          </div>\r\n                          <div className=\"gwFormSFormbox01\">\r\n                            <input type=\"text\" /> <span>: 1</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <button className=\"gwFormBTN02 greenC\">\r\n                          <i className=\"fas fa-check\"></i> BSC license been\r\n                          created successfully\r\n                        </button>\r\n                      </div> */}\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"gwFormRMbox\">\r\n                      <div className=\"gwFormSTitle01\">\r\n                        <span>2</span>Set up your design{\" \"}\r\n                      </div>\r\n                      <div className=\"gwFormSbox01\">\r\n                        <div className=\"gwFormTitle01\">\r\n                          Choose the type of integration{\" \"}\r\n                        </div>\r\n                        <div className=\"gwFormSFormbox02\">\r\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              id=\"radio145\"\r\n                              name=\"typeofLicense\"\r\n                              checked={this.state.typeofLicense === \"Zero integration\" ? true : false}\r\n                              value=\"Zero integration\"\r\n                              defaultChecked\r\n                              onChange={this._onChangeRadio}\r\n                            />\r\n                            <label htmlFor=\"radio145\">\r\n                              Zero integration\r\n                              <i className=\"help-circle\">\r\n                                <i\r\n                                  className=\"fas fa-question-circle protip\"\r\n                                  data-pt-position=\"top\"\r\n                                  data-pt-title=\"This option allow licensees to create an instant license under one minute, with no coding knowledge needed or any server costs.\"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              </i>\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              id=\"radio146\"\r\n                              name=\"typeofLicense\"\r\n                              checked={this.state.typeofLicense === \"Smart contract integration\" ? true : false}\r\n                              value=\"Smart contract integration\"\r\n                              onChange={this._onChangeRadio}\r\n                            // onClick={() => { notificationConfig.info(\"Coming Soon!\") }}\r\n                            // disabled\r\n                            />\r\n                            <label htmlFor=\"radio146\">\r\n                              Smart contract integration\r\n                              <i className=\"help-circle\">\r\n                                <i\r\n                                  className=\"fas fa-question-circle protip\"\r\n                                  data-pt-position=\"top\"\r\n                                  data-pt-title=\"This option allow licensees to designed their own UI and do direct integration with the smart contract code. \"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              </i>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {typeofLicense === \"Zero integration\" && (\r\n                        <>\r\n\r\n                          <div className=\"gwFormSbox01\">\r\n                            {/* <div className=\"gwFormTitle01\">\r\n                              Do you want to display your native token first during\r\n                              the lauding?\r\n                              <i className=\"help-circle\">\r\n                                <i\r\n                                  className=\"fas fa-question-circle protip\"\r\n                                  data-pt-position=\"top\"\r\n                                  data-pt-title=\"Help Text\"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              </i>\r\n                            </div>\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"rr200\"\r\n                                  defaultChecked\r\n                                  name=\"stepin101\"\r\n                                  value=\"1\"\r\n                                />\r\n                                <label htmlFor=\"rr200\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"rr201\"\r\n                                  name=\"stepin101\"\r\n                                  value=\"option145\"\r\n                                />\r\n                                <label htmlFor=\"rr201\">No</label>\r\n                              </div>\r\n                            </div> */}\r\n                            {/* <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"rr202\"\r\n                                  name=\"displayToken\"\r\n                                  value=\"Display all tokens\"\r\n                                  onChange={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"rr202\">\r\n                                  Display all tokens\r\n                                  <i className=\"help-circle\">\r\n                                    <i\r\n                                      className=\"fas fa-question-circle protip\"\r\n                                      data-pt-position=\"top\"\r\n                                      data-pt-title=\"Help Text\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </i>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline gwFroWidthFix01\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"rr203\"\r\n                                  name=\"displayToken\"\r\n                                  value=\"Display token lists\"\r\n                                  onChange={this._onChangeRadio}\r\n                                  defaultChecked\r\n                                />\r\n                                <label htmlFor=\"rr203\">\r\n                                  Display token lists\r\n                                  <i className=\"help-circle\">\r\n                                    <i\r\n                                      className=\"fas fa-question-circle protip\"\r\n                                      data-pt-position=\"top\"\r\n                                      data-pt-title=\"Help Text\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </i>\r\n                                </label>\r\n                              </div>\r\n                            </div> */}\r\n                          </div>\r\n                          {/* {displayToken === \"Display token lists\" && (\r\n                            <div className=\"gwFormSbox01\">\r\n                              <div class=\"gwFormSFormbox01\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  style={{ width: \"100%\" }}\r\n                                  placeholder=\"https:// or ipfs:// or ENS name\"\r\n                                  defaultValue=\"\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          )} */}\r\n\r\n                          <div className=\"gwFormSbox01 \">\r\n                            <div className=\"gwFormTitle01\">\r\n                              Choose your subdomain name\r\n                              <i className=\"help-circle\">\r\n                                <i\r\n                                  className=\"fas fa-question-circle protip\"\r\n                                  data-pt-position=\"top\"\r\n                                  data-pt-title=\"After you choose your subdomain, you can create a redirect with a mask to it, from your own main domain. so your users will not even know about that subdomain and it will look and fell like it yours\"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              </i>{\" \"}\r\n                            </div>\r\n                            <div className=\"gwFormSFormbox01 v2 smFixer03\">\r\n                              <input\r\n                                type=\"text\"\r\n                                value={subDomain}\r\n                                onChange={this.handalFormChange}\r\n                              />{\" \"}\r\n                              <span>.smartswap.exchange </span>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                          <div className=\"gwFormSbox01 NpDisplyFix01 \">\r\n                            <div className=\"gwFormSubBox01 smFixer04\">\r\n                              Add logo\r\n                              <div className=\"SSMainInputBX \">\r\n                                <input\r\n                                  placeholder=\"Choose file\"\r\n                                  disabled=\"disabled\"\r\n                                  className=\"ssInputtype01\"\r\n                                />\r\n                                <label className=\"custom-file-input\">\r\n                                  <input\r\n                                    type=\"file\"\r\n                                    id=\"contained-button-file-logo\"\r\n                                    onChange={this.changeLogo.bind(this)}\r\n                                    accept=\"image/*\"\r\n                                  />\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"gwFormSubBox01 smFixer04\">\r\n                              Add a URL link behind your logo\r\n                              <div className=\"SSMainInputBX\">\r\n                                <input\r\n                                  id=\"urlLink\"\r\n                                  placeholder=\"http:///www.yourwebsite.com\"\r\n                                  style={{ width: \"100%\", color: \"white\" }}\r\n                                  className=\"ssInputtype01\"\r\n                                  value={logoUrl}\r\n                                  onChange={this.changeurl}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {logoImage !== \"\" && (\r\n                            <div className=\"gwFormSbox01 NpDisplyFix01 \">\r\n                              <img src={logoImage} alt=\"\" width=\"200\" />\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"gwFormSbox01 NpDisplyFix01 smFixer04\">\r\n                            <div className=\"gwFormSubBox01\">\r\n                              Add new background\r\n                              <div className=\"SSMainInputBX\">\r\n                                <input\r\n                                  placeholder=\"Choose file\"\r\n                                  disabled=\"disabled\"\r\n                                  className=\"ssInputtype01\"\r\n                                />\r\n                                <label className=\"custom-file-input\">\r\n                                  <input\r\n                                    type=\"file\"\r\n                                    onChange={this.Main.bind(this)}\r\n                                    id=\"contained-button-file\"\r\n                                    accept=\"image/*\"\r\n                                  />\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"gwFormSubBox01\">\r\n                              Background dark layer\r\n                              <div className=\"dragorInput\">\r\n                                <div className=\"bg-slider\">\r\n                                  <input\r\n                                    type=\"range\"\r\n                                    min=\"1\"\r\n                                    max=\"99\"\r\n                                    value={this.state.backgroundOverLay}\r\n                                    class=\"overlay-slider\"\r\n                                    id=\"myRange\"\r\n                                    onChange={this.changeOverlay}\r\n                                    title=\"title\"\r\n                                  />\r\n\r\n                                  <span className=\"bar\"></span>\r\n\r\n                                  <span\r\n                                    className=\"progress\"\r\n                                    style={{\r\n                                      width: `calc(${this.state.backgroundOverLay}% )`,\r\n                                    }}\r\n                                  ></span>\r\n                                  <span className=\"text\">0%</span>\r\n                                  <span className=\"text right\">100%</span>\r\n                                  <span\r\n                                    className=\"percent\"\r\n                                    style={{\r\n                                      left: `calc(${this.state.backgroundOverLay\r\n                                        }% - ${this.state.backgroundOverLay / 3 - 23\r\n                                        }px)`,\r\n                                      borderRadius: \"0\",\r\n                                      border: \"0\",\r\n                                      boxShadow: \"none\",\r\n                                    }}\r\n                                  >\r\n                                    {this.state.backgroundOverLay}%\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {bgimage !== \"\" && (\r\n                            <div className=\"gwFormSbox01 NpDisplyFix01 \">\r\n                              <img src={bgimage} alt=\"\" width=\"200\" />\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"gwFormSbox01 smFixer04\">\r\n                            <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\r\n                              Keep SmartSwap side bar\r\n                            </div>\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio21\"\r\n                                  name=\"sideBar\"\r\n                                  value=\"true\"\r\n                                  defaultChecked\r\n                                  onClick={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"radio21\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio22\"\r\n                                  name=\"sideBar\"\r\n                                  value=\"false\"\r\n                                  defaultChecked={\r\n                                    this.state.sideBar === \"false\"\r\n                                  }\r\n                                  onClick={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"radio22\">No </label>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\r\n                              Change button and text\r\n                            </div>\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio11\"\r\n                                  name=\"changeText\"\r\n                                  value=\"Yes\"\r\n                                  defaultChecked\r\n                                  onClick={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"radio11\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio12\"\r\n                                  name=\"changeText\"\r\n                                  value=\"No\"\r\n                                  defaultChecked={\r\n                                    this.state.changeText === \"No\"\r\n                                  }\r\n                                  onClick={this._onChangeRadio}\r\n                                />\r\n                                <label htmlFor=\"radio12\">No </label>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\r\n                              Keep button \"BECOME A SWAP PROVIDER\"\r\n                            </div>\r\n\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio13\"\r\n                                  name=\"aaaa\"\r\n                                  value=\"Yes\"\r\n                                  defaultChecked\r\n                                />\r\n                                <label htmlFor=\"radio13\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio14\"\r\n                                  name=\"aaaa\"\r\n                                  value=\"No\"\r\n                                />\r\n                                <label htmlFor=\"radio14\">No </label>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"gwFormTitle01\" style={{ margin: '20px 0 0 0' }}>\r\n                              Keep button \"GET YOUR OWN FREE LICENSE\"\r\n                            </div>\r\n\r\n                            <div className=\"gwFormSFormbox02\">\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio15\"\r\n                                  name=\"bbb\"\r\n                                  value=\"Yes\"\r\n                                  defaultChecked\r\n                                />\r\n                                <label htmlFor=\"radio15\">Yes</label>\r\n                              </div>\r\n                              <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  id=\"radio16\"\r\n                                  name=\"bbb\"\r\n                                  value=\"No\"\r\n                                />\r\n                                <label htmlFor=\"radio16\">No </label>\r\n                              </div>\r\n                            </div> */}\r\n                          </div>\r\n                          {changeText === \"Yes\" && (\r\n                            <>\r\n                              <div className=\"gwFormSbox01\">\r\n                                <div className=\"gwFormTitle01\">\r\n                                  Select font style\r\n                                </div>\r\n                                <select\r\n                                  name=\"fontStyle\"\r\n                                  id=\"fontStyle\"\r\n                                  className=\"subdomain\"\r\n                                  value={fontStyle}\r\n                                  onChange={this.changeFontStyle}\r\n                                  style={{\r\n                                    padding: \"20px 15px\",\r\n                                    width: \"100%\",\r\n                                    backgroundColor: \"#16171e\",\r\n                                    color: \"#fff\",\r\n                                    border: 0,\r\n                                  }}\r\n                                >\r\n                                  <option value=\"Default\">Default</option>\r\n                                  <option value=\"Montserrat\">Montserrat</option>\r\n                                  <option value=\"Nunito\">Nunito</option>\r\n                                  <option value=\"Poppins\">Poppins</option>\r\n                                  <option value=\"Roboto\">Roboto</option>\r\n                                </select>\r\n                                {/* <div className=\"LiproDropdown\">\r\n                                  <button\r\n                                    className=\"LiproDDbtn01\"\r\n                                    onClick={() => this.toggle(1)}\r\n                                  >\r\n                                    <div className=\"ddIconBX\">Default</div>\r\n                                    <i className=\"fas fa-caret-down\"></i>\r\n                                  </button>\r\n                                  <div className=\"ddContainer\">\r\n                                    <Collapse\r\n                                      isOpen={this.state.isOpen1}\r\n                                      className={\"collapse-css-transition\"}\r\n                                    >\r\n                                      <button className=\"LiproDDbtn01\">\r\n                                        <div className=\"ddIconBX\">Font 01</div>\r\n                                      </button>\r\n                                      <button className=\"LiproDDbtn01\">\r\n                                        <div className=\"ddIconBX\">Font 02</div>\r\n                                      </button>\r\n                                    </Collapse>\r\n                                    \r\n                                  </div>\r\n                                </div> */}\r\n                              </div>\r\n\r\n                              <div className=\"colorPlateMBox npFixer05\">\r\n                                <div className=\"colorPlateTitle01\">\r\n                                  Text color\r\n                                </div>\r\n                                <div className=\"colorPlateSBox01\">\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"s01\"\r\n                                      name=\"s11\"\r\n                                      value=\"s10\"\r\n                                      defaultChecked\r\n                                      onClick={() =>\r\n                                        this.setState({ primaryColor: \"#fff\" })\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"s01\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={() => {\r\n                                      document.getElementById(\r\n                                        \"s01\"\r\n                                      ).checked = true;\r\n                                      this.setState({ primaryColor: \"#fff\" });\r\n                                    }}\r\n                                  >\r\n                                    Current color{\" \"}\r\n                                    <div\r\n                                      className=\"ColorBX\"\r\n                                      style={{ backgroundColor: \"#fff\" }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"chevrBox\">\r\n                                    <i className=\"fas fa-chevron-right\"></i>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  className=\"colorPlateSBox02\"\r\n                                  style={{ position: \"relative\" }}\r\n                                >\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"s02\"\r\n                                      name=\"s11\"\r\n                                      value=\"s11\"\r\n                                      defaultChecked={primaryColor !== \"#fff\"}\r\n                                    />\r\n                                    <label htmlFor=\"s02\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={(e) => {\r\n                                      this.toggalColor(\r\n                                        e,\r\n                                        \"showPrimaryColor\",\r\n                                        \"s02\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    New color\r\n                                    <span className=\"colorPlaterSbx\">\r\n                                      <div\r\n                                        className=\"ColorBX\"\r\n                                        style={{ background: primaryColor }}\r\n                                      ></div>\r\n                                      <button>\r\n                                        {\" \"}\r\n                                        <i class=\"fas fa-sort-down\"></i>{\" \"}\r\n                                      </button>\r\n                                    </span>\r\n                                  </div>\r\n                                  {showPrimaryColor && (\r\n                                    <>\r\n                                      <div\r\n                                        className=\"overPicker\"\r\n                                        onClick={this.closeChromePickerPopUp.bind(\r\n                                          this\r\n                                        )}\r\n                                      ></div>\r\n                                      <div className=\"color-picker\">\r\n                                        <ChromePicker\r\n                                          color={primaryColor}\r\n                                          onChangeComplete={(color) => {\r\n                                            this.handleChangeComplete(\r\n                                              color,\r\n                                              \"primaryColor\"\r\n                                            );\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"colorPlateMBox npFixer05\">\r\n                                <div className=\"colorPlateTitle01\">\r\n                                  Connect your wallet button\r\n                                </div>\r\n                                <div className=\"colorPlateSBox01\">\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"s03\"\r\n                                      name=\"s12\"\r\n                                      value=\"s12\"\r\n                                      defaultChecked\r\n                                      onClick={() =>\r\n                                        this.setState({\r\n                                          secondaryColor: \"#5c6bc0\",\r\n                                        })\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"s03\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={() => {\r\n                                      document.getElementById(\r\n                                        \"s03\"\r\n                                      ).checked = true;\r\n                                      this.setState({\r\n                                        secondaryColor: \"#5c6bc0\",\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Current color{\" \"}\r\n                                    <div\r\n                                      className=\"ColorBX\"\r\n                                      style={{ backgroundColor: \"#5c6bc0\" }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"chevrBox\">\r\n                                    <i className=\"fas fa-chevron-right\"></i>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  className=\"colorPlateSBox02\"\r\n                                  style={{ position: \"relative\" }}\r\n                                >\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"s04\"\r\n                                      name=\"s12\"\r\n                                      value=\"s12\"\r\n                                      defaultChecked={\r\n                                        secondaryColor !== \"#5c6bc0\"\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"s04\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={(e) => {\r\n                                      this.toggalColor(\r\n                                        e,\r\n                                        \"showSecondaryColor\",\r\n                                        \"s04\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    New color\r\n                                    <span className=\"colorPlaterSbx\">\r\n                                      <div\r\n                                        className=\"ColorBX\"\r\n                                        style={{ background: secondaryColor }}\r\n                                      ></div>\r\n                                      <button>\r\n                                        {\" \"}\r\n                                        <i class=\"fas fa-sort-down\"></i>{\" \"}\r\n                                      </button>\r\n                                    </span>\r\n                                  </div>\r\n                                  {showSecondaryColor && (\r\n                                    <>\r\n                                      <div\r\n                                        className=\"overPicker\"\r\n                                        onClick={this.closeChromePickerPopUp.bind(\r\n                                          this\r\n                                        )}\r\n                                      ></div>\r\n                                      <div className=\"color-picker\">\r\n                                        <ChromePicker\r\n                                          color={secondaryColor}\r\n                                          onChangeComplete={(color) => {\r\n                                            this.handleChangeComplete(\r\n                                              color,\r\n                                              \"secondaryColor\"\r\n                                            );\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"colorPlateMBox npFixer05\">\r\n                                <div className=\"colorPlateTitle01\">\r\n                                  Swap button\r\n                                </div>\r\n                                <div className=\"colorPlateSBox01\">\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"swap\"\r\n                                      name=\"swapButtonColor\"\r\n                                      value=\"s12\"\r\n                                      defaultChecked\r\n                                      onClick={() =>\r\n                                        this.setState({\r\n                                          swapButtonColor: \"#91dc27\",\r\n                                        })\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"swap\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={() => {\r\n                                      document.getElementById(\r\n                                        \"swap\"\r\n                                      ).checked = true;\r\n                                      this.setState({\r\n                                        swapButtonColor: \"#91dc27\",\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Current color{\" \"}\r\n                                    <div\r\n                                      className=\"ColorBX\"\r\n                                      style={{ backgroundColor: \"#91dc27\" }}\r\n                                    ></div>\r\n                                  </div>\r\n                                  <div className=\"chevrBox\">\r\n                                    <i className=\"fas fa-chevron-right\"></i>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  className=\"colorPlateSBox02\"\r\n                                  style={{ position: \"relative\" }}\r\n                                >\r\n                                  <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      id=\"swap1\"\r\n                                      name=\"swapButtonColor\"\r\n                                      value=\"s12\"\r\n                                      defaultChecked={\r\n                                        swapButtonColor !== \"#91dc27\"\r\n                                      }\r\n                                    />\r\n                                    <label htmlFor=\"swap1\"></label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"colorPlater\"\r\n                                    onClick={(e) => {\r\n                                      this.toggalColor(\r\n                                        e,\r\n                                        \"showSwapButtonColor\",\r\n                                        \"swap1\"\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    New color\r\n                                    <span className=\"colorPlaterSbx\">\r\n                                      <div\r\n                                        className=\"ColorBX\"\r\n                                        style={{ background: swapButtonColor }}\r\n                                      ></div>\r\n                                      <button>\r\n                                        {\" \"}\r\n                                        <i class=\"fas fa-sort-down\"></i>{\" \"}\r\n                                      </button>\r\n                                    </span>\r\n                                  </div>\r\n                                  {showSwapButtonColor && (\r\n                                    <>\r\n                                      <div\r\n                                        className=\"overPicker\"\r\n                                        onClick={this.closeChromePickerPopUp.bind(\r\n                                          this\r\n                                        )}\r\n                                      ></div>\r\n                                      <div className=\"color-picker\">\r\n                                        <ChromePicker\r\n                                          color={swapButtonColor}\r\n                                          onChangeComplete={(color) => {\r\n                                            this.handleChangeComplete(\r\n                                              color,\r\n                                              \"swapButtonColor\"\r\n                                            );\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </>\r\n                          )}\r\n                          {errormsg !== \"\" && (\r\n                            <p style={{ color: \"red\" }}>{errormsg}</p>\r\n                          )}\r\n                          {successmsg !== \"\" && (\r\n                            <p style={{ color: \"#92db28\" }}>{successmsg}</p>\r\n                          )}\r\n\r\n                          <div className=\"colorPlateMBox\">\r\n                            <div className=\"colorPlateTitle01\">\r\n                              <button\r\n                                disabled={isloading}\r\n                                onClick={this.preview}\r\n                              >\r\n                                Preview\r\n                              </button>\r\n                              {visitDomain !== \"\" && (\r\n                                <button\r\n                                  className=\"\"\r\n                                  style={{ marginLeft: 25 }}\r\n                                  onClick={() => {\r\n                                    window.open(visitDomain, \"_blank\");\r\n                                  }}\r\n                                >\r\n                                  Go to Page\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                      {typeofLicense === \"Smart contract integration\" && (\r\n                        <div id=\"contract-integration\">\r\n                          {/* <div className=\"gwFormTitle01\">swapMulti </div>\r\n                          <div className=\"swapMulti\">\r\n                            <Highlight language=\"javascript\">\r\n                              {` function swapMulti (                          \r\n IERC20[] memory tokens,\r\n uint256 amounts,\r\n uint256 minReturn,\r\n uint256[] memory distribution,\r\n uint256[] memory flags,\r\n ) public payable returns (uint256)`}\r\n                            </Highlight>\r\n                          </div>\r\n\r\n                          <p className=\"swapMultiP\">\r\n                            Swap <span style={{ color: \"white\" }}>amount</span>{\" \"}\r\n                            first element of{\" \"}\r\n                            <span style={{ color: \"white\" }}>tokens</span> of\r\n                            the latest element.<br></br>\r\n                            The length of{\" \"}\r\n                            <span style={{ color: \"white\" }}>flags</span> array\r\n                            should be 1 element less than tokens array length.\r\n                            Each element from{\" \"}\r\n                            <span style={{ color: \"white\" }}>flags</span> array\r\n                            corresponds to 2 neighboring elements from{\" \"}\r\n                            <span style={{ color: \"white\" }}>tokens</span>{\" \"}\r\n                            array.\r\n                          </p>\r\n                          <table className=\"swapMultiTable\">\r\n                            <tr style={{ color: \"white\" }}>\r\n                              <td className=\"lefttd\">Params</td>\r\n                              <td>Type</td>\r\n                              <td>Description </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"lefttd\">token</td>\r\n                              <td>IERC20[]</td>\r\n                              <td>\r\n                                Addresses of tokens or{\" \"}\r\n                                <span style={{ color: \"white\" }}>\r\n                                  address(0)\r\n                                </span>{\" \"}\r\n                                for Ether\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"lefttd\">amount</td>\r\n                              <td>uint256</td>\r\n                              <td>Amount of tokens</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"lefttd\">minReturn</td>\r\n                              <td>uint256</td>\r\n                              <td>\r\n                                Minimum expected return,else revert transaction\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"lefttd\">distribution</td>\r\n                              <td>uint256[]</td>\r\n                              <td style={{ lineHeight: \"1.8\" }}>\r\n                                Array of weights for volume distribution\r\n                                (returned by{\" \"}\r\n                                <span style={{ color: \"white\" }}>\r\n                                  getRespectReturn)\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr style={{ borderBottom: \"1px solid #271e3a\" }}>\r\n                              <td className=\"lefttd\">flags</td>\r\n                              <td>uint256[]</td>\r\n                              <td style={{ lineHeight: \"1.8\" }}>\r\n                                The sequence of flags for enabling and disabling\r\n                                some features (default:{\" \"}\r\n                                <span style={{ color: \"white\" }}>0</span>), see\r\n                                flags Description\r\n                              </td>\r\n                            </tr>\r\n                          </table> */}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n                  <div className=\"gwFormSFormbox03\">\r\n                    {/* <button\r\n                      className=\"gwFormBTN01 greenBack\"\r\n                      disabled={\r\n                        isloading || typeofLicense !== \"Zero integration\"\r\n                      }\r\n                      onClick={this.uploadData}\r\n                    >\r\n                      {isloading\r\n                        ? \"Cloning..\"\r\n                        : \"GET YOUR OWN LICENSE FOR FREE\"}\r\n                    </button> */}\r\n\r\n                    {this.state.web3 !== null ?\r\n                      <button\r\n                        className={allowClone ? \"gwFormBTN01 greenBack\" : \"gwFormBTN01 greenBack disable-btn\"}\r\n                        disabled={\r\n                          isloading || typeofLicense !== \"Zero integration\" || !allowClone\r\n                        }\r\n                        onClick={this.uploadData}\r\n                      >\r\n                        {isloading\r\n                          ? \"Cloning..\"\r\n                          : \"GET YOUR OWN LICENSE FOR FREE\"}\r\n                      </button>\r\n                      :\r\n                      <button\r\n                        className=\"gwFormBTN01\"\r\n                        disabled={\r\n                          isloading\r\n                        }\r\n                        onClick={() => { this.connectWallet() }}\r\n                      >\r\n                        Connect your wallet\r\n                      </button>\r\n                    }\r\n                  </div>\r\n\r\n                  {/*     First Popup Part */}\r\n                  {(visitDomain && typeofLicense === \"Zero integration\") ? (\r\n                    <>\r\n                      <div className=\"spacerLine02\"></div>\r\n                      <div className=\"smeTitle01-v3\">\r\n                        Below is Your License URL and Smart Contract\r\n                      </div>\r\n\r\n                      <div className=\"LicMbx\">\r\n                        Your licensee sub domain\r\n                        <div className=\"LicInputBX01\">\r\n                          <input type=\"text\" value={visitDomain} id=\"license\" />\r\n                          <a\r\n                            href=\"#\"\r\n                            className=\"LicCopyBTN\"\r\n                            onClick={(a) => copyAffiliateLink(a, \"license\")}\r\n                          >\r\n                            <i class=\"fas fa-copy\"></i>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"gwFormBRBox01\">\r\n                        {ethLicenseAddress !== \"0x0000000000000000000000000000000000000000\" ?\r\n                          <div className=\"LicMbx\">\r\n                            Your licensee smart contract for Ethereum\r\n                            <div className=\"LicInputBX01\">\r\n                              <input\r\n                                type=\"text\"\r\n                                value={ethLicenseAddress}\r\n                                id=\"Ethereum\"\r\n                              />\r\n                              <a\r\n                                href=\"#\"\r\n                                className=\"LicCopyBTN\"\r\n                                onClick={(a) => copyAffiliateLink(a, \"Ethereum\")}\r\n                              >\r\n                                <i class=\"fas fa-copy\"></i>\r\n                              </a>\r\n                            </div>\r\n                            <div className=\"LicInfoBX\">\r\n                              {\" \"}\r\n                              Created: July 21, 2021 11:23:01 am UTC |\r\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"Ethereum\", ethLicenseAddress, 'DepositToken', \"tab-A1\") }}>\r\n                                <span className=\"greenC\">\r\n                                  Deposit your reimbursement TOKEN to this smart\r\n                                  contract\r\n                                </span>{\" \"}\r\n                              </a>\r\n                              {/* | Balance: 8569.563 [TOKEN] |{\" \"} */}\r\n                              | Balance: {ethLicenseTokenBalance} |{\" \"}\r\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"Ethereum\", ethLicenseAddress, 'DepositToken', \"tab-A2\") }}>\r\n                                <span className=\"redC\">\r\n                                  Withdraw your reimbursement tokens\r\n                                </span>\r\n                              </a>\r\n                            </div>\r\n                            <div style={{ marginTop: \"15px\" }}>\r\n                              Change the fees that you want to charge your users <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n\r\n                            <div className='DragrMBX'>\r\n                              <div className='DragrSBX'>\r\n\r\n                                <div className=\"dragorInput\">\r\n                                  <InputRange\r\n                                    maxValue={300}\r\n                                    minValue={0}\r\n                                    value={this.state.ethLicenseFees}\r\n                                    formatLabel={value => `${value / 100}%`}\r\n                                    onChange={value => this.setState({ ethLicenseFees: value })} />\r\n                                </div>\r\n                              </div>\r\n                              <button className=\"DragrSBTN\" onClick={() => { this.setLicenseeFee(\"Ethereum\", constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].reimbursementContract, ethLicenseAddress, this.state.ethLicenseFees) }}>Save</button>\r\n\r\n                            </div>\r\n                          </div> : null\r\n                        }\r\n\r\n                        {bscLicenseAddress !== \"0x0000000000000000000000000000000000000000\" ?\r\n                          <div className=\"LicMbx\">\r\n                            Your licensee smart contract for BSC\r\n                            <div className=\"LicInputBX01\">\r\n                              <input\r\n                                type=\"text\"\r\n                                value={bscLicenseAddress}\r\n                                id=\"BSC\"\r\n                              />\r\n                              <a\r\n                                href=\"#\"\r\n                                className=\"LicCopyBTN\"\r\n                                onClick={(a) => copyAffiliateLink(a, \"BSC\")}\r\n                              >\r\n                                <i class=\"fas fa-copy\"></i>\r\n                              </a>\r\n                            </div>\r\n                            <div className=\"LicInfoBX\">\r\n                              {\" \"}\r\n                              Created: July 21, 2021 11:23:01 am UTC |\r\n\r\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"BSC\", bscLicenseAddress, 'DepositToken', \"tab-A1\") }}>\r\n                                <span className=\"greenC\">\r\n                                  Deposit your reimbursement TOKEN to this smart\r\n                                  contract\r\n                                </span>{\" \"}\r\n                              </a>\r\n\r\n                              {/* | Balance: 8569.563 [TOKEN] |{\" \"} */}\r\n                              | Balance: {bscLicenseTokenBalance} |{\" \"}\r\n                              <a href=\"#\" onClick={() => { this.showDepWdrwPopup(\"BSC\", bscLicenseAddress, 'DepositToken', \"tab-A2\") }}>\r\n                                <span className=\"redC\">\r\n                                  Withdraw your reimbursement tokens\r\n                                </span>\r\n                              </a>\r\n                            </div>\r\n                            <div style={{ marginTop: \"15px\" }}>\r\n                              Change the fees that you want to charge your users <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n                            <div className='DragrMBX'>\r\n                              <div className='DragrSBX'>\r\n                                <div className=\"dragorInput\">\r\n                                  <InputRange\r\n                                    maxValue={300}\r\n                                    minValue={0}\r\n                                    value={this.state.bscLicenseFees}\r\n                                    formatLabel={value => `${value / 100}%`}\r\n                                    onChange={value => this.setState({ bscLicenseFees: value })} />\r\n\r\n                                </div>\r\n                              </div>\r\n                              <button className=\"DragrSBTN\" onClick={() => { this.setLicenseeFee(\"BSC\", constantConfig[CONSTANT.NETWORK_ID.BINANCE].reimbursementContract, bscLicenseAddress, this.state.bscLicenseFees) }}>Save</button>\r\n                            </div>\r\n                          </div>\r\n                          : null}\r\n                        {/* <div className=\"LicMbx\">\r\n                          Your licensee smart contract for Polygon\r\n                          <div className=\"LicInputBX01\">\r\n                            <input\r\n                              type=\"text\"\r\n                              value=\"0x0000000000000000000000000000000000000000\"\r\n                              id=\"Polygon\"\r\n                            />\r\n                            <a\r\n                              href=\"#\"\r\n                              className=\"LicCopyBTN\"\r\n                              onClick={(a) => copyAffiliateLink(a, \"Polygon\")}\r\n                            >\r\n                              <i class=\"fas fa-copy\"></i>\r\n                            </a>\r\n                          </div>\r\n                          <div className=\"LicInfoBX\">\r\n                            {\" \"}\r\n                            Created: July 21, 2021 11:23:01 am UTC |\r\n                            <span className=\"greenC\">\r\n                              Deposit your reimbursement TOKEN to this smart\r\n                              contract\r\n                            </span>{\" \"}\r\n                            | Balance: 8569.563 [TOKEN] |{\" \"}\r\n                            <span className=\"redC\">\r\n                              Withdraw your reimbursement tokens\r\n                            </span>\r\n                          </div>\r\n                          <div style={{ marginTop: \"15px\" }}>\r\n                            Change the fees that you want to charge your users <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text\" aria-hidden=\"true\"></i>\r\n                          </div>\r\n                          <div className=\"dragorInput\">\r\n                            <InputRange\r\n                              maxValue={100}\r\n                              minValue={0}\r\n                              value={this.state.value}\r\n                              formatLabel={value => `${value}%`}\r\n                              onChange={value => this.setState({ value })} />\r\n                          </div>\r\n                        </div> */}\r\n                      </div>\r\n                    </>\r\n                  ) : (this.state.web3 !== null && typeofLicense === \"Smart contract integration\") && (\r\n                    <>\r\n                      <div className='smeTitle01-v3'>Below is Your License URL and Integration Instruction</div>\r\n\r\n                      <div className='LicMbx'>\r\n                        Your licensee sub domain\r\n                        <div className='LicInputBX01'>\r\n                          <input type=\"text\" value=\"http://yourwebsite.smartswap.exchange\" />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='LicMbx'>\r\n                        You need to  call this function in SmartSwap contract  <a href='#' className='LicCopyBTN v2'><i class=\"fas fa-copy\"></i></a>\r\n\r\n                        <div className='settingCodeBx'>\r\n                    //user should approve tokens transfer before calling this function. <br />\r\n//if no licensee set it to address(0) <br />\r\n                          function swap( <br />\r\n                          address tokenA, // token that user send to swap ( address(1) for BNB, address(2) for ETH) <br />\r\n                          address tokenB, // token that user want to receive ( address(1) for BNB, address(2) for ETH) <br />\r\n                          address receiver, // address that will receive tokens on other chain (user's wallet address) <br />\r\n                          uint256 amountA,  // amount of tokens user sends to swap <br />\r\n                          address licensee,   // for now, = address(0) <br />\r\n                          bool isInvestment,  // for now, = false <br />\r\n                          uint128 minimumAmountToClaim,   // do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0 <br />\r\n                          uint128 limitPice   // Do not match user if token A price less this limit. For now, = 0 <br />\r\n                          ) <br />\r\n                          external <br />\r\n                          payable <br />\r\n                          returns (bool)\r\n                        </div>\r\n\r\n                        <button class=\"LicSBTN01\">Download ABI of smart contract file</button>\r\n\r\n\r\n                      </div>\r\n\r\n                      <div className='LicMbx'>\r\n                        Smart contract address BSC\r\n                        <div className='LicInputBX01'>\r\n                          <input type=\"text\" value={constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract} />\r\n                          <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='LicMbx'>\r\n                        Smart contract address Ethereum\r\n                        <div className='LicInputBX01'>\r\n                          <input type=\"text\" value={constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract} />\r\n                          <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {/* Second Popup Part \r\n\r\n                      <div className='smeTitle01-v3'>Below is Your License URL and Integration Instruction</div>\r\n\r\n                                    <div className='LicMbx'>\r\n                                    Your licensee sub domain\r\n                                        <div className='LicInputBX01'>\r\n                                        <input type=\"text\" value=\"http://yourwebsite.smartswap.exchange\" /> \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='LicMbx'>\r\n                                    You need to  call this function in SmartSwap contract  <a href='#' className='LicCopyBTN v2'><i class=\"fas fa-copy\"></i></a>\r\n\r\n                                    <div className='settingCodeBx'> \r\n                                                        //user should approve tokens transfer before calling this function. <br />\r\n    //if no licensee set it to address(0) <br />\r\n    function swap( <br />\r\n        address tokenA, // token that user send to swap ( address(1) for BNB, address(2) for ETH) <br />\r\n        address tokenB, // token that user want to receive ( address(1) for BNB, address(2) for ETH) <br />\r\n        address receiver, // address that will receive tokens on other chain (user's wallet address) <br />\r\n        uint256 amountA,  // amount of tokens user sends to swap <br />\r\n        address licensee,   // for now, = address(0) <br />\r\n        bool isInvestment,  // for now, = false <br />\r\n        uint128 minimumAmountToClaim,   // do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0 <br />\r\n        uint128 limitPice   // Do not match user if token A price less this limit. For now, = 0 <br />\r\n    ) <br />\r\n        external <br />\r\n        payable <br />\r\n        returns (bool)\r\n                                                </div>\r\n\r\n                                        <button class=\"LicSBTN01\">Download ABI of smart contract file</button>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='LicMbx'>\r\n                                    Smart contract address BSC\r\n                                        <div className='LicInputBX01'>\r\n                                        <input type=\"text\" value=\"0x084374b068Eb3db504178b4909eDC26D01226a80\" />\r\n                                        <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\r\n                                        </div> \r\n                                    </div>\r\n\r\n                                    <div className='LicMbx'>\r\n                                    Smart contract address Ethereum\r\n                                        <div className='LicInputBX01'>\r\n                                        <input type=\"text\" value=\"0x084374b068Eb3db504178b4909eDC26D01226a80\" />\r\n                                        <a href='#' className='LicCopyBTN'><i class=\"fas fa-copy\"></i></a>\r\n                                        </div> \r\n                                    </div>\r\n                               \r\n       */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!--======================= SWAP BLOCK END =====================--> */}\r\n          </div>\r\n          {/* <!--======================= WALLET POPUP START =====================--> */}\r\n          <WalletPopup\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n          ></WalletPopup>\r\n\r\n\r\n          <WithDrawToken closePopup={this.closePopup} openPopup={this.openPopup} />\r\n\r\n\r\n          {/* <!--======================= WALLET POPUP END =====================-->\r\n                    <!--======================= COIN POPUP START =====================--> */}\r\n          <CoinPopup\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n            setCurrency={this.setSendCurrency}\r\n            popId={\"sendCurPop\"}\r\n            opositeSelectedCurrrency={this.state.selectedReceiveCurrency}\r\n            selectedCurrrency={this.state.selectedSendCurrency}\r\n          ></CoinPopup>\r\n          <CoinPopup\r\n            web3={this.state.web3}\r\n            web3Config={web3Config}\r\n            setCurrency={this.setReceiveCurrency}\r\n            popId={\"receiveCurPop\"}\r\n            opositeSelectedCurrrency={this.state.selectedSendCurrency}\r\n            selectedCurrrency={this.state.selectedReceiveCurrency}\r\n          ></CoinPopup>\r\n          {/* <!--======================= COIN POPUP END =====================-->\r\n                    <!--======================= SIDE POPUP START =====================--> */}\r\n          <SidePopup web3={this.state.web3} web3Config={web3Config}></SidePopup>\r\n          {/* <!--======================= SIDE POPUP END =====================--> */}\r\n          {/* =========================== DEPOSIT TOKENS POPUP START ================================= */}\r\n          <DepositToken\r\n            tokenAddress={this.state.depositTokenAddress}\r\n            network={this.state.depositWithdrawNetwork}\r\n            vaultAddress={this.state.depositWithdrawVaultAddress}\r\n            closePopup={this.closePopup}\r\n            openPopup={this.openPopup}\r\n          ></DepositToken>\r\n          {/* =========================== DEPOSIT TOKENS POPUP END ================================= */}\r\n          {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gnaJlUA20lk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\SmartSwap_frontend\\src\\pages\\ownLicence02.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\smartSwapLicence.js",["569","570","571","572"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport {\r\n    Redirect,\r\n} from 'react-router-dom';\r\nimport web3Js from 'web3';\r\nimport Web3 from \"web3\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport Validation from \"../helper/validation\";\r\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\r\nimport tokenAbi from \"../abis/tokenAbi.json\";\r\nimport constantConfig from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport { LoopCircleLoading } from 'react-loadingg';\r\nimport CONSTANT from \"../constants\";\r\nimport data from \"../config/constantConfig\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport WalletPopup from \"../components/WalletPopup\";\r\nimport CoinPopup from \"../components/CoinPopup\";\r\nimport SidePopup from \"../components/SidePopup\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class SmartSwapLicence extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.setSendCurrency = this.setSendCurrency.bind(this)\r\n        this.setReceiveCurrency = this.setReceiveCurrency.bind(this)\r\n        this.state = {\r\n            web3: null,\r\n            web3Check: false,\r\n            btnClick: false,\r\n            swapFactory: null,\r\n            swapLoading: false,\r\n            selectedSendCurrency: \"BNB\",\r\n            selectedReceiveCurrency: \"ETH\",\r\n            instanceSwapFactoryBinance: null,\r\n            instanceSwapFactoryEthereum: null,\r\n            tokenInstance: {},\r\n            txLink: \"\",\r\n            wrapBox: \"swap\",\r\n            txIdSent: null,\r\n            txSentStatus: \"pending\",\r\n            txSentTime: null,\r\n            tokenReceive: \"0\",\r\n            txReceiveTime: null,\r\n            txIdReceive: null,\r\n            txLinkSend: '',\r\n            txLinkReturn: '',\r\n            receiveFundAmount: \"\",\r\n            sendFundAmount: \"\",\r\n            actualSendFundAmount: 0,\r\n            approxReceiveFundAmount: 0,\r\n            showLedger: false,\r\n            currencyPrices: {},\r\n            estimatedGasFee: \"0\",\r\n            tokenBalances: {\r\n                \"JNTR\": 0,\r\n                \"JNTR/b\": 0,\r\n                \"JNTR/e\": 0,\r\n                \"JNTR_APPROVED\": 0,\r\n                \"JNTR/b_APPROVED\": 0,\r\n                \"JNTR/e_APPROVED\": 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        await this.fetchPrice();\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({\r\n            web3Ethereum: new Web3(new Web3.providers.WebsocketProvider(CONSTANT.RPC_PROVIDER_ETHEREUM)),\r\n            web3Binance: new Web3(new Web3.providers.HttpProvider(CONSTANT.RPC_PROVIDER_BINANCE))\r\n        })\r\n\r\n        this.setState({\r\n            loading: true\r\n        }, async () => {\r\n            await this.initInstance();\r\n        })\r\n    };\r\n\r\n    async initInstance() {\r\n        let { web3Binance, web3Ethereum } = this.state;\r\n        let instanceSwapFactoryBinance = null;\r\n        let instanceSwapFactoryEthereum = null;\r\n\r\n        instanceSwapFactoryBinance = new web3Binance.eth.Contract(swapFactoryAbi, constantConfig[CONSTANT.NETWORK_ID.BINANCE].swapFactoryContract);\r\n        instanceSwapFactoryEthereum = new web3Ethereum.eth.Contract(swapFactoryAbi, constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].swapFactoryContract);\r\n\r\n        let tokenInstance = {};\r\n        tokenInstance[\"JNTR\"] = new web3Binance.eth.Contract(tokenAbi, \"0x1350044d6a653E87Ed3384DC1D2f6b1A7F138e0A\");\r\n        tokenInstance[\"JNTR/b\"] = new web3Binance.eth.Contract(tokenAbi, \"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\");\r\n        tokenInstance[\"JNTR/e\"] = new web3Ethereum.eth.Contract(tokenAbi, \"0x40a99d086d517f06f9d1ed564f51ef75b8f7f042\");\r\n\r\n        this.setState({\r\n            instanceSwapFactoryBinance,\r\n            instanceSwapFactoryEthereum,\r\n            tokenInstance\r\n        }, () => {\r\n            this.listenTransferEvent()\r\n        });\r\n    }\r\n\r\n    updateTokenBalance = async () => {\r\n\r\n        if (this.state.web3 !== null) {\r\n\r\n            const { tokenInstance, tokenBalances, web3 } = this.state;\r\n            // Balances\r\n            tokenBalances[\"JNTR\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\r\n            tokenBalances[\"JNTR/b\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/b\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\r\n            tokenBalances[\"JNTR/e\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/e\"].methods.balanceOf(web3Config.getAddress()).call(), \"ether\");\r\n\r\n            // Approve Balances\r\n            tokenBalances[\"JNTR_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR\"].methods.allowance(web3Config.getAddress(), \"0x309208d15fba3207be6c760771ca3b4846e1be93\").call(), \"ether\");\r\n            tokenBalances[\"JNTR/b_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/b\"].methods.allowance(web3Config.getAddress(), \"0x309208d15fba3207be6c760771ca3b4846e1be93\").call(), \"ether\");\r\n            tokenBalances[\"JNTR/e_APPROVED\"] = web3Js.utils.fromWei(await tokenInstance[\"JNTR/e\"].methods.allowance(web3Config.getAddress(), \"0xeaf41806fcc2a3893a662dbba7a111630f9f6704\").call(), \"ether\");\r\n            this.setState({\r\n                tokenBalances: tokenBalances\r\n            }, () => {\r\n                this.forceUpdate();\r\n                // this.updateButton()\r\n            })\r\n        }\r\n    }\r\n\r\n    async connectWallet() {\r\n        this.setState({ btnClick: true });\r\n        await web3Config.connectWallet(0);\r\n        let networkId = web3Config.getNetworkId();\r\n\r\n        if (!constantConfig.allowedNetwork.includes(networkId)) {\r\n            notificationConfig.error(\"Please Select Kovan or BSC Test Network\");\r\n            this.setState({ btnClick: false });\r\n            return\r\n        }\r\n\r\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !== networkId && networkId === 97) {\r\n            notificationConfig.warning(\"Change metamask network to Ethereum!\")\r\n            return\r\n        } else if (constantConfig.tokenDetails[this.state.selectedSendCurrency].networkId !== networkId && networkId === 42) {\r\n            notificationConfig.warning(\"Change metamask network to Binance!\")\r\n            return\r\n        }\r\n\r\n\r\n        this.setState({\r\n            web3: web3Config.getWeb3(),\r\n            btnClick: false\r\n        }, () => {\r\n            // this.changeCurrency(false)\r\n            setInterval(() => {\r\n                this.updateTokenBalance()\r\n            }, 3000)\r\n        })\r\n    }\r\n\r\n    async swap() {\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        if (web3 === null)\r\n            return 0\r\n\r\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n        let { sendFundAmount } = this.state;\r\n        if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n            notificationConfig.error(\"Enter value to swap\")\r\n            return;\r\n        }\r\n\r\n        let actualSendFundAmount = (await this.getActualAmount(sendFundAmount, this.state.selectedSendCurrency)).toString()\r\n\r\n        let value = 0, swapAmount = 0;\r\n        try {\r\n            value = web3Js.utils\r\n                .toWei(actualSendFundAmount.toString());\r\n        } catch (e) {\r\n            value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n        }\r\n        swapAmount = value;\r\n\r\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].approveRequire) {\r\n            value = 0;\r\n        }\r\n\r\n        swapFactory.swap(CONSTANT.currencyAddresses[this.state.selectedSendCurrency], CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency], value, swapAmount, (hash) => {\r\n            this.setState({\r\n                swapLoading: true,\r\n                txIdSent: hash,\r\n                txLinkSend: data[networkId].explorer + \"/tx/\" + hash\r\n            });\r\n        }, () => {\r\n            // this.init()\r\n            this.setState({\r\n                swapLoading: false,\r\n                showLedger: true,\r\n                wrapBox: \"success\"\r\n            });\r\n            notificationConfig.success(\"Swap Success\");\r\n        })\r\n    }\r\n\r\n    async approve() {\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        if (web3 === null)\r\n            return 0\r\n\r\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n        swapFactory.approveJNTRTokenForSwapFactory(constantConfig.tokenDetails[this.state.selectedSendCurrency].address, constantConfig[networkId].swapFactoryContract, (hash) => {\r\n            this.setState({\r\n                approveLoading: true,\r\n                // txIdSent: hash,\r\n                // txLinkSend: data[networkId].explorer + \"/tx/\" + hash\r\n            });\r\n        }, () => {\r\n            // this.init()\r\n            this.setState({\r\n                approveLoading: false,\r\n                // showLedger: true,\r\n                // wrapBox: \"success\"\r\n            });\r\n            notificationConfig.success(\"Approve Success\");\r\n        })\r\n    }\r\n\r\n    async estimateGasAndFee() {\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        if (web3 === null)\r\n            return 0\r\n\r\n        let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n        let { sendFundAmount } = this.state;\r\n        if (sendFundAmount === \"\" || sendFundAmount === 0) {\r\n            notificationConfig.error(\"Enter value to swap\")\r\n            return;\r\n        }\r\n\r\n        let actualSendFundAmount = (await this.getActualAmount(sendFundAmount, this.state.selectedSendCurrency)).toString()\r\n\r\n        let value = 0, swapAmount = 0;\r\n        try {\r\n            value = web3Js.utils.toWei(actualSendFundAmount.toString());\r\n        } catch (e) {\r\n            value = (actualSendFundAmount * 10 ** 18).toFixed(0);\r\n        }\r\n\r\n        swapAmount = value;\r\n\r\n        if (constantConfig.tokenDetails[this.state.selectedSendCurrency].approveRequire) {\r\n            value = 0;\r\n        }\r\n\r\n        swapFactory.estimateSwapGasFee(CONSTANT.currencyAddresses[this.state.selectedSendCurrency], CONSTANT.currencyAddresses[this.state.selectedReceiveCurrency], value, swapAmount, \"350000\", (estGas) => {\r\n            this.setState({\r\n                estimatedGasFee: estGas\r\n            })\r\n        })\r\n    }\r\n\r\n    async recivedToken(e) {\r\n        let dollarAmount = Number(e.target.value)\r\n        this.setState({\r\n            sendFundAmount: dollarAmount\r\n        }, () => {\r\n            this.setAmount(dollarAmount)\r\n        })\r\n    }\r\n\r\n    async setAmount(dollarAmount) {\r\n        this.setState({\r\n            actualSendFundAmount: await this.getActualAmount(dollarAmount, this.state.selectedSendCurrency),\r\n            approxReceiveFundAmount: await this.getActualAmount(dollarAmount, this.state.selectedReceiveCurrency)\r\n        }, () => {\r\n            this.estimateGasAndFee()\r\n        })\r\n    }\r\n\r\n    async getActualAmount(dollarAmount, currency) {\r\n        if (dollarAmount <= 0)\r\n            return 0;\r\n        else\r\n            return (dollarAmount / this.state.currencyPrices[currency])\r\n    }\r\n\r\n    async fetchPrice() {\r\n        var { currencyPrices } = this.state;\r\n        const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=ethereum,binancecoin&vs_currencies=usd`);\r\n        const json = await response.json();\r\n        currencyPrices[\"ETH\"] = json[\"ethereum\"][\"usd\"];\r\n        currencyPrices[\"BNB\"] = json[\"binancecoin\"][\"usd\"];\r\n        currencyPrices[\"JNTR/e\"] = 0.062166;\r\n        currencyPrices[\"JNTR/b\"] = 0.054237;\r\n        currencyPrices[\"JNTR\"] = 0.5320;\r\n        this.setState({\r\n            currencyPrices\r\n        })\r\n    }\r\n\r\n    changeCurrency(check) {\r\n        // if(check && this.state.web3 === null){\r\n        let selectedSendCurrency = this.state.selectedSendCurrency;\r\n        let selectedReceiveCurrency = this.state.selectedReceiveCurrency;\r\n        this.setState({\r\n            selectedSendCurrency: selectedReceiveCurrency,\r\n            selectedReceiveCurrency: selectedSendCurrency\r\n        }, () => {\r\n            if (this.state.sendFundAmount !== \"\")\r\n                this.setAmount(this.state.sendFundAmount);\r\n            this.forceUpdate()\r\n        })\r\n        // } else if(this.state.web3 !== null && check) {\r\n        //     notificationConfig.warning(\"Please change metamask network!\")\r\n        // }\r\n    }\r\n\r\n    setSendCurrency(currency) {\r\n        this.setState({ selectedSendCurrency: currency }, () => {\r\n            this.closePopup(\"sendCurPop\");\r\n        })\r\n\r\n    }\r\n\r\n    setReceiveCurrency(currency) {\r\n        this.setState({ selectedReceiveCurrency: currency }, () => {\r\n            this.closePopup(\"receiveCurPop\");\r\n        })\r\n    }\r\n\r\n    openPopup(id) {\r\n        $(\"#\" + id).fadeIn();\r\n    }\r\n\r\n    closePopup(id) {\r\n        $(\"#\" + id).fadeOut();\r\n    }\r\n\r\n    changeWrapBox(which) {\r\n        this.setState({\r\n            wrapBox: which,\r\n            txIdSent: null,\r\n            txSentStatus: \"pending\",\r\n            txSentTime: null,\r\n            tokenReceive: \"0\",\r\n            txReceiveTime: null,\r\n            txIdReceive: null,\r\n            txLinkSend: '',\r\n            txLinkReturn: '',\r\n            receiveFundAmount: \"\",\r\n            sendFundAmount: \"\",\r\n            actualSendFundAmount: 0,\r\n            approxReceiveFundAmount: 0,\r\n            showLedger: false\r\n        })\r\n    }\r\n\r\n    async listenTransferEvent() {\r\n        const { instanceSwapFactoryEthereum, instanceSwapFactoryBinance } = this.state;\r\n        if (instanceSwapFactoryEthereum !== null) {\r\n            instanceSwapFactoryEthereum.events.ClaimApprove({\r\n                fromBlock: 'latest'\r\n            }, function (error, event) {\r\n                console.log(event);\r\n            })\r\n                .on(\"connected\", function (subscriptionId) {\r\n                    console.log(subscriptionId);\r\n                })\r\n                .on('data', function (event) {\r\n                    console.log(event); // same results as the optional callback above\r\n                    if ((event.returnValues.user).toLocaleLowerCase() === web3Config.getAddress().toLocaleLowerCase()) {\r\n                        let txLinkReturn = constantConfig[CONSTANT.NETWORK_ID.ETHEREUM].explorer + '/tx/' + event.transactionHash;\r\n                        let returnAmount = web3Js.utils.fromWei((event.returnValues.amountA).toLocaleLowerCase());\r\n                        this.updateLedgerAfterResponse(event.transactionHash, txLinkReturn, returnAmount)\r\n                    }\r\n                }.bind(this))\r\n                .on('changed', function (event) {\r\n                    console.log(event)\r\n                    // remove event from local database\r\n                })\r\n                .on('error', function (error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\r\n                    console.log(error, receipt)\r\n                });\r\n        }\r\n\r\n        if (instanceSwapFactoryBinance !== null) {\r\n            let { web3Binance } = this.state;\r\n\r\n            let initialBlock = await web3Binance.eth.getBlockNumber();\r\n\r\n            setInterval(async () => {\r\n                const currentBlock = await web3Binance.eth.getBlockNumber();\r\n\r\n                instanceSwapFactoryBinance.getPastEvents(\"allEvents\",\r\n                    {\r\n                        fromBlock: initialBlock,\r\n                        toBlock: currentBlock // You can also specify 'latest'          \r\n                    })\r\n                    .then(async function (result) {\r\n                        for (let i = 0; i < result.length; i++) {\r\n                            console.log(result[i].event)\r\n                            if (result[i].event === \"ClaimApprove\") {\r\n                                console.log(result[i])\r\n                                if ((result[i].returnValues.user).toLocaleLowerCase() === web3Config.getAddress().toLocaleLowerCase()) {\r\n                                    let txLinkReturn = constantConfig[CONSTANT.NETWORK_ID.BINANCE].explorer + '/tx/' + result[i].transactionHash;\r\n                                    let returnAmount = web3Js.utils.fromWei(result[i].returnValues.amountA).toLocaleLowerCase();\r\n                                    this.updateLedgerAfterResponse(result[i].transactionHash, txLinkReturn, returnAmount)\r\n                                }\r\n                            }\r\n                        }\r\n                    }.bind(this))\r\n                    .catch((err) => console.error(err));\r\n                initialBlock = currentBlock;\r\n            }, 10000)\r\n        }\r\n    }\r\n\r\n    updateLedgerAfterResponse(hash, txLinkReturn, returnAmount) {\r\n        this.setState({\r\n            isSendingOrder: false,\r\n            txSentStatus: \"Success\",\r\n            txSentTime: new Date().toUTCString(),\r\n            tokenReceive: \"2\",\r\n            txReceiveTime: new Date().toUTCString(),\r\n            txIdReceive: hash,\r\n            whichButton: \"4\",\r\n            txLinkReturn: txLinkReturn,\r\n            receiveFundAmount: returnAmount\r\n        }, async () => {\r\n            //   await this.enableInputs();\r\n        })\r\n    }\r\n\r\n    scrollToLedger() {\r\n        $(\"html\").animate({ scrollTop: 650 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main id=\"main\" className=\"smartSwap\">\r\n\r\n\r\n                <div className=\"fullscreen-bg\">\r\n                    <div className=\"fsbg_sad01\"></div>\r\n                    <div className=\"fsbg_container\">\r\n                        <video loop autoPlay muted className=\"fullscreen-bg__video\" >\r\n                            <source src=\"video/smartswap.webm\" type=\"video/webm\" />\r\n                            <source src=\"video/smartswap.mp4\" type=\"video/mp4\" />\r\n                            <source src=\"video/smartswap.ogv\" type=\"video/ogg\" />\r\n                        </video>\r\n                    </div>\r\n                </div> \r\n                <div className=\"main\">\r\n                    {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n                    <RightSideMenu web3={this.state.web3} web3Config={web3Config}></RightSideMenu>\r\n                    {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n                    <Header web3={this.state.web3} web3Config={web3Config}></Header>\r\n                    {/* <!--======================= HEADER END =====================--> */}\r\n                    <div className=\"mainBlock\"> \r\n                        {/* <!--======================= SWAP BLOCK START =====================--> */}\r\n                        <div className=\"reserve-Block\">\r\n                            <div className=\"container-Grid\">\r\n                                <div className=\"smeTitle01-v2\">Apply for FREE Smartswap license</div>\r\n                            </div>\r\n                            <div className=\"swap-textBox\">\r\n                                <div className=\"container-Grid\">\r\n\r\n                                    <div class=\"form-Block\">\r\n                                        <div class=\"email-Box\">\r\n                                            <input type=\"text\" placeholder=\"Your email address\" />\r\n                                            <a href=\"javascript:void(0);\" class=\"btn-Continue ani-1\">Continue</a>\r\n                                        </div>\r\n                                        <div class=\"form-Wrap\">\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Full Name</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Phone</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Company Name</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Company Website</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <label>Daily Active Users</label>\r\n                                                <input type=\"text\" />\r\n                                            </div>\r\n                                            <div class=\"form-Box\">\r\n                                                <a href=\"javascript:void(0);\" class=\"btn-Apply ani-1\">apply for social currency licence</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* <div class=\"follow-Block\">\r\n                            <div class=\"container-Grid\">\r\n                                <div class=\"Title03\">Your SmartSwap request has been received. We will be in touch shortly. Meanwhile, follow us on your favorite social media platforms.</div>\r\n                                <ul class=\"social-Icons\">\r\n                                    <li><a href=\"javascript:void(0);\" class=\"ani-1\"><i class=\"fab fa-linkedin-in\"></i></a></li>\r\n                                    <li><a href=\"javascript:void(0);\" class=\"ani-1\"><i class=\"fab fa-facebook-f\"></i></a></li>\r\n                                    <li><a href=\"javascript:void(0);\" class=\"ani-1\"><i class=\"fab fa-twitter\"></i></a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div> */}\r\n                        {/* <!--======================= SWAP BLOCK END =====================--> */}\r\n                    </div>\r\n                    {/* <!--======================= WALLET POPUP START =====================--> */}\r\n                    <WalletPopup web3={this.state.web3} web3Config={web3Config}></WalletPopup>\r\n                    {/* <!--======================= WALLET POPUP END =====================-->\r\n                    <!--======================= COIN POPUP START =====================--> */}\r\n                    <CoinPopup web3={this.state.web3} web3Config={web3Config} setCurrency={this.setSendCurrency} popId={\"sendCurPop\"} opositeSelectedCurrrency={this.state.selectedReceiveCurrency} selectedCurrrency={this.state.selectedSendCurrency}></CoinPopup>\r\n                    <CoinPopup web3={this.state.web3} web3Config={web3Config} setCurrency={this.setReceiveCurrency} popId={\"receiveCurPop\"} opositeSelectedCurrrency={this.state.selectedSendCurrency} selectedCurrrency={this.state.selectedReceiveCurrency}></CoinPopup>\r\n                    {/* <!--======================= COIN POPUP END =====================-->\r\n                    <!--======================= SIDE POPUP START =====================--> */}\r\n                    <SidePopup web3={this.state.web3} web3Config={web3Config}></SidePopup>\r\n                    {/* <!--======================= SIDE POPUP END =====================--> */}\r\n                    {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gnaJlUA20lk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}","D:\\React\\SmartSwap_frontend\\src\\pages\\projects.js",["573"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport constantConfig, { getTokenList, tokenDetails } from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport CONSTANT from \"../constants\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport axios from \"axios\";\r\nimport { isValidAddress } from 'ethereumjs-util';\r\n\r\n\r\nconst $ = window.$;\r\nexport default class Projects extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { checked1: false };\r\n    this.handleChange1 = this.handleChange1.bind(this);\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setSendCurrency = this.setSendCurrency.bind(this);\r\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\r\n    this.updateCloneData = this.updateCloneData.bind(this);\r\n    this.clearPreview = this.clearPreview.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n    this.expedite = this.expedite.bind(this);\r\n    const { match, location, history } = props;\r\n    this.state = {\r\n      web3: null,\r\n      web3Check: false,\r\n      btnClick: false,\r\n      swapFactory: null,\r\n      swapLoading: false,\r\n      selectedSendCurrency: \"BNB\",\r\n      selectedReceiveCurrency: \"ETH\",\r\n      instanceSwapFactoryBinance: null,\r\n      instanceSwapFactoryEthereum: null,\r\n      instanceSwapFactoryPolygon: null,\r\n      instanceReimbursementBinance: null,\r\n      instanceReimbursementEthereum: null,\r\n      tokenInstance: {},\r\n      txLink: \"\",\r\n      wrapBox: \"swap\",\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      allTxHistoryUI: null,\r\n      allPendingTxHistoryUI: null,\r\n      showTxHistory: false,\r\n      showLedger: false,\r\n      currencyPrices: {},\r\n      estimatedGasFee: \"0\",\r\n      tableData: [],\r\n      isSearchTable: false,\r\n      tableSearchResult: [],\r\n      tableDataToDisplay: [],\r\n      liveETHPrice: 0,\r\n      wbnbPrice: 0,\r\n      sideBar: false,\r\n      tokenBalances: {\r\n        JNTR: 0,\r\n        \"JNTR/b\": 0,\r\n        \"JNTR/e\": 0,\r\n        JNTR_APPROVED: 0,\r\n        \"JNTR/b_APPROVED\": 0,\r\n        \"JNTR/e_APPROVED\": 0,\r\n      },\r\n      cloneData:\r\n        typeof location.state === \"undefined\"\r\n          ? {}\r\n          : location.state.cloneData\r\n            ? location.state.cloneData\r\n            : {},\r\n      isloading: false,\r\n      isSubdomain: false,\r\n      noSubDomain: false,\r\n      subDomainName: \"\",\r\n      amounts: {\r\n        totalAmountSwapped: 0,\r\n        feesGenerated: 0,\r\n        smartBoughtBurned: 0,\r\n        totalFeesReimbursed: 0,\r\n        totalReimbursementStaking: 0\r\n      },\r\n      licenseeAddress: {\r\n        56: \"0x0000000000000000000000000000000000000000\",\r\n        1: \"0x0000000000000000000000000000000000000000\",\r\n        97: \"0x0000000000000000000000000000000000000000\",\r\n        42: \"0x0000000000000000000000000000000000000000\",\r\n        80001: \"0x0000000000000000000000000000000000000000\",\r\n        137: \"0x0000000000000000000000000000000000000000\",\r\n      },\r\n      loadingHistory: false,\r\n      selectedOptionSend: { value: tokenDetails.BNB.symbol, label: tokenDetails.BNB.symbol, networkId: tokenDetails.BNB.networkId },\r\n      selectedOptionReceive: { value: tokenDetails.ETH.symbol, label: tokenDetails.ETH.symbol, networkId: tokenDetails.ETH.networkId },\r\n      selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(\"BNB\", \"ETH\"),\r\n      sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"ETH\" && value.label !== \"BNB\";\r\n      }),\r\n      recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"BNB\" && value.label !== \"ETH\";\r\n      }),\r\n      web3Provider: {\r\n        [process.env.REACT_APP_ETH_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_BSC_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_POLYGON_CHAIN_ID]: null,\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange1(checked1) {\r\n    this.setState({ checked1 });\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.state.sideBar == true) {\r\n      this.setState({\r\n        sideBar: false\r\n      });\r\n    }\r\n  }\r\n  updateCloneData = (data) => {\r\n    this.setState({\r\n      cloneData: data,\r\n    });\r\n  };\r\n\r\n  clearPreview = () => {\r\n    const r = document.querySelector(\":root\");\r\n    r.style.removeProperty(\"--text-color\");\r\n    r.style.removeProperty(\"--button-bg-color\");\r\n    r.style.removeProperty(\"--req-bg\");\r\n    this.setState({\r\n      cloneData: {},\r\n    });\r\n    this.props.history.push({\r\n      pathname: \"\",\r\n      state: {\r\n        cloneData: {},\r\n      },\r\n    });\r\n  };\r\n\r\n  getData = async (domain) => {\r\n    this.setState({\r\n      isloading: true,\r\n    });\r\n    try {\r\n      const res = await axios.get(\r\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\r\n      );\r\n      console.log(res);\r\n      if (res.data.response_code === 200) {\r\n        if (domain[0].substring(0, 2) === \"0x\") {\r\n          if (isValidAddress(domain[0])) {\r\n            web3Config.setLicenseeData(res.data.result)\r\n          }\r\n        } else {\r\n          const r = document.querySelector(\":root\");\r\n          r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\r\n          r.style.setProperty(\r\n            \"--button-bg-color\",\r\n            res.data.result.seconderyColor\r\n          );\r\n          r.style.setProperty(\r\n            \"--req-bg\",\r\n            `url(${res.data.result.backGroundImage})`\r\n          );\r\n          r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\r\n          var style = document.createElement('style');\r\n          style.type = 'text/css';\r\n          style.innerHTML = `* { font-family: ${res.data.result.fontStyle} !important; }`;\r\n          document.getElementsByTagName('head')[0].appendChild(style);\r\n          // r.style.setProperty(\"font-family\", res.data.result.fontStyle, \"important\");\r\n          // window.document.body.setAttribute('style', 'font-family:Arial !important');\r\n          this.setState({\r\n            cloneData: {\r\n              bgimage: res.data.result.backGroundImage,\r\n              logoImage: res.data.result.logo,\r\n              subDomain: res.data.result.subDomain,\r\n              primaryColor: res.data.result.primaryColors,\r\n              secondaryColor: res.data.result.seconderyColor,\r\n              fontStyle: res.data.result.fontStyle,\r\n              backgroundOverLay: res.data.result.backgroundOverLay,\r\n              swapButtonColor: res.data.result.swapButton,\r\n              logoUrl: res.data.result.logoUrl,\r\n              sideBar: res.data.result.sideBar\r\n            },\r\n            licenseeAddress: {\r\n              56: res.data.result.bscLicenseAddress,\r\n              1: res.data.result.ethLicenseAddress,\r\n              97: res.data.result.bscLicenseAddress,\r\n              42: res.data.result.ethLicenseAddress\r\n            }\r\n          });\r\n        }\r\n      } else if (res.data.response_code === 404) {\r\n        this.setState({\r\n          noSubDomain: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.openPopup(\"NoDomain\");\r\n        }, 100);\r\n      }\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.log(error.response);\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async fetchPrice() {\r\n    let MarketCap = [];\r\n    let tableDataLocal = [];\r\n    let tableDataLocalcoingecko = [];\r\n    let Uniobj = {};\r\n    let Panobj = {};\r\n    var { currencyPrices } = this.state;\r\n    let wbnbPrice = 0;\r\n\r\n    let liveETHPrice = 0;\r\n\r\n    await axios\r\n      .get(\r\n        `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctether%2Cbinancecoin%2Ccardano%2Cpolkadot%2Cuniswap%2Cripple%2Cmatic-network&vs_currencies=USD&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true`\r\n      )\r\n      .then((res) => {\r\n        tableDataLocalcoingecko = res.data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    currencyPrices[\"ETH\"] = tableDataLocalcoingecko[\"ethereum\"][\"usd\"];\r\n\r\n    currencyPrices[\"BNB\"] = tableDataLocalcoingecko[\"binancecoin\"][\"usd\"];\r\n\r\n    currencyPrices[\"MATIC\"] = tableDataLocalcoingecko[\"matic-network\"][\"usd\"];\r\n\r\n    currencyPrices[\"JNTR/e\"] = 0.062166;\r\n    currencyPrices[\"JNTR/b\"] = 0.054237;\r\n    currencyPrices[\"JNTR\"] = 0.532;\r\n\r\n    this.setState(\r\n      {\r\n        currencyPrices: currencyPrices,\r\n      },\r\n      () => {\r\n        this.forceUpdate();\r\n      }\r\n    );\r\n  }\r\n  \r\n  setSendCurrency(currency) {\r\n    this.setState({ selectedSendCurrency: currency }, () => {\r\n      this.closePopup(\"sendCurPop\");\r\n    });\r\n  }\r\n  setReceiveCurrency(currency) {\r\n    this.setState({ selectedReceiveCurrency: currency }, () => {\r\n      this.closePopup(\"receiveCurPop\");\r\n    });\r\n  }\r\n \r\n  async expedite(txId, processAmount, sentChainId) {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    console.log(networkId)\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n\r\n    if (sentChainId !== networkId) {\r\n      notificationConfig.warning(\"Change metamask network to \" + CONSTANT.NETWORK_ID[sentChainId] + \"!\");\r\n      return;\r\n    }\r\n\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n    let allFees = await this.calculateSwapFees(processAmount);\r\n    await swapFactory.expedite(txId, (((Number(allFees.processingFees) * 0.10 + Number(allFees.processingFees))) * 10 ** 18).toFixed(),\r\n      (hash) => {\r\n        this.setState({\r\n        \r\n        });\r\n      },\r\n      (receipt) => {\r\n    \r\n        notificationConfig.success(\"Expedite Success\");\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isloading ? (\r\n          <p>Loading</p>\r\n        ) : (\r\n          <main id=\"main\" className=\"smartSwap\">\r\n            <div className=\"fullscreen-bg\">\r\n              <div className=\"fsbg_sad01\"></div>\r\n              <div className=\"fsbg_container\">\r\n                <video loop autoPlay muted className=\"fullscreen-bg__video\">\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.webm\"} type=\"video/webm\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.mp4\"} type=\"video/mp4\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.ogv\"} type=\"video/ogg\" />\r\n                </video>\r\n              </div>\r\n            </div>\r\n            <div className=\"main\">\r\n              {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n              <RightSideMenu\r\n                web3={this.state.web3}\r\n                openPopup={this.openPopup}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n              ></RightSideMenu>\r\n              {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n              <Header\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n                isSubdomain={this.state.isSubdomain}\r\n                clearPreview={this.clearPreview}\r\n              ></Header>\r\n              {/* <!--======================= HEADER END =====================--> */}\r\n              <div className=\"backgroundBlock\" onClick={this.handleClick} >\r\n                <div\r\n                  className={\r\n                    this.state.cloneData.bgimage\r\n                      ? \"mainBlock required-bg\"\r\n                      : \"mainBlock\"\r\n                  }\r\n                  style={\r\n                    this.state.cloneData.bgimage\r\n                      ? this.state.cloneData.fontStyle &&\r\n                        this.state.cloneData.fontStyle !== \"Default\"\r\n                        ? {\r\n                          fontFamily: this.state.cloneData.fontStyle,\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                        : {\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                      : null\r\n                  }\r\n                >\r\n                  <div className=\"container-Grid\">\r\n                    <div className=\"boost-outer\">\r\n                      <div className=\"boost-left\">\r\n                        <h2>Boost your web3 dApp sales by giving your customers the best payment experience</h2>\r\n                        <p>Super easy one-click multichain solution allowing customers to pay with any token or blockchain while you get the token on the blockchain you need.</p>\r\n                        <p className=\"green\">Instead of Deploying Your Project on Multiple Blockchains, Deploy One SmartBridge to Welcome All Type of Users</p>\r\n                        <div className=\"down-block\">\r\n                          <img src=\"images/down-arrow.png\" alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"boost-right\">\r\n                        <img src=\"images/mobile-frame.png\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"o-outer\">\r\n                      <div className=\"o-left\">\r\n                        {/* <p className=\"option\">OPTION 1</p> */}\r\n                        <h3>ONE-CLICK SmartBridge</h3>\r\n                        <p>This code will allow users to push by ONE click any token from any network, and receive the final assets that the project is offering. The One-Click SmartBridge allows users one-click access from any token on any network to the final asset the project offers.</p>\r\n                        \r\n                        <div className=\"Box-bottom\">\r\n                          <p className=\"need-text\">You need to call this function in SmartBridge contract</p>\r\n                          <i className=\"fas fa-copy\"></i>\r\n                        </div>\r\n                        <div className=\"code-block\">\r\n                          {/* <p><span>//user should approve tokens transfer before calling this function.</span></p>\r\n                          <p><span>//if no licensee set it to address(0)</span></p>\r\n                          <p>function swap(</p>\r\n                             <p>address tokenA, <span>// token that user send to swap ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address tokenB, <span>// token that user want to receive ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address receiver, <span>// address that will receive tokens on other chain (user's wallet address)</span></p>\r\n                             <p>uint256 amountA,  <span>// amount of tokens user sends to swap</span></p>\r\n                             <p>address licensee,   <span>// for now, = address(0)</span></p>\r\n                             <p>bool isInvestment,  <span>// for now, = false</span></p>\r\n                             <p>uint128 minimumAmountToClaim,   <span>// do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0</span></p>\r\n                             <p>uint128 limitPice   <span>// Do not match user if token A price less this limit. For now, = 0</span></p>\r\n                             <p>)</p>\r\n                             <p>external</p>\r\n                             <p>payable</p>\r\n                             <p><span>returns (bool)</span></p> */}\r\n                             <p className=\"cs\">COMING SOON</p>\r\n                        </div>\r\n                        <div className=\"Box-bottom ver2\">\r\n                          <Link to='#' className=\"dc-file\">Download ABI of smart contract file</Link>\r\n                          <Link to='#'>See example for live SmartBridge button for UniSwap V2 DEXs clone</Link>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      {/* <div className=\"o-left pl-15\">\r\n                        <p className=\"option\">OPTION 2</p>\r\n                        <h3>Quick Bridge Window</h3>\r\n                        <p>This code will allow users to push any token from any network, and receive back to their wallet a stablecoin (like USDT) that belongs to the network that complies with the project, once receiving that stablecoin, users will not need to leave the project page and can interact with the project like a regular transaction.</p>\r\n                        <p className=\"mb-45\">The Quick Bridge Window allows users to push any token on any network to receive a stablecoin on the network that complies with your project. Once the project receives the stablecoin, users will not need to leave the project page, they can interact directly with the project.</p>\r\n                        <div className=\"code-block\">\r\n                          <p><span>//user should approve tokens transfer before calling this function.</span></p>\r\n                          <p><span>//if no licensee set it to address(0)</span></p>\r\n                          <p>function swap(</p>\r\n                             <p>address tokenA, <span>// token that user send to swap ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address tokenB, <span>// token that user want to receive ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address receiver, <span>// address that will receive tokens on other chain (user's wallet address)</span></p>\r\n                             <p>uint256 amountA,  <span>// amount of tokens user sends to swap</span></p>\r\n                             <p>address licensee,   <span>// for now, = address(0)</span></p>\r\n                             <p>bool isInvestment,  <span>// for now, = false</span></p>\r\n                             <p>uint128 minimumAmountToClaim,   <span>// do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0</span></p>\r\n                             <p>uint128 limitPice   <span>// Do not match user if token A price less this limit. For now, = 0</span></p>\r\n                             <p>)</p>\r\n                             <p>external</p>\r\n                             <p>payable</p>\r\n                             <p><span>returns (bool)</span></p>\r\n                        </div>\r\n                        <div className=\"Box-bottom\">\r\n                          <Link to='#'>See example for live SmartBridge button for UniSwap V2 DEXs clone</Link>\r\n                          <i className=\"fas fa-copy\"></i>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\SmartSwap_frontend\\src\\pages\\home.js",["574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613"],"D:\\React\\SmartSwap_frontend\\src\\pages\\extension.js",["614","615"],"D:\\React\\SmartSwap_frontend\\src\\config\\web3Config.js",[],"D:\\React\\SmartSwap_frontend\\src\\config\\notificationConfig.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\CreateLicense.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\CoinPopup.js",["616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport CONSTANT from \"../constants\";\r\n\r\n\r\nconst PrePath = CONSTANT.PrePath;\r\nexport default class CoinPopup extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.coinList)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id={this.props.popId}>\r\n                <div className=\"container-Grid\">\r\n                    {/* <div className=\"tab-Nav\">\r\n                        <a href=\"javascript:void(0)\" className={\"tab-Link ani-1 active\" + this.props.popId} data-id=\"tab-01\">Tokens</a>\r\n                        <a href=\"javascript:void(0)\" className={\"tab-Link ani-1 hideMobile\" + this.props.popId} data-id=\"tab-02\">LP Tokens</a>\r\n                    </div> */}\r\n                    <div className={\"tab-Content\" + this.props.popId} id=\"tab-01\">\r\n                        <div className=\"wallet-popupBlock\">\r\n                            {/* <div className=\"search-Mbx\">\r\n                                <div className=\"popupViewFMbox\">\r\n                                    <a href=\"#\"><i className=\"fas fa-square\"></i></a>\r\n                                    <a href=\"#\" className=\"active\"><i className=\"fas fa-th-list\"></i></a>\r\n                                </div>\r\n\r\n                                <div className=\"search-Bx\"> <a href=\"javascript:void(0);\"><span className=\"icon-Box\"><i\r\n                                                className=\"fas fa-search\"></i></span></a>\r\n                                    <input type=\"text\" placeholder=\"Search by symbol or coin name\" />\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"wallet-boxWrap\">\r\n                                {\r\n                                    Object.keys(this.state.coinList).map((key) => {\r\n                                        // [Number(key), obj[key]]\r\n                                        if (key === this.props.opositeSelectedCurrrency || this.state.coinList[key].networkId === this.state.coinList[this.props.opositeSelectedCurrrency].networkId) {\r\n                                            return null\r\n                                        } else {\r\n                                            return (\r\n                                                <div className=\"wallet-Bx ani-1\">\r\n                                                    <div className=\"img-Box\">\r\n                                                        <span className=\"round-Bg\">\r\n                                                            <span className=\"icon-Box icon16\">\r\n                                                                <img src={PrePath + \"/images/currencies/\" + this.state.coinList[key].iconName + \".png\"} />\r\n                                                            </span>\r\n                                                        </span>\r\n                                                        <div className=\"title-Name\">{key}</div>\r\n                                                    </div>\r\n                                                    <a href=\"javascript:void(0);\" className=\"faux-Link\" onClick={() => this.props.setCurrency(key)}></a>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon16\"></span></span>\r\n                                        <div className=\"title-Name\">SMART</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon01\"></span></span>\r\n                                        <div className=\"title-Name\">ZERO/1</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon02\"></span></span>\r\n                                        <div className=\"title-Name\">Secured Tether USD</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon05\"></span></span>\r\n                                        <div className=\"title-Name\">Paxos Standard</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon06\"></span></span>\r\n                                        <div className=\"title-Name\">StatusNetwork</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon07\"></span></span>\r\n                                        <div className=\"title-Name\">HuobiToken</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon08\"></span></span>\r\n                                        <div className=\"title-Name\">ChainLink Token</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon09\"></span></span>\r\n                                        <div className=\"title-Name\">OmiseGO</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon10\"></span></span>\r\n                                        <div className=\"title-Name\">BAT</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon11\"></span></span>\r\n                                        <div className=\"title-Name\">IOSToken</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon12\"></span></span>\r\n                                        <div className=\"title-Name\">Dai Stablecoin v1.0</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <a href=\"javascript:void(0);\" className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\Deposit-withdraw.js",["656","657","658","659","660","661","662","663","664"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport constantConfig from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport ReimbursementContract from \"../helper/reimbursementContract\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class DepositToken extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false,\r\n            depositTokenAmt: 0,\r\n            withdrawTokenAmt: 0,\r\n            network: null,\r\n            vaultAddress: null,\r\n            depositLoading: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config,\r\n            network: newProps.network,\r\n            vaultAddress: newProps.vaultAddress,\r\n            tokenAddress: newProps.tokenAddress\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#DepositToken .tab-Link\").hover(function () {\r\n            $(\".tab-Link\").removeClass(\"active\")\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-Content\").hide();\r\n            $(\"#\" + $(this).attr(\"data-id\")).show();\r\n        });\r\n\r\n    }\r\n\r\n    async handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        if (Number(value) >= 0 && value.length <= 5) {\r\n            this.setState({\r\n                [name]: value\r\n            })\r\n        } else {\r\n            return\r\n        }\r\n\r\n    };\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n    async depositTokens() {\r\n        this.setState({ depositLoading: true })\r\n        let { network, vaultAddress, tokenAddress } = this.props;\r\n        let { depositTokenAmt } = this.state;\r\n        await web3Config.connectWallet(0);\r\n        let newNetworkId = web3Config.getNetworkId()\r\n\r\n        if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\r\n            notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\r\n            this.setState({ depositLoading: false })\r\n            return;\r\n        }\r\n        if (\r\n            network === \"Ethereum\" &&\r\n            (newNetworkId === 97 || newNetworkId === 56)\r\n        ) {\r\n            notificationConfig.warning(\"Change metamask network to Ethereum!\");\r\n            this.setState({ depositLoading: false })\r\n            return;\r\n        } else if (\r\n            network === \"BSC\" &&\r\n            (newNetworkId === 42 || newNetworkId === 1)\r\n        ) {\r\n            notificationConfig.warning(\"Change metamask network to Binance!\");\r\n            this.setState({ depositLoading: false })\r\n            return;\r\n        }\r\n\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        let reimbursementContract = new ReimbursementContract(web3, networkId);\r\n\r\n        let setDepositTokensData = {};\r\n\r\n        setDepositTokensData[\"to\"] = vaultAddress;\r\n        setDepositTokensData[\"amount\"] = depositTokenAmt;\r\n        setDepositTokensData[\"tokenAddress\"] = tokenAddress;\r\n\r\n        reimbursementContract.depositTokens(\r\n            setDepositTokensData,\r\n            (hash) => {\r\n                this.setState({\r\n                    // swapLoading: true,\r\n                    // txIdSent: hash,\r\n                    // txLinkSend: data[networkId].explorer + '/tx/' + hash,\r\n                });\r\n            },\r\n            async (receipt) => {\r\n                notificationConfig.success('Deposit Tokens Successfully!');\r\n                this.setState({ depositLoading: false })\r\n            },\r\n            async (error) => {\r\n                if (error.code === 4001) {\r\n                    notificationConfig.error(\"Transaction rejected!\")\r\n                }\r\n                this.setState({ depositLoading: false })\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    async withdrawTokens() {\r\n        this.setState({ withdrawLoading: true })\r\n        let { network, vaultAddress } = this.props;\r\n        let { withdrawTokenAmt } = this.state;\r\n        await web3Config.connectWallet(0);\r\n        let newNetworkId = web3Config.getNetworkId()\r\n\r\n        if (!constantConfig.allowedNetwork.includes(newNetworkId)) {\r\n            notificationConfig.error(\"Please Select Ethereum or BSC Main Network\");\r\n            this.setState({ withdrawLoading: false })\r\n            return;\r\n        }\r\n        if (\r\n            network === \"Ethereum\" &&\r\n            (newNetworkId === 97 || newNetworkId === 56)\r\n        ) {\r\n            notificationConfig.warning(\"Change metamask network to Ethereum!\");\r\n            this.setState({ withdrawLoading: false })\r\n            return;\r\n        } else if (\r\n            network === \"BSC\" &&\r\n            (newNetworkId === 42 || newNetworkId === 1)\r\n        ) {\r\n            notificationConfig.warning(\"Change metamask network to Binance!\");\r\n            this.setState({ withdrawLoading: false })\r\n            return;\r\n        }\r\n\r\n        let web3 = web3Config.getWeb3();\r\n        let networkId = web3Config.getNetworkId();\r\n        let address = web3Config.getAddress();\r\n\r\n        let reimbursementContract = new ReimbursementContract(web3, networkId);\r\n\r\n        let setWithdrawTokensData = {};\r\n\r\n        setWithdrawTokensData[\"vault\"] = vaultAddress;\r\n        setWithdrawTokensData[\"amount\"] = withdrawTokenAmt;\r\n        setWithdrawTokensData[\"reimbursementAddress\"] = constantConfig[networkId].reimbursementContract\r\n        // setWithdrawTokensData[\"tokenAddress\"] = tokenAddress;\r\n\r\n        reimbursementContract.withdrawTokens(\r\n            setWithdrawTokensData,\r\n            (hash) => {\r\n                this.setState({\r\n                    // swapLoading: true,\r\n                    // txIdSent: hash,\r\n                    // txLinkSend: data[networkId].explorer + '/tx/' + hash,\r\n                });\r\n            },\r\n            async (receipt) => {\r\n                notificationConfig.success('Withdraw Tokens Successfully!');\r\n                this.setState({ withdrawLoading: false })\r\n            },\r\n            async (error) => {\r\n                if (error.code === 4001) {\r\n                    notificationConfig.error(\"Transaction rejected!\")\r\n                }\r\n                this.setState({ withdrawLoading: false })\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"DepositToken\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"MainTabBox\" style={{ paddingTop: '80px' }}>\r\n                        <div className=\"tab-Nav\">\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-A1\">Deposit</a>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-A2\">Withdrawal</a>\r\n                        </div>\r\n\r\n\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-A1\">\r\n\r\n                            <div className=\"wtMBX\" style={{ marginTop: '130px' }}>\r\n                                <div class=\"gwFormSbox01\">\r\n                                    <div class=\"gwFormTitle01\">Amount</div>\r\n                                    <input name=\"depositTokenAmt\" id=\"fontStyle\" class=\"subdomain\" style={{ padding: '20px 15px', width: '100%', backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px' }} onChange={this.handleInputChange.bind(this)} >\r\n                                    </input>\r\n                                    <div class=\"smlInfotxt01\" style={{ textAlign: 'left' }}>Max available to deposit 1,000,000 [TOKEN]</div>\r\n                                </div>\r\n                                <div class=\"gwFormSFormbox03\">\r\n                                    {this.state.depositLoading ?\r\n                                        <button class=\"gwFormBTN01 greenBack\">\r\n                                            <Loader type=\"ThreeDots\" color=\"#fff\" height={15} width={80} />\r\n                                        </button>\r\n                                        :\r\n                                        <button class=\"gwFormBTN01 greenBack\" onClick={() => { this.depositTokens() }}>\r\n                                            DEPOSIT\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }}>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link \" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-A2\">SmartSwap vs Atomic Swap & Other Swaps</a>\r\n                        </div>\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-A2\">\r\n                            <div className=\"wtMBX\" style={{ marginTop: '130px' }}>\r\n                                <div class=\"gwFormSbox01\">\r\n                                    <div class=\"gwFormTitle01\">Amount</div>\r\n                                    <input name=\"withdrawTokenAmt\" id=\"fontStyle\" class=\"subdomain\" style={{ padding: '20px 15px', width: '100%', backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px' }} onChange={this.handleInputChange.bind(this)} >\r\n                                    </input>\r\n                                    <div class=\"smlInfotxt01\" style={{ textAlign: 'left' }}>Max available to withdraw 1,000,000 [TOKEN]</div>\r\n                                </div>\r\n                                <div class=\"gwFormSFormbox03\">\r\n\r\n                                    {this.state.withdrawLoading ?\r\n                                        <button class=\"gwFormBTN01 blackBack\">\r\n                                            <Loader type=\"ThreeDots\" color=\"#fff\" height={15} width={80} />\r\n                                        </button>\r\n                                        :\r\n                                        <button class=\"gwFormBTN01 blackBack\" onClick={() => { this.withdrawTokens() }}>\r\n                                            WITHDRAW\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"DepositToken\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\constants.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\SidePopup.js",["665","666"],"import React, { PureComponent } from \"react\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport InputRange from 'react-input-range';\r\n\r\nexport default class SidePopup extends PureComponent {\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config\r\n        }\r\n        this.state = { value: 50 };\r\n    }\r\n  \r\n\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={`side-Popup  ${this.props.sideBar && 'active'}` }>\r\n                <div className=\"popup-Box\">\r\n\r\n                    <div className=\"sidePopup-tablink\">\r\n                        <span className=\"spTitle01\">Swap limit </span>\r\n                        {/* <a href=\"#\" className=\"active\">Swap Limit</a> */}\r\n                    </div> \r\n\r\n                    {/* <!-- Gas limit Content  -->  */}\r\n\r\n\r\n                      <div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Expedite swap via SP :<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"left\" data-pt-title=\"<p>In case that there is no spread between average market price to the actual market price on CEX, user will cover expedite fees which will be deduct from the total receiving tokens. those expedite fee will be no more than 0.8% to allow the SP to buy immediately at market price. </p><p>for example, if SP is looking to gain 0.5% spread and the current spread between average market price to the market price is 0.4%, than user will cover only 0.1% expedite fee</p> <p>Any paid expedite fee will be 100% reimbursement to the user with SMART tokens</p>\" aria-hidden=\"true\"></i></i></div>\r\n                            <div className=\"amt-Text\">\r\n                            <div className=\"apollo-element apollo-element-active apollo-field-switcher\"> \r\n                                            <div className=\"apollo-fieldset\">\r\n                                                <label> <input type=\"checkbox\"  name=\"shortcode[active]\" value=\"1\" data-depend-id=\"active\" data-atts=\"active\" />\r\n                                                    <em data-on=\"on\" data-off=\"off\"></em><span></span>\r\n                                                </label> \r\n                                            </div> \r\n                                        </div>\r\n                                        </div>\r\n                        </div> \r\n\r\n                        <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\" style={{marginTop: '10px', marginBottom: 'auto'}}>Maximum spread for expedite :<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></div>\r\n                            <div className=\"amt-Text\">\r\n                                <div className=\"dragorInput v3\">\r\n                                    <InputRange\r\n                                        step={1}\r\n                                        maxValue={100}\r\n                                        minValue={0}\r\n                                        value={this.state.value}\r\n                                        onChange={value => this.setState({ value })}\r\n                                        formatLabel={value => `${value}%`}\r\n                                        onChangeComplete={value => console.log(value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                         \r\n                        {/* <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\">Send:</div>\r\n                            <div className=\"amt-Text \">\r\n                                <span className=\"amtCurrecy \">$</span>\r\n                                <input type=\"text\" defaultValue=\"100\" />\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\">Receive 1:1 same face value :</div>\r\n                            <div className=\"cheMBX inline\"> \r\n                                <div className=\"md-radio\">\r\n                                    <input type=\"radio\"  id=\"rr05\" name=\"stepin48\" /> \r\n                                        <label htmlFor=\"rr05\">As Market<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i> </label>\r\n                                </div> \r\n                                <div className=\"md-radio\">\r\n                                    <input type=\"radio\" defaultChecked id=\"rr06\" name=\"stepin48\" /> \r\n                                        <label htmlFor=\"rr06\">As sent<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i> </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\">Minimum amount to swap with :</div>\r\n                            <div className=\"amt-Text \">\r\n                                <span className=\"amtCurrecy \">$</span>\r\n                                <input type=\"text\" defaultValue=\"100\" />\r\n                            </div>\r\n                        </div> \r\n                        {/* <div className=\"text-Wrap slDisable\">\r\n                            <div className=\"text-Title\">Max users to swap with :</div>\r\n                            <div className=\"amt-Text\">10</div>\r\n                        </div> */}\r\n                        {/* <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Ethereum gas :</div>\r\n                            <div className=\"amt-Text\">0.000253 ETH</div>\r\n                        </div> */}\r\n                        {/* <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Bitcoin transfer commission :</div>\r\n                            <div className=\"amt-Text\">0.000235 BTC</div>\r\n                        </div> */}\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Gas cost :</div>\r\n                            <div className=\"amt-Text\">0.000253 ETH</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">3<sup>rd</sup> party on-chain validation :</div>\r\n                            <div className=\"amt-Text\">0.000135 ETH</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Transfer commission :</div>\r\n                            <div className=\"amt-Text\">$0</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">SmartSwap transaction fee : <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top\" data-pt-title=\"80% of fees goes to support liquidity for SMART token and 20% goes to Atom Foundation to support development\"\r\n                                    aria-hidden=\"true\"></i></i></div>\r\n                            <div className=\"amt-Text\">$0 / 0%</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Slippage :</div>\r\n                            <div className=\"amt-Text\">$0 / 0%</div>\r\n                        </div> \r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Estimated cost :</div>\r\n                            <div className=\"amt-Text red-Color\">-$5.7556 (0.01235 ETH | 0.0002 BTC)</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">1:1 SMART rebate :</div>\r\n                            <div className=\"amt-Text green-Color\">+$5.7556 (5.7556 ZERO/1)</div>\r\n                        </div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Final cost to use SmartSwap :</div>\r\n                            <div className=\"amt-Text\">$0 / 0%</div>\r\n                        </div>\r\n                        <ul className=\"text-Box\">\r\n                            <li><span className=\"icon-Box\"><i className=\"fas fa-exclamation-circle\"></i></span><span>SmartSwap reimburses all swap fees and does not allow any loss of value due to spread or volatility. The estimated fees cost covers the swap fees and the direct cost of blockchain gas. If the user is swapping BTC, there is an additional cost for 3rd party providers to validate on-chain the exact deposit amount of BTC.</span></li>\r\n                            <li><span> user sending BTC will deposit the maximum estimated gas cost to a temporary wallet generated by SmartSwap and 100% owned by the user. If the total gas cost at the end of the swap is less than the estimated amount, the temporary wallet returns the balance to the user’s wallet.</span></li>\r\n                            <li><span>SmartSwap users have the option to receive 100% reimbursement for their gas and swap fees. Users are able to claim reimbursements via the reimbursement staking contract. To release reimbursements users must stake the 1:1 equal amount of SMART for one year, but will be able to release partial amounts of the reimbursement if withdrawn at any time before the 1 year period. The pending balance accumulates and the user is able to claim the rest.  </span></li>\r\n                            <li style={{marginBottom: '0px'}}><span>Example</span></li>\r\n                            <li><span>If over the year a user spent over $1000 or more on gas, at any time he can be reimbursed for such cost even if the SMART token value is higher due to appreciation.</span></li>\r\n                        </ul>\r\n                    </div>  \r\n\r\n                    {/* <!-- swap limit Content  --> */}\r\n                    {/* <div>\r\n                        <div className=\"text-Wrap\">\r\n                            <div className=\"text-Title\">Send :</div>\r\n                            <div className=\"amt-Text\">\r\n                                <span className=\"amtCurrecy\">$</span>\r\n                                <input type=\"text\" value=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sidepTitle01\">Receive 1:1</div>\r\n                        <div className=\"radioWrap\">\r\n                            <div className=\"md-radio\">\r\n                                <input type=\"radio\" id=\"radio145\" name=\"stepin50\" value=\"option145\" checked=\"\" />\r\n                                <label htmlFor=\"radio145\">Same face value as market <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top\" data-pt-title=\"Help Text Here\"\r\n                                    aria-hidden=\"true\"></i></i></label>\r\n                            </div>\r\n                            <div className=\"md-radio\">\r\n                                <input type=\"radio\" id=\"radio146\" name=\"stepin50\" value=\"option146\" />\r\n                                <label htmlFor=\"radio146\">Same face value as sends</label>\r\n                            </div>\r\n                            \r\n                        </div> \r\n                        <ul className=\"text-Box\">\r\n                            <li><span className=\"icon-Box\"><i className=\"fas fa-exclamation-circle\"></i></span><span>SmartSwap reimburses all swap fees and does not allow any loss of value due to spread or volatility. The estimated fees cost covers the swap fees and the direct cost of blockchain gas. If the user is swapping BTC, there is an additional cost for 3rd party providers to validate on-chain the exact deposit amount of BTC.</span></li>\r\n                            <li><span>A user sending BTC will deposit the maximum estimated gas cost to a temporary wallet generated by SmartSwap and 100% owned by the user. If the total gas cost at the end of the swap is less than the estimated amount, the temporary wallet returns the balance to the userâ€™s wallet.</span></li>\r\n                            <li><span>Once the final cost of gas and fees is known at the end of the swap, SmartSwap reimburses users with SMART at 100%.</span></li>\r\n                        </ul>\r\n                    </div> */}\r\n\r\n\r\n\r\n\r\n\r\n                    <a href=\"javascript:void\" className=\"close-Icon\" onClick={this.props.closePopup }><img src=\"images/close-btn.png\" alt=\"\"/></a>\r\n\r\n                </div>\r\n            </div>       \r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\withdraw_token.js",["667","668","669"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\n\r\nexport default class WithDrawToken extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: 45000,\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.coinList)\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"WithdrawToken\">\r\n\r\n                <div className=\"container-Grid\">\r\n \r\n                        \r\n                        <div className=\"wtMBX\">\r\n                        <div class=\"peerTitle01\">Withdraw Token</div>\r\n                            <div class=\"gwFormSbox01\">\r\n                                <div class=\"gwFormTitle01\">Tokens name</div>\r\n                                    <select name=\"fontStyle\" id=\"fontStyle\" class=\"subdomain\" style={{padding: '20px 15px',  width: '100%',  backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px'}} >\r\n                                        <option value=\"a\">Token Name A</option>\r\n                                        <option value=\"b\">Token Name B</option> \r\n                                    </select>\r\n                            </div>\r\n                            <div class=\"gwFormSbox01\">\r\n                                <div class=\"gwFormTitle01\">Tokens to withdraw</div>\r\n                                    <input name=\"fontStyle\" id=\"fontStyle\" class=\"subdomain\" style={{padding: '20px 15px',  width: '100%',  backgroundColor: 'rgb(39, 30, 58)', color: 'rgb(255, 255, 255)', border: '0px'}} > \r\n                                    </input>\r\n                                    <div class=\"smlInfotxt01\" style={{textAlign: 'left'}}>Max 7,589.653 SMART</div>\r\n                            </div>\r\n                            <div class=\"gwFormSFormbox03\"><button class=\"gwFormBTN01 blackBack\">WITHDRAW</button></div>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n \r\n\r\n                </div>\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"WithdrawToken\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\helper\\reimbursementContract.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\Header.js",["670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704"],"import React, { PureComponent } from \"react\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Header extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      web3: props.web3,\r\n      web3Config: props.web3Config,\r\n      address: null\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      web3: newProps.web3,\r\n      web3Config: newProps.web3Config,\r\n      address: newProps.web3Config.getAddress()\r\n    }, () => {\r\n      if (newProps.web3Config.getAddress() !== null) {\r\n        this.updateAcc()\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    const { isSubdomain, cloneData } = this.props;\r\n\r\n    if ((cloneData && cloneData.isPreview) || isSubdomain) {\r\n      setTimeout(() => {\r\n        window\r\n          .$(window)\r\n          .resize(function () {\r\n            if (window.$(this).width() > 768) {\r\n              window\r\n                .$(\r\n                  \".wallet-Popup, .side-Popup, #security-DigitalPopup, .menuSideBarContainer\"\r\n                )\r\n                .mCustomScrollbar(); //apply scrollbar with your options\r\n            } else {\r\n              window\r\n                .$(\r\n                  \".wallet-Popup, .side-Popup, #security-DigitalPopup, .menuSideBarContainer\"\r\n                )\r\n                .mCustomScrollbar(\"destroy\"); //destroy scrollbar\r\n            }\r\n          })\r\n          .trigger(\"resize\");\r\n\r\n        // var menuOpen = false;\r\n        // window.$(\"#DotMenu\").click(function (event) {  \r\n        //   window.$(\".menuSideBar\").animate({ right: \"0\", opacity: \"1\" }, 500); \r\n        //   menuOpen = true;\r\n        //   event.stopPropagation();\r\n        // });\r\n\r\n\r\n        // window.$(\".main, .MenuClose\").click(function (e) {\r\n        //   if (menuOpen) {\r\n        //     if (!window.$(e.target).is(\".menuSideBar *, .menuSideBar\")) {\r\n        //       window\r\n        //         .$(\".menuSideBar\")\r\n        //         .animate({ right: \"-100%\", opacity: \"0\" }, 500);\r\n        //     }\r\n        //   }\r\n        // });\r\n        // window.$(\".MenuClose, .footerV2-LanBoxLink\").click(function (e) {\r\n        //   if (menuOpen) {\r\n        //     window\r\n        //       .$(\".menuSideBar\")\r\n        //       .animate({ right: \"-100%\", opacity: \"0\" }, 500);\r\n        //   }\r\n        // });\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async updateAcc() {\r\n    setInterval(async () => {\r\n      await web3Config.checkAccount()\r\n      this.setState({\r\n        address: web3Config.getAddress()\r\n      })\r\n    }, 10000)\r\n  }\r\n\r\n  render() {\r\n    const { cloneData, clearPreview } = this.props;\r\n    // console.log({ cloneData, clearPreview });\r\n    const urlData = cloneData.logoUrl;\r\n    const logoPath = cloneData.logoImage\r\n      ? cloneData.logoImage\r\n      : \"images/logo.png\";\r\n    return (\r\n      <header className=\"header wow fadeInDown\">\r\n        <div className=\"logo\">\r\n          <a className=\"urlData\" href={urlData ? urlData : \"/\"} target=\"_blank\">\r\n            <img className=\"logoimage\" src={logoPath} alt=\"\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"leftMenu\">\r\n          <Link to='/' className=\"active\">SMARTSWAP</Link>\r\n          <Link to='/extension'>SMARTBRIDGE EXTENSION</Link>\r\n          <Link to='/projects'>SMARTBRIDGE FOR PROJECTS</Link>\r\n        </div>\r\n        <div className=\"rightMenu\">\r\n          {cloneData && cloneData.isPreview && (\r\n            <>\r\n              <Link\r\n                className=\"ssBtn03 clone-button\"\r\n                to={{\r\n                  pathname: \"/ownLicence\",\r\n                  state: {\r\n                    cloneData: cloneData,\r\n                  },\r\n                }}\r\n              >\r\n                Continue\r\n              </Link>\r\n              <button className=\"ssBtn03 clone-button\" onClick={clearPreview}>\r\n                Cancel Preview\r\n              </button>\r\n            </>\r\n          )}\r\n          {/* <a style={{color:\"orange\",marginRight:\"20px\"}} target=\"_blank\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSf9vPdd87ai-O_ZMIY5Wr88DF6KTLMheTL1nzvm9fXEgJTXJg/viewform\">Smartswap PreSale </a> */}\r\n          <div className=\"rmUserWallet\">\r\n            {this.state.web3 !== null\r\n              ? this.state.address.slice(0, 6) +\r\n              \"...\" +\r\n              this.state.address.slice(38, 42)\r\n              : null}\r\n          </div>\r\n          <a\r\n            href=\"javascript:void(0);\"\r\n            className=\"rmDotLink  \"\r\n            id=\"DotMenu\"\r\n            style={{ color: this.state.web3 !== null ? \"#91dc27\" : \"white\" }}\r\n          >\r\n            {/* <i className=\"fas fa-ellipsis-h\"></i> */}\r\n            {/* <i className=\"fas fa-circle\"></i> */}\r\n          </a>\r\n        </div>\r\n        <div id=\"langBox\" className=\"autoClose n-collapse\">\r\n          <div\r\n            className={\r\n              cloneData.logoImage\r\n                ? \"langBoxContainer subdomain clearfix\"\r\n                : \"langBoxContainer clearfix\"\r\n            }\r\n          >\r\n            <div className=\"lanbox01\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\" className=\"active\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon01\"></i>\r\n                </div>\r\n                English\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon02\"></i>\r\n                </div>\r\n                中文繁體\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon03\"></i>\r\n                </div>\r\n                Tiếng Việt\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon04\"></i>\r\n                </div>\r\n                العربية\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon05\"></i>\r\n                </div>\r\n                Deutsch\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon06\"></i>\r\n                </div>\r\n                Pусский\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon07\"></i>\r\n                </div>\r\n                Español\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon08\"></i>\r\n                </div>\r\n                <span style={{ unicodeBidi: \"bidi-override\" }}>תירבע</span>\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon09\"></i>\r\n                </div>\r\n                BAHASA INDONESIA\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon010\"></i>\r\n                </div>\r\n                Türkçe\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon011\"></i>\r\n                </div>\r\n                Português\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon012\"></i>\r\n                </div>\r\n                हिन्दी\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon013\"></i>\r\n                </div>\r\n                Français\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon014\"></i>\r\n                </div>\r\n                한국어\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 disableBTN\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon015\"></i>\r\n                </div>\r\n                日本語\r\n              </a>{\" \"}\r\n            </div>\r\n            <div className=\"lanbox01 ani-1\">\r\n              {\" \"}\r\n              <a href=\"javascript:void(0)\">\r\n                <div className=\"lanIconbox\">\r\n                  <i className=\"lanicon015 translateLanguage\"></i>\r\n                </div>\r\n                <div id=\"google_translate_element\"></div>\r\n              </a>{\" \"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","D:\\React\\SmartSwap_frontend\\src\\components\\WalletPopup.js",["705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745"],"import React, { PureComponent } from \"react\";\r\nimport web3Config from \"../config/web3Config\";\r\n\r\nexport default class WalletPopup extends PureComponent {\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"wallet-Popup\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"wallet-popupBlock\">\r\n                        <div className=\"search-Mbx\">\r\n\r\n                            <div className=\"search-Bx\"> <a href=\"javascript:void(0);\">\r\n                                <span className=\"icon-Box\"><i className=\"fas fa-search\"></i></span></a>\r\n                                <input type=\"text\" placeholder=\"Search wallet by Name\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"wallet-boxWrap\">\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon03.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Guarda</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon02.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">MyEtherWaCllet</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon01.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">MetaMask</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon04.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Mist</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon05.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Exodus</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon06.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Atomic</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon07.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Jaxx</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon08.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Ethaddress</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon09.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">TrustWallet</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon10.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Coinomi</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon11.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">Bread Wallet</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                            <div className=\"wallet-Bx ani-1\">\r\n                                <div className=\"img-Box\"> <img src=\"images/wallet-icon12.png\" alt=\"\" className=\"img-fluid\" />\r\n                                    <div className=\"title-Name\">imToken Wallet</div>\r\n                                </div>\r\n                                <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <a href=\"javascript:void(0);\" className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\helper\\swapFactoryContract.js",["746"],"D:\\React\\SmartSwap_frontend\\src\\config\\constantConfig.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\RightSideMenu.js",["747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791"],"D:\\React\\SmartSwap_frontend\\src\\components\\DropDown.js",[],"D:\\React\\SmartSwap_frontend\\src\\helper\\validation.js",["792"],"import {\r\n    EventEmitter\r\n} from \"events\";\r\nimport { contractAddressesByPairs } from \"../config/constantConfig\";\r\n\r\n\r\n\r\nclass Validation extends EventEmitter {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    floatOnly(event) {\r\n        if (event.shiftKey === true) event.preventDefault();\r\n\r\n        var code = event.keyCode;\r\n\r\n        if (\r\n            (code >= 48 && code <= 57) ||\r\n            (code >= 96 && code <= 105) ||\r\n            code === 8 ||\r\n            code === 9 ||\r\n            code === 37 ||\r\n            code === 39 ||\r\n            code === 46 ||\r\n            code === 190 ||\r\n            code === 110\r\n        ) {\r\n            // allowed characters\r\n        } else event.preventDefault();\r\n\r\n        if (\r\n            event.target.value.indexOf(\".\") !== -1 &&\r\n            (code === 190 || code === 110)\r\n        )\r\n            event.preventDefault();\r\n    }\r\n\r\n    getPairAddress(sendCurrency, receiveCurrency) {\r\n        return contractAddressesByPairs.smartswap[sendCurrency + \"/\" + receiveCurrency];\r\n    }\r\n\r\n    handleActions(action) {\r\n        switch (action.type) { }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst validation = new Validation();\r\n//dispatcher.register(Validation.handleActions.bind(validation));\r\nexport default validation;","D:\\React\\SmartSwap_frontend\\src\\components\\liquidity_fountain_for_SPs.js",["793","794","795"],"D:\\React\\SmartSwap_frontend\\src\\components\\Counter.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\About.js",["796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839"],"D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\LiquidityProvider.js",["840","841","842"],"import React, { PureComponent } from \"react\";\r\nimport SpIntroduction from \"./SpIntroduction\";\r\nimport SpContractDeployForm from \"./SpContractDeployForm\";\r\nimport { tokenDetails } from \"../../config/constantConfig\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from \"axios\";\r\nimport ccxt from \"ccxt\";\r\n\r\nconst MIN_AMOUNT_A = 500;\r\nconst MIN_SPREAD_RANGE=0;\r\nconst MAX_SPREAD_RANGE=1;\r\nconst MAX_WITHDRAW_PERCENT=45;\r\nconst SANDBOX_MODE=false;\r\nconst PRICE_SOURCE=\"coingecko\"; // coingecko OR binance\r\n\r\nexport default class LiquidityProvider extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: null,\r\n            web3Config: null,\r\n            coinList: tokenDetails\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (typeof window.ethereum !== 'undefined') {            \r\n            // detect Network account change\r\n            window.ethereum.on('chainChanged', networkId => {\r\n                console.log('chainChanged', networkId);\r\n                this.setState({\r\n                    web3: null\r\n                });\r\n            });\r\n    \r\n            window.ethereum.on('accountsChanged', accounts => {\r\n                console.log('account Changed');\r\n                this.setState({\r\n                    web3: null\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTokenUsdValuesFromCoingecko();\r\n    }\r\n\r\n    getTokenUsdValuesFromCoingecko = async () => {\r\n        if(PRICE_SOURCE === \"coingecko\"){\r\n            let url = \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,tether,binancecoin,cardano,polkadot,uniswap,ripple,matic-network&vs_currencies=USD&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true\";\r\n            \r\n            let response = await axios.get(url).then((res) => {\r\n                return res.data;\r\n            }).catch((err) => {\r\n                console.log(\"errorOrigin: getTokenUsdValuesFromCoingecko\", err);\r\n            });\r\n      \r\n            this.setState({\r\n                tokenPrices: {\r\n                    'ETH': response[\"ethereum\"][\"usd\"],\r\n                    'BNB': response[\"binancecoin\"][\"usd\"],\r\n                    'MATIC': response[\"matic-network\"][\"usd\"]\r\n                }\r\n            });\r\n        }\r\n\r\n        if(PRICE_SOURCE === \"binance\"){\r\n            const exchange = new ccxt.binance();\r\n            exchange.set_sandbox_mode(SANDBOX_MODE);\r\n            \r\n            let ticker = await exchange.fetchTicker('BNBUSDT');\r\n            let bnbPrice = ticker.last;            \r\n\r\n            ticker = await exchange.fetchTicker('ETHUSDT');\r\n            let ethPrice = ticker.last;\r\n            if(SANDBOX_MODE === false){\r\n                ticker = await exchange.fetchTicker('MATICUSDT');\r\n            } else {\r\n                ticker = {\r\n                    last: 1.80\r\n                }\r\n                console.log(\"MATIC price is static in sanbox mode. Price 1 matic = $1.80\");\r\n            }\r\n            let maticPrice = ticker.last;\r\n\r\n            this.setState({ \r\n                tokenPrices: {\r\n                    'ETH': ethPrice,\r\n                    'BNB': bnbPrice,\r\n                    'MATIC': maticPrice\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"LiquidityProvider\">\r\n                <div className=\"container-Grid details-n\">\r\n                    <SpIntroduction />\r\n                    <SpContractDeployForm \r\n                        minAmountA={MIN_AMOUNT_A} \r\n                        minSpreadRange={MIN_SPREAD_RANGE} \r\n                        maxSpreadRange={MAX_SPREAD_RANGE}\r\n                        maxWithdrawPercent={MAX_WITHDRAW_PERCENT}\r\n                        tokenPrices={this.state.tokenPrices}\r\n                        sandboxMode={SANDBOX_MODE}\r\n                    />\r\n                </div>\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"LiquidityProvider\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\NoDomain.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\PeerPopup.js",["843","844","845","846","847","848","849","850","851"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class PeerPopup extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#PeerPopup .tab-Link\").hover(function () {\r\n            $(\".tab-Link\").removeClass(\"active\")\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-Content\").hide();\r\n            $(\"#\" + $(this).attr(\"data-id\")).show();\r\n        });\r\n\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"PeerPopup\">\r\n                <div className=\"container-Grid\"> \r\n                <div className=\"MainTabBox\">\r\n                    <div className=\"tab-Nav\">\r\n                        <a href=\"javascript:void(0)\" className=\"tab-Link\"  onClick={ev=>{ev.preventDefault();}} data-id=\"tab-1\">Peer to Contract</a>\r\n                        <a href=\"javascript:void(0)\" className=\"tab-Link\"  onClick={ev=>{ev.preventDefault();}} data-id=\"tab-2\">Peer to Peer</a>\r\n                        <a href=\"javascript:void(0)\" className=\"tab-Link\"  onClick={ev=>{ev.preventDefault();}} data-id=\"tab-3\">Peer to Contract and Group</a>\r\n                    </div> \r\n\r\n\r\n                    <div className={\"tab-Content \" + this.props.popId} id=\"tab-1\">\r\n                         <div className=\"peerTitle01\">Peer to Contract</div>\r\n                         <div className=\"peerText01\">SmartSwap holds liquidity pools with locked LP funds, executing P2C (Peer-to-Contract) swaps. The liquidity pools execute swap orders when there is no counter party. Users that provide liquidity receive spread + SMART rewards in both native tokens and major cryptocurrencies like BNB or ETH.</div>\r\n\r\n                    </div> \r\n                    <div className={\"tab-Content \" + this.props.popId} id=\"tab-2\">\r\n                         <div className=\"peerTitle01\">Peer to Peer</div>\r\n                         <div className=\"peerText01\">P2P has two distinct processes. First, SmartSwap defaults to the P2P swap to check if there is someone that wants to swap against the order placed. Second, SmartSwap P2P allows users to generate a transaction ID that can be sent directly to a specific person they want to swap with. The transaction ID is created and the users send their digital assets to that transaction ID. Once the swap takes place, SmartSwap swaps for the same face value. If there is any delta it will be returned to the appropriate party.</div>\r\n\r\n                    </div> \r\n                    <div className={\"tab-Content \" + this.props.popId} id=\"tab-3\">\r\n                         <div className=\"peerTitle01\">Peer to Contract and Group</div>\r\n                         <div className=\"peerText01\">If the liquidity contract does not have enough liquidity, the swap turns into a P2P&C swap, which means the swap partially executes and the rest remains pending until the contract rebalances itself through counterparties or liquidity providers (CEX or OTC) using a CeFi gateway that acts as a decentralized FLASH Swap. SmartSwap utilizes the Peer-to-Contract and Group (P2P&C) to search for as many counterparties as needed to cover the full face value of the transaction.</div>\r\n\r\n                    </div> \r\n\r\n                    </div> \r\n\r\n                </div>\r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n               \r\n                <a href=\"javascript:void(0);\"  onClick={() => { this.props.closePopup(\"PeerPopup\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\pages\\select_token.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\CefiToDefi.js",["852","853","854","855","856","857","858","859","860","861","862","863","864"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class CefiToDefi extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#CefiToDefi .tab-Link\").hover(function () {\r\n            $(\".tab-Link\").removeClass(\"active\")\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-Content\").hide();\r\n            $(\"#\" + $(this).attr(\"data-id\")).show();\r\n        });\r\n\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"CefiToDefi\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"MainTabBox\">\r\n                        <div className=\"tab-Nav\">\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-7\">\r\n                                CeFi to DeFi</a>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-8\">What is a Swap Provider</a>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-9\">SmartSwap Liquidity Process</a>\r\n                        </div>\r\n\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-7\">\r\n                            <div className=\"peerTitle01\">DECENTRALIZED CeFi {'<>'} DeFi BRIDGE</div>\r\n                            <div className=\"peerText01\">Now, without signing up to a CEX, doing time-consuming KYC on multiple platforms, or dealing with order book volatility, users can still benefit from CEX liquidity through SmartSwap. SmartSwap provides a true bridge between CeFi and DeFi with one simple click access to liquidity, even while keeping self custody of the assets.</div>\r\n                        </div>\r\n\r\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }} >\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-8\">\r\n                                What is a Swap Provider</a>\r\n                        </div>\r\n\r\n\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-8\">\r\n\r\n                            <div className=\"peerTitle01\">What is a Swap Provider?</div>\r\n                            <div className=\"peerText01\">SmartSwap allows anyone with a Centralized Exchange account, like Binance, to utilize a simple decentralized API and become an Swap Provider (SP). The SP’s drive liquidity into SmartSwap allows the SP to earn automatic spread on their favorite tokens.<br />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"lpBTNBar01\">\r\n                                <button className=\"ssBtn02\" onClick={() => { this.props.closePopup(\"CefiToDefi\"); this.props.openPopup(\"LiquidityProvider\") }}>BECOME AN SP</button> </div>\r\n                        </div>\r\n\r\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }} >\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-9\">SmartSwap Liquidity Process</a>\r\n                        </div>\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-9\">\r\n                            <div className=\"peerTitle01\">SmartSwap Liquidity Process</div>\r\n                            <div className=\"peerText01-v2\"><i>1</i> User initiates a swap order </div>\r\n                            <div className=\"peerText01-v2\"><i>2</i> SmartSwap searches for a counterparty (Peer-to-Peer) </div>\r\n                            <div className=\"peerText01-v2\"><i>3</i> If there is not enough liquidity, the swap order automatically triggers the liquidity from Swap Providers  </div>\r\n                            <div className=\"peerText01-v2\"><i>4</i> If a counterparty is not found and there is not enough liquidity from Swap Providers, the swap will remain pending until the Swap Providers recycle their liquidity like a fountain.</div>\r\n                            <div className=\"peerText01-v2\"><i>5</i> If pending orders execute at a later time, users receive in return the exact same face value at the time of execution. </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"CefiToDefi\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\React\\SmartSwap_frontend\\src\\components\\LedgerHistory.js",["865","866","867","868","869","870","871","872","873"],"D:\\React\\SmartSwap_frontend\\src\\components\\HowItWorks.js",["874","875","876","877","878","879","880","881","882"],"D:\\React\\SmartSwap_frontend\\src\\dispatcher.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpIntroduction.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpContractDeployForm.js",["883"],"D:\\React\\SmartSwap_frontend\\src\\helper\\axiosRequest.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\ActiveContract.js",["884","885","886","887","888","889","890","891","892","893","894","895"],"D:\\React\\SmartSwap_frontend\\src\\helper\\swapFactoryContractPairWise.js",[],"D:\\React\\SmartSwap_frontend\\src\\helper\\spContract.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\free-listing.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\Header02.js",["896","897","898","899","900","901","902"],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen01.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen02.js",["903","904","905","906","907","908","909","910","911","912","913","914"],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen03.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen04.js",["915","916","917","918","919","920"],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen05.js",["921","922","923","924","925","926","927","928","929","930","931","932","933","934","935"],"D:\\react\\SmartSwap_frontend\\src\\index.js",[],["936","937"],"D:\\react\\SmartSwap_frontend\\src\\App.js",[],"D:\\react\\SmartSwap_frontend\\src\\reportWebVitals.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\projects.js",["938"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport constantConfig, { getTokenList, tokenDetails } from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport CONSTANT from \"../constants\";\r\n// import Header from \"../components/Header\";\r\nimport Header from \"../components/Header02\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport axios from \"axios\";\r\nimport { isValidAddress } from 'ethereumjs-util';\r\n\r\n\r\nconst $ = window.$;\r\nexport default class Projects extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { checked1: false };\r\n    this.handleChange1 = this.handleChange1.bind(this);\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setSendCurrency = this.setSendCurrency.bind(this);\r\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\r\n    this.updateCloneData = this.updateCloneData.bind(this);\r\n    this.clearPreview = this.clearPreview.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n    this.expedite = this.expedite.bind(this);\r\n    const { match, location, history } = props;\r\n    this.state = {\r\n      web3: null,\r\n      web3Check: false,\r\n      btnClick: false,\r\n      swapFactory: null,\r\n      swapLoading: false,\r\n      selectedSendCurrency: \"BNB\",\r\n      selectedReceiveCurrency: \"ETH\",\r\n      instanceSwapFactoryBinance: null,\r\n      instanceSwapFactoryEthereum: null,\r\n      instanceSwapFactoryPolygon: null,\r\n      instanceReimbursementBinance: null,\r\n      instanceReimbursementEthereum: null,\r\n      tokenInstance: {},\r\n      txLink: \"\",\r\n      wrapBox: \"swap\",\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      allTxHistoryUI: null,\r\n      allPendingTxHistoryUI: null,\r\n      showTxHistory: false,\r\n      showLedger: false,\r\n      currencyPrices: {},\r\n      estimatedGasFee: \"0\",\r\n      tableData: [],\r\n      isSearchTable: false,\r\n      tableSearchResult: [],\r\n      tableDataToDisplay: [],\r\n      liveETHPrice: 0,\r\n      wbnbPrice: 0,\r\n      sideBar: false,\r\n      tokenBalances: {\r\n        JNTR: 0,\r\n        \"JNTR/b\": 0,\r\n        \"JNTR/e\": 0,\r\n        JNTR_APPROVED: 0,\r\n        \"JNTR/b_APPROVED\": 0,\r\n        \"JNTR/e_APPROVED\": 0,\r\n      },\r\n      cloneData:\r\n        typeof location.state === \"undefined\"\r\n          ? {}\r\n          : location.state.cloneData\r\n            ? location.state.cloneData\r\n            : {},\r\n      isloading: false,\r\n      isSubdomain: false,\r\n      noSubDomain: false,\r\n      subDomainName: \"\",\r\n      amounts: {\r\n        totalAmountSwapped: 0,\r\n        feesGenerated: 0,\r\n        smartBoughtBurned: 0,\r\n        totalFeesReimbursed: 0,\r\n        totalReimbursementStaking: 0\r\n      },\r\n      licenseeAddress: {\r\n        56: \"0x0000000000000000000000000000000000000000\",\r\n        1: \"0x0000000000000000000000000000000000000000\",\r\n        97: \"0x0000000000000000000000000000000000000000\",\r\n        42: \"0x0000000000000000000000000000000000000000\",\r\n        80001: \"0x0000000000000000000000000000000000000000\",\r\n        137: \"0x0000000000000000000000000000000000000000\",\r\n      },\r\n      loadingHistory: false,\r\n      selectedOptionSend: { value: tokenDetails.BNB.symbol, label: tokenDetails.BNB.symbol, networkId: tokenDetails.BNB.networkId },\r\n      selectedOptionReceive: { value: tokenDetails.ETH.symbol, label: tokenDetails.ETH.symbol, networkId: tokenDetails.ETH.networkId },\r\n      selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(\"BNB\", \"ETH\"),\r\n      sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"ETH\" && value.label !== \"BNB\";\r\n      }),\r\n      recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"BNB\" && value.label !== \"ETH\";\r\n      }),\r\n      web3Provider: {\r\n        [process.env.REACT_APP_ETH_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_BSC_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_POLYGON_CHAIN_ID]: null,\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange1(checked1) {\r\n    this.setState({ checked1 });\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.state.sideBar == true) {\r\n      this.setState({\r\n        sideBar: false\r\n      });\r\n    }\r\n  }\r\n  updateCloneData = (data) => {\r\n    this.setState({\r\n      cloneData: data,\r\n    });\r\n  };\r\n\r\n  clearPreview = () => {\r\n    const r = document.querySelector(\":root\");\r\n    r.style.removeProperty(\"--text-color\");\r\n    r.style.removeProperty(\"--button-bg-color\");\r\n    r.style.removeProperty(\"--req-bg\");\r\n    this.setState({\r\n      cloneData: {},\r\n    });\r\n    this.props.history.push({\r\n      pathname: \"\",\r\n      state: {\r\n        cloneData: {},\r\n      },\r\n    });\r\n  };\r\n\r\n  getData = async (domain) => {\r\n    this.setState({\r\n      isloading: true,\r\n    });\r\n    try {\r\n      const res = await axios.get(\r\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\r\n      );\r\n      console.log(res);\r\n      if (res.data.response_code === 200) {\r\n        if (domain[0].substring(0, 2) === \"0x\") {\r\n          if (isValidAddress(domain[0])) {\r\n            web3Config.setLicenseeData(res.data.result)\r\n          }\r\n        } else {\r\n          const r = document.querySelector(\":root\");\r\n          r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\r\n          r.style.setProperty(\r\n            \"--button-bg-color\",\r\n            res.data.result.seconderyColor\r\n          );\r\n          r.style.setProperty(\r\n            \"--req-bg\",\r\n            `url(${res.data.result.backGroundImage})`\r\n          );\r\n          r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\r\n          var style = document.createElement('style');\r\n          style.type = 'text/css';\r\n          style.innerHTML = `* { font-family: ${res.data.result.fontStyle} !important; }`;\r\n          document.getElementsByTagName('head')[0].appendChild(style);\r\n          // r.style.setProperty(\"font-family\", res.data.result.fontStyle, \"important\");\r\n          // window.document.body.setAttribute('style', 'font-family:Arial !important');\r\n          this.setState({\r\n            cloneData: {\r\n              bgimage: res.data.result.backGroundImage,\r\n              logoImage: res.data.result.logo,\r\n              subDomain: res.data.result.subDomain,\r\n              primaryColor: res.data.result.primaryColors,\r\n              secondaryColor: res.data.result.seconderyColor,\r\n              fontStyle: res.data.result.fontStyle,\r\n              backgroundOverLay: res.data.result.backgroundOverLay,\r\n              swapButtonColor: res.data.result.swapButton,\r\n              logoUrl: res.data.result.logoUrl,\r\n              sideBar: res.data.result.sideBar\r\n            },\r\n            licenseeAddress: {\r\n              56: res.data.result.bscLicenseAddress,\r\n              1: res.data.result.ethLicenseAddress,\r\n              97: res.data.result.bscLicenseAddress,\r\n              42: res.data.result.ethLicenseAddress\r\n            }\r\n          });\r\n        }\r\n      } else if (res.data.response_code === 404) {\r\n        this.setState({\r\n          noSubDomain: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.openPopup(\"NoDomain\");\r\n        }, 100);\r\n      }\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.log(error.response);\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async fetchPrice() {\r\n    let MarketCap = [];\r\n    let tableDataLocal = [];\r\n    let tableDataLocalcoingecko = [];\r\n    let Uniobj = {};\r\n    let Panobj = {};\r\n    var { currencyPrices } = this.state;\r\n    let wbnbPrice = 0;\r\n\r\n    let liveETHPrice = 0;\r\n\r\n    await axios\r\n      .get(\r\n        `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctether%2Cbinancecoin%2Ccardano%2Cpolkadot%2Cuniswap%2Cripple%2Cmatic-network&vs_currencies=USD&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true`\r\n      )\r\n      .then((res) => {\r\n        tableDataLocalcoingecko = res.data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n\r\n    currencyPrices[\"ETH\"] = tableDataLocalcoingecko[\"ethereum\"][\"usd\"];\r\n\r\n    currencyPrices[\"BNB\"] = tableDataLocalcoingecko[\"binancecoin\"][\"usd\"];\r\n\r\n    currencyPrices[\"MATIC\"] = tableDataLocalcoingecko[\"matic-network\"][\"usd\"];\r\n\r\n    currencyPrices[\"JNTR/e\"] = 0.062166;\r\n    currencyPrices[\"JNTR/b\"] = 0.054237;\r\n    currencyPrices[\"JNTR\"] = 0.532;\r\n\r\n    this.setState(\r\n      {\r\n        currencyPrices: currencyPrices,\r\n      },\r\n      () => {\r\n        this.forceUpdate();\r\n      }\r\n    );\r\n  }\r\n  \r\n  setSendCurrency(currency) {\r\n    this.setState({ selectedSendCurrency: currency }, () => {\r\n      this.closePopup(\"sendCurPop\");\r\n    });\r\n  }\r\n  setReceiveCurrency(currency) {\r\n    this.setState({ selectedReceiveCurrency: currency }, () => {\r\n      this.closePopup(\"receiveCurPop\");\r\n    });\r\n  }\r\n \r\n  async expedite(txId, processAmount, sentChainId) {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    console.log(networkId)\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n\r\n    if (sentChainId !== networkId) {\r\n      notificationConfig.warning(\"Change metamask network to \" + CONSTANT.NETWORK_ID[sentChainId] + \"!\");\r\n      return;\r\n    }\r\n\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n    let allFees = await this.calculateSwapFees(processAmount);\r\n    await swapFactory.expedite(txId, (((Number(allFees.processingFees) * 0.10 + Number(allFees.processingFees))) * 10 ** 18).toFixed(),\r\n      (hash) => {\r\n        this.setState({\r\n        \r\n        });\r\n      },\r\n      (receipt) => {\r\n    \r\n        notificationConfig.success(\"Expedite Success\");\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isloading ? (\r\n          <p>Loading</p>\r\n        ) : (\r\n          <main id=\"main\" className=\"smartSwap\">\r\n            <div className=\"fullscreen-bg\">\r\n              <div className=\"fsbg_sad01\"></div>\r\n              <div className=\"fsbg_container\">\r\n                <video loop autoPlay muted className=\"fullscreen-bg__video\">\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.webm\"} type=\"video/webm\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.mp4\"} type=\"video/mp4\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.ogv\"} type=\"video/ogg\" />\r\n                </video>\r\n              </div>\r\n            </div>\r\n            <div className=\"main\">\r\n              {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n              <RightSideMenu\r\n                web3={this.state.web3}\r\n                openPopup={this.openPopup}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n              ></RightSideMenu>\r\n              {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n              <Header\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n                isSubdomain={this.state.isSubdomain}\r\n                clearPreview={this.clearPreview}\r\n              ></Header>\r\n              {/* <!--======================= HEADER END =====================--> */}\r\n              <div className=\"backgroundBlock\" onClick={this.handleClick} >\r\n                <div\r\n                  className={\r\n                    this.state.cloneData.bgimage\r\n                      ? \"mainBlock required-bg\"\r\n                      : \"mainBlock\"\r\n                  }\r\n                  style={\r\n                    this.state.cloneData.bgimage\r\n                      ? this.state.cloneData.fontStyle &&\r\n                        this.state.cloneData.fontStyle !== \"Default\"\r\n                        ? {\r\n                          fontFamily: this.state.cloneData.fontStyle,\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                        : {\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                      : null\r\n                  }\r\n                >\r\n                  <div className=\"container-Grid\">\r\n                    <div className=\"boost-outer\">\r\n                      <div className=\"boost-left\">\r\n                        <h2>Boost your web3 dApp sales by giving your customers the best payment experience</h2>\r\n                        <p>Super easy one-click cross-chain solution allowing customers to pay with any token or blockchain while you get the token on the blockchain you need.</p>\r\n                        <p className=\"green\">Instead of Deploying Your Project on Multiple Blockchains, integrate one smartpayment to Welcome All Type of Users</p>\r\n                        <div className=\"down-block\">\r\n                          <img src=\"images/down-arrow.png\" alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"boost-right\">\r\n                        <img src=\"images/mobile-frame.png\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"o-outer\">\r\n                      <div className=\"o-left\">\r\n                        {/* <p className=\"option\">OPTION 1</p> */}\r\n                        <h3>ONE-CLICK SMARTPAYMENT</h3>\r\n                        <p>This code will allow users to push by ONE click any token from any network, and receive the final assets that the project is offering. The One-Click SmartPayment allows users one-click access from any token on any network to the final asset the project offers.</p>\r\n                        \r\n                        <div className=\"Box-bottom\">\r\n                          <p className=\"need-text\">You need to call this function in SmartBridge contract</p>\r\n                          <i className=\"fas fa-copy\"></i>\r\n                        </div>\r\n                        <div className=\"code-block\">\r\n                          {/* <p><span>//user should approve tokens transfer before calling this function.</span></p>\r\n                          <p><span>//if no licensee set it to address(0)</span></p>\r\n                          <p>function swap(</p>\r\n                             <p>address tokenA, <span>// token that user send to swap ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address tokenB, <span>// token that user want to receive ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address receiver, <span>// address that will receive tokens on other chain (user's wallet address)</span></p>\r\n                             <p>uint256 amountA,  <span>// amount of tokens user sends to swap</span></p>\r\n                             <p>address licensee,   <span>// for now, = address(0)</span></p>\r\n                             <p>bool isInvestment,  <span>// for now, = false</span></p>\r\n                             <p>uint128 minimumAmountToClaim,   <span>// do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0</span></p>\r\n                             <p>uint128 limitPice   <span>// Do not match user if token A price less this limit. For now, = 0</span></p>\r\n                             <p>)</p>\r\n                             <p>external</p>\r\n                             <p>payable</p>\r\n                             <p><span>returns (bool)</span></p> */}\r\n                             <p className=\"cs\">COMING SOON</p>\r\n                        </div>\r\n                        <div className=\"Box-bottom ver2\">\r\n                          <Link to='#' className=\"dc-file\">Download ABI of smart contract file</Link>\r\n                          <Link to='#'>See example for live SmartPayment button for UniSwap V2 DEXs clone</Link>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      {/* <div className=\"o-left pl-15\">\r\n                        <p className=\"option\">OPTION 2</p>\r\n                        <h3>Quick Bridge Window</h3>\r\n                        <p>This code will allow users to push any token from any network, and receive back to their wallet a stablecoin (like USDT) that belongs to the network that complies with the project, once receiving that stablecoin, users will not need to leave the project page and can interact with the project like a regular transaction.</p>\r\n                        <p className=\"mb-45\">The Quick Bridge Window allows users to push any token on any network to receive a stablecoin on the network that complies with your project. Once the project receives the stablecoin, users will not need to leave the project page, they can interact directly with the project.</p>\r\n                        <div className=\"code-block\">\r\n                          <p><span>//user should approve tokens transfer before calling this function.</span></p>\r\n                          <p><span>//if no licensee set it to address(0)</span></p>\r\n                          <p>function swap(</p>\r\n                             <p>address tokenA, <span>// token that user send to swap ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address tokenB, <span>// token that user want to receive ( address(1) for BNB, address(2) for ETH)</span></p>\r\n                             <p>address receiver, <span>// address that will receive tokens on other chain (user's wallet address)</span></p>\r\n                             <p>uint256 amountA,  <span>// amount of tokens user sends to swap</span></p>\r\n                             <p>address licensee,   <span>// for now, = address(0)</span></p>\r\n                             <p>bool isInvestment,  <span>// for now, = false</span></p>\r\n                             <p>uint128 minimumAmountToClaim,   <span>// do not claim on user behalf less of this amount. Only exception if order fulfilled. For now, = 0</span></p>\r\n                             <p>uint128 limitPice   <span>// Do not match user if token A price less this limit. For now, = 0</span></p>\r\n                             <p>)</p>\r\n                             <p>external</p>\r\n                             <p>payable</p>\r\n                             <p><span>returns (bool)</span></p>\r\n                        </div>\r\n                        <div className=\"Box-bottom\">\r\n                          <Link to='#'>See example for live SmartBridge button for UniSwap V2 DEXs clone</Link>\r\n                          <i className=\"fas fa-copy\"></i>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\react\\SmartSwap_frontend\\src\\pages\\extension.js",["939","940"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport constantConfig, { getTokenList, tokenDetails } from \"../config/constantConfig\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport SwapFactoryContract from \"../helper/swapFactoryContract\";\r\nimport CONSTANT from \"../constants\";\r\nimport Header from \"../components/Header\";\r\nimport RightSideMenu from \"../components/RightSideMenu\";\r\nimport axios from \"axios\";\r\nimport { isValidAddress } from 'ethereumjs-util';\r\n\r\n\r\nconst $ = window.$;\r\nexport default class Extension extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { checked1: false };\r\n    this.handleChange1 = this.handleChange1.bind(this);\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setSendCurrency = this.setSendCurrency.bind(this);\r\n    this.setReceiveCurrency = this.setReceiveCurrency.bind(this);\r\n    this.updateCloneData = this.updateCloneData.bind(this);\r\n    this.clearPreview = this.clearPreview.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n    this.expedite = this.expedite.bind(this);\r\n    const { match, location, history } = props;\r\n    this.state = {\r\n      web3: null,\r\n      web3Check: false,\r\n      btnClick: false,\r\n      swapFactory: null,\r\n      swapLoading: false,\r\n      selectedSendCurrency: \"BNB\",\r\n      selectedReceiveCurrency: \"ETH\",\r\n      instanceSwapFactoryBinance: null,\r\n      instanceSwapFactoryEthereum: null,\r\n      instanceSwapFactoryPolygon: null,\r\n      instanceReimbursementBinance: null,\r\n      instanceReimbursementEthereum: null,\r\n      tokenInstance: {},\r\n      txLink: \"\",\r\n      wrapBox: \"swap\",\r\n      txIdSent: null,\r\n      txSentStatus: \"pending\",\r\n      txSentTime: null,\r\n      tokenReceive: \"0\",\r\n      txReceiveTime: null,\r\n      txIdReceive: null,\r\n      txLinkSend: \"\",\r\n      txLinkReturn: \"\",\r\n      receiveFundAmount: \"\",\r\n      sendFundAmount: \"\",\r\n      actualSendFundAmount: 0,\r\n      approxReceiveFundAmount: 0,\r\n      allTxHistoryUI: null,\r\n      allPendingTxHistoryUI: null,\r\n      showTxHistory: false,\r\n      showLedger: false,\r\n      currencyPrices: {},\r\n      estimatedGasFee: \"0\",\r\n      tableData: [],\r\n      isSearchTable: false,\r\n      tableSearchResult: [],\r\n      tableDataToDisplay: [],\r\n      liveETHPrice: 0,\r\n      wbnbPrice: 0,\r\n      sideBar: false,\r\n      tokenBalances: {\r\n        JNTR: 0,\r\n        \"JNTR/b\": 0,\r\n        \"JNTR/e\": 0,\r\n        JNTR_APPROVED: 0,\r\n        \"JNTR/b_APPROVED\": 0,\r\n        \"JNTR/e_APPROVED\": 0,\r\n      },\r\n      cloneData:\r\n        typeof location.state === \"undefined\"\r\n          ? {}\r\n          : location.state.cloneData\r\n            ? location.state.cloneData\r\n            : {},\r\n      isloading: false,\r\n      isSubdomain: false,\r\n      noSubDomain: false,\r\n      subDomainName: \"\",\r\n      comingSoonHover:false,\r\n      amounts: {\r\n        totalAmountSwapped: 0,\r\n        feesGenerated: 0,\r\n        smartBoughtBurned: 0,\r\n        totalFeesReimbursed: 0,\r\n        totalReimbursementStaking: 0\r\n      },\r\n      licenseeAddress: {\r\n        56: \"0x0000000000000000000000000000000000000000\",\r\n        1: \"0x0000000000000000000000000000000000000000\",\r\n        97: \"0x0000000000000000000000000000000000000000\",\r\n        42: \"0x0000000000000000000000000000000000000000\",\r\n        80001: \"0x0000000000000000000000000000000000000000\",\r\n        137: \"0x0000000000000000000000000000000000000000\",\r\n      },\r\n      loadingHistory: false,\r\n      selectedOptionSend: { value: tokenDetails.BNB.symbol, label: tokenDetails.BNB.symbol, networkId: tokenDetails.BNB.networkId },\r\n      selectedOptionReceive: { value: tokenDetails.ETH.symbol, label: tokenDetails.ETH.symbol, networkId: tokenDetails.ETH.networkId },\r\n      selectedPairAddress: constantConfig.getSmartswapContractAddressByPairs(\"BNB\", \"ETH\"),\r\n      sendCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"ETH\" && value.label !== \"BNB\";\r\n      }),\r\n      recieveCurrencyList: getTokenList().filter(function (value, index, arr) {\r\n        return value.label !== \"BNB\" && value.label !== \"ETH\";\r\n      }),\r\n      web3Provider: {\r\n        [process.env.REACT_APP_ETH_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_BSC_CHAIN_ID]: null,\r\n        [process.env.REACT_APP_POLYGON_CHAIN_ID]: null,\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange1(checked1) {\r\n    this.setState({ checked1 });\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.state.sideBar == true) {\r\n      this.setState({\r\n        sideBar: false\r\n      });\r\n    }\r\n  }\r\n  updateCloneData = (data) => {\r\n    this.setState({\r\n      cloneData: data,\r\n    });\r\n  };\r\n\r\n  clearPreview = () => {\r\n    const r = document.querySelector(\":root\");\r\n    r.style.removeProperty(\"--text-color\");\r\n    r.style.removeProperty(\"--button-bg-color\");\r\n    r.style.removeProperty(\"--req-bg\");\r\n    this.setState({\r\n      cloneData: {},\r\n    });\r\n    this.props.history.push({\r\n      pathname: \"\",\r\n      state: {\r\n        cloneData: {},\r\n      },\r\n    });\r\n  };\r\n\r\n  getData = async (domain) => {\r\n    this.setState({\r\n      isloading: true,\r\n    });\r\n    try {\r\n      const res = await axios.get(\r\n        `https://wildcard.bswap.info:1830/api/v1/subdomain/getSubDomain/${domain[0]}`\r\n      );\r\n      console.log(res);\r\n      if (res.data.response_code === 200) {\r\n        if (domain[0].substring(0, 2) === \"0x\") {\r\n          if (isValidAddress(domain[0])) {\r\n            web3Config.setLicenseeData(res.data.result)\r\n          }\r\n        } else {\r\n          const r = document.querySelector(\":root\");\r\n          r.style.setProperty(\"--text-color\", res.data.result.primaryColors);\r\n          r.style.setProperty(\r\n            \"--button-bg-color\",\r\n            res.data.result.seconderyColor\r\n          );\r\n          r.style.setProperty(\r\n            \"--req-bg\",\r\n            `url(${res.data.result.backGroundImage})`\r\n          );\r\n          r.style.setProperty(\"--swap-btn-color\", res.data.result.swapButton);\r\n          var style = document.createElement('style');\r\n          style.type = 'text/css';\r\n          style.innerHTML = `* { font-family: ${res.data.result.fontStyle} !important; }`;\r\n          document.getElementsByTagName('head')[0].appendChild(style);\r\n          // r.style.setProperty(\"font-family\", res.data.result.fontStyle, \"important\");\r\n          // window.document.body.setAttribute('style', 'font-family:Arial !important');\r\n          this.setState({\r\n            cloneData: {\r\n              bgimage: res.data.result.backGroundImage,\r\n              logoImage: res.data.result.logo,\r\n              subDomain: res.data.result.subDomain,\r\n              primaryColor: res.data.result.primaryColors,\r\n              secondaryColor: res.data.result.seconderyColor,\r\n              fontStyle: res.data.result.fontStyle,\r\n              backgroundOverLay: res.data.result.backgroundOverLay,\r\n              swapButtonColor: res.data.result.swapButton,\r\n              logoUrl: res.data.result.logoUrl,\r\n              sideBar: res.data.result.sideBar\r\n            },\r\n            licenseeAddress: {\r\n              56: res.data.result.bscLicenseAddress,\r\n              1: res.data.result.ethLicenseAddress,\r\n              97: res.data.result.bscLicenseAddress,\r\n              42: res.data.result.ethLicenseAddress\r\n            }\r\n          });\r\n        }\r\n      } else if (res.data.response_code === 404) {\r\n        this.setState({\r\n          noSubDomain: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.openPopup(\"NoDomain\");\r\n        }, 100);\r\n      }\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.log(error.response);\r\n      this.setState({\r\n        isloading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  setSendCurrency(currency) {\r\n    this.setState({ selectedSendCurrency: currency }, () => {\r\n      this.closePopup(\"sendCurPop\");\r\n    });\r\n  }\r\n  setReceiveCurrency(currency) {\r\n    this.setState({ selectedReceiveCurrency: currency }, () => {\r\n      this.closePopup(\"receiveCurPop\");\r\n    });\r\n  }\r\n \r\n  async expedite(txId, processAmount, sentChainId) {\r\n    let web3 = web3Config.getWeb3();\r\n    let networkId = web3Config.getNetworkId();\r\n    console.log(networkId)\r\n    let address = web3Config.getAddress();\r\n    if (web3 === null) return 0;\r\n\r\n    if (sentChainId !== networkId) {\r\n      notificationConfig.warning(\"Change metamask network to \" + CONSTANT.NETWORK_ID[sentChainId] + \"!\");\r\n      return;\r\n    }\r\n\r\n    let swapFactory = new SwapFactoryContract(web3Config.getWeb3(), networkId);\r\n\r\n    let allFees = await this.calculateSwapFees(processAmount);\r\n    await swapFactory.expedite(txId, (((Number(allFees.processingFees) * 0.10 + Number(allFees.processingFees))) * 10 ** 18).toFixed(),\r\n      (hash) => {\r\n        this.setState({\r\n        \r\n        });\r\n      },\r\n      (receipt) => {\r\n    \r\n        notificationConfig.success(\"Expedite Success\");\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isloading ? (\r\n          <p>Loading</p>\r\n        ) : (\r\n          <main id=\"main\" className=\"smartSwap\">\r\n            <div className=\"fullscreen-bg\">\r\n              <div className=\"fsbg_sad01\"></div>\r\n              <div className=\"fsbg_container\">\r\n                <video loop autoPlay muted className=\"fullscreen-bg__video\">\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.webm\"} type=\"video/webm\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.mp4\"} type=\"video/mp4\" />\r\n                  <source src={CONSTANT.PrePath + \"/video/14559736-hd.ogv\"} type=\"video/ogg\" />\r\n                </video>\r\n              </div>\r\n            </div>\r\n            <div className=\"main\">\r\n              {/* <!--======================= RIGHT SIDE MENU =====================--> */}\r\n              <RightSideMenu\r\n                web3={this.state.web3}\r\n                openPopup={this.openPopup}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n              ></RightSideMenu>\r\n              {/* <!--======================= RIGHT SIDE MENU END  =====================-->\r\n                    <!--======================= HEADER START =====================--> */}\r\n              <Header\r\n                web3={this.state.web3}\r\n                web3Config={web3Config}\r\n                cloneData={this.state.cloneData}\r\n                isSubdomain={this.state.isSubdomain}\r\n                clearPreview={this.clearPreview}\r\n              ></Header>\r\n              {/* <!--======================= HEADER END =====================--> */}\r\n              <div className=\"backgroundBlock\" onClick={this.handleClick} >\r\n                <div\r\n                  className={\r\n                    this.state.cloneData.bgimage\r\n                      ? \"mainBlock required-bg\"\r\n                      : \"mainBlock\"\r\n                  }\r\n                  style={\r\n                    this.state.cloneData.bgimage\r\n                      ? this.state.cloneData.fontStyle &&\r\n                        this.state.cloneData.fontStyle !== \"Default\"\r\n                        ? {\r\n                          fontFamily: this.state.cloneData.fontStyle,\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                        : {\r\n                          backgroundColor: `rgba(0, 0, 0, 0.${this.state.cloneData.backgroundOverLay})`,\r\n                        }\r\n                      : null\r\n                  }\r\n                >\r\n                  <div className=\"container-Grid\">\r\n                    <div className=\"boost-outer\">\r\n                      <div className=\"boost-left ver2\">\r\n                        <h2>Best Market Prices on dApps</h2>\r\n                        <p>Super easy one click smart bridge solution allowing you to pay with any token from any blockchain to any project on any blockchain.</p>\r\n                        <p className=\"green ver2\">Gain $100 of SMART when using SmartBridge\r\n                          <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"left\" data-pt-title=\"help text\" aria-hidden=\"true\"></i></i>\r\n                        </p>\r\n                        <a class=\"ssBtn01 ani-1 cs-btn\" href=\"#\" onMouseEnter={(e)=>this.setState({comingSoonHover:true})} onMouseLeave={(e)=>this.setState({comingSoonHover:false})}>{this.state.comingSoonHover ?\"COMING SOON\" :\"ADD TO BROWSER\"}</a>\r\n                        {/* <a class=\"ssBtn01 ani-1 cs-btn\" href=\"#\">COMING SOON</a> */}\r\n                      </div>\r\n                      <div className=\"boost-right ver2\">\r\n                        <img src=\"images/extension-screen.png\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\react\\SmartSwap_frontend\\src\\pages\\smartSwapLicence.js",["941","942","943","944"],"D:\\react\\SmartSwap_frontend\\src\\pages\\ownLicence02.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\ownLicence.js",["945","946","947","948","949","950","951","952","953","954","955","956"],"D:\\react\\SmartSwap_frontend\\src\\pages\\home.js",["957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031"],"D:\\react\\SmartSwap_frontend\\src\\pages\\free-listing.js",[],"D:\\react\\SmartSwap_frontend\\src\\constants.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen05.js",["1032"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Web3 from 'web3';\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport styled from 'styled-components';\r\nimport { LoopCircleLoading } from 'react-loadingg';\r\nimport Lineimg from \"../assets/freelisting-images/line01.png\";\r\nimport addImg from \"../assets/images/add-chain.png\";\r\nimport BridgeApiHelper from \"../helper/bridgeApiHelper\";\r\nimport BridgeContract from \"../helper/bridgeContract\";\r\nimport errors from \"../helper/errorConstantsHelper\";\r\nconst wrapTokenSymbolPrefix = process.env.REACT_APP_WRAP_TOKEN_SYMBOL_PREFIX;\r\n\r\nconst $ = window.$;\r\nexport default class Screen5 extends PureComponent {\r\n  pendingNetworkSwitchRequest = false;\r\n  canMoveForward = true;\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      addWrappedTokenSignedParams: [],\r\n      btnClicked: false\r\n    };\r\n  }\r\n\r\n  async addNetworkToWallet(chainId) {\r\n    try {\r\n\r\n      const networkConfig = _.find(this.props.networks, {chainId: Number(chainId)});\r\n\r\n      if(networkConfig !== undefined){\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [{\r\n            chainId: Web3.utils.toHex(networkConfig.chainId),\r\n            chainName: networkConfig.name,\r\n            nativeCurrency: {\r\n              name: networkConfig.nativeCurrencyName,\r\n              symbol: networkConfig.nativeCurrencySymbol,\r\n              decimals: networkConfig.nativeCurrencyDecimals\r\n            },\r\n            rpcUrls: [networkConfig.rpc],\r\n            blockExplorerUrls: [networkConfig.explorerUrl]\r\n          }]\r\n        }).then((response) => {\r\n          console.log({\r\n            addNetworkToWalletResponse: response\r\n          })\r\n        }).catch((error) => {\r\n          console.error({\r\n            addNetworkToWalletError: error\r\n          });\r\n        });\r\n      } else {\r\n        console.error({\r\n          addNetworkToWalletError: 'networkConfig undefined'\r\n        });        \r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error({\r\n        addNetworkToWalletCatch: error\r\n      });\r\n    }\r\n  }\r\n\r\n  async switchNetwork(chainId, actionType = null) {\r\n    try {\r\n      if (Number(this.props.chainId) !== Number(chainId)) {\r\n        this.pendingNetworkSwitchRequest = true;\r\n        this.canMoveForward = false;\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: Web3.utils.toHex(chainId) }],\r\n        }).then((response) => {\r\n          this.pendingNetworkSwitchRequest = false;\r\n          this.canMoveForward = true;\r\n          console.log({response: response});\r\n          this.props.onSwitchNetwork(Number(chainId));\r\n        }).catch(async(error) => {\r\n          console.error(error);\r\n          if(error.code === -32002){\r\n            notificationConfig.info(errors.switchRequestPending);\r\n            this.pendingNetworkSwitchRequest = true;\r\n            this.canMoveForward = true;\r\n          }\r\n\r\n          if(error.code === 4902){\r\n            notificationConfig.error(errors.metamask.networkNotFound);\r\n            await this.addNetworkToWallet(chainId);\r\n          }\r\n          \r\n          if(error.code === 4001){\r\n            if(actionType === 'BACK_BUTTON'){\r\n              this.pendingNetworkSwitchRequest = true;\r\n              this.canMoveForward = true;\r\n            } else {\r\n              this.pendingNetworkSwitchRequest = false;\r\n              this.canMoveForward = true;\r\n            }\r\n          }\r\n          \r\n        });\r\n      } else {\r\n        this.props.onSwitchNetwork(Number(chainId));\r\n      }\r\n    } catch(err){\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async activeToken() {\r\n    try {\r\n      const { response, error, code } = await BridgeApiHelper.activateToken(\r\n        this.props.selectedSourceTokenData.chainId,\r\n        this.props.selectedSourceTokenData.txHash\r\n      );\r\n\r\n      if (code === 200) {\r\n        this.setState({\r\n          addWrappedTokenSignedParams: response\r\n        });\r\n      } else {\r\n        console.error({\r\n          error: error,\r\n          code: code\r\n        });\r\n        notificationConfig.error(error);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n\r\n  async addWrappedTokenOnDestinationChain() {\r\n    try {\r\n      this.setState({\r\n        btnClicked: true\r\n      });\r\n      await this.activeToken();\r\n      const bridgeContract = new BridgeContract(this.props.web3Instance, this.props.bridgeContractAddress);\r\n      await bridgeContract.addWrappedTokenOnDestinationChain(\r\n        this.state.addWrappedTokenSignedParams.token,\r\n        this.state.addWrappedTokenSignedParams.chainID,\r\n        this.state.addWrappedTokenSignedParams.decimals,\r\n        this.state.addWrappedTokenSignedParams.name,\r\n        this.state.addWrappedTokenSignedParams.symbol,\r\n        this.state.addWrappedTokenSignedParams.signature,\r\n        async (hash) => {\r\n          console.log({\r\n            hash: hash\r\n          });\r\n\r\n          if (hash !== null || hash !== undefined) {\r\n            // update tx hash to db\r\n          }\r\n        },\r\n        async (response) => {\r\n\r\n          // handle response \r\n          console.log({\r\n            \"Contract response:\": response\r\n          });\r\n\r\n          // response = {\r\n          //   \"to\": \"0x20451Ef7dfb23520bF08344f516229E30eAa6378\",\r\n          //   \"from\": \"0xA03476C7a7bd9eeEAcB0F4Cea7a8093cc2827EdD\",\r\n          //   \"contractAddress\": null,\r\n          //   \"transactionIndex\": 3,\r\n          //   \"gasUsed\": {\r\n          //     \"type\": \"BigNumber\",\r\n          //     \"hex\": \"0x01e871\"\r\n          //   },\r\n          //   \"logsBloom\": \"0xr\n          //   \"blockHash\": \"0x1328b3a19f2998d0fb1bb481871e8f98e9c8e6d8e862462fc1df95a5072bc3f6\",\r\n          //   \"transactionHash\": \"0xddef0352b1b39ec2d6c739bbbb9b90c11a644c6932a76adc355f13a04efe057b\",\r\n          //   \"logs\": [\r\n          //     {\r\n          //       \"transactionIndex\": 3,\r\n          //       \"blockNumber\": 22515012,\r\n          //       \"transactionHash\": \"0xddef0352b1b39ec2d6c739bbbb9b90c11a644c6932a76adc355f13a04efe057b\",\r\n          //       \"address\": \"0x20451Ef7dfb23520bF08344f516229E30eAa6378\",\r\n          //       \"topics\": [\r\n          //         \"0xef4ec9b3cfaa22dd32688bf4ac3c820e8b468ffb6452f61717fb9d845f3c5263\",\r\n          //         \"0x000000000000000000000000000080383847bd75f91c168269aa74004877592f\"\r\n          //       ],\r\n          //       \"data\": \"0x00000000000000000000000000000000000000000000000000000000000000610000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000045a6574610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045a45544100000000000000000000000000000000000000000000000000000000\",\r\n          //       \"logIndex\": 22,\r\n          //       \"blockHash\": \"0x1328b3a19f2998d0fb1bb481871e8f98e9c8e6d8e862462fc1df95a5072bc3f6\"\r\n          //     }\r\n          //   ],\r\n          //   \"blockNumber\": 22515012,\r\n          //   \"confirmations\": 4,\r\n          //   \"cumulativeGasUsed\": {\r\n          //     \"type\": \"BigNumber\",\r\n          //     \"hex\": \"0x0bed71\"\r\n          //   },\r\n          //   \"effectiveGasPrice\": {\r\n          //     \"type\": \"BigNumber\",\r\n          //     \"hex\": \"0x02540be400\"\r\n          //   },\r\n          //   \"status\": 1,\r\n          //   \"type\": 0,\r\n          //   \"byzantium\": true\r\n          // }\r\n\r\n          if (response?.code === \"ACTION_REJECTED\") {\r\n            this.setState({\r\n              btnClicked: false\r\n            });\r\n            notificationConfig.error(response.reason);\r\n          }\r\n\r\n          if (response?.code === \"UNPREDICTABLE_GAS_LIMIT\") {\r\n            this.setState({\r\n              btnClicked: false\r\n            });\r\n            notificationConfig.error(response.reason);\r\n          }\r\n\r\n          if (response?.code === -32016) {\r\n            this.setState({\r\n              btnClicked: false\r\n            });\r\n            notificationConfig.error(response.message);\r\n          }\r\n\r\n          if(response?.code === 4001) {\r\n            this.setState({\r\n              btnClicked: false\r\n            });\r\n            notificationConfig.error(response.message);\r\n          }\r\n\r\n          if (response?.data?.code === 3) {\r\n            this.setState({\r\n              btnClicked: false\r\n            });\r\n            notificationConfig.error(response?.data?.message);\r\n          }\r\n          \r\n\r\n          if (response?.code === -32000 || response?.code === -32603){\r\n            this.setState({\r\n              btnClicked: false\r\n            });\r\n            notificationConfig.error(\"Intrinsic gas too low\");\r\n          }\r\n\r\n          if(response?.code === 'NOT_A_CONTRACT'){\r\n            this.setState({\r\n              btnClicked: false\r\n            });\r\n            notificationConfig.error(errors.erc20Errors.NOT_A_CONTRACT('Bridge', this.props.bridgeContractAddress));\r\n          }\r\n          \r\n\r\n          if(\r\n            response?.code === 'CALL_EXCEPTION' \r\n            || response?.code === 'INSUFFICIENT_FUNDS' \r\n            || response?.code === 'NETWORK_ERROR' \r\n            || response?.code === 'NONCE_EXPIRED' \r\n            || response?.code === 'REPLACEMENT_UNDERPRICED'\r\n            || response?.code === 'UNPREDICTABLE_GAS_LIMIT'\r\n          ){\r\n            this.setState({\r\n              btnClicked: false\r\n            });\r\n            notificationConfig.error(response.reason);            \r\n          }\r\n\r\n          if(response?.code === 'TRANSACTION_REPLACED'){\r\n            if(response?.cancelled === false && response?.receipt?.transactionHash){\r\n              await this.attachWrapToken(\r\n                this.props.chainId,\r\n                response.receipt.transactionHash,\r\n                response.receipt.blockNumber\r\n              );\r\n              notificationConfig.success(errors.tokenWrapped);\r\n            }\r\n          }\r\n          \r\n\r\n          if(response?.status === 1) {\r\n            await this.attachWrapToken(\r\n              this.props.chainId,\r\n              response.transactionHash,\r\n              response.blockNumber\r\n            );\r\n            notificationConfig.success(errors.tokenWrapped);\r\n          }\r\n\r\n        });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  async attachWrapToken(toChainId = null, txHash = null, blockNumber = null) {\r\n    try {\r\n      if (\r\n        toChainId == null\r\n        ||        \r\n        txHash == null\r\n        ||\r\n        blockNumber == null\r\n      ) {\r\n        notificationConfig.error(errors.wrapTokenCouldNotSaved);\r\n        return;\r\n      }\r\n\r\n      const { response, error, code } = await BridgeApiHelper.attachWrapTokenOnProject(\r\n        toChainId,\r\n        txHash,\r\n        blockNumber\r\n      );\r\n\r\n      if(code === 201 || code === 200){\r\n        await this.props.onFetchWrappedTokens();\r\n        this.setState({\r\n          btnClicked: false\r\n        });\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  async onFinishButtonClicked(){\r\n    if(this.canMoveForward === true){\r\n      await this.props.onFetchWrappedTokens(true).then(response => {\r\n        if(this.props.wrappedTokens.length > 0){\r\n          this.props.onFinishButtonClicked();\r\n        } else {\r\n          notificationConfig.warning(errors.noWrapTokens);\r\n        }\r\n      });\r\n    } else {\r\n      notificationConfig.info(errors.switchRequestPending);            \r\n    }\r\n  }\r\n\r\n  async onBackButtonClicked(chainId){\r\n      await this.switchNetwork(Number(chainId), 'BACK_BUTTON');\r\n      if(this.pendingNetworkSwitchRequest === false){\r\n        this.props.onBackButtonClicked(4);\r\n      } else {\r\n        notificationConfig.info(errors.switchRequestPending);\r\n      }\r\n  }\r\n\r\n  render() {\r\n\r\n    let networksData = [];\r\n    const selectedDestinationNetworks = this.props.selectedDestinationNetworks;\r\n    selectedDestinationNetworks.forEach(networkId => {\r\n      const wrappedToken = _.find(this.props.wrappedTokens, {\r\n        projectId: this.props.projectId,\r\n        toChainId: Number(networkId), \r\n        fromChainId: Number(this.props.selectedSourceTokenData.chainId)\r\n      });\r\n      const networkConfig = _.find(this.props.networks, { chainId: networkId });\r\n      let networkData = networkConfig;\r\n      if (wrappedToken !== undefined) {\r\n        networkData['wrappedTokenExist'] = true;\r\n      } else {\r\n        networkData['wrappedTokenExist'] = false;\r\n      }\r\n      networksData.push(networkData);\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <main id=\"main\" className=\"smartSwap\">\r\n\r\n          <div className=\"main\">\r\n            <MContainer>\r\n              <CMbx>\r\n                <ProgressBar>\r\n                  <span style={{ width: '75%' }}></span>\r\n                </ProgressBar>\r\n\r\n                <ProGTitle01>\r\n                  <i>4</i> Create a bridge\r\n                </ProGTitle01>\r\n\r\n                {networksData.length > 0 && networksData.map(function (network, i) {\r\n                  return (\r\n                    <ProRow key={i}>\r\n                      <span className=\"labelNo\">{i + 1}</span>\r\n                      <ProRowCol1>\r\n                        <ProICOTitle>Current chain</ProICOTitle>\r\n                        <ProICOSbx01 className=\"selected\">\r\n                          <ProICOSbx02>\r\n                            <img \r\n                              alt={this.props.selectedSourceTokenData.name}\r\n                              src={'/images/free-listing/tokens/' + ((this.props.selectedSourceTokenData.name).toString() + '.png').toLowerCase()} \r\n                              onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')}                          \r\n                            />\r\n                            {this.props.selectedSourceTokenData.name}\r\n                          </ProICOSbx02>\r\n                          <ProICOSbx02>\r\n                            <img\r\n                              alt={this.props.selectedSourceTokenData.chainIcon}\r\n                              src={'/images/free-listing/chains/' + this.props.selectedSourceTokenData.chainIcon}\r\n                              onError={(e) => (e.currentTarget.src = '/images/free-listing/chains/default.png')}\r\n                            />\r\n                            {this.props.selectedSourceTokenData.chain}\r\n                          </ProICOSbx02>\r\n                        </ProICOSbx01>\r\n                        <ProColImg><img alt=\"add image\" src={addImg}></img></ProColImg>\r\n                      </ProRowCol1>\r\n                      <ProRowCol1>\r\n                        <ProICOTitle>Destination chain </ProICOTitle>\r\n                        <ProICOSbx01 className=\"selected\">\r\n                          <ProICOSbx02>\r\n                            <img \r\n                              alt={this.props.selectedSourceTokenData.name}\r\n                              src={'/images/free-listing/tokens/' + ((this.props.selectedSourceTokenData.name).toString() + '.png').toLowerCase()} \r\n                              onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')}                           \r\n                            />\r\n                            {(wrapTokenSymbolPrefix).toLowerCase()}{this.props.selectedSourceTokenData.name}\r\n                          </ProICOSbx02>\r\n                          <ProICOSbx02>\r\n                            <img\r\n                              alt={network.icon}\r\n                              src={'/images/free-listing/chains/' + network.icon} \r\n                              onError={(e) => (e.currentTarget.src = '/images/free-listing/chains/default.png')}\r\n                            />\r\n                            {network.chain}\r\n                          </ProICOSbx02>\r\n                        </ProICOSbx01>\r\n                        <ProColBtn>\r\n                          {network.wrappedTokenExist === true && (\r\n                            <label className=\"Btn02\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i> Bridge Created</label>\r\n                          )}\r\n                          {network.wrappedTokenExist === false && Number(network.chainId) === Number(this.props.chainId) && (\r\n                            <button disabled={this.state.btnClicked} onClick={e => this.addWrappedTokenOnDestinationChain()} className=\"Btn01\">\r\n                              {this.state.btnClicked === true && (\r\n                                <LoopCircleLoading\r\n                                    height={'20px'}\r\n                                    width={'20px'}\r\n                                    color={'#ffffff'}\r\n                                />\r\n                              )}\r\n                              {this.state.btnClicked === false && (\r\n                                'CREATE A BRIDGE'                              \r\n                              )}\r\n                              {this.state.btnClicked === true && (\r\n                                'CREATING A BRIDGE'                              \r\n                              )}\r\n                            </button>\r\n                          )}\r\n                          {network.wrappedTokenExist === false && Number(network.chainId) !== Number(this.props.chainId) && (\r\n                            <button disabled={this.state.btnClicked} onClick={e => this.switchNetwork(network.chainId)} className=\"Btn01\">SWITCH NETWORK</button>\r\n                          )}\r\n                        </ProColBtn>\r\n                      </ProRowCol1>\r\n                    </ProRow>\r\n                  )\r\n                }.bind(this))}\r\n\r\n                <BtnMbox>\r\n                  <button onClick={() => this.onBackButtonClicked(this.props.selectedSourceTokenData.chainId)} className=\"Btn02\"> <i className=\"fas fa-chevron-left\"></i> Back</button>\r\n                  <button onClick={() => this.onFinishButtonClicked()} className=\"Btn01\">FINISH</button>\r\n                </BtnMbox>\r\n\r\n              </CMbx>\r\n            </MContainer>\r\n\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\r\n`;\r\n\r\nconst MContainer = styled(FlexDiv)` \r\n  width: calc(100% - 40px); max-width:1360px; margin:0 auto;\r\n`\r\nconst CMbx = styled(FlexDiv)`\r\n  width:100%;  margin-top:90px;\r\n  @media (max-width: 991px){\r\n\t\tmargin-top: 60px;\r\n\t}\r\n`\r\nconst ProgressBar = styled.div`\r\nwidth:100%; height:4px; background-color: #303030; display:flex ; margin-bottom:55px;\r\n    span{ display:inline-block; height:4px; -webkit-box-shadow: 0 0 15px 5px rgba(145,220,39,0.5); box-shadow: 0 0 15px 5px rgba(145,220,39,0.5);  background-color:#91dc27; border-radius:0 2px 2px 0;}\r\n    @media screen and (max-width: 640px) {\r\n      margin-bottom: 40px;\r\n    }\r\n`\r\n\r\nconst ProGTitle01 = styled(FlexDiv)` \r\n    font-size:24px; color:#ffffff; font-weight:700; justify-content:flex-start; width:100%; margin-bottom:50px; \r\n    i{ display:flex; font-style:normal; width:41px; height:41px; border:2px solid #fff; align-items:center; justify-content:center; margin-right:28px;  } \r\n`\r\nconst ProICOMbx01 = styled.div` width:100%; `\r\nconst ProICOMbx02 = styled(FlexDiv)`\r\n    align-items:flex-start; justify-content: flex-start; margin:30px -18px 0 -18px;\r\n`\r\nconst ProICOSbx01 = styled.button`\r\n  width:calc(25% - 36px); margin:0 18px 30px 18px; background-color:#21232b; height:60px; border:0px; outline:none; padding:0; position: relative;\r\n  display: flex; align-items: center; justify-content: flex-start;\r\n  :hover{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  }\r\n  &.selected{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  }\r\n` \r\n\r\nconst ProICOSbx02 = styled(FlexDiv)`\r\n  width:50%; padding:0 18px; justify-content:flex-start; font-size:14px; font-weight:400; color:#fff;\r\n  img{ margin-right:15px; width: 25px; border-radius: 25px;}\r\n  &:nth-child(01){ background-image:url(${Lineimg}); background-repeat:no-repeat; background-position:right 50%;} \r\n  @media screen and (max-width: 1200px) {\r\n    /* flex-flow: column; align-items: center; justify-content: center; */ padding:0 10px;\r\n    img {margin:0 6px 0 0;}\r\n  }\r\n  @media screen and (max-width: 640px) {\r\n    flex-flow: row; justify-content: flex-start;  padding:0 15px;\r\n    img {margin:0 15px 0 0;}\r\n  }\r\n`\r\nconst BtnMbox = styled(FlexDiv)`\r\n  border-top:1px solid #303030;  width:100%; margin-top:30px; justify-content: space-between; padding-top:48px;\r\n  .Btn01{ color:#fff; background-color:#0d0e13; width:100%; max-width:430px; text-align:center; padding:18px 15px; border:2px solid #91dc27; font-size:18px; font-weight:700; margin-bottom:20px; -webkit-box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); :hover{ background-color:#91dc27;}}\r\n  .Btn02{ background-color:transparent; color:#a6a2b0; border:0; font-size:14px; font-weight:400; :hover{ color:#91dc27;}}\r\n  @media screen and (max-width: 640px) {\r\n\t\t.Btn01{max-width: 50%}\r\n\t}\r\n\t@media screen and (max-width: 480px) {\r\n\t\tflex-flow: column-reverse; padding-bottom: 30px; padding-top: 30px; margin-top: 0;\r\n\t\t.Btn01{max-width: 100%; margin-bottom: 25px;}\r\n\t}\r\n`\r\n\r\nconst ProRow = styled.div `\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding: 40px 0 0 0;\r\n  margin: 0 0 50px;\r\n  @media (max-width: 1100px){\r\n    display: grid; grid-template-columns: 30px 1fr; column-gap: 40px;\r\n  }\r\n  @media (max-width: 640px){\r\n    display: grid; grid-template-columns: 1fr; column-gap: 0;\r\n  }\r\n  .labelNo {\r\n    width:30px;\r\n    height:30px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: bold;\r\n    margin-right: 25px;\r\n    @media (max-width: 1100px){\r\n      grid-row-start: 1; grid-row-end: 3; align-self: flex-start;\r\n    }\r\n  }\r\n  `\r\nconst ProRowCol1 = styled.div `\r\n  display: flex;\r\n  width: 50%;\r\n  align-items: center;\r\n  position: relative;\r\n  @media (max-width: 1100px){\r\n    width: auto; margin: 0 0 70px; \r\n  }\r\n  @media (max-width: 640px){\r\n    margin: 70px 0 0; flex-flow: column;\r\n  }\r\n  button {\r\n    width: calc(50% - 36px);\r\n    margin: 0;\r\n    flex-grow: 1;\r\n    @media (max-width: 640px){\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\nconst ProColImg = styled.div `\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  width: calc(50% - 36px); \r\n  padding: 0 15px;\r\n  img {max-width: 100%;}\r\n  @media screen and (max-width: 640px) {\r\n    margin-top: 40px;\r\n    width: 100%; \r\n  }\r\n  `\r\nconst ProColBtn = styled.div `\r\n  flex-grow: 1;\r\n  width: calc(50% - 36px);\r\n  padding-left: 30px;\r\n  button {\r\n    color:#fff; background-color:#0d0e13; width: 100%;  text-align:center; padding:18px 15px; border:2px solid #91dc27; font-size:18px; font-weight:700; -webkit-box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); box-shadow: 0 0 12px 5px rgba(145,220,39,0.5);\r\n    &:hover{ background-color:#91dc27;}\r\n  }\r\n  .Btn02 {\r\n    color: #91dc27;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    display: block;\r\n    .fa {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 640px) {\r\n    width: 100%; padding-left: 0;\r\n    button {\r\n      margin-top: 40px; width: 100%;\r\n    }\r\n    .Btn02 {\r\n      padding: 10px 0; margin-top: 40px;\r\n    }\r\n  }\r\n`\r\nconst ProICOTitle = styled.span`\r\n  position: absolute;\r\n  font-size: 18px;\r\n  color: #fff;\r\n  bottom: 100%;\r\n  margin-bottom: 15px;\r\n  font-weight: bold;\r\n  @media screen and (max-width: 640px) {\r\n    width: 100%;\r\n  }\r\n`\r\n","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen03.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen04.js",["1033","1034","1035","1036","1037","1038","1039","1040","1041","1042"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport styled from 'styled-components';\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport Lineimg from \"../assets/freelisting-images/line01.png\";\r\nimport BridgeApiHelper from \"../helper/bridgeApiHelper\";\r\n\r\nexport default class Screen4 extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      selectedNetworks: [],\r\n      filteredNetwork: \"\",\r\n      isOpen1: true,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.onFetchWrappedTokens();\r\n  }\r\n  \r\n  filterNetworks = (network) => {\r\n    this.setState({ filteredNetwork: network });\r\n  };\r\n\r\n  selectNetwork = (networkId) => {\r\n    if(this.state.selectedNetworks.includes(networkId)){\r\n      this.setState({selectedNetworks: this.state.selectedNetworks.filter(function(network) { \r\n        return network !== networkId\r\n      })});\r\n    } else {\r\n      this.setState(prevState => ({\r\n        selectedNetworks: [...prevState.selectedNetworks, Number(networkId)]\r\n      }));\r\n    }\r\n  }\r\n\r\n  setDestinationNetworks(){\r\n    if(this.state.selectedNetworks.length === 0){\r\n      notificationConfig.error('Please select a network.');\r\n      return;\r\n    }\r\n    this.props.onDestinationNetworksSelected(this.state.selectedNetworks);\r\n  }\r\n\r\n  toggle = index => {\r\n    let collapse = \"isOpen\" + index;\r\n    this.setState(prevState => ({\r\n        [collapse]: !prevState[collapse]\r\n    })); \r\n  }\r\n\r\n  render() {\r\n\r\n    let finalFilteredNetworks = [];\r\n    let availableChainsCount = 0;\r\n    let notAvailableChainsCount = 0;\r\n    const filteredNetworks = this.props.networks.filter(network => {\r\n      if(network.chain.match(new RegExp(this.state.filteredNetwork, \"i\"))){\r\n        return network;\r\n      }\r\n    });\r\n\r\n    filteredNetworks.forEach(network => {\r\n      if(Number(network.chainId) !== Number(this.props.selectedSourceTokenChainId)){\r\n        const wrappedToken = _.find(this.props.wrappedTokens, {\r\n          projectId: this.props.projectId,\r\n          fromChainId: Number(this.props.selectedSourceTokenChainId),\r\n          toChainId: Number(network.chainId)\r\n        });\r\n\r\n        network['selectedNetwork'] = this.state.selectedNetworks.includes(network.chainId) ? true : false;\r\n        network['isBridgeExistOnChain'] = wrappedToken === undefined ? false : true;\r\n        network['isBridgeExistOnChain'] ? notAvailableChainsCount+=1 : availableChainsCount+=1;\r\n        finalFilteredNetworks.push(network);\r\n      }\r\n    });\r\n\r\n    console.log({\r\n      availableChainsCount: availableChainsCount,\r\n      notAvailableChainsCount: notAvailableChainsCount\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <main id=\"main\" className=\"smartSwap\">\r\n          <div className=\"main\">\r\n            <MContainer>\r\n              <CMbx>\r\n\r\n                <ProgressBar> \r\n                  <span style={{ width: '75%' }}></span> \r\n                </ProgressBar>\r\n                \r\n                <ProGTitle01> \r\n                  <i>3</i> Select the EVM destination chains\r\n                </ProGTitle01>\r\n                \r\n                <ProInputbx> \r\n                  <input onChange={e => this.filterNetworks(e.target.value)} type=\"text\" placeholder=\"Search chain\" value={this.state.filteredNetwork}/>\r\n                </ProInputbx>\r\n\r\n                <ProGTitle02>Choose a new chain to bridge to</ProGTitle02>\r\n\r\n                <ProICOMbx01>\r\n                  <ProICOMbx02>\r\n                    {finalFilteredNetworks.length > 0 && finalFilteredNetworks.map(function(network, i){\r\n                      if(network.isBridgeExistOnChain === false){\r\n                        return <ProICOSbx01 className=\"md-checkbox\" key={i}>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id={'list-item-' + i}\r\n                            name={network.name}\r\n                            checked={network.selectedNetwork}\r\n                            onChange={e => this.selectNetwork(network.chainId)}\r\n                          />\r\n                          <label htmlFor={'list-item-' + i}>\r\n                            <img \r\n                              src={'/images/free-listing/chains/' + ((network.chain).toString() + '.png').toLowerCase()}\r\n                              onError={(e) => (e.currentTarget.src = '/images/free-listing/chains/default.png')}\r\n                            /> {network.chain}\r\n                          </label>\r\n                        </ProICOSbx01>\r\n                      }\r\n                    }.bind(this) )}\r\n                  </ProICOMbx02>\r\n\r\n                  { availableChainsCount == 0 && this.state.filteredNetwork.length == 0 && (\r\n                    <p>NO NEW CHAIN AVAILABLE TO CREATE A BRIDGE FOR THE SELECTED TOKEN</p>\r\n                  )}\r\n\r\n                  { finalFilteredNetworks.length == 0 && this.state.filteredNetwork.length > 0 && (\r\n                    <p>NO CHAIN FOUND</p>\r\n                  )}\r\n\r\n                </ProICOMbx01>\r\n\r\n                <ProGTitle02 className='v2'>Existing bridges  \r\n                  <button className=\"Opbtn01\" onClick={() => this.toggle(1)}>\r\n                    <i className=\"fas fa-sort-down\"></i>\r\n                  </button>\r\n                </ProGTitle02>\r\n                <Collapse isOpen={this.state.isOpen1} className={\"collapse-css-transition colpsmBX\"} > \r\n                <ProICOMbx01>\r\n                  <ProICOMbx02> \r\n                    \r\n                    {finalFilteredNetworks.length > 0 && finalFilteredNetworks.map(function(network, i){\r\n                      if(network.isBridgeExistOnChain === true){\r\n                          return <ProICOSbx02 key={i}>\r\n                            <img\r\n                              src={'/images/free-listing/chains/' + (((network.chain).toLowerCase()).toString() + '.png').toLowerCase()}\r\n                              className='disable' \r\n                              onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                            /> {network.chain}\r\n                          </ProICOSbx02>\r\n                      }\r\n                    }.bind(this) )}                    \r\n                    \r\n                  </ProICOMbx02>\r\n\r\n                  { notAvailableChainsCount == 0 && this.state.filteredNetwork.length == 0 && (\r\n                    <p>NO EXISTING BRIDGE YET</p>\r\n                  )}\r\n\r\n                  { finalFilteredNetworks.length == 0 && this.state.filteredNetwork.length > 0 && (\r\n                    <p>NO CHAIN FOUND</p>\r\n                  )}\r\n\r\n                </ProICOMbx01>\r\n                </Collapse>\r\n\r\n\r\n                <BtnMbox>\r\n                  <button onClick={() => this.props.onBackButtonClicked(2)} className=\"Btn02\"> <i className=\"fas fa-chevron-left\"></i> Back</button>\r\n                  <button onClick={() => this.setDestinationNetworks()} className=\"Btn01\"> NEXT STEP</button>\r\n                  <SmallInfo>Total chains to bridge to: <span>{this.state.selectedNetworks.length}</span></SmallInfo>\r\n                </BtnMbox>\r\n\r\n              </CMbx>\r\n            </MContainer>\r\n\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\r\n  .colpsmBX{ width: 100%; overflow:visible !important;}\r\n`;\r\n\r\nconst MContainer = styled(FlexDiv)` \r\n\twidth: calc(100% - 40px); max-width:1360px; margin:0 auto;\r\n`;\r\nconst CMbx = styled(FlexDiv)`\r\n\twidth:100%;  margin-top:90px; margin-bottom: 40px;\r\n  @media (max-width: 991px){\r\n\t\tmargin-top: 60px;\r\n\t}\r\n`;\r\nconst ProgressBar = styled.div`\r\n  width:100%; height:4px; background-color: #303030; display:flex ; margin-bottom:55px;\r\n  span{ display:inline-block; height:4px; -webkit-box-shadow: 0 0 15px 5px rgba(145,220,39,0.5); box-shadow: 0 0 15px 5px rgba(145,220,39,0.5);  background-color:#91dc27; border-radius:0 2px 2px 0;}\r\n  @media screen and (max-width: 640px) {\r\n    margin-bottom: 40px;\r\n  }\r\n`\r\n\r\nconst ProGTitle01 = styled(FlexDiv)` \r\n  font-size:24px; color:#ffffff; font-weight:700; justify-content:flex-start; width:100%; margin-bottom:50px; flex-flow : row;\r\n  i{ display:flex; font-style:normal; width:41px; height:41px; border:2px solid #fff; align-items:center; justify-content:center; margin-right:28px; flex-shrink: 0; } \r\n  @media only screen and (max-width: 640px) {\r\n    i{margin-right: 20px;}\r\n  }\r\n`\r\nconst ProGTitle02 = styled(FlexDiv)` \r\n  font-size:18px; color:#ffffff; font-weight:700; justify-content:flex-start; width:100%; margin:25px 0 30px 0;  \r\n  &.v2{ border-top:1px solid #303030; margin: 0 0 30px; padding-top: 20px; position:relative;  }\r\n  .Opbtn01{ display:flex; width:22px; height:22px; position:absolute; right:0; top:15px; border:none; outline:none; background-color:transparent; color:#ffffff; align-items:center; justify-content:center; }\r\n`\r\n\r\nconst SmallInfo = styled(FlexDiv)`\r\n  font-size:12px; color:#a6a2b0; justify-content: flex-end; width:100%; margin-bottom:10px;\r\n  span{ color:#fff; padding:0 0 0 3px;}\r\n`\r\n\r\nconst ProInputbx = styled(FlexDiv)`\r\n  width:100%;\r\n  input{ width:100%; display:block; border:2px solid #000; border-radius:0; background-color:#21232b; padding:20px; font-size:16px; color:#ffffff; font-weight:400; }\r\n`\r\nconst ProICOMbx01 = styled.div` width:100%; `\r\nconst ProICOMbx02 = styled(FlexDiv)`\r\n  display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); column-gap: 36px; row-gap: 30px; margin:0 0 30px; \r\n  \r\n`\r\nconst ProICOSbx01 = styled.div`\r\n  background-color:#21232b; height:60px; border:0px; outline:none; padding:0;\r\n  display: flex; align-items: center; justify-content: flex-start; margin: 0;\r\n  /* :hover{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  } \r\n  &.selected{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  } */\r\n  &.disable{filter: grayscale(100%); }\r\n  input[type=\"checkbox\"]:checked+label{ -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  }\r\n  label{ width:100%; display:block; line-height:60px; margin-left:0px; padding-left:52px; display: flex;  align-items: center;  justify-content: flex-start; font-size:14px; color:#ffffff;   img{margin:-3px 12px 0 0; }\r\n  }\r\n  label:before{ background: #464646; border-radius:25px;  border:none; left: 13px;  top: 18px;}\r\n  input[type=\"checkbox\"]:checked+label:after{ top: 23px; width: 10px; height: 7px; left: 18px; border-color: #21232b;}\r\n  input[type=\"checkbox\"]:checked+label:before{ border:none; background-color:#91dc26;}\r\n  @media screen and (max-width: 991px) {\r\n\t}\r\n\t@media screen and (max-width: 575px) {\r\n\t\tlabel {padding-left: 45px;}\r\n\t}\r\n\t@media screen and (max-width: 480px) {\r\n\t}\r\n` \r\nconst ProICOSbx02 = styled(FlexDiv)`\r\n  background-color:#21232b; height:60px; width:100%; padding:0 18px; justify-content:flex-start; font-size:14px; font-weight:400; color:#fff;\r\n  img{ margin-right:15px; max-width: 30px; border-radius: 30px;}\r\n  &.disable{filter: grayscale(100%); }\r\n  &:nth-child(01){ background-image:url(${Lineimg}); background-repeat:no-repeat; background-position:right 50%;}\r\n`\r\n\r\nconst BtnMbox = styled(FlexDiv)`\r\n  border-top:1px solid #303030;  width:100%; margin-top:30px; justify-content: space-between; padding-top:48px;\r\n  .Btn01{ color:#fff; background-color:#0d0e13; width:100%; max-width:430px; text-align:center; padding:18px 15px; border:2px solid #91dc27; font-size:18px; font-weight:700; margin-bottom:20px; -webkit-box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); :hover{ background-color:#91dc27;}}\r\n  .Btn02{ background-color:transparent; color:#a6a2b0; border:0; font-size:14px; font-weight:400; :hover{ color:#91dc27;}}\r\n\t@media screen and (max-width: 640px) {\r\n\t\t.Btn01{max-width: 50%}\r\n\t}\r\n\t@media screen and (max-width: 480px) {\r\n\t\tflex-flow: column-reverse; padding-bottom: 30px; padding-top: 30px; margin-top: 0;\r\n\t\t.Btn01{max-width: 100%; margin-bottom: 25px;}\r\n\t}\r\n`","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen01.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen02.js",["1043","1044","1045"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport Web3 from 'web3';\r\nimport _ from \"lodash\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport styled from 'styled-components';\r\nimport Lineimg from \"../assets/freelisting-images/line01.png\";\r\nimport { createWatcher, aggregate } from '@makerdao/multicall';\r\nimport errors from \"../helper/errorConstantsHelper\";\r\n\r\n\r\nconst $ = window.$;\r\nexport default class Screen2 extends PureComponent {\r\n  pendingNetworkSwitchRequest = false;\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      tokens: [],\r\n      filteredToken: \"\",\r\n      selectedSource: {\r\n        token: null,\r\n        tokenAddress: null,\r\n        tokenIcon: null,\r\n        chain: null,\r\n        chainId: null,\r\n        chainIcon: null,\r\n        explorerUrl: null,\r\n        decimals: null\r\n      },\r\n      addCustomToken: false\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.filterTokenByWalletBalance();\r\n  }\r\n\r\n  aggregateBalanceOfMultiCall = async(chainId, tokenAddresses = [], accountAddress) => {\r\n    try {\r\n      //accountAddress = '0x084374b068Eb3db504178b4909eDC26D01226a80';\r\n\r\n      \r\n      const networkConfig = _.find(this.props.networks, {chainId: Number(chainId)});\r\n      console.log(networkConfig);\r\n\r\n      const config = {\r\n        rpcUrl: networkConfig.rpc,\r\n        multicallAddress: networkConfig.multicallContractAddress\r\n      };\r\n  \r\n      const multicallTokensConfig = [];\r\n      tokenAddresses.forEach(tokenAddress => {\r\n          // will only work with erc20 token addresses\r\n          var obj = {\r\n            target: tokenAddress,\r\n            call: ['balanceOf(address)(uint256)', accountAddress],\r\n            returns: [['BALANCE_OF_' + tokenAddress, val => val / 10 ** 18]]\r\n          }\r\n          multicallTokensConfig.push(obj);\r\n      });\r\n  \r\n      console.log(multicallTokensConfig);\r\n      \r\n      const response = await aggregate(\r\n        multicallTokensConfig,\r\n        config\r\n      );\r\n      \r\n      Object.keys(response.results.transformed).forEach((token, index) => {\r\n        const tokenAddress = (token.substring(11)).toLowerCase();\r\n        const isTokenExist = _.find(this.props.tokens, {\r\n          address: tokenAddress,\r\n          chainId: Number(chainId)\r\n        });\r\n        if(isTokenExist){\r\n          console.log(`${index} ${isTokenExist.symbol}  ${isTokenExist.chainId} - ${token} - ${response.results.transformed[token]}`)\r\n          if(response.results.transformed[token] > 0){\r\n            this.setState(prevState => ({\r\n              tokens: [...prevState.tokens, isTokenExist]\r\n            }))\r\n          }\r\n        }\r\n      });  \r\n    } catch(error){\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  async filterTokenByWalletBalance(){\r\n    try {\r\n      const groupedTokenByNetwork = this.props.tokens.reduce(function (r, token) {\r\n          r[token.chainId] = r[token.chainId] || [];\r\n          r[token.chainId].push(token.address);\r\n          return r;\r\n      }, Object.create(null));\r\n\r\n      Object.keys(groupedTokenByNetwork).forEach(async(network) => {\r\n        await this.aggregateBalanceOfMultiCall(network, groupedTokenByNetwork[network], this.props.accountAddress);\r\n      });\r\n    } catch(error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  async addNetworkToWallet(chainId) {\r\n    try {\r\n\r\n      const networkConfig = _.find(this.props.networks, {chainId: Number(chainId)});\r\n\r\n      if(networkConfig !== undefined){\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [{\r\n            chainId: Web3.utils.toHex(networkConfig.chainId),\r\n            chainName: networkConfig.name,\r\n            nativeCurrency: {\r\n              name: networkConfig.nativeCurrencyName,\r\n              symbol: networkConfig.nativeCurrencySymbol,\r\n              decimals: networkConfig.nativeCurrencyDecimals\r\n            },\r\n            rpcUrls: [networkConfig.rpc],\r\n            blockExplorerUrls: [networkConfig.explorerUrl]\r\n          }]\r\n        }).then((response) => {\r\n          console.log({\r\n            addNetworkToWalletResponse: response\r\n          })\r\n        }).catch((error) => {\r\n          console.error({\r\n            addNetworkToWalletError: error\r\n          });\r\n        });\r\n      } else {\r\n        console.error({\r\n          addNetworkToWalletError: 'networkConfig undefined'\r\n        });        \r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error({\r\n        addNetworkToWalletCatch: error\r\n      });\r\n    }\r\n  }\r\n\r\n  async switchNetwork(token, tokenAddress, tokenIcon, chain, chainId, chainIcon, explorerUrl, decimals) {\r\n    if(this.pendingNetworkSwitchRequest === false){\r\n      const sourceObject = {\r\n        selectedSource: {\r\n          token: token,\r\n          tokenAddress: tokenAddress,\r\n          tokenIcon: tokenIcon,\r\n          chain: chain,\r\n          chainId: chainId,\r\n          chainIcon: chainIcon,\r\n          explorerUrl: explorerUrl,\r\n          decimals: decimals\r\n        }      \r\n      }\r\n      if(Number(this.props.chainId) !== Number(chainId)){\r\n        this.pendingNetworkSwitchRequest = true;\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: Web3.utils.toHex(chainId)}],\r\n        }).then(response => {\r\n          this.setState(sourceObject);\r\n          this.pendingNetworkSwitchRequest = false;\r\n        }).catch(async(error) => {\r\n          console.error(error);\r\n          if(error.code === -32002){\r\n            notificationConfig.info(errors.switchRequestPending);\r\n            this.pendingNetworkSwitchRequest = true;\r\n          }\r\n\r\n          if(error.code === 4902){\r\n            notificationConfig.error(errors.metamask.networkNotFound);\r\n            //await this.addNetworkToWallet(chainId, chain, token, token, decimals, explorerUrl, explorerUrl);\r\n            //https://matic-mumbai.chainstacklabs.com\r\n            await this.addNetworkToWallet(chainId);\r\n          }\r\n\r\n          this.pendingNetworkSwitchRequest = false;\r\n        });\r\n      } else {\r\n        this.setState(sourceObject);\r\n      }\r\n    } else {\r\n      notificationConfig.info(errors.switchRequestPending);      \r\n    }\r\n  }\r\n\r\n  onBackButtonClicked(){\r\n    if(this.pendingNetworkSwitchRequest === false){\r\n      this.props.onBackButtonClicked(1)\r\n    } else {\r\n      notificationConfig.info(errors.switchRequestPending);            \r\n    }\r\n  }\r\n\r\n  setSourceToken(){\r\n    if(this.pendingNetworkSwitchRequest === false){\r\n      if(this.state.addCustomToken === false){\r\n        if(\r\n          this.state.selectedSource.token == null\r\n          ||\r\n          this.state.selectedSource.tokenAddress == null\r\n          ||\r\n          this.state.selectedSource.tokenIcon == null\r\n          ||\r\n          this.state.selectedSource.chain == null\r\n          ||\r\n          this.state.selectedSource.chainId == null\r\n          ||\r\n          this.state.selectedSource.chainIcon == null\r\n          ||\r\n          this.state.selectedSource.explorerUrl == null\r\n          ||\r\n          this.state.selectedSource.decimals == null\r\n        ){\r\n          notificationConfig.error(errors.tokenNotSelected);\r\n          return;\r\n        }\r\n    \r\n        this.props.onSourceTokenSelected(\r\n          this.state.selectedSource.token,\r\n          this.state.selectedSource.tokenAddress, \r\n          this.state.selectedSource.tokenIcon, \r\n          this.state.selectedSource.chain,\r\n          this.state.selectedSource.chainId,\r\n          this.state.selectedSource.chainIcon,\r\n          this.state.selectedSource.explorerUrl,\r\n          this.state.selectedSource.decimals\r\n        );\r\n      } else {\r\n        this.props.onAddCustomTokenClicked();      \r\n      }\r\n    } else {\r\n      notificationConfig.info(errors.switchRequestPending);\r\n    }\r\n  }\r\n\r\n  filterTokens = (token) => {\r\n    this.setState({ filteredToken: (token).toUpperCase() });\r\n  };\r\n\r\n  getNetworkName = (chainId) => {\r\n    const networkConfig = _.find(this.props.networks, {chainId: chainId});\r\n    if(networkConfig !== undefined){\r\n      return networkConfig.chain\r\n    } else {\r\n      return 'CUSTOM'\r\n    }\r\n  }\r\n\r\n  getNetworkIcon = (chainId) => {\r\n    const networkConfig = _.find(this.props.networks, {chainId: chainId});\r\n    if(networkConfig !== undefined){\r\n      return networkConfig.icon\r\n    } else {\r\n      return 'default.png'\r\n    }\r\n  }\r\n\r\n  addCustomTokenButtonClickedHandler = () => {\r\n    this.setState({\r\n      addCustomToken: !this.state.addCustomToken\r\n    })     \r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n    const filteredTokens = this.state.tokens.filter(token => {\r\n      if(\r\n        token.symbol.match(new RegExp(this.state.filteredToken, \"i\")) \r\n        ||\r\n        token.address.match(new RegExp(this.state.filteredToken, \"i\"))\r\n      ){\r\n        return token;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <main id=\"main\" className=\"smartSwap\">\r\n\r\n          <div className=\"main\">\r\n            <MContainer>\r\n              <CMbx>\r\n                <ProgressBar> <span style={{ width: '25%' }}></span> </ProgressBar>\r\n\r\n                <ProGTitle01> <i>1</i> Select the token to bridge</ProGTitle01>\r\n                <ProInputbx> \r\n                  <input \r\n                    onChange={e => this.filterTokens(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Search tokens by symbol or smart contract\"\r\n                    value={this.state.filteredToken}\r\n                  />\r\n                </ProInputbx>\r\n                <ProICOMbx01>\r\n                  <ProICOMbx02>\r\n                  \r\n                    {filteredTokens.map((token, i) => {\r\n                      const network = _.find(this.props.networks, { chainId: token.chainId });\r\n                      if(network !== undefined){\r\n                        token['chain'] = network.chain;\r\n                        token['chainIcon'] = network.icon;\r\n                        token['explorerUrl'] = network.explorerUrl;\r\n                      }\r\n                      var isSelectedToken = this.state.selectedSource.tokenAddress === null ? '' : ( \r\n                        (this.state.selectedSource.tokenAddress).toLowerCase() === (token.address).toLowerCase()\r\n                        && \r\n                        Number(this.state.selectedSource.chainId) === Number(token.chainId)\r\n                      ) ? 'selected' : '';\r\n                      var isFeaturedToken = token.featured === true ? 'featured': 'not-featured';\r\n                      var isFilteredToken = token.symbol.includes(this.state.filteredToken.length > 0 ? this.state.filteredToken : undefined) ? 'filtered-token' : '';\r\n                      return (\r\n                      <ProICOSbx01 \r\n                        key={i} \r\n                        chainId={token.chainId} \r\n                        //className={`${isSelectedToken} ${isFeaturedToken} ${isFilteredToken}`}\r\n                        className={`${isSelectedToken}`}\r\n                        onClick={() => this.switchNetwork(\r\n                          token.symbol, \r\n                          token.address, \r\n                          token.icon,\r\n                          token.chain, \r\n                          token.chainId,\r\n                          token.chainIcon,\r\n                          token.explorerUrl,\r\n                          token.decimals\r\n                        )}\r\n                      >\r\n                        <ProICOSbx02> \r\n                          <img\r\n                            alt={token.symbol} \r\n                            className=\"token-icon\" \r\n                            src={'/images/free-listing/tokens/' + ((token.symbol).toString() + '.png').toLowerCase()}\r\n                            onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                          />{token.symbol}\r\n                        </ProICOSbx02>\r\n                        <ProICOSbx02> \r\n                            <img\r\n                              alt={token.chain}\r\n                              className=\"chain-icon\"\r\n                              src={'/images/free-listing/chains/' + ((token.chainIcon).toString()).toLowerCase()} \r\n                              onError={(e) => (e.currentTarget.src = '/images/free-listing/chains/default.png')}\r\n                            />{token.chain}\r\n                        </ProICOSbx02>\r\n                      </ProICOSbx01>\r\n                      )\r\n                    })}\r\n\r\n                      <ProICOSbx01\r\n                        key={this.state.tokens.length}\r\n                        onClick={() => this.addCustomTokenButtonClickedHandler()}\r\n                        className={this.state.addCustomToken === true ? 'selected' : ''}\r\n                      >\r\n                        <ProICOSbx02>\r\n                          <img src={'/images/free-listing/tokens/' + (('default.png').toString()).toLowerCase()} />CUSTOM\r\n                        </ProICOSbx02>\r\n                        <ProICOSbx02> \r\n                            <img \r\n                              src={'/images/free-listing/chains/' + ((this.getNetworkIcon(this.props.chainId)).toString()).toLowerCase()} \r\n                              onError={(e) => (e.currentTarget.src = '/images/free-listing/chains/default.png')}\r\n                            />{this.getNetworkName(this.props.chainId)}\r\n                        </ProICOSbx02>\r\n                      </ProICOSbx01>\r\n                  </ProICOMbx02>\r\n\r\n                </ProICOMbx01>\r\n\r\n                <BtnMbox>\r\n                  <button onClick={() => this.onBackButtonClicked()} className=\"Btn02\"> <i className=\"fas fa-chevron-left\"></i> Back</button>\r\n                  <button onClick={() => this.setSourceToken()} className=\"Btn01\"> NEXT STEP</button>\r\n                </BtnMbox>\r\n\r\n              </CMbx>\r\n            </MContainer>\r\n\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\r\n`;\r\n\r\nconst MContainer = styled(FlexDiv)` \r\n  width: calc(100% - 40px); max-width:1360px; margin:0 auto;\r\n`\r\nconst CMbx = styled(FlexDiv)`\r\n  width:100%;  margin-top:90px;\r\n  @media (max-width: 991px){\r\n\t\tmargin-top: 60px;\r\n\t}\r\n`\r\nconst ProgressBar = styled.div`\r\n  width:100%; height:4px; background-color: #303030; display:flex ; margin-bottom:55px;\r\n  span{ display:inline-block; height:4px; -webkit-box-shadow: 0 0 15px 5px rgba(145,220,39,0.5); box-shadow: 0 0 15px 5px rgba(145,220,39,0.5);  background-color:#91dc27; border-radius:0 2px 2px 0;}\r\n  @media screen and (max-width: 640px) {\r\n    margin-bottom: 40px;\r\n  }\r\n`\r\n\r\nconst ProGTitle01 = styled(FlexDiv)` \r\n    font-size:24px; color:#ffffff; font-weight:700; justify-content:flex-start; width:100%; margin-bottom:50px; flex-flow : row;\r\n    i{ display:flex; font-style:normal; width:41px; height:41px; border:2px solid #fff; align-items:center; justify-content:center; margin-right:28px; flex-shrink: 0;  } \r\n    @media only screen and (max-width: 640px) {\r\n      i{margin-right: 20px;}\r\n    }\r\n`\r\nconst ProInputbx = styled(FlexDiv)`\r\n    width:100%;\r\n    input{ width:100%; display:block; border:2px solid #000; border-radius:0; background-color:#21232b; padding:20px; font-size:16px; color:#ffffff; font-weight:400; }\r\n`\r\nconst ProICOMbx01 = styled.div` width:100%; `\r\nconst ProICOMbx02 = styled.div`\r\n  display: grid; grid-template-columns: repeat(auto-fill, minmax(270px, 1fr)); column-gap: 36px; row-gap: 30px; margin:30px 0 0;\r\n    /* align-items:flex-start; justify-content: flex-start;  */\r\n`\r\nconst ProICOSbx01 = styled.button`\r\n  /* width:calc(25% - 36px);  margin:0 18px 30px 18px;*/ background-color:#21232b; height:60px; border:0px; outline:none; padding:0;\r\n  display: flex; align-items: center; justify-content: flex-start;\r\n  :hover{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  }\r\n  &.selected{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  }\r\n  /* @media screen and (max-width: 991px) {\r\n    width:calc(33.33% - 36px);\r\n  }\r\n  @media screen and (max-width: 575px) {\r\n    width:calc(50% - 36px);\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    width:100%;\r\n  } */\r\n` \r\nconst ProICOSbx02 = styled(FlexDiv)`\r\n  width:50%; padding:0 18px; justify-content:flex-start; font-size:14px; font-weight:400; color:#fff; flex-flow: row;\r\n  img{ margin-right:15px; max-width: 30px; border-radius: 30px;}\r\n  &:nth-child(01){ background-image:url(${Lineimg}); background-repeat:no-repeat; background-position:right 50%;} \r\n  @media screen and (max-width: 1200px) {\r\n    /* flex-flow: column; align-items: center; justify-content: center; */\r\n    /* img {margin:0 0 3px;} */\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    /* flex-flow: row; justify-content: flex-start; */\r\n    img {margin:0 10px 0 0;}\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    /* flex-flow: row; justify-content: flex-start; */\r\n    img {margin:0 15px 0 0;}\r\n  }\r\n`\r\nconst BtnMbox = styled(FlexDiv)`\r\n  border-top:1px solid #303030;  width:100%; margin-top:30px; justify-content: space-between; padding-top:48px; padding-bottom:20px;\r\n  .Btn01{ color:#fff; background-color:#0d0e13; width:100%; max-width:430px; text-align:center; padding:18px 15px; border:2px solid #91dc27; font-size:18px; font-weight:700; margin-bottom:0; -webkit-box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); :hover{ background-color:#91dc27;}}\r\n  .Btn02{ background-color:transparent; color:#a6a2b0; border:0; font-size:14px; font-weight:400; :hover{ color:#91dc27;}}\r\n  @media screen and (max-width: 640px) {\r\n    .Btn01{max-width: 50%}\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    flex-flow: column-reverse; padding-bottom: 30px; padding-top: 30px;\r\n    .Btn01{max-width: 100%; margin-bottom: 25px;}\r\n  }\r\n`","D:\\react\\SmartSwap_frontend\\src\\config\\web3Config.js",[],"D:\\react\\SmartSwap_frontend\\src\\config\\notificationConfig.js",[],"D:\\react\\SmartSwap_frontend\\src\\config\\constantConfig.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\Header.js",["1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080"],"D:\\react\\SmartSwap_frontend\\src\\helper\\validation.js",["1081"],"D:\\react\\SmartSwap_frontend\\src\\components\\WalletPopup.js",["1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122"],"D:\\react\\SmartSwap_frontend\\src\\components\\SidePopup.js",["1123","1124"],"D:\\react\\SmartSwap_frontend\\src\\helper\\swapFactoryContract.js",["1125"],"import {\r\n    EventEmitter\r\n} from \"events\";\r\nimport web3Js from 'web3';\r\nimport { ethers } from 'ethers';\r\n\r\nimport swapFactoryAbi from \"../abis/swapFactory.json\";\r\nimport tokenAbi from \"../abis/tokenAbi.json\";\r\nimport constantConfig, { addressByToken, contractAddressesByPairs } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nvar BigNumber = require('big-number');\r\n\r\n// const ADRESS_ONE = \"0x0000000000000000000000000000000000000001\";\r\n// const ADRESS_TWO = \"0x0000000000000000000000000000000000000002\";\r\n\r\nclass SwapFactoryContract extends EventEmitter {\r\n\r\n    constructor(web3, networkId, component = \"\") {\r\n        super();\r\n        this.web3 = web3;\r\n        this.networkId = networkId;\r\n        this.swapFactoryAddress = constantConfig[networkId].swapFactoryContract;\r\n        this.expediteAddress = constantConfig[networkId].expediteContract;\r\n        this.component = component;\r\n\r\n        this.swapFactoryInstance = new ethers.Contract(\r\n            this.swapFactoryAddress,\r\n            swapFactoryAbi,\r\n            web3.getSigner(0)\r\n        );\r\n\r\n        // this.JNTRTokenInstance = new ethers.Contract(\r\n        //     \"0x1350044d6a653E87Ed3384DC1D2f6b1A7F138e0A\",\r\n        //     tokenAbi,\r\n        //     web3.getSigner(0)\r\n        // );\r\n\r\n        // this.JNTRETokenInstance = new ethers.Contract(\r\n        //     \"0x40a99d086d517f06f9d1ed564f51ef75b8f7f042\",\r\n        //     tokenAbi,\r\n        //     web3.getSigner(0)\r\n        // );\r\n\r\n        // this.JNTRBTokenInstance = new ethers.Contract(\r\n        //     \"0x001667842cc59cadb0a335bf7c7f77b3c75f41c2\",\r\n        //     tokenAbi,\r\n        //     web3.getSigner(0)\r\n        // );\r\n    }\r\n\r\n    async sendTransaction(payload, value, gasLimit, to, txCb, receiptCb) {\r\n        let gasPrice = \"0\";\r\n        if (this.networkId === 56 || this.networkId === 97)\r\n            gasPrice = \"20\";\r\n        else if (this.networkId === 42)\r\n            gasPrice = \"30\";\r\n        else {\r\n            const response = await fetch('https://ethgasstation.info/json/ethgasAPI.json');\r\n            const json = await response.json();\r\n            gasPrice = (json.fast / 10).toString();\r\n        }\r\n        console.log(value)\r\n        const tx = {\r\n            to: to,\r\n            data: payload,\r\n            gasPrice: web3Js.utils.toHex(web3Js.utils.toWei(gasPrice, \"gwei\")),\r\n\r\n            value: web3Js.utils.toHex(value)\r\n        };\r\n\r\n        // gasLimit: web3Js.utils.toHex(gasLimit),\r\n\r\n        console.log(\"EstimateGas : \")\r\n        try {\r\n            console.log((await this.web3.getSigner(0).estimateGas(tx))._hex)\r\n            tx['gasLimit'] = (await this.web3.getSigner(0).estimateGas(tx))._hex\r\n        } catch (e) {\r\n            tx['gasLimit'] = '0x186A0'\r\n        }\r\n\r\n        this.web3.getSigner(0).sendTransaction(tx).then(result => {\r\n            txCb(result.hash)\r\n            console.log(result)\r\n            result.wait().then(async (receipt) => {\r\n                receiptCb(receipt);\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n\r\n            if (this.component == \"LiquidityProvider\") {\r\n                if (error.code === 4001) {\r\n                    //user rejected the transaction\r\n                    console.log('user rejected the transaction to become swap provider')\r\n                    receiptCb(error);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    pad32Bytes(data) {\r\n        var s = String(data);\r\n        while (s.length < (64 || 2)) { s = \"0\" + s; }\r\n        return s;\r\n    }\r\n\r\n    async swap(tokenA, tokenB, amount, swapAmount, fee, licenseeAddress, txCb, receiptCb) {\r\n        // let amountNew = (Number(amount) + Number(fee.totalFees)).toString();\r\n        const amountNew = new BigNumber(amount).add(new BigNumber(fee.totalFees)).toString();\r\n        let pair = contractAddressesByPairs.smartswap[addressByToken[tokenA].symbol + \"/\" + addressByToken[tokenB].symbol];\r\n        let receiver = web3Config.getAddress();\r\n        let licensee = licenseeAddress;\r\n        let fees = web3Js.utils.toHex(((Number(fee.companyFees) + Number(fee.reimbursementFees)) * 10 ** 18).toFixed()).replace(\"0x\", \"\");\r\n\r\n        let newamount = web3Js.utils.toHex(swapAmount).replace(\"0x\", \"\");\r\n        tokenA = tokenA.replace(\"0x\", \"\");\r\n        tokenB = tokenB.replace(\"0x\", \"\");\r\n        receiver = receiver.replace(\"0x\", \"\");\r\n        licensee = licensee.replace(\"0x\", \"\");\r\n\r\n        var payload = `0xe0e45f0e${this.pad32Bytes(tokenA)}${this.pad32Bytes(tokenB)}${this.pad32Bytes(receiver)}${this.pad32Bytes(newamount)}${this.pad32Bytes(licensee)}${this.pad32Bytes(0)}${this.pad32Bytes(0)}${this.pad32Bytes(0)}${this.pad32Bytes(fees)}`\r\n        this.sendTransaction(payload, amountNew, \"270000\", pair, txCb, receiptCb)\r\n    }\r\n\r\n    async expedite(txID, processAmount, txCb, receiptCb) {\r\n        txID = txID.replace(\"0x\", \"\");\r\n\r\n        var payload = `0xabc810a4${this.pad32Bytes(txID)}`\r\n        this.sendTransaction(payload, processAmount, \"270000\", this.expediteAddress, txCb, receiptCb)\r\n    }\r\n\r\n    async addSwapProvider(nativeToken, foreignToken, nativeTokenReceiver, foreignTokenReceiver, feeAmountLimit, txCb, receiptCb) {\r\n        let _nativeToken = nativeToken.replace(\"0x\", \"\");\r\n        let _foreignToken = foreignToken.replace(\"0x\", \"\");\r\n        let _nativeTokenReceiver = nativeTokenReceiver.replace(\"0x\", \"\");\r\n        let _foreignTokenReceiver = foreignTokenReceiver.replace(\"0x\", \"\");\r\n        let _feeAmountLimit = web3Js.utils.toHex(web3Js.utils.toWei((feeAmountLimit).toString()));\r\n        _feeAmountLimit = _feeAmountLimit.replace(\"0x\", \"\");\r\n\r\n        var payload = `0xd104451a${this.pad32Bytes(_nativeToken)}${this.pad32Bytes(_foreignToken)}${this.pad32Bytes(_nativeTokenReceiver)}${this.pad32Bytes(_foreignTokenReceiver)}${this.pad32Bytes(_feeAmountLimit)}`\r\n        console.log(payload);\r\n        console.log(this.swapFactoryAddress);\r\n\r\n        return await this.sendTransaction(payload, 0, \"400680\", this.swapFactoryAddress, txCb, receiptCb)\r\n        // .then(tx => {\r\n        //     //do whatever you want with tx\r\n        //     console.log({\r\n        //         addSwapProviderTx: tx\r\n        //     });\r\n        // }).catch(e => {\r\n        //      if (e.code === 4001){\r\n        //          //user rejected the transaction\r\n        //          console.log('user rejected the transaction')\r\n        //      } \r\n        // });\r\n    }\r\n\r\n    async estimateSwapGasFee(tokenA, tokenB, amount, swapAmount, fee, licenseeAddress, gasLimit, estGasCb) {\r\n        // const amountNew = (Number(amount) + Number(fee.totalFees)).toString();\r\n        const amountNew = new BigNumber(amount).add(new BigNumber(fee.totalFees)).toString();\r\n\r\n        let receiver = web3Config.getAddress();\r\n        let licensee = licenseeAddress;\r\n\r\n        let gasPrice = \"0\";\r\n        if (this.networkId === 56 || this.networkId === 97)\r\n            gasPrice = \"20\";\r\n        else if (this.networkId === 42)\r\n            gasPrice = \"30\";\r\n        else {\r\n            const response = await fetch('https://ethgasstation.info/json/ethgasAPI.json');\r\n            const json = await response.json();\r\n            gasPrice = (json.fast / 10 + 10).toString();\r\n        }\r\n        console.log(swapAmount)\r\n        console.log(amountNew)\r\n        let newamount = web3Js.utils.toHex(swapAmount).replace(\"0x\", \"\");\r\n        let pair = contractAddressesByPairs.smartswap[addressByToken[tokenA].symbol + \"/\" + addressByToken[tokenB].symbol];\r\n        tokenA = tokenA.replace(\"0x\", \"\");\r\n        tokenB = tokenB.replace(\"0x\", \"\");\r\n        receiver = receiver.replace(\"0x\", \"\");\r\n        licensee = licensee.replace(\"0x\", \"\");\r\n\r\n        let fees = web3Js.utils.toHex(((Number(fee.companyFees) + Number(fee.reimbursementFees)) * 10 ** 18).toFixed()).replace(\"0x\", \"\");\r\n        var payload = `0xe0e45f0e${this.pad32Bytes(tokenA)}${this.pad32Bytes(tokenB)}${this.pad32Bytes(receiver)}${this.pad32Bytes(newamount)}${this.pad32Bytes(licensee)}${this.pad32Bytes(0)}${this.pad32Bytes(0)}${this.pad32Bytes(0)}${this.pad32Bytes(fees)}`\r\n\r\n        const tx = {\r\n            to: pair,\r\n            data: payload,\r\n            gasPrice: web3Js.utils.toHex(web3Js.utils.toWei(gasPrice, \"gwei\")),\r\n            gasLimit: web3Js.utils.toHex(gasLimit),\r\n            value: web3Js.utils.toHex(amountNew)\r\n        };\r\n\r\n        // console.log(tx)\r\n\r\n        this.web3.getSigner(0).estimateGas(tx).then(result => {\r\n            let estGasEth = web3Js.utils.fromWei((web3Js.utils.toDecimal(result) * web3Js.utils.toWei(gasPrice, \"gwei\")).toString());\r\n            estGasCb(estGasEth);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            if (error.error) {\r\n                if (error.error.code === -32000)\r\n                    notificationConfig.error(\"Insufficient funds for transfer\")\r\n            }\r\n            if (error.data) {\r\n                if (error.data.code === -32000)\r\n                    notificationConfig.error(\"Insufficient funds for transfer\")\r\n            }\r\n        });\r\n    }\r\n\r\n    async approveJNTRTokenForSwapFactory(tokenAddress, swapFactoryAddress, txCb, receiptCb) {\r\n\r\n        let web3 = this.web3;\r\n\r\n        this.tokenInstance = new ethers.Contract(\r\n            tokenAddress,\r\n            tokenAbi,\r\n            web3.getSigner(0)\r\n        );\r\n\r\n        let highApproval = web3Js.utils.toWei(\"10000000000000\");\r\n        let payload = await this.tokenInstance.populateTransaction.approve(swapFactoryAddress, highApproval);\r\n        this.sendTransaction(payload.data, 0, \"150000\", tokenAddress, txCb, receiptCb);\r\n\r\n    }\r\n\r\n    handleActions(action) {\r\n        switch (action.type) { }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SwapFactoryContract;","D:\\react\\SmartSwap_frontend\\src\\components\\RightSideMenu.js",["1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170"],"import React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport web3Config from \"../config/web3Config\";\r\n\r\nconst $ = window.$;\r\nexport default class RightSideMenu extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.showWithId = this.showWithId.bind(this);\r\n    this.state = {\r\n      web3: props.web3,\r\n      web3Config: props.web3Config,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      web3: newProps.web3,\r\n      web3Config: newProps.web3Config,\r\n    });\r\n    // remove this line when stop testing on swap provider\r\n    //this.props.openPopup(\"LiquidityProvider\")\r\n  }\r\n\r\n  showWithId(popup, id) {\r\n    this.props.openPopup(popup);\r\n    $(\"[data-id=\" + this.state.currentTab + \"]\").removeClass(\"active\");\r\n    $(\".tab-Link\").removeClass(\"active\");\r\n    $(\"[data-id=\" + id + \"]\").addClass(\"active\");\r\n    $(\".tab-Content\").hide();\r\n    $(\"#\" + id).fadeIn(\"slow\");\r\n    this.setState({\r\n      currentTab: id,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { cloneData } = this.props;\r\n    const showSideBar =\r\n      cloneData.sideBar === \"true\"\r\n        ? true\r\n        : cloneData.sideBar === undefined\r\n          ? true\r\n          : false;\r\n    return (\r\n      <>\r\n        {showSideBar && (\r\n          <div\r\n            className={\r\n              cloneData.logoImage ? \"menuSideBar subdomain\" : \"menuSideBar\"\r\n            }\r\n            style={\r\n              cloneData.fontStyle && cloneData.fontStyle !== \"Default\"\r\n                ? {\r\n                  right: \"-100%\",\r\n                  opacity: \"0\",\r\n                  fontFamily: cloneData.fontStyle,\r\n                }\r\n                : { right: \"-100%\", opacity: \"0\" }\r\n            }\r\n          >\r\n            <div className=\"menuSideBarContainer\">\r\n              <div className=\"msb-Waddress\">\r\n                <span className=\"waltFix01\">\r\n                  {web3Config.getAddress() !== null\r\n                    ? web3Config.getAddress().slice(0, 45)\r\n                    : null}\r\n                </span>\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"rmDotLink active MenuClose\"\r\n                >\r\n                  {/* <i className=\"fas fa-times\"></i> */}\r\n                  <img src=\"images/menu-close.png\" alt=\"\" />\r\n                </a>\r\n              </div>\r\n              <div className=\"leftMenu mobile-block\">\r\n                <Link to='/' className=\"active\">SMARTSWAP</Link>\r\n                <Link to='/extension'>SMARTBRIDGE EXTENSION</Link>\r\n                <Link to='/projects'>SMARTBRIDGE FOR PROJECTS</Link>\r\n              </div>\r\n              <div className=\"msb-Linkbox01\">\r\n                <Link to=\"/ownLicence\">Launch Branded SmartSwap</Link>\r\n                {/* <a\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    this.props.openPopup(\"LiquidityProvider\");\r\n                  }}\r\n                >\r\n                  Become an Swap Provider (SP){\" \"}\r\n                </a> */}\r\n                <a href=\"#\">Buy SMART</a>\r\n              </div>\r\n              <div className=\"msb-Linkbox02\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"active\"\r\n                  data-toggle=\"n-collapse\"\r\n                  data-target=\"#msbSL-01\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"msbSL-01\"\r\n                >\r\n                  Learn <i className=\"fas fa-caret-down\"></i>\r\n                </a>\r\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-01\">\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"HowItWorks\", \"tab-4\");\r\n                    }}\r\n                  >\r\n                    How it Works{\" \"}\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"HowItWorks\", \"tab-5\");\r\n                    }}\r\n                  >\r\n                    SmartSwap vs Atomic Swap\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"CefiToDefi\", \"tab-7\");\r\n                    }}\r\n                  >\r\n                    Decentralize CEX: CeFi {\"<>\"} DeFi\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"CefiToDefi\", \"tab-8\");\r\n                    }}\r\n                  >\r\n                    What is a Swap Provider\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={() => {\r\n                      this.props.openPopup(\"LiquidityFountainSP\");\r\n                    }}\r\n                  >\r\n                    Liquidity Fountain for SPs\r\n                  </a>\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={(ev) => {\r\n                      ev.preventDefault();\r\n                      this.showWithId(\"CefiToDefi\", \"tab-9\");\r\n                    }}\r\n                  >\r\n                    SmartSwap Liquidity Process\r\n                  </a>\r\n                  <a href=\"javascript:void(0);\">Ledger</a>\r\n                  <a href=\"javascript:void(0);\">100% Fee Reimbursement</a>\r\n                </div>\r\n              </div>\r\n              <div className=\"msb-Linkbox02\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"active\"\r\n                  data-toggle=\"n-collapse\"\r\n                  data-target=\"#msbSL-02\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"msbSL-02\"\r\n                >\r\n                  Library <i className=\"fas fa-caret-down\"></i>\r\n                </a>\r\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-02\">\r\n                  {/* <a href=\"javascript:void(0);\">GitHub</a> */}\r\n                  <a\r\n                    href=\"https://docsend.com/view/24h32qhisbiunjqk\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    Whitepaper\r\n                  </a>\r\n                  {/* <a href=\"javascript:void(0);\">Light Paper</a> */}\r\n                  {/* <a href=\"javascript:void(0);\">Technical Documentation</a> */}\r\n                  {/* <a href=\"javascript:void(0);\">Pitch Deck</a> */}\r\n                  <a\r\n                    href=\"https://docsend.com/view/24h32qhisbiunjqk\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    One Page\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"msb-Linkbox02\">\r\n                        <a href=\"javascript:void(0);\" className=\"active\" data-toggle=\"n-collapse\" data-target=\"#msbSL-03\"\r\n                            aria-expanded=\"false\" aria-controls=\"msbSL-03\">Library <i className=\"fas fa-caret-down\"></i></a>\r\n                        <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-03\">\r\n                            <a href=\"javascript:void(0);\">SmartSwap</a>\r\n                            <a href=\"javascript:void(0);\">Branded Social Currency</a>\r\n                        </div>\r\n                    </div> */}\r\n              {/* <div className=\"msb-Linkbox02\">\r\n                        <a href=\"javascript:void(0);\" className=\"active\" data-toggle=\"n-collapse\" data-target=\"#msbSL-04\"\r\n                            aria-expanded=\"false\" aria-controls=\"msbSL-04\">Apply for License <i\r\n                                className=\"fas fa-caret-down\"></i></a>\r\n                        <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-04\">\r\n                            <a href=\"javascript:void(0);\">SmartSwap</a>\r\n                            <a href=\"javascript:void(0);\">Branded Social Currency</a>\r\n                        </div>\r\n                    </div> */}\r\n              <div className=\"msb-Linkbox02\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"active\"\r\n                  data-toggle=\"n-collapse\"\r\n                  data-target=\"#msbSL-05\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"msbSL-05\"\r\n                >\r\n                  Community <i className=\"fas fa-caret-down\"></i>\r\n                </a>\r\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-05\">\r\n                  {/*   */}\r\n                  <a href=\"https://twitter.com/SmartSwapEx\" target=\"_blank\">\r\n                    <i className=\"fab fa-twitter\"></i>Twitter\r\n                  </a>\r\n                  <a href=\"https://t.me/smartswap_exchange\" target=\"_blank\">\r\n                    <i className=\"fab fa-telegram\"></i>Telegram\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"msb-Linkbox02\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  className=\"active\"\r\n                  data-toggle=\"n-collapse\"\r\n                  data-target=\"#msbSL-06\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"msbSL-06\"\r\n                >\r\n                  About <i className=\"fas fa-caret-down\"></i>\r\n                </a>\r\n                <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-06\">\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={() => {\r\n                      this.props.openPopup(\"About\");\r\n                    }}\r\n                  >\r\n                    About Us\r\n                  </a>\r\n                  <a href=\"javascript:void(0);\">Privacy Policy</a>\r\n                  <a href=\"javascript:void(0);\">Terms of Use</a>\r\n                  <a href=\"javascript:void(0);\">Cookie Policy</a>\r\n                  <div className=\"footerV2-LanBoxM\">\r\n                    <a\r\n                      href=\"javascript:void();\"\r\n                      className=\"footerV2-LanBoxLink n-collapsed\"\r\n                      data-toggle=\"n-collapse\"\r\n                      data-target=\"#langBox\"\r\n                      aria-expanded=\"false\"\r\n                      aria-controls=\"langBox\"\r\n                    >\r\n                      <i>\r\n                        {\" \"}\r\n                        <img src=\"images/l-Icon01.png\" alt=\"\" />{\" \"}\r\n                      </i>\r\n                      English\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"auditLogo\">\r\n                <a href=\"javascript:void(0);\">\r\n                  <img src=\"images/callistoLogo.png\" alt=\"\" />\r\n                </a>\r\n              </div>\r\n              {/* <div className=\"msb-Linkbox02\">\r\n                        <a href=\"javascript:void(0);\" className=\"active\" data-toggle=\"n-collapse\" data-target=\"#msbSL-07\"\r\n                            aria-expanded=\"false\" aria-controls=\"msbSL-07\">Help <i className=\"fas fa-caret-down\"></i></a>\r\n                        <div className=\"msbLinkSubBox n-collapse in\" id=\"msbSL-07\">\r\n                            <a href=\"javascript:void(0);\">Start Tutorial</a>\r\n                            <a href=\"javascript:void(0);\">Report an Issue</a>\r\n                            <a href=\"javascript:void(0);\">Contact Request</a>\r\n                            <a href=\"javascript:void(0);\">Help Center</a>\r\n                            \r\n                        </div>\r\n                    </div> */}\r\n              <div className=\"footer-Bottom\">\r\n                <div className=\"footer-Logo\">\r\n                  <a href=\"javascript:void(0);\">\r\n                    <img src=\"images/menu-rb-logo.png\" alt=\"\" />\r\n                  </a>\r\n                </div>\r\n                <p>© 2021 SmartSwap Exchange All rights reserved</p>\r\n                <div className=\"footer-Text\">\r\n                  <p className=\"pob\">\r\n                    Powered by <img src=\"images/atomFoundation-logo.png\" alt=\"\" />\r\n                  </p>\r\n                  <p>\r\n                    Atom Foundation is a Decentralized Financial (DeFi) liquidity ecosystem powered by proprietary protocols which underlines zero volatility platforms, a NFT (Non-fungible token) and altcoin marketplace with downside protection, post dex offerings (PDO), a dynamic AMM with multiple swap exchanges, cross network aggregation, as well as a CBDC alternative and price support game theoretic model.{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\react\\SmartSwap_frontend\\src\\components\\CreateLicense.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\Header02.js",["1171","1172","1173","1174"],"D:\\react\\SmartSwap_frontend\\src\\components\\CoinPopup.js",["1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport CONSTANT from \"../constants\";\r\n\r\n\r\nconst PrePath = CONSTANT.PrePath;\r\nexport default class CoinPopup extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.coinList)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id={this.props.popId} key={this.props.popId}>\r\n                <div className=\"container-Grid\">\r\n                    {/* <div className=\"tab-Nav\">\r\n                        <a href=\"javascript:void(0)\" className={\"tab-Link ani-1 active\" + this.props.popId} data-id=\"tab-01\">Tokens</a>\r\n                        <a href=\"javascript:void(0)\" className={\"tab-Link ani-1 hideMobile\" + this.props.popId} data-id=\"tab-02\">LP Tokens</a>\r\n                    </div> */}\r\n                    <div className={\"tab-Content\" + this.props.popId} id=\"tab-01\">\r\n                        <div className=\"wallet-popupBlock\">\r\n                            {/* <div className=\"search-Mbx\">\r\n                                <div className=\"popupViewFMbox\">\r\n                                    <a href=\"#\"><i className=\"fas fa-square\"></i></a>\r\n                                    <a href=\"#\" className=\"active\"><i className=\"fas fa-th-list\"></i></a>\r\n                                </div>\r\n\r\n                                <div className=\"search-Bx\"> <a href=\"javascript:void(0);\"><span className=\"icon-Box\"><i\r\n                                                className=\"fas fa-search\"></i></span></a>\r\n                                    <input type=\"text\" placeholder=\"Search by symbol or coin name\" />\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"wallet-boxWrap\">\r\n                                {\r\n                                    Object.keys(this.state.coinList).map((key) => {\r\n                                        // [Number(key), obj[key]]\r\n                                        if (key === this.props.opositeSelectedCurrrency || this.state.coinList[key].networkId === this.state.coinList[this.props.opositeSelectedCurrrency].networkId) {\r\n                                            return null\r\n                                        } else {\r\n                                            return (\r\n                                                <div key={key} className=\"wallet-Bx ani-1\">\r\n                                                    <div className=\"img-Box\">\r\n                                                        <span className=\"round-Bg\">\r\n                                                            <span className=\"icon-Box icon16\">\r\n                                                                <img src={PrePath + \"/images/currencies/\" + this.state.coinList[key].iconName + \".png\"} />\r\n                                                            </span>\r\n                                                        </span>\r\n                                                        <div className=\"title-Name\">{key}</div>\r\n                                                    </div>\r\n                                                    <a href=\"javascript:void(0);\" className=\"faux-Link\" onClick={() => this.props.setCurrency(key)}></a>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon16\"></span></span>\r\n                                        <div className=\"title-Name\">SMART</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon01\"></span></span>\r\n                                        <div className=\"title-Name\">ZERO/1</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon02\"></span></span>\r\n                                        <div className=\"title-Name\">Secured Tether USD</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon05\"></span></span>\r\n                                        <div className=\"title-Name\">Paxos Standard</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon06\"></span></span>\r\n                                        <div className=\"title-Name\">StatusNetwork</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon07\"></span></span>\r\n                                        <div className=\"title-Name\">HuobiToken</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon08\"></span></span>\r\n                                        <div className=\"title-Name\">ChainLink Token</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon09\"></span></span>\r\n                                        <div className=\"title-Name\">OmiseGO</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon10\"></span></span>\r\n                                        <div className=\"title-Name\">BAT</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon11\"></span></span>\r\n                                        <div className=\"title-Name\">IOSToken</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                                <div className=\"wallet-Bx ani-1 coming-Soon\">\r\n                                    <div className=\"img-Box\"><span className=\"round-Bg\"><span\r\n                                        className=\"icon-Box icon12\"></span></span>\r\n                                        <div className=\"title-Name\">Dai Stablecoin v1.0</div>\r\n                                    </div>\r\n                                    <a href=\"javascript:void(0);\" className=\"faux-Link\"></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <a href=\"javascript:void(0);\" className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\react\\SmartSwap_frontend\\src\\components\\withdraw_token.js",["1215","1216","1217"],"D:\\react\\SmartSwap_frontend\\src\\components\\Counter.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\DropDown.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\select_token.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\NoDomain.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\LedgerHistory.js",["1218","1219","1220","1221","1222","1223","1224","1225","1226"],"import React, { PureComponent, useState } from \"react\";\r\n\r\nexport default function LedgerHistory(props) {\r\n\r\n    const [isExpedite, setIsExpedite] = useState(false);\r\n\r\n    return (\r\n\r\n        <div className=\"transaction-histroryWrap\">\r\n            <div className=\"transaction-histroryBox\">\r\n                <div className=\"Title02 orange-Color\">Send</div>\r\n                <div className=\"trasaction-Amt\"> {Number(props.processAmount).toFixed(6)} {props.sentCurrency}\r\n                    {props.tokenAPrices === undefined ? null : <span>(${(Number(props.processAmount) * Number(props.tokenAPrices)).toFixed(2)})</span>}\r\n                </div>\r\n                <div className=\"trasaction-Date\">{props.sentTxTime}</div>\r\n                <div className=\"trasaction-Box\">\r\n                    <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Transaction Submitted</div>\r\n                    <div className=\"trans-Id\">{props.txHash}</div>\r\n                    <a href={props.sentTxLink} className=\"view-Trans ani-1\" target=\"_blank\">View transaction</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"arrow-Box\"></div>\r\n            <div className=\"transaction-histroryBox\">\r\n                {props.oracleTx !== undefined ? (\r\n                    <div>\r\n                        <div className=\"Title02 green-Color\">Received <span></span></div>\r\n                        <div className=\"trasaction-Amt\"> {Number(props.estimatedForeignAmount).toFixed(6)} {props.recivedCurrency}\r\n                            <span> (${(Number(props.estimatedForeignAmount) * Number(props.tokenBPrices)).toFixed(2)})</span>\r\n                        </div>\r\n                        <div className=\"trasaction-Date\">{props.recivedTxTime}</div>\r\n                        <div className=\"trasaction-Box\">\r\n                            <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n                            <div className=\"trans-Id\">{props.oracleTx}</div>\r\n                            <div className=\"tsb-LinkBox\">\r\n                                <a href={props.recivedTxLink} className=\"view-Trans ani-1\" target=\"_blank\">View transaction</a>\r\n                                {/* <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1 active\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"true\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>) : (\r\n                    <div>\r\n                        <div className=\"Title02 pending\">\r\n                            Pending <span></span>\r\n                        </div>\r\n                        <div className=\"trasaction-Amt\">\r\n                            ... {props.recivedCurrency}{' '}\r\n                        </div>\r\n                        <div className=\"trasaction-Box pendingColor\">\r\n                            <div className=\"trasaction-Status pending-Text\">\r\n                                Pending{' '}\r\n                                <span className=\"pending-loader\">\r\n                                    <img src=\"images/loader2.gif\" />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <p>\r\n                            {/* <span>\r\n                        <a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a>\r\n                    </span> */}\r\n                            {props.canExpedite ?\r\n                                props.isExpedited ?\r\n                                    <a style={{ color: \"#91dc27\" }}>Expedited <i class=\"far fa-check-circle\"></i></a>\r\n                                    :\r\n                                    isExpedite ?\r\n                                        <a style={{ color: \"#F29339\" }}>Expediting...</a>\r\n                                        :\r\n                                        <>\r\n                                            <a\r\n                                                href=\"javascript:void(0);\"\r\n                                                className=\"ani-1\"\r\n                                            >\r\n                                                Waiting to be match with counter-party\r\n                                            </a>\r\n                                            <a\r\n                                                href=\"javascript:void(0);\"\r\n                                                className=\"ani-1\"\r\n                                                style={{ color: \"white\" }}\r\n                                                onClick={() => { setIsExpedite(true); props.expedite(props) }}\r\n                                            >\r\n                                                Expedite to skip pending\r\n                                                <i className=\"help-circle\">\r\n                                                    <i\r\n                                                        className=\"fas fa-question-circle protip\"\r\n                                                        data-pt-position=\"top\"\r\n                                                        data-pt-title=\"It seems like there is no p2p swap available yet. If you don't want to wait, please pay expedite fee to for instant swaps using a swap provider\"\r\n                                                        aria-hidden=\"true\"\r\n                                                    ></i>\r\n                                                </i>\r\n                                            </a>\r\n                                        </>\r\n                                : null}\r\n                        </p>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                {/* <div className=\"Title02 pending\">Pending <span>(73.69%)</span></div>\r\n                <div className=\"trasaction-Amt\">10 ETH  <span>($2,500)</span></div>\r\n                <div className=\"trasaction-Box pendingColor\">\r\n                    <div className=\"trasaction-Status pending-Text\">Pending <span className=\"pending-loader\"><img src=\"images/loader2.gif\" /></span></div>\r\n                </div>\r\n                <p><span><a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a></span><a href=\"javascript:void(0);\" className=\"ani-1\">Wait until a match will be found or cancel and redeem the 10 ETH pending to your wallet</a></p> */}\r\n            </div>\r\n        </div>\r\n\r\n        // test\r\n\r\n        // <div className=\"transaction-histroryWrap\">\r\n        //     <div className=\"transaction-histroryBox\">\r\n        //         <div className=\"Title02 orange-Color\">Send</div>\r\n        //         <div className=\"trasaction-Amt\"> 50 ETH <span>($10,000)</span> </div>\r\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n        //         <div className=\"trasaction-Box\">\r\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Transaction Submitted</div>\r\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n        //             <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n        //         </div>\r\n        //     </div>\r\n        //     <div className=\"arrow-Box\"></div>\r\n        //     <div className=\"transaction-histroryBox\">\r\n        //         <div className=\"Title02 green-Color\">Received <span>(73.69%)</span></div>\r\n        //         <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\r\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n        //         <div className=\"trasaction-Box\">\r\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n        //             <div className=\"tsb-LinkBox\">\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1 active\" data-toggle=\"n-collapse\" data-target=\"#trsBox01\" aria-expanded=\"true\" aria-controls=\"trsBox01\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\r\n        //             </div>\r\n        //             <div className=\"clearfix n-collapse in\" id=\"trsBox01\" aria-expanded=\"true\" >\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //         <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\r\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n        //         <div className=\"trasaction-Box\">\r\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n        //             <div className=\"tsb-LinkBox\">\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox02\" aria-expanded=\"false\" aria-controls=\"trsBox02\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\r\n        //             </div>\r\n        //             <div className=\"n-collapse clearfix\" id=\"trsBox02\">\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //         <div className=\"trasaction-Amt\"> 0.25 BTC <span>($2,500)</span> </div>\r\n        //         <div className=\"trasaction-Date\">Feb 2. 2019, 9:21am PST</div>\r\n        //         <div className=\"trasaction-Box\">\r\n        //             <div className=\"trasaction-Status\"><span className=\"icon-Box\"><i className=\"fas fa-check-circle\"></i></span>Funds wired to your wallet </div>\r\n        //             <div className=\"trans-Id\">X0456c19d5A61AeA886E6D657EsEF8849565</div>\r\n        //             <div className=\"tsb-LinkBox\">\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans ani-1\">View transaction</a>\r\n        //                 <a href=\"javascript:void(0);\" className=\"view-Trans02 ani-1\" data-toggle=\"n-collapse\" data-target=\"#trsBox03\" aria-expanded=\"false\" aria-controls=\"trsBox03\">Break down fees <i className=\"fas fa-sort-down\"></i></a>\r\n        //             </div>\r\n        //             <div className=\"n-collapse clearfix\" id=\"trsBox03\">\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Network gas:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>3rd part validators fees:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>Transfer tokens:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SmartSwap fee:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //                 <div className=\"tsb-transHistoryBox\">\r\n        //                     <span>SMART/2 Rebate:<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Help Text here\" aria-hidden=\"true\"></i></i></span>\r\n        //                     <span>0.00910955 Ether ($3.43)</span>\r\n        //                     <span><a href=\"javascript:void(0);\">View transaction</a></span>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //         <div className=\"Title02 pending\">Pending <span>(73.69%)</span></div>\r\n        //         <div className=\"trasaction-Amt\">10 ETH  <span>($2,500)</span></div>\r\n        //         <div className=\"trasaction-Box pendingColor\">\r\n        //             <div className=\"trasaction-Status pending-Text\">Pending <span className=\"pending-loader\"><img src=\"images/loader2.gif\" /></span></div>\r\n        //         </div>\r\n        //         <p><span><a href=\"javascript:void(0);\"><i className=\"fas fa-cog\"></i></a></span><a href=\"javascript:void(0);\" className=\"ani-1\">Wait until a match will be found or cancel and redeem the 10 ETH pending to your wallet</a></p>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}","D:\\react\\SmartSwap_frontend\\src\\components\\Deposit-withdraw.js",["1227","1228","1229","1230","1231","1232","1233","1234","1235"],"D:\\react\\SmartSwap_frontend\\src\\components\\CefiToDefi.js",["1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248"],"D:\\react\\SmartSwap_frontend\\src\\components\\HowItWorks.js",["1249","1250","1251","1252","1253","1254","1255","1256","1257"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\n\r\nconst $ = window.$;\r\n\r\nexport default class HowItWorks extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#HowItWorks .tab-Link\").hover(function () {\r\n            $(\".tab-Link\").removeClass(\"active\")\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-Content\").hide();\r\n            $(\"#\" + $(this).attr(\"data-id\")).show();\r\n        });\r\n\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"HowItWorks\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"MainTabBox\" style={{ paddingTop: '80px' }}>\r\n                        <div className=\"tab-Nav\">\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-4\">How it Works</a>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link hideMobile\" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-5\">SmartSwap vs Atomic Swap & Other Swaps</a>\r\n                        </div>\r\n\r\n\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-4\">\r\n                            <div className=\"peerTitle01\">How it Works</div>\r\n                            <div className=\"peerText01\">\r\n                                <p>Smartswap’s contract utilizes a zero volatility patent pending method which prevents slippage and wholly reimburses users fees and gas costs. The swap works by letting users choose a token they want to swap (Token A) and then select a receiving token (Token B). Unlike a Decentralized Exchange (DEX) or Automated Market Maker (AMM), SmartSwap asks users the USD face value of the tokens they want to swap, rather than the token amount they want to receive.</p>\r\n\r\n                                <p>Subsequently, with SmartSwap, users do not choose the value of Token A or how many tokens of Token B they want to receive. Instead, SmartSwap prices Token A and Token B based on the current average market price between multiple reliable exchanges.</p>\r\n\r\n                                <p>Furthermore, when the user sends $1000 face value of Token A to receive Token B there is no possibility for them to receive $999 or $1001. SmartSwap executes the order with the exact same face value. In the case of an unmatched swap (due to counterparty different order amount or market volatility) the SmartSwap alters the order to receive less of Token B in order to match the face value, or alternatively return any excess to the user of which it belongs.</p>\r\n\r\n                                <p>Unlike AMM such uniswap, smartswap doesn't have any liquidity pools or liquidity providers (LP) structure. instead the smartswap work as a decentralized P2P with unique swap providers (SP) solution like a fountain driving liquidity from centralized exchanges </p>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"tab-Nav showMobile \" style={{ width: '100%' }}>\r\n                            <a href=\"javascript:void(0)\" className=\"tab-Link \" onClick={ev => { ev.preventDefault(); }} data-id=\"tab-5\">SmartSwap vs Atomic Swap & Other Swaps</a>\r\n                        </div>\r\n                        <div className={\"tab-Content \" + this.props.popId} id=\"tab-5\">\r\n                            <div className=\"peerTitle01\">SmartSwap vs Atomic Swap</div>\r\n                            <div className=\"peerText01\"> SmartSwap utilizes technology that allows cross-chain swaps between two assets without validator risk, wrapping, or side-chain utilization. The cross-chain swap is a true one-click swap between blockchain networks. The cross-chain swap has the ability to act like a bridge between blockchain networks based smart contracts such as Ethereum<br /><br />\r\n\r\n                                At the moment, SmartSwap supports swaps between BNB {'<>'} ETH and ERC20{'<>'}BEP20. SmartSwap capabilities present the first one-click swap that is not considered an atomic swap or reliant on time-locked swaps.\r\n\r\n                            </div>\r\n                            <div className='smrtvsatoTable01'>\r\n\r\n                                <table width=\"100%\" border=\"0\" cellSpacing=\"0\" cellPadding=\"10\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th scope=\"col\">&nbsp;</th>\r\n                                            <th align=\"center\" valign=\"middle\" scope=\"col\">DEXs <br />\r\n                                                <span>(Uniswap, Pancake, etc)</span></th>\r\n                                            <th align=\"center\" valign=\"middle\" scope=\"col\">Binance Bridge</th>\r\n                                            <th align=\"center\" valign=\"middle\" scope=\"col\">\r\n                                                <img src=\"images/menu-rb-logo.png\" alt=\"\" />\r\n                                            </th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Decentralized cross-chain</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>One click cross-chain</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Unlimited liquidity</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Slippage free</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Fee reimbursement</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Gas reimbursement</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Token price correlated to platform usage</td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-times\"></i></td>\r\n                                            <td align=\"center\" valign=\"middle\"><i className=\"fas fa-check\"></i></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"HowItWorks\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\react\\SmartSwap_frontend\\src\\components\\PeerPopup.js",["1258","1259","1260","1261","1262","1263","1264","1265","1266"],"D:\\react\\SmartSwap_frontend\\src\\components\\About.js",["1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\nimport web3Config from \"../config/web3Config\";\r\nimport { PrePath } from \"../constants\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport \"../assets/AboutPopup.css\"\r\n\r\nexport default class About extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.coinList)\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"About\">\r\n                <div className=\"container-Grid\">\r\n                    <div className=\"LiProTitle01\">About Us</div>\r\n                    <div className=\"ppAboutText01\"> Smart.exchange is a decentralized organization managed by a DAO community and created by Atom Foundation early 2017. The first published patent was in 2018 when there was no DeFi awareness. At this time, investors did not even know what slippage was so the solution pre-dated the problem. Now, with the emergence of AMMs, SmartSwap solves a known need in the industry.</div>\r\n\r\n\r\n                    <section id=\"team-Block\">\r\n                        <div className=\"advisor-team-Box\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"s20TeamContainer clearfix\" id=\"our_advisor\">\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20ttextbox02\">Our Advisors</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"mailto:dee@jointer.io\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-01.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/4/t2-ss_nNs3qoe.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/4/t2-ss_nNs3qoe.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Dee Hock</span>Founder and former CEO of Visa Credit Card Association</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"mailto:david@jointer.io\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-02.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/5/t3-ss_X2yzDCr.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/5/t3-ss_X2yzDCr.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>David Weild IV</span>V. Chairman at NASDAQ and the “father” of the JOBS Act</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"mailto:mike@jointer.io\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-03.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/6/t4-ss_cODnYZo.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/6/t4-ss_cODnYZo.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span> Mike Lorrey</span>CTO Advisor<br />\r\n                                            The co-creator of the prototype of Bitcoin</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"mailto:ken@jointer.io\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-04.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/8/t6-ss_PqgnxCI.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/8/t6-ss_PqgnxCI.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Ken Goldman</span>Former Chief Financial Officer of Yahoo! </div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/bourgi87/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-05.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/10/sam_burgin_icon_HVcCc9e.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/10/sam_burgin_icon_HVcCc9e.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span> Sam Bourgi</span> Chief Editor Hacked.com</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-105500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-106500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/koen-maris-3791811/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-06.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/33/01_cT0OyEA_6fmgSuE.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/33/01_cT0OyEA_6fmgSuE.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Koen Maris</span>IOTA Advisor Cybersecurity</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-106000-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-107000-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/alongoren/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-07.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Alon Goren</span>Founding Partner at Goren Holm Ventures</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-106500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-107500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/robertneivert/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-08.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/36/500-logo.png\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/36/500-logo.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Robert Neivert</span>Venture Partner at 500 Startups Head of blockchain program</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"previous-advisor-team-Box\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"s20TeamContainer clearfix\" id=\"previous_advisor\">\r\n                                    <div className=\"s20Teambox01 clearfix\" data-102500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-103500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20ttextbox02\">PREVIOUS Advisors</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-103000-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-104000-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"# \" target=\"_blank\" rel=\"noopener noreferrer\" className=\"teamLinkIcon\"> </a>\r\n                                                <div className=\"teamImgNPbox\"><img className=\"  mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-09.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img className=\"lozad mCS_img_loaded\" data-src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" alt=\" \" src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Professor Eric S. Maskin</span>Harvard University Nobel Memorial Prize in Economics Mechanism Design Expert </div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-103500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-104500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"# \" target=\"_blank\" className=\"teamLinkIcon\" rel=\"noopener noreferrer\"> </a>\r\n                                                <div className=\"teamImgNPbox\"><img className=\" mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-010.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img className=\"lozad mCS_img_loaded\" data-src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" alt=\"\" src=\"https://www.jointer.io/images/jntr_about/advisors001_logo.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Professor Alvin E. Roth</span>Stanford University Nobel Memorial Prize in Economics Market Design expert</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-104500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-105500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com\" target=\"_blank\" className=\"teamLinkIcon\" rel=\"noopener noreferrer\"> </a>\r\n                                                <div className=\"teamImgNPbox\"><img className=\"lozad mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-011.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img className=\"lozad mCS_img_loaded\" data-src=\"https://www.jointer.io/images/jntr_about/t5-ss-V2.png\" alt=\"\" src=\"https://www.jointer.io/images/jntr_about/t5-ss-V2.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Chris Cox</span>Former Chairman of the U.S. Securities and Exchange Comission [SEC] former U.S. Congress Member </div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/daniel-p-ahn-7283967/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"teamLinkIcon\"> </a>\r\n                                                <div className=\"teamImgNPbox\"><img className=\"lozad mCS_img_loaded\" alt=\"\" src=\"images/team/teamImg-012.png\" /></div>\r\n                                            </div>\r\n                                            <div className=\"afterLogo\"><img className=\"lozad mCS_img_loaded\" data-src=\"https://www.elementzero.network/api/private/mainSite/teamMember/7/t5-ss.png\" alt=\"\" src=\"https://www.elementzero.network/api/private/mainSite/teamMember/7/t5-ss.png\" /> </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Daniel P. Ahn PhD</span>Chief Economist<br />\r\n                                            U.S. Department of State </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"management-team-Box\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"s20TeamContainer clearfix npSMfix01\" id=\"managment\">\r\n                                    <div className=\"s20Teambox01 clearfix\">\r\n                                        <div className=\"s20ttextbox02\">Management</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-123000-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-124000-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/jude-g-regev-09110214/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-013.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Yoda G Regev<br />\r\n                                            CEO & CTO</span>Serial Entrepreneur with 5 Startups and 3 exits</div>\r\n                                    </div>\r\n                                    <div className=\"s20Teambox01 clearfix\" data-122500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-123500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/kylewhitepr/\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-014.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Kyle White<br />\r\n                                            CMO</span>Venture Marketing Advisor totaling $16B market cap</div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"s20Teambox01 clearfix\" data-121500-start=\"opacity:0; transform: scale(1.3) translate(0px, 0px);\" data-122500-start=\"opacity:1; transform: scale(1) translate(0px, 0px);\">\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"https://www.linkedin.com/in/debbierosenblum\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img  alt=\"\" src=\"images/team/teamImg-015.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Debbie Rosenblum<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\tCPO</span>People Architect, Strategic Leader + Decisive Doer</div>\r\n                                    </div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"operation-team-Box\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"s20TeamContainer clearfix \" id=\"operations\">\r\n                                    <div className=\"s20Teambox01 clearfix\">\r\n                                        <div className=\"s20ttextbox02\">Operations</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-016.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Amber Urquhart</span>Investment LP</div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-017.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Dan Mahoney</span>Fundraising Manager</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/blankUser.jpg\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Max Dier</span>PDO DAO Manager</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/ahmad-bancin.jpg\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Ahmad Bancin</span>Community Admin</div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-020.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Verlin Auliane</span>Graphic Designer</div>\r\n                                    </div> */}\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-021.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Joe Meinen</span>Social Specialist</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-022.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Corlynne O’Sullivan</span>Crypto Marketing</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"s20Teambox01 clearfix\" >\r\n                                        <div className=\"s20tImgbox ani-5\">\r\n                                            <div className=\"s20RotaterBox\"><a href=\"#\" target=\"_blank\" className=\"teamLinkIcon\"></a>\r\n                                                <div className=\"teamImgNPbox\"><img alt=\"\" src=\"images/team/teamImg-023.png\" /></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"s20ttextbox\"> <span>Joyce Hanson</span>Writer</div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n\r\n                    <div className='VPMainBX'>\r\n                        <div className='VPSubBX01'>\r\n                            <div className=\"ventureBXTitle01\">Venture Partners </div>\r\n                        </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-01.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-02.png\" alt=\"\" />Hassan (Hatu) Sheikh </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-03.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-04.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/bitangels.png\" alt=\"\" />Michael Terpin </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-05.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/silent.png\" alt=\"\" />Andrea Castiglione</div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-07.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-08.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-09.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-010.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/mexc.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-012.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-013.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/fairum.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-014.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-015.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-016.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-017.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-018.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-019.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-020.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-021.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-022.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-023.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-024.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-025.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-026.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-027.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-029.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-030.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-031.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-032.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-033.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-034.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-035.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-036.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-037.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-038.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-039.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/vpICON-040.png\" alt=\"\" /> </div>\r\n                        <div className='VPSubBX01'>  <img src=\"images/venture-partners/legion.png\" alt=\"\" /> </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"About\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\react\\SmartSwap_frontend\\src\\components\\liquidity_fountain_for_SPs.js",["1311","1312","1313"],"import React, { PureComponent } from \"react\";\r\nimport data, { tokenDetails } from \"../config/constantConfig\";\r\n\r\nexport default class LiquidityFountainSP extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: 45000,\r\n            web3: props.web3,\r\n            web3Config: props.web3Config,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({\r\n            web3: newProps.web3,\r\n            web3Config: newProps.web3Config\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.coinList)\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n        this.setState(prevState => ({ [collapse]: !prevState[collapse] }));\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-Popup wallet-Popup\" id=\"LiquidityFountainSP\">\r\n\r\n                <div className=\"container-Grid\">\r\n\r\n                    <div className=\"peerTitle01\">Liquidity Fountain for SPs</div>\r\n                    <div className=\"peerText01\">When users swap tokens on SmartSwap, the protocol takes the market price. SP’s are buying those tokens on the CEX through the API integrated on their account. The API is set to buy the tokens below the average market price to gain a spread. The structure creates a send, receive, repeat loop similar to a fountain that mines for SPs more of their favorite tokens without having to lock funds or wrap any tokens.</div>\r\n\r\n\r\n                    <div className='lfforSPIMGBX'><img src=\"images/lfforSP-img.png\" alt=\"\" /></div>\r\n\r\n                </div>\r\n\r\n                <a href=\"javascript:void(0);\" onClick={() => { this.props.closePopup(\"LiquidityFountainSP\") }} className=\"close-Icon\"></a>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","D:\\react\\SmartSwap_frontend\\src\\helper\\reimbursementContract.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\LiquidityProvider.js",["1314","1315","1316"],["1317","1318"],"D:\\react\\SmartSwap_frontend\\src\\dispatcher.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpIntroduction.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\SpContractDeployForm.js",["1319"],"import React, { Component } from \"react\";\r\nimport ActiveContract from \"./ActiveContract\";\r\nimport Web3 from 'web3';\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport InputRange from 'react-input-range';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { LoopCircleLoading } from 'react-loadingg';\r\nimport AxiosRequest from \"../../helper/axiosRequest\";\r\nimport { tokenDetails } from \"../../config/constantConfig\";\r\nimport constantConfig from '../../config/constantConfig';\r\nimport web3Config from \"../../config/web3Config\";\r\nimport notificationConfig from '../../config/notificationConfig';\r\nimport SwapFactoryContractPairWise from '../../helper/swapFactoryContractPairWise';\r\nvar _ = require('lodash');\r\n\r\n\r\nexport default class SpContractDeployForm extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.setDropdownWrapperRef = this.setDropdownWrapperRef.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.state = {\r\n            web3: null,\r\n            coinList: tokenDetails,\r\n            isOpen1: false,\r\n            isOpen2: false,\r\n            btnClick: false,\r\n            selectedTokenA: 'ETH',\r\n            selectedTokenB: 'BNB',\r\n            // input fields\r\n            spAccount: null,\r\n            networkId: null,\r\n            tokenA: null,\r\n            tokenB: null,\r\n            amountA: null,\r\n            walletAddressToSend: null,\r\n            walletAddressToReceive: null,\r\n            gasAndFeeAmount: 0,\r\n            minGasAndFeeAmount: 0,\r\n            maxGasAndFeeAmount: 100,\r\n            minStepForGasAndFeeAmount: 0,\r\n            cexList: constantConfig.cexTypes,\r\n            selectedCex: 'BINANCE',\r\n            cexListOpen: false,\r\n            swapSpeedMode: 'UPFRONT',\r\n            withdrawPercent: 45,\r\n            spreadAmount: 100,\r\n            spProfitPercent: 0.5,\r\n            accumulateFundsLimit: 100,\r\n            stopRepeatsMode: 3,\r\n            stopRepeatsOnDate: new Date(),\r\n            stopRepeatsAfterCalls: 200,\r\n            withdrawMode: 3,\r\n            withdrawOnDate: new Date(),\r\n            withdrawAfterCalls: 250,\r\n            txid: null,\r\n            smartSwapContractAddress: 'Deploy contract to get this address.',\r\n            confirmed: false,\r\n            deployed: false,\r\n            deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n            loadingIcon: false,\r\n            serverError: null,\r\n            errorMessage: null,\r\n            clientSideError: false,\r\n            clientSideErrorMessage: {\r\n                spProfitPercent: null,\r\n                amountA: null,\r\n                spProfitPercentOnContract: null,\r\n                amountAOnContract: null\r\n            },\r\n            spData: []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            // detect Network account change\r\n            window.ethereum.on('chainChanged', networkId => {\r\n                console.log('chainChanged', networkId);\r\n                this.resetWallet();\r\n\r\n                this.connectWallet();\r\n            });\r\n\r\n            window.ethereum.on('accountsChanged', accounts => {\r\n                console.log('account Changed');\r\n                this.resetWallet();\r\n                // on account change currently disconnecting wallet so we can again check active contract on wallet connect \r\n\r\n                this.connectWallet();\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loading: true,\r\n            tokenA: this.state.coinList[this.state.selectedTokenA]['address'],\r\n            tokenB: this.state.coinList[this.state.selectedTokenB]['address']\r\n        });\r\n\r\n        this.setGasFeeAndAmountMinMaxRanges('ETH');\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    toggleCexList(changedCex = null) {\r\n        const currentState = this.state.cexListOpen;\r\n        this.setState({\r\n            cexListOpen: !currentState\r\n        });\r\n\r\n        if (changedCex) {\r\n            this.setState({\r\n                selectedCex: changedCex\r\n            });\r\n            this.resetWallet();\r\n        }\r\n    }\r\n\r\n    handleClickOutside(event) {\r\n        if (this.dropdownWrapperRef && !this.dropdownWrapperRef.contains(event.target)) {\r\n            this.setState({\r\n                isOpen1: false,\r\n                isOpen2: false,\r\n                cexListOpen: false\r\n            });\r\n        }\r\n    }\r\n\r\n    setDropdownWrapperRef(node) {\r\n        this.dropdownWrapperRef = node;\r\n    }\r\n\r\n    toggle = index => {\r\n        let collapse = \"isOpen\" + index;\r\n        this.setState(prevState => ({\r\n            [collapse]: !prevState[collapse]\r\n        }));\r\n        //this.toggleActiveContractSection();\r\n    };\r\n\r\n    resetWallet() {\r\n        this.setState({\r\n            web3: null,\r\n            confirmed: false,\r\n            spData: null\r\n        });\r\n    }\r\n\r\n    changeTokenA(token) {\r\n\r\n\r\n        this.setState({\r\n            selectedTokenA: token,\r\n            tokenA: this.state.coinList[token]['address'],\r\n            networkId: web3Config.getNetworkId(),\r\n            spAccount: web3Config.getAddress(),\r\n            isOpen1: false\r\n        });\r\n        this.setGasFeeAndAmountMinMaxRanges(token);\r\n        //notificationConfig.info('Token reset. Please set Gas and Fee again.');\r\n        this.resetWallet();\r\n    };\r\n\r\n    changeTokenB(token) {\r\n        this.setState({\r\n            selectedTokenB: token,\r\n            tokenB: this.state.coinList[token]['address'],\r\n            isOpen2: false\r\n        });\r\n\r\n        this.resetWallet();\r\n    };\r\n\r\n    swapTokens() {\r\n        this.changeTokenA(this.state.selectedTokenB);\r\n        this.changeTokenB(this.state.selectedTokenA);\r\n    }\r\n\r\n    getAlternateToken(token) {\r\n        let tokensList = Object.assign({}, this.state.coinList);\r\n        delete tokensList[token];\r\n        return Object.entries(tokensList)[0];\r\n    }\r\n\r\n    checkAmountA(value, minValue) {\r\n        var clientSideErrorMessage;\r\n        if (Number(value) < minValue) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.amountA = `Minimum amount is $${minValue}`;\r\n            this.setState({ clientSideErrorMessage });\r\n            //notificationConfig.success(`Test ${testType} fetched`);\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                amountA: Number(value)\r\n            });\r\n\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.amountA = null;\r\n            this.setState({ clientSideErrorMessage });\r\n        }\r\n\r\n        this.clientSideError();\r\n    }\r\n\r\n    changeSpread(value, minSpreadRange, maxSpreadRange) {\r\n        var clientSideErrorMessage;\r\n        if (Number(value) > maxSpreadRange || Number(value) < minSpreadRange) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.spProfitPercent = `Please provide a valid input between ${minSpreadRange}-${maxSpreadRange} range`;\r\n            this.setState({ clientSideErrorMessage });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                spProfitPercent: Number(value)\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.spProfitPercent = null;\r\n            this.setState({ clientSideErrorMessage });\r\n        }\r\n\r\n        this.clientSideError();\r\n    };\r\n\r\n    setGasFeeAndAmountMinMaxRanges(selectedToken) {\r\n        let token = this.state.coinList[(selectedToken).toUpperCase()];\r\n        this.setState({\r\n            minGasAndFeeAmount: token.minGasAndFeeAmount,\r\n            gasAndFeeAmount: token.gasAndFeeAmount,\r\n            maxGasAndFeeAmount: token.maxGasAndFeeAmount,\r\n            minStepForGasAndFeeAmount: token.minStepForGasAndFeeAmount\r\n        });\r\n    }\r\n\r\n    validateWithdrawOnContractFromCexSlider(maxWithdrawPercent) {\r\n        if (this.state.withdrawPercent > maxWithdrawPercent) {\r\n            notificationConfig.error('You must keep balance on your CEX account at least 55% of the total amount');\r\n            this.setState({\r\n                withdrawPercent: maxWithdrawPercent\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    clientSideError() {\r\n        let check = !Object.values(this.state.clientSideErrorMessage).every(o => o === null);\r\n\r\n        console.log({\r\n            error: check\r\n        });\r\n\r\n        if (check) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                clientSideError: false\r\n            });\r\n        }\r\n        return check;\r\n    };\r\n\r\n    async connectWallet() {\r\n\r\n        if (typeof window.ethereum == 'undefined') {\r\n            console.log('MetaMask is not installed!');\r\n            notificationConfig.error('Metamask not found.');\r\n            return;\r\n        }\r\n\r\n        this.setState({ btnClick: true });\r\n        await web3Config.connectWallet(0);\r\n        let networkId = web3Config.getNetworkId();\r\n\r\n        if (!constantConfig.allowedNetwork.includes(networkId)) {\r\n            notificationConfig.error('Please Select Ethereum, BSC or Polygon Network');\r\n            this.setState({ btnClick: false });\r\n            return;\r\n        }\r\n\r\n        let token = _.find(this.state.coinList, { \"networkId\": Number(networkId) });\r\n        let selectedTokenA = _.find(this.state.coinList, {\r\n            \"symbol\": (this.state.selectedTokenA).toString().toUpperCase()\r\n        });\r\n\r\n        if (networkId !== Number(selectedTokenA.networkId)) {\r\n            notificationConfig.error(`Please connect wallet to ${selectedTokenA.networkName} network or switch token A to active network.`);\r\n            return;\r\n        }\r\n\r\n        if (token) {\r\n            //this.changeTokenA(token.symbol); // enable if connect wallet button autometic switch to active network\r\n            //this.setGasFeeAndAmountMinMaxRanges(token.symbol); // if above condition true then we need to enable this to reset gas fee slider token and amount\r\n            //let alternateToken = this.getAlternateToken(token.symbol); // if above condition true then changeTokenB will need a random token so use this\r\n            this.changeTokenB(this.state.selectedTokenB);\r\n            this.setState({\r\n                web3: web3Config.getWeb3(),\r\n                btnClick: false,\r\n                networkId: networkId,\r\n                spAccount: web3Config.getAddress(),\r\n                spData: null\r\n            });\r\n\r\n            await this.getActiveContracts();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async deployContract(event) {\r\n\r\n        let allowedNetworks = constantConfig.allowedNetwork;\r\n\r\n        if (!Web3.utils.isAddress(this.state.walletAddressToSend)) {\r\n            notificationConfig.error('Please provide a valid wallet address that send token A');\r\n            return;\r\n        }\r\n\r\n        if (!Web3.utils.isAddress(this.state.walletAddressToReceive)) {\r\n            notificationConfig.error('Please provide a valid wallet address that receive token B');\r\n            return;\r\n        }\r\n\r\n        if (this.state.tokenA === this.state.tokenB) {\r\n            notificationConfig.error(\"Token A and Token B can't be the same\");\r\n            return;\r\n        }\r\n\r\n        if (!allowedNetworks.includes(Number(this.state.networkId))) {\r\n            notificationConfig.error(\"Selected network is not allowed.\");\r\n            return;\r\n        }\r\n\r\n        if (Number(this.state.spProfitPercent) > 1 || Number(this.state.spProfitPercent) < 0) {\r\n            this.setState({\r\n                clientSideErrorMessage: \"Please provide a valid input between 0-1 range\",\r\n                clientSideError: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                clientSideError: false\r\n            });\r\n        }\r\n\r\n        let validationPass = await this.validateWithdrawOnContractFromCexSlider(this.props.maxWithdrawPercent);\r\n        if (validationPass === false) {\r\n            return;\r\n        }\r\n\r\n        // set this to disable deploy button\r\n        this.setState({\r\n            deployed: true,\r\n            loadingIcon: true,\r\n            deployButtonText: \"Deploying...\",\r\n            errorMessage: null\r\n        });\r\n\r\n        console.log(`deploying contact on network - ${web3Config.getNetworkId()}`)\r\n\r\n        let args = {};\r\n        if (Number(this.state.stopRepeatsMode) === 1) {\r\n            console.log('Stop mode 1');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: this.state.stopRepeatsOnDate,\r\n                stopRepeatsAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsMode) === 2) {\r\n            console.log('Stop mode 2');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: null,\r\n                stopRepeatsAfterCalls: this.state.stopRepeatsAfterCalls\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsMode) === 3) {\r\n            console.log('Stop mode 3');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: null,\r\n                stopRepeatsAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.withdrawMode) === 1) {\r\n            console.log('Stop mode 1');\r\n            Object.assign(args, {\r\n                withdrawOnDate: this.state.withdrawOnDate,\r\n                withdrawAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.withdrawMode) === 2) {\r\n            console.log('Stop mode 2');\r\n            Object.assign(args, {\r\n                withdrawOnDate: null,\r\n                withdrawAfterCalls: this.state.withdrawAfterCalls\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.withdrawMode) === 3) {\r\n            console.log('Stop mode 3');\r\n            Object.assign(args, {\r\n                withdrawOnDate: null,\r\n                withdrawAfterCalls: null\r\n            });\r\n        }\r\n\r\n        const tokenA = _.find(this.state.coinList, { \"address\": this.state.tokenA });\r\n        const tokenB = _.find(this.state.coinList, { \"address\": this.state.tokenB });\r\n\r\n        let finalArgs = {\r\n            data: Object.assign(args, {\r\n                spAccount: web3Config.getAddress(),\r\n                networkId: web3Config.getNetworkId(),\r\n                tokenA: this.state.tokenA,\r\n                tokenB: this.state.tokenB,\r\n                amountA: this.state.amountA === null ? ('').toString() : this.state.amountA,\r\n                walletAddressToSend: this.state.walletAddressToSend === null ? ('').toString() : this.state.walletAddressToSend,\r\n                walletAddressToReceive: this.state.walletAddressToReceive === null ? ('').toString() : this.state.walletAddressToReceive,\r\n                gasAndFeeAmount: Web3.utils.toWei((this.state.gasAndFeeAmount).toString()),\r\n                swapSpeedMode: this.state.swapSpeedMode,\r\n                spProfitPercent: this.state.spProfitPercent,\r\n                accumulateFundsLimit: this.state.accumulateFundsLimit,\r\n                stopRepeatsMode: this.state.stopRepeatsMode,\r\n                withdrawMode: this.state.withdrawMode,\r\n                withdrawPercent: this.state.withdrawPercent,\r\n                cexType: this.state.selectedCex\r\n            }),\r\n            path: 'become-swap-provider',\r\n            method: 'POST'\r\n        };\r\n\r\n        console.log(finalArgs)\r\n\r\n        try {\r\n            let response = await AxiosRequest.request(finalArgs);\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n                console.log('record created!');\r\n                let swapFactory = new SwapFactoryContractPairWise(this.state.web3, tokenA.symbol, tokenB.symbol, 'LiquidityProvider');\r\n                swapFactory.addSwapProvider(\r\n                    response.data.tokenA.address,\r\n                    response.data.tokenB.address,\r\n                    response.data.walletAddresses.toSend,\r\n                    response.data.walletAddresses.toReceive,\r\n                    Web3.utils.fromWei((response.data.gasAndFeeAmount.$numberDecimal).toString(), 'ether'),\r\n                    async (hash) => {\r\n                        if (hash !== null || hash !== undefined) {\r\n                            // update tx hash to db\r\n                            let args = {\r\n                                data: {\r\n                                    docId: response.data._id,\r\n                                    txid: hash\r\n                                },\r\n                                path: 'update-tx-hash',\r\n                                method: 'POST'\r\n                            }\r\n                            response = await AxiosRequest.request(args);\r\n                            console.log(response);\r\n                        }\r\n                    },\r\n                    async (response) => {\r\n                        console.log({\r\n                            \"Contract response:\": response\r\n                        });\r\n                        if (response.code === 4001 || response.code === -32603) {\r\n                            this.setState({\r\n                                confirmed: false,\r\n                                deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n                                deployed: false,\r\n                                loadingIcon: false,\r\n                                isActiveContractExist: false\r\n                            });\r\n                            if (response.code === 4001) {\r\n                                notificationConfig.error('Deploying cancelled. Please try again');\r\n                            }\r\n                            if (response.code === -32603) {\r\n                                notificationConfig.error('Intrinsic gas too low');\r\n                            }\r\n                            await this.getActiveContracts();\r\n                        }\r\n\r\n                        if (response.status === 1) {\r\n                            const newSpContactAddress = response.logs[0].address;\r\n                            // get deployment status\r\n                            await this.getContractDepolymentStatus(newSpContactAddress);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (response.status === 400) {\r\n                this.setState({\r\n                    loadingIcon: false,\r\n                    deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n                    deployed: false,\r\n                    errorMessage: response.data[0]\r\n                });\r\n                notificationConfig.error('Something went wrong!');\r\n            }\r\n\r\n            if (response.status === 401 || response.status === 422) {\r\n                this.setState({\r\n                    loadingIcon: false,\r\n                    deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n                    deployed: false,\r\n                    serverError: response.data.errorMessage.error\r\n                });\r\n                notificationConfig.error(response.data.errorMessage.error);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n            notificationConfig.error('Server Error!');\r\n            this.setState({\r\n                loadingIcon: false,\r\n                deployButtonText: \"DEPLOY SMART CONTRACT\",\r\n                deployed: false\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async getActiveContracts() {\r\n\r\n        this.setState({\r\n            deployed: true,\r\n            deployButtonText: 'Getting active contract'\r\n        });\r\n\r\n        let args = {\r\n            data: {\r\n                spAccount: web3Config.getAddress(),\r\n                networkId: web3Config.getNetworkId(),\r\n                cexType: (this.state.selectedCex).toUpperCase(),\r\n                tokenA: this.state.tokenA,\r\n                tokenB: this.state.tokenB\r\n            },\r\n            path: 'active-contracts',\r\n            method: 'POST'\r\n        }\r\n\r\n        try {\r\n            let response = await AxiosRequest.request(args);\r\n            if (response.status === 200) {\r\n\r\n                const isactiveContractExist = response.data.find(obj => {\r\n                    if ((obj.networkId === web3Config.getNetworkId()) && ((web3Config.getAddress()).toLowerCase() === obj.walletAddresses.spAccount)) {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                })\r\n\r\n                if (isactiveContractExist) {\r\n                    notificationConfig.success('Active contract found.');\r\n                    this.setState({\r\n                        spData: response.data,\r\n                        confirmed: true,\r\n                        deployed: false,\r\n                        deployButtonText: 'DEPLOY SMART CONTRACT'\r\n                    });\r\n                    return true;\r\n                } else {\r\n                    this.setState({\r\n                        deployed: false,\r\n                        deployButtonText: 'DEPLOY SMART CONTRACT'\r\n                    });\r\n                    notificationConfig.error('No active contract for the selected network.');\r\n                    return false;\r\n                }\r\n            } else if (response.status === 404) {\r\n                this.setState({\r\n                    deployed: false,\r\n                    deployButtonText: 'DEPLOY SMART CONTRACT'\r\n                });\r\n                notificationConfig.error('No active contract.');\r\n                return false;\r\n            } else {\r\n                console.log(response);\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setState({\r\n                web3: null,\r\n                deployed: false,\r\n                deployButtonText: 'CONNECT YOUR WALLET'\r\n            });\r\n            notificationConfig.error('Failed to connect to server.');\r\n        }\r\n    }\r\n\r\n\r\n    async getContractDepolymentStatus(smartContractAddress) {\r\n        let args = {\r\n            data: {\r\n                spAccount: this.state.spAccount,\r\n                networkId: web3Config.getNetworkId(),\r\n                smartContractAddress: smartContractAddress,\r\n                tokenA: this.state.tokenA,\r\n                tokenB: this.state.tokenB\r\n            },\r\n            path: 'get-contract-status',\r\n            method: 'POST'\r\n        }\r\n\r\n        var networkPromise = await AxiosRequest.request(args);\r\n        var timeOutPromise = new Promise(function (resolve, reject) {\r\n            setTimeout(resolve, 5000, 'Timeout Done');\r\n        });\r\n        Promise.all(\r\n            [networkPromise, timeOutPromise]).then(async (responses) => {\r\n                if (responses[0].data === true) {\r\n                    await this.getActiveContracts();\r\n                    this.setState({\r\n                        smartSwapContractAddress: (smartContractAddress).toLowerCase(),\r\n                        confirmed: true,\r\n                        deployButtonText: \"Contract Deployed\",\r\n                        loadingIcon: false,\r\n                        isActiveContractExist: true\r\n                    });\r\n                    notificationConfig.success('Swap provider Added');\r\n                } else {\r\n                    await this.getContractDepolymentStatus(smartContractAddress);\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        const smallError = {\r\n            fontSize: \"13px\",\r\n            lineHeight: \"20px\"\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <div className=\"LiProFormMbox\">\r\n\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className=\"LiProTitle02\">SEND</div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiProTitle02\">RECEIVED</div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className=\"LiProLable\">Choose the token A to sell on Smartswap<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Total amount circulating as a swap provider. \r\n        <br/><br/>\r\n        For example, selecting $100,000 means up $100,000 circulates to support SmartSwap liquidity\" aria-hidden=\"true\"></i></i></div>\r\n                        <div className=\"bspMBX01\">\r\n                            <div className=\"bspSBX01 fw\">\r\n                                <div className=\"LiproDropdown\">\r\n                                    <button className='LiproDDbtn01' onClick={() => this.toggle(1)} >\r\n                                        <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[this.state.selectedTokenA]['icon']} alt=\"\" /></span> {this.state.coinList[this.state.selectedTokenA]['symbol']}</div>\r\n                                        <i className=\"fas fa-caret-down\"></i>\r\n                                    </button>\r\n                                    <div className=\"ddContainer\" ref={this.setDropdownWrapperRef}>\r\n                                        <Collapse isOpen={this.state.isOpen1} className={\"collapse-css-transition\"} >\r\n                                            {\r\n                                                Object.keys(this.state.coinList).map((coin) => (\r\n                                                    this.state.selectedTokenB !== this.state.coinList[coin]['symbol'] &&\r\n                                                    (this.state.coinList[coin]['approveRequire'] === false) &&\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            this.changeTokenA(this.state.coinList[coin]['symbol']);\r\n                                                        }}\r\n                                                        key={this.state.coinList[coin]['symbol']} className='LiproDDbtn01'\r\n                                                    >\r\n                                                        <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[coin]['icon']} alt=\"\" /></span> {this.state.coinList[coin]['symbol']}</div>\r\n                                                    </button>\r\n                                                ))\r\n                                            }\r\n                                        </Collapse>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"FlyICO03\">\r\n                            {/* <button onClick={() => this.swapTokens()}>{\"<>\"}</button> */}\r\n                            <button className=\"swap-token-side grey-arrow\" href=\"javascript:void(0);\" onClick={() => this.swapTokens()}>\r\n                                <img src=\"images/green-arrow.png\" alt=\"Swap token sides\"></img>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiProLable\">Choose token B to receive from SmartSwap</div>\r\n                        <div className=\"LiproDropdown\">\r\n                            <button className='LiproDDbtn01' onClick={() => this.toggle(2)} >\r\n                                <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[this.state.selectedTokenB]['icon']} alt=\"\" /></span> {this.state.coinList[this.state.selectedTokenB]['symbol']}</div>\r\n                                <i className=\"fas fa-caret-down\"></i>\r\n                            </button>\r\n                            <div className=\"ddContainer\" ref={this.setDropdownWrapperRef}>\r\n                                <Collapse isOpen={this.state.isOpen2} className={\"collapse-css-transition\"} >\r\n                                    {\r\n                                        Object.keys(this.state.coinList).map((coin) => (\r\n                                            (this.state.selectedTokenA !== this.state.coinList[coin]['symbol']) &&\r\n                                            (this.state.coinList[coin]['approveRequire'] === false) &&\r\n                                            <button\r\n                                                onClick={() => {\r\n                                                    this.changeTokenB(this.state.coinList[coin]['symbol']);\r\n                                                }}\r\n                                                key={this.state.coinList[coin]['symbol']} className='LiproDDbtn01'\r\n                                            >\r\n                                                <div className=\"ddIconBX\"> <span> <img src={this.state.coinList[coin]['icon']} alt=\"\" /></span> {this.state.coinList[coin]['symbol']}</div>\r\n                                            </button>\r\n                                        ))\r\n                                    }\r\n                                </Collapse>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className=\"LiProLable\">Your CEX wallet address <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Enter you CEX wallet (for example your Binance wallet address) that will become a swap provider. \" aria-hidden=\"true\"></i></i></div>\r\n                        <div className=\"LiproInput01\">\r\n                            <input\r\n                                type=\"text\"\r\n                                defaultValue=''\r\n                                onChange={event => this.setState({ walletAddressToSend: event.target.value })}\r\n                                ref={(input) => this.walletAddressToSend = input}\r\n                            />\r\n                        </div>\r\n                        <br></br>\r\n                        {this.state.errorMessage !== null && this.state.errorMessage.includes(\"walletAddressToSend\") &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.errorMessage}</label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiProLable\">Your CEX wallet address <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Enter the wallet that receives SP results and rewards. This wallet address may be the same CEX wallet address as the token A address. \r\n        <br/><br/>\r\n        N.B. that on some CEX it may be two different wallet addresses, one to send and one to receive.\" aria-hidden=\"true\"></i></i></div>\r\n                        <div className=\"LiproInput01\">\r\n                            <input\r\n                                type=\"text\"\r\n                                defaultValue=''\r\n                                onChange={event => this.setState({ walletAddressToReceive: event.target.value })}\r\n                                ref={(input) => this.walletAddressToReceive = input}\r\n                            />\r\n                        </div>\r\n                        <br></br>\r\n                        {this.state.errorMessage !== null && this.state.errorMessage.includes(\"walletAddressToReceive\") &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.errorMessage}</label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"LiProfSbox01 \">\r\n                        <div className=\"LiProLable d-flex\">Choose the total amount you are authorizing the API<br></br> to use\r\n                            <i className=\"help-circle\">\r\n                                <i\r\n                                    className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top\"\r\n                                    data-pt-title=\"The total amount includes the amount that will be send to your smart contract, the stable coin amount that will be left on your CEX account and the funds that will be use to place short order when needed.\"\r\n                                    aria-hidden=\"true\"\r\n                                ></i>\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiproInput01 withLable01\" style={{ marginTop: \"12px\" }}>\r\n                            <span>$</span>\r\n                            <input\r\n                                type=\"text\"\r\n                                defaultValue=''\r\n                                placeholder=\"50000\"\r\n                                onChange={event => this.checkAmountA(event.target.value, this.props.minAmountA)}\r\n                                ref={(input) => this.amountA = input}\r\n                            />\r\n                        </div>\r\n                        <br></br>\r\n                        {this.state.errorMessage !== null && this.state.errorMessage.includes(\"amountA\") &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.errorMessage}</label>\r\n                            </div>\r\n                        }\r\n                        {this.state.clientSideError === true && (this.state.clientSideErrorMessage.amountA !== null) &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.clientSideErrorMessage.amountA}</label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className='LiProfSbox01'>\r\n                        <div className=\"mb-20px-n\">\r\n                            <div className=\"LiProLable\">CEX\r\n                                <i className=\"help-circle\">\r\n                                    <i\r\n                                        className=\"fas fa-question-circle protip\"\r\n                                        data-pt-position=\"top\"\r\n                                        data-pt-title=\"Choose CEX Of your choice from the below listed CEX. Note that once cex set it can't be changed in the future. Choose carefully\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></i>\r\n                                </i>\r\n                            </div>\r\n                            <div className=\"LiproDropdown\">\r\n                                <button className='LiproDDbtn01' onClick={() => this.toggleCexList()}>\r\n                                    <div className=\"ddIconBX\">\r\n                                        <span>\r\n                                            <img src={this.state.cexList[this.state.selectedCex]['icon']} alt=\"\" />\r\n                                        </span>\r\n                                        {this.state.cexList[this.state.selectedCex]['symbol']}\r\n                                    </div>\r\n                                    <i className=\"fas fa-caret-down\"></i>\r\n                                </button>\r\n                                <div className=\"ddContainer\">\r\n                                    <Collapse isOpen={(this.state.cexListOpen)} ref={this.setDropdownWrapperRef} className={\"collapse-css-transition\"} >\r\n                                        {\r\n                                            Object.keys(this.state.cexList).map((cex) => (\r\n                                                <button\r\n                                                    //disabled={this.props.contractData.cexData.type !== null}\r\n                                                    key={this.state.cexList[cex]['symbol']} className='LiproDDbtn01'\r\n                                                    onClick={() => {\r\n                                                        this.toggleCexList(this.state.cexList[cex]['symbol']);\r\n                                                    }}\r\n                                                >\r\n                                                    <div className=\"ddIconBX\">\r\n                                                        <span>\r\n                                                            <img src={this.state.cexList[cex]['icon']} alt=\"\" />\r\n                                                        </span> {this.state.cexList[cex]['symbol']}\r\n                                                    </div>\r\n                                                </button>\r\n                                            ))\r\n                                        }\r\n                                    </Collapse>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='spacerLine'></div>\r\n\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className=\"LiProTitle02\">CHOOSE YOUR SWAPPING SPEED<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"right\" data-pt-title=\"The Smart swap using a matcher to match between users to users and if there are no users available, between users to swap providers (SP). the matcher taking under consideration, which SP can complete the swap fully, faster and cheaper. \r\n                        <br/><br/>\r\n                        SP can hold stable coin (USDT) on their controlled CEX account, which will be trigger by API to buy in real time tokens and send over to the SP's smarts contact which will be  use as a counterparty to other users. same exchange processing withdraw after few long minutes and also each blockchain network as different proccing speed, those facts can put some SP with holding upfront tokens on their smart contract with advantage over other SP that requires to buy those tokens and then send them over.\r\n                        <br/><br/>\r\n                        As a SP you can choose if you want to send tokens to your smart contract in real time, or if you want to act faster by depositing tokens upfront to to your smart contract.\" aria-hidden=\"true\"></i></i></div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className=\"LiProTitle02\"> </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox01\">\r\n                        <div className='LipRadioFix01' >\r\n                            <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"spS01\"\r\n                                    name=\"s001\"\r\n                                    onChange={event => this.setState({ swapSpeedMode: 'UPFRONT' })}\r\n                                    checked={this.state.swapSpeedMode === 'UPFRONT'}\r\n                                    ref={(input) => this.swapSpeedMode1 = input}\r\n                                />\r\n                                <label htmlFor=\"spS01\"></label>\r\n                            </div>\r\n                            <div className=\"LiProFlexBX01 padFixer01\">\r\n                                <div className=\"LipRTitle01\">Deposit token A to the smart contract upfront<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"right\" data-pt-title=\"This option required from you hold upfront 45% of the sell token in the smart contract, and another 55% as stable coin (USDT) on your centralized account (that 55% will be used to buy the sell tokens in real time and placing a short order against the receiving token to secure it's face value from volatility).\r\n                                <br/><br/>\r\n                                Once you will deploy your smart contract, you will need to deposit directly to your smart contract address the 45% the funds as tokens that you want to sell. \r\n                                <br/><br/>\r\n                                For example if you want to and you are looking to gain profit of 0.05% as a spread. in exchange for ETH and you are looking to gain profit of 0.05% as a spread, you will need to deposit $45,000 of BNB to your smart contract, so users that buying those BNB will get those tokens instantly without waiting for your centralized account to send it over to the smart contract (which can takes few long minutes). Wen swaps take place your CEX account will be trigger to buy in real time new BNB at the best price in the exchange and then send them to feed back your smart contract, while on the same time the smartswap will send to your CEX account $45,225 of ETH (which is the same amount plus the spread that you agree to), then the API will open a short position to make sure those ETH will be sold back to stablecoins without any lost to volatility.\" aria-hidden=\"true\"></i></i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"LiProfSbox02\">\r\n                        <div className='LipRadioFix01' >\r\n                            <div className=\"md-radio md-radio-inline \">\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"spS02\"\r\n                                    name=\"s002\"\r\n                                    onChange={event => this.setState({ swapSpeedMode: 'UPFRONT' })}\r\n                                    checked={this.state.swapSpeedMode === 'REALTIME'}\r\n                                    ref={(input) => this.swapSpeedMode2 = input}\r\n                                    disabled={true}\r\n                                />\r\n                                <label htmlFor=\"spS02\"></label>\r\n                            </div>\r\n                            <div className=\"LiProFlexBX01 padFixer01\">\r\n                                <div className=\"LipRTitle01\">Deposit token A to the smart contract in real time<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Selecting this option allows zero up front tokens and 100% of your funds may wait as stablecoins (USDT) on your centralized exchange account. Once your account is triggered to provide liquidity to SmartSwap, the controlled account uses the authorized stablecoin account to buy the tokens and send them to your smart contract address.\r\n                                <br/><br/>\r\n                                N.B. The process to send tokens from centralized  exchange accounts to your smart contract may take few minutes depending on the exchange and the speed of network. Therefore, the SmartSwap may choose other SPs over you which have tokens available on their smart contract already and can execute the swap faster for the end user.\" aria-hidden=\"true\"></i></i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.errorMessage !== null && this.state.errorMessage.includes(\"swapSpeedMode\") &&\r\n                        <div className=\"error-Msg\" style={smallError}>\r\n                            <label>{this.state.errorMessage}</label>\r\n                        </div>\r\n                    }\r\n                    <div className=\"LiProfSbox03 withdrawSlider\">\r\n                        {/* withdraw % slider */}\r\n                        <div className=\"dragorInput v2\">\r\n                            <InputRange\r\n                                step={1}\r\n                                maxValue={100}\r\n                                minValue={0}\r\n                                value={this.state.withdrawPercent}\r\n                                formatLabel={value => `${value}%`}\r\n                                onChange={value => this.setState({ withdrawPercent: value })}\r\n                                onChangeComplete={() => this.validateWithdrawOnContractFromCexSlider(this.props.maxWithdrawPercent)}\r\n                            />\r\n                        </div>\r\n                        <p className=\"withdrawOnContractAlert\">\r\n                            You must keep balance on your CEX account at least 55% of the total amount\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className='spacerLine'></div>\r\n\r\n                    <div className=\"LiProfSbox03\">\r\n                        <div className=\"LiProTitle02\">GAS AND FEES</div>\r\n                        <div className=\"LiProLable mtFix01\">Set the maximum amount which the smart contract is authorized to withdraw from your CEX account to cover the gas and fees. Once the total is reached, the contract stops performing until reauthorized with a new limit</div>\r\n                        <div className=\"dragorInput v2\">\r\n                            <InputRange\r\n                                step={this.state.minStepForGasAndFeeAmount}\r\n                                maxValue={this.state.maxGasAndFeeAmount}\r\n                                minValue={this.state.minGasAndFeeAmount}\r\n                                value={this.state.gasAndFeeAmount}\r\n                                formatLabel={value => this.state.selectedTokenA + ` ${value}`}\r\n                                onChange={value => this.setState({ gasAndFeeAmount: value })}\r\n                                ref={(input) => this.gasAndFeeAmount = input}\r\n                            />\r\n                        </div>\r\n                        <br></br>\r\n                        {this.state.errorMessage !== null && this.state.errorMessage.includes(\"gasAndFeeAmount\") &&\r\n                            <div className=\"error-Msg\" style={smallError}>\r\n                                <label>{this.state.errorMessage}</label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className='spacerLine'></div>\r\n                    <div className=\"LiProfSbox03\">\r\n                        <div className=\"LiProTitle02\">PROFIT</div>\r\n                    </div>\r\n                    <div className='LiProFlexBX01 smFixer07'>\r\n                        <div className=\"LiProfSbox01\">\r\n                            <div className=\"LiProLable\">Choose the minimum that you want to gain on each swap <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Set a profit limit that triggers your funds for swapping. Take under consideration all costs such as exchange fees. \r\n                            <br/><br/>\r\n                            For example, you can choose that you want your funds to swap only if it's gain 0.5% profits. When you set the profit limit, take under consideration all the costs that you may pay to your CEX for such transaction short position, blockchain cost, (which by themselves can be range from 0.1 to 0.3% - depend on the CEX and network).\" aria-hidden=\"true\"></i></i></div>\r\n                        </div>\r\n                        <div className=\"LiProfSbox02\">\r\n                            <div className=\"LiproInput01 withLable01\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder={this.state.spProfitPercent}\r\n                                    onChange={event => this.changeSpread(event.target.value, this.props.minSpreadRange, this.props.maxSpreadRange)}\r\n                                    ref={(input) => this.spProfitPercent = input}\r\n                                    min={this.props.minSpreadRange}\r\n                                    max={this.props.maxSpreadRange}\r\n                                />\r\n                                <span>%</span>\r\n                            </div>\r\n                            <br></br>\r\n                            {this.state.errorMessage !== null && this.state.errorMessage.includes(\"spProfitPercent\") &&\r\n                                <div className=\"error-Msg\" style={smallError}>\r\n                                    <label>{this.state.errorMessage}</label>\r\n                                </div>\r\n                            }\r\n                            {this.state.clientSideError === true && (this.state.clientSideErrorMessage.spProfitPercent !== null) &&\r\n                                <div className=\"error-Msg\" style={smallError}>\r\n                                    <label>{this.state.clientSideErrorMessage.spProfitPercent}</label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='LiProFlexBX01 smFixer07'>\r\n                        <div className=\"LiProfSbox01\">\r\n                            <div className=\"LiProLable\">Choose the minimum amount that you are willing to swap with<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Take under consideration, performing a swap costs gas and fees which are reimbursed via SMART\" aria-hidden=\"true\"></i></i></div>\r\n                        </div>\r\n                        <div className=\"LiProfSbox02\">\r\n                            <div className=\"LiproInput01 withLable01\">\r\n                                <span>$</span>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder={this.state.accumulateFundsLimit}\r\n                                    onChange={event => this.setState({ accumulateFundsLimit: event.target.value })}\r\n                                    ref={(input) => this.accumulateFundsLimit = input}\r\n                                />\r\n                            </div>\r\n                            <br></br>\r\n                            {this.state.errorMessage !== null && this.state.errorMessage.includes(\"accumulateFundsLimit\") &&\r\n                                <div className=\"error-Msg\" style={smallError}>\r\n                                    <label>{this.state.errorMessage}</label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='spacerLine'></div>\r\n                    <div className=\"LiProfSbox03\">\r\n                        <div className=\"LiProTitle02\">REPEAT</div>\r\n                    </div>\r\n\r\n                    <div className='LiProFlexBX01 tabFixer smFixer02' style={{ alignItems: 'flex-start' }}>\r\n                        <div className=\"LiProfSbox01\" style={{ paddingTop: '10px' }}>\r\n                            <div className=\"LiProLable\">Stop repeat on CEX <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"This option denotes how many transactions you approve as a Swap Provider. Once the limit is reached, the API stops performing any repeats. Once the repeat stops, there is no way to change the process besides deploying a new Swap Provider contract with new rules.\" aria-hidden=\"true\"></i></i></div>\r\n                        </div>\r\n                        <div className=\"LiProfSbox02\">\r\n\r\n                            <div className='LipRadioFix01' >\r\n                                <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"s01\"\r\n                                        name=\"s11\"\r\n                                        value=\"s01\"\r\n                                        onChange={event => this.setState({ stopRepeatsMode: 1 })}\r\n                                        checked={this.state.stopRepeatsMode === 1}\r\n                                        ref={(input) => this.stopRepeatsMode1 = input}\r\n                                    />\r\n                                    <label htmlFor=\"s01\"></label>\r\n                                </div>\r\n                                <div className='LiProFlexBX01 padFixer01'>\r\n                                    <div className=\"LiproInput01\">\r\n                                        <DatePicker\r\n                                            selected={this.state.stopRepeatsOnDate}\r\n                                            onChange={(date) => this.setState({ stopRepeatsOnDate: date })}\r\n                                            peekNextMonth\r\n                                            showMonthDropdown\r\n                                            showYearDropdown\r\n                                            dropdownMode=\"select\"\r\n                                            dateFormat=\"dd/MM/yyyy\"\r\n                                            ref={(input) => this.stopRepeatsOnDate = input}\r\n                                        />\r\n                                        <i className=\"fas fa-calendar-alt FlyICO\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='LipRadioFix01' >\r\n                                <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"s02\"\r\n                                        name=\"s12\"\r\n                                        value=\"s02\"\r\n                                        onChange={event => this.setState({ stopRepeatsMode: 2 })}\r\n                                        checked={this.state.stopRepeatsMode === 2}\r\n                                        ref={(input) => this.stopRepeatsMode2 = input}\r\n                                    />\r\n                                    <label htmlFor=\"s02\"></label>\r\n                                </div>\r\n                                <div className=\"LiProFlexBX01 padFixer01\">\r\n                                    <div className=\"LiproInput01 withLable02\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder={this.state.stopRepeatsAfterCalls}\r\n                                            onChange={event => this.setState({ stopRepeatsAfterCalls: event.target.value })}\r\n                                            ref={(input) => this.stopRepeatsAfterCalls = input}\r\n                                        />\r\n                                        {/* <div className=\"FlyICO02\">Days</div> */}\r\n                                        <span>Repeats</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='LipRadioFix01' >\r\n                                <div className=\"md-radio md-radio-inline \">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"s03\"\r\n                                        name=\"s13\"\r\n                                        value=\"s03\"\r\n                                        onChange={event => this.setState({ stopRepeatsMode: 3 })}\r\n                                        checked={this.state.stopRepeatsMode === 3}\r\n                                        ref={(input) => this.stopRepeatsMode3 = input}\r\n                                    />\r\n                                    <label htmlFor=\"s03\"></label>\r\n                                </div>\r\n                                <div className=\"LiProFlexBX01 padFixer01\">\r\n                                    <div className=\"LipRTitle01\">Never stop<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Run SP repeats non-stop as long as there is funds available in your CEX account.\" aria-hidden=\"true\"></i></i></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if ((this.state.web3 === null ||\r\n                            constantConfig.tokenDetails[\r\n                                this.state.selectedTokenA\r\n                            ].networkId !== web3Config.getNetworkId())) {\r\n                            return (<div className=\"LiProfSbox03\">\r\n                                <div className='LiProformBTNbar'>\r\n                                    <button\r\n                                        onClick={this.connectWallet.bind(this)}\r\n                                    >CONNECT YOUR WALLET</button>\r\n                                </div>\r\n                            </div>)\r\n\r\n                        } else {\r\n                            return (<div className=\"LiProfSbox03\">\r\n                                <div className='LiProformBTNbar'>\r\n                                    <button\r\n                                        onClick={this.deployContract.bind(this)} disabled={this.state.deployed}\r\n                                    >\r\n                                        {this.state.deployButtonText}\r\n                                        {this.state.loadingIcon === true &&\r\n                                            <LoopCircleLoading\r\n                                                height={'20px'}\r\n                                                width={'20px'}\r\n                                                color={'#ffffff'}\r\n                                            />\r\n                                        }\r\n                                    </button>\r\n                                </div>\r\n                            </div>)\r\n                        }\r\n                    }\r\n                    )()}\r\n\r\n                    {/* <div className='spacerLine'></div>\r\n                    {this.state.serverError !== null &&\r\n                        <div className=\"error-Msg\" style={{display: 'none;'}}>\r\n                            <label>{this.state.serverError}</label>\r\n                        </div>\r\n                    } */}\r\n                </div>\r\n                <div className='spacerLine'></div>\r\n                {\r\n                    ((this.state.confirmed === true) && (this.state.spData !== null) && (this.state.spData.length > 0)) &&\r\n                    <>\r\n                        <div className=\"LiProTitle03\">Below is your Swap Provider smart contract address</div>\r\n                        {this.state.spData.map((data, index) => {\r\n                            return <ActiveContract\r\n                                key={index}\r\n                                index={index + 1}\r\n                                contractData={data}\r\n                                coinList={this.state.coinList}\r\n                                stepOpen={true}\r\n                                web3={this.state.web3}\r\n                                tokenPrices={this.props.tokenPrices}\r\n                                minAmountA={this.props.minAmountA}\r\n                                maxWithdrawPercent={this.props.maxWithdrawPercent}\r\n                                sandboxMode={this.props.sandboxMode}\r\n                            />\r\n                        })}\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n};\r\n","D:\\react\\SmartSwap_frontend\\src\\helper\\swapFactoryContractPairWise.js",[],"D:\\react\\SmartSwap_frontend\\src\\helper\\axiosRequest.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\LiquidityProvider\\ActiveContract.js",["1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331"],"import React, { Component } from \"react\";\r\nimport Collapse from \"@kunukn/react-collapse\";\r\nimport notificationConfig from '../../config/notificationConfig';\r\nimport SPContract from '../../helper/spContract';\r\nimport AxiosRequest from \"../../helper/axiosRequest\";\r\nimport DateFormat from \"dateformat\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport InputRange from 'react-input-range';\r\nimport Web3 from 'web3';\r\nimport constantConfig from '../../config/constantConfig';\r\nimport { LoopCircleLoading } from 'react-loadingg';\r\nimport web3Config from \"../../config/web3Config\";\r\n\r\nvar _ = require('lodash');\r\n\r\nexport default class ActiveContract extends Component {\r\n    _isMounted = false;\r\n    _isCexUpdated = false;\r\n    constructor(props) {\r\n        super();\r\n\r\n        let gasAndFeeAmount = Web3.utils.fromWei((props.contractData.gasAndFeeAmount.$numberDecimal).toString(), 'ether');\r\n\r\n        let stopRepeatsOnDateOnContract = null, stopRepeatsAfterCallsOnContract = null, cexApiKeyMasked = null, cexApiSecretMasked = null, spContractBalInUsd = 0;\r\n\r\n        if (props.contractData.stopRepeats.mode === 1) {\r\n            let toDate = new Date(props.contractData.stopRepeats.onDate);\r\n            stopRepeatsOnDateOnContract = toDate;\r\n        }\r\n\r\n        if (props.contractData.stopRepeats.mode === 2) {\r\n            stopRepeatsAfterCallsOnContract = props.contractData.stopRepeats.afterCalls;\r\n        }\r\n\r\n        if (props.contractData.cexData.key !== null) {\r\n            cexApiKeyMasked = this.inputMask('key', props.contractData.cexData.key, false);\r\n        }\r\n\r\n        if (props.contractData.cexData.secret !== null) {\r\n            cexApiSecretMasked = this.inputMask('secret', props.contractData.cexData.secret, false);\r\n        }\r\n\r\n        if (props.sandboxMode === true) {\r\n            spContractBalInUsd = props.contractData.totalWithdrawnAmount.$numberDecimal;\r\n        }\r\n\r\n        const cexType = props.contractData.cexData.type !== null ? (props.contractData.cexData.type).toUpperCase() : 'BINANCE';\r\n\r\n        this.state = {\r\n            web3: props.web3,\r\n            coinList: props.coinList,\r\n            spContractBal: 0,\r\n            spContractBalInUsd: spContractBalInUsd,\r\n            tokenPrices: props.tokenPrices,\r\n\r\n            // contract data\r\n            spAccount: web3Config.getAddress(),\r\n            tokenA: props.contractData.tokenA.address,\r\n            tokenB: props.contractData.tokenB.address,\r\n            networkIdOnContract: Number(props.contractData.networkId),\r\n            gasAndFeeAmountOnContract: Number(gasAndFeeAmount),\r\n            minGasAndFeeAmountOnContractSide: 0,\r\n            maxGasAndFeeAmountOnContractSide: 0,\r\n            minStepForGasAndFeeAmountOnContractSide: 0,\r\n            spProfitPercentOnContract: props.contractData.spProfitPercent,\r\n            createdAt: props.contractData.createdAt,\r\n            amountAOnContract: props.contractData.totalAmount.$numberDecimal,\r\n            tempAmountAOnContract: props.contractData.totalAmount.$numberDecimal,\r\n            accumulateFundsLimitOnContract: props.contractData.accumulateFundsLimit,\r\n            stopRepeatsModeOnContract: props.contractData.stopRepeats.mode,\r\n            stopRepeatsOnDateOnContract: stopRepeatsOnDateOnContract,\r\n            stopRepeatsAfterCallsOnContract: stopRepeatsAfterCallsOnContract,\r\n            cexApiKey: props.contractData.cexData.key,\r\n            cexApiSecret: props.contractData.cexData.secret,\r\n            cexApiKeyMasked: cexApiKeyMasked,\r\n            cexApiSecretMasked: cexApiSecretMasked,\r\n            cexApiKeyEditable: true,\r\n            cexApiSecretEditable: true,\r\n            swapSpeedModeOnContract: props.contractData.swapSpeedMode,\r\n            withdrawPercentOnContract: props.contractData.withdrawPercent,\r\n            tempWithdrawPercentOnContract: props.contractData.withdrawPercent,\r\n            spContractAddress: props.contractData.smartContractAddress,\r\n\r\n            // error messages\r\n            clientSideError: false,\r\n            clientSideErrorMessage: {\r\n                spProfitPercentOnContract: null,\r\n                amountAOnContract: null\r\n            },\r\n            errorMessage: null,\r\n\r\n            // effects\r\n            stepOpen: props.stepOpen,\r\n            reAuthrizeing: false,\r\n            toggleStopRepeatsSection: false,\r\n            updating: false,\r\n            updated: false,\r\n            updateButtonText: \"SAVE TO UPDATE CONTRACT\",\r\n            loadingIcon: false,\r\n\r\n            // tests vars\r\n            tests: null,\r\n            testPassed: false,\r\n            testing: false,\r\n\r\n            //\r\n            cexList: constantConfig.cexTypes,\r\n            selectedCex: cexType,\r\n            cexListOpen: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            // detect Network account change\r\n            window.ethereum.on('chainChanged', networkId => {\r\n                console.log('chainChanged', networkId);\r\n                this.setState({\r\n                    web3: null,\r\n                    spAccount: null,\r\n                    tests: null,\r\n                    testPassed: false\r\n                });\r\n            });\r\n\r\n            window.ethereum.on('accountsChanged', accounts => {\r\n                console.log('account Changed');\r\n                this.setState({\r\n                    web3: null,\r\n                    spAccount: null,\r\n                    tests: null,\r\n                    testPassed: false\r\n                });\r\n                // on account change currently disconnecting wallet so we can again check active contract on wallet connect \r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this._isMounted) {\r\n            if (this.props.sandboxMode === false) {\r\n                this.getContractBal();\r\n            }\r\n            this.getAllTests();\r\n        }\r\n    }\r\n\r\n    getTokenData(tokenAddress, key) {\r\n        if (tokenAddress !== null) {\r\n            let token = _.find(this.state.coinList, { \"address\": tokenAddress });\r\n            //console.log(token);\r\n            if (token !== null) {\r\n                return token[key];\r\n            }\r\n        }\r\n    };\r\n\r\n    toggleStep() {\r\n        const currentState = this.state.stepOpen;\r\n        this.setState({\r\n            stepOpen: !currentState\r\n        });\r\n    }\r\n\r\n    toggleCexList(changedCex = null) {\r\n        const currentState = this.state.cexListOpen;\r\n        this.setState({\r\n            cexListOpen: !currentState\r\n        });\r\n\r\n        if (changedCex) {\r\n            this.setState({\r\n                selectedCex: changedCex\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    copyText = async () => {\r\n        const textToCopy = this.state.spContractAddress;\r\n        if (textToCopy === undefined || textToCopy === null) {\r\n            notificationConfig.error('Address copied error. Address blank.');\r\n        }\r\n        if (navigator.clipboard && window.isSecureContext) {\r\n            // navigator clipboard api method'\r\n            return navigator.clipboard.writeText(textToCopy)\r\n                .then(() => {\r\n                    notificationConfig.success('Address copied. Make sure to cross-check');\r\n                }).catch(() => {\r\n                    notificationConfig.error('Address copied error.');\r\n                });\r\n        } else {\r\n            // text area method\r\n            let textArea = document.createElement(\"textarea\");\r\n            textArea.value = textToCopy;\r\n            // make the textarea out of viewport\r\n            textArea.style.position = \"fixed\";\r\n            textArea.style.left = \"-999999px\";\r\n            textArea.style.top = \"-999999px\";\r\n            document.body.appendChild(textArea);\r\n            textArea.focus();\r\n            textArea.select();\r\n            return new Promise((res, rej) => {\r\n                // here the magic happens\r\n                document.execCommand('copy') ? res() : rej();\r\n                textArea.remove();\r\n                notificationConfig.success('Address copied. Make sure to cross-check');\r\n            });\r\n        }\r\n    }\r\n\r\n    getContractBal = async () => {\r\n        const rpcUrl = constantConfig[Number(this.state.networkIdOnContract)].rpcUrl;\r\n        const web3 = new Web3(new Web3.providers.HttpProvider(rpcUrl));\r\n        const address = this.state.spContractAddress;\r\n        const spBal = await web3.eth.getBalance(Web3.utils.toChecksumAddress(address), function (error, result) {\r\n            return result;\r\n        });\r\n        let token = _.find(this.state.coinList, { \"networkId\": Number(this.state.networkIdOnContract) });\r\n        const usdtFaceValue = this.state.tokenPrices[token.symbol];\r\n\r\n        if (spBal) {\r\n            let spContractBal = Web3.utils.fromWei((spBal).toString(), 'ether');\r\n            let spUsdtBal = Number(usdtFaceValue) * Number(spContractBal);\r\n            this.setState({\r\n                spContractBal: spContractBal,\r\n                spContractBalInUsd: Number(spUsdtBal).toFixed(2)\r\n            });\r\n        }\r\n    }\r\n\r\n    withdraw = async () => {\r\n        var BN = Web3.utils.BN;\r\n        var zeroDigit = new BN(0);\r\n        let spContract = new SPContract(this.state.web3, this.state.spContractAddress);\r\n        let assetAddress = this.state.tokenA;\r\n        let amount = Web3.utils.toWei((this.state.spContractBal).toString(), 'ether');\r\n        amount = new BN((amount).toString());\r\n\r\n        let validAddresses = [\r\n            \"0x0000000000000000000000000000000000000001\",\r\n            \"0x0000000000000000000000000000000000000002\",\r\n            \"0x0000000000000000000000000000000000000004\",\r\n        ];\r\n\r\n        if (validAddresses.includes(assetAddress)) {\r\n            if (amount.gt(zeroDigit)) {\r\n                spContract.withdraw(\r\n                    assetAddress,\r\n                    amount, // should pass in wei\r\n                    async (hash) => { },\r\n                    async (response) => {\r\n                        console.log({\r\n                            \"SP Contract response:\": response\r\n                        });\r\n\r\n                        if (response.code === 4001) {\r\n                            notificationConfig.info('Withdraw transaction cancelled.');\r\n                        }\r\n\r\n                        if (response.status === 1) {\r\n                            await this.getContractBal();\r\n                            notificationConfig.success('Withdraw applied successfully.');\r\n                        }\r\n                    }\r\n                );\r\n            } else {\r\n                notificationConfig.error(\"Contract does't have sufficient balance.\");\r\n            }\r\n        } else {\r\n            notificationConfig.error('Invalid asset address.');\r\n        }\r\n\r\n    }\r\n\r\n    checkAmountAOnUpdating(value, minValue) {\r\n        var clientSideErrorMessage;\r\n        if (Number(value) < minValue) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.amountAOnContract = `Minimum amount is $${minValue}`;\r\n            this.setState({ clientSideErrorMessage });\r\n            //notificationConfig.success(`Test ${testType} fetched`);\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                amountAOnContract: Number(value)\r\n            });\r\n\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.amountAOnContract = null;\r\n            this.setState({ clientSideErrorMessage });\r\n        }\r\n\r\n        this.clientSideError();\r\n    }\r\n\r\n    clientSideError() {\r\n        let check = !Object.values(this.state.clientSideErrorMessage).every(o => o === null);\r\n\r\n        console.log({\r\n            error: check\r\n        });\r\n\r\n        if (check) {\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                clientSideError: false\r\n            });\r\n        }\r\n        return check;\r\n    }\r\n\r\n    validateWithdrawOnContractFromCexSlider = async (onContract = false, maxWithdrawPercent) => {\r\n        if (onContract === true) {\r\n            if (this.state.withdrawPercentOnContract > Number(maxWithdrawPercent)) {\r\n                notificationConfig.error(`You must keep balance on your CEX account at least ${100 - maxWithdrawPercent}% of the total amount`);\r\n                this.setState({\r\n                    withdrawPercentOnContract: this.state.tempWithdrawPercentOnContract\r\n                });\r\n                return false;\r\n            }\r\n        } else {\r\n            if (this.state.withdrawPercent > Number(maxWithdrawPercent)) {\r\n                notificationConfig.error('You must keep balance on your CEX account at least 55% of the total amount');\r\n                this.setState({\r\n                    withdrawPercent: Number(maxWithdrawPercent)\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    reAuthrizeFeeAndGasLimit = async () => {\r\n        if (this.props.contractData._id) {\r\n            this.setState({\r\n                reAuthrizeing: true\r\n            });\r\n            let newLimit = this.state.gasAndFeeAmountOnContract;\r\n\r\n            let spContract = new SPContract(this.state.web3, this.state.spContractAddress);\r\n            spContract.setFeeAmountLimit(\r\n                newLimit,\r\n                async (hash) => { },\r\n                async (response) => {\r\n                    console.log({\r\n                        \"SP Contract response:\": response\r\n                    });\r\n\r\n                    if (response.status === 1) {\r\n                        this.setState({\r\n                            gasAndFeeAmountOnContract: newLimit\r\n                        });\r\n\r\n                        //spContract.getFeeAmountLimit();\r\n                        await AxiosRequest.request({\r\n                            data: {\r\n                                smartContractAddress: this.state.spContractAddress,\r\n                                gasAndFeeAmount: Web3.utils.toWei((newLimit).toString(), 'ether')\r\n                            },\r\n                            path: \"update\",\r\n                            method: \"POST\"\r\n                        });\r\n\r\n                        notificationConfig.success('NEW GAS AND FEES LIMIT SET');\r\n\r\n                        this.setState({\r\n                            reAuthrizeing: false\r\n                        });\r\n\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    changeSpreadOnUpdating(value, minSpreadRange, maxSpreadRange) {\r\n        var clientSideErrorMessage;\r\n        if (Number(value) > Number(maxSpreadRange) || Number(value) < Number(minSpreadRange)) {\r\n\r\n            this.setState({\r\n                clientSideError: true\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.spProfitPercentOnContract = `Please provide a valid input between ${minSpreadRange}-${maxSpreadRange} range`;\r\n            this.setState({ clientSideErrorMessage });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                spProfitPercentOnContract: Number(value)\r\n            });\r\n            clientSideErrorMessage = { ...this.state.clientSideErrorMessage }\r\n            clientSideErrorMessage.spProfitPercentOnContract = null;\r\n            this.setState({ clientSideErrorMessage });\r\n        }\r\n\r\n        this.clientSideError();\r\n    };\r\n\r\n    toggleStopRepeatsSection() {\r\n        this.setState(prevState => ({\r\n            toggleStopRepeatsSection: !prevState.toggleStopRepeatsSection\r\n        }));\r\n    }\r\n\r\n    inputMask(input, value, setState = true) {\r\n        let maskedValue = value.replace(/.(?=.{4,}$)/g, '*');\r\n        if (input === \"key\") {\r\n            if (setState) {\r\n                this.setState({\r\n                    cexApiKey: value,\r\n                    cexApiKeyMasked: maskedValue\r\n                });\r\n            } else {\r\n                return maskedValue\r\n            }\r\n        }\r\n        if (input === \"secret\") {\r\n            if (setState) {\r\n                this.setState({\r\n                    cexApiSecret: value,\r\n                    cexApiSecretMasked: maskedValue\r\n                });\r\n            } else {\r\n                return maskedValue\r\n            }\r\n        }\r\n    }\r\n\r\n    clearKeys(input) {\r\n        if (input === \"key\") {\r\n            this.setState({\r\n                cexApiKey: null,\r\n                cexApiKeyMasked: null,\r\n                cexApiKeyEditable: false\r\n            });\r\n            this.dispatchEventHandler(this.cexApiKey, null);\r\n        }\r\n        if (input === \"secret\") {\r\n            this.setState({\r\n                cexApiSecret: null,\r\n                cexApiSecretMasked: null,\r\n                cexApiSecretEditable: false\r\n            });\r\n            this.dispatchEventHandler(this.cexApiSecret, null);\r\n        }\r\n    }\r\n\r\n    dispatchEventHandler(inputRef, value, type = 'value', eventType = 'input') {\r\n        const valueSetter = Object.getOwnPropertyDescriptor(inputRef, type).set;\r\n        const prototype = Object.getPrototypeOf(inputRef);\r\n        const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, type).set;\r\n        if (valueSetter && valueSetter !== prototypeValueSetter) {\r\n            prototypeValueSetter.call(inputRef, value);\r\n        } else {\r\n            valueSetter.call(inputRef, value);\r\n        }\r\n\r\n        if (eventType === 'mousemove') {\r\n            inputRef.dispatchEvent(new MouseEvent(eventType, { bubbles: true }));\r\n        } else {\r\n            inputRef.dispatchEvent(new Event(eventType, { bubbles: true }));\r\n        }\r\n    }\r\n\r\n    updateContract = async () => {\r\n\r\n        if (this.amountAOnContract < Number(this.props.minAmountA)) {\r\n            this.checkAmountAOnUpdating(this.state.amountAOnContract, this.props.minAmountA);\r\n            return;\r\n        }\r\n\r\n\r\n        let withdrawAmountValidation = await this.validateWithdrawOnContractFromCexSlider(true, this.props.maxWithdrawPercent);\r\n        if (withdrawAmountValidation === false || withdrawAmountValidation === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.cexApiKey === null || this.state.cexApiKey.length === 0) {\r\n            notificationConfig.error(\"API key can't be blank.\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.cexApiSecret === null || this.state.cexApiSecret.length === 0) {\r\n            notificationConfig.error(\"API secret can't be blank.\");\r\n            return;\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 2) {\r\n            if (this.state.stopRepeatsAfterCallsOnContract === null || this.state.stopRepeatsAfterCallsOnContract.length === 0) {\r\n                notificationConfig.error(\"You must choose how many time to repeat on CEX\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 1) {\r\n            if (this.state.stopRepeatsOnDateOnContract === null || this.state.stopRepeatsOnDateOnContract.length === 0) {\r\n                notificationConfig.error(\"You must choose a date when to stop repeat on CEX\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (\r\n            this.state.withdrawPercentOnContract === null\r\n            ||\r\n            this.state.withdrawPercentOnContract < 0\r\n            ||\r\n            this.state.withdrawPercentOnContract > 100\r\n        ) {\r\n            notificationConfig.error(\"Invalid Withdraw Percent.\");\r\n            return;\r\n        }\r\n\r\n        if (this.clientSideError() === true) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            updating: true,\r\n            loadingIcon: true\r\n        });\r\n\r\n        let args = {};\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 1) {\r\n            console.log('Stop mode 1');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: this.state.stopRepeatsOnDateOnContract,\r\n                stopRepeatsAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 2) {\r\n            console.log('Stop mode 2');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: null,\r\n                stopRepeatsAfterCalls: this.state.stopRepeatsAfterCallsOnContract\r\n            });\r\n        }\r\n\r\n        if (Number(this.state.stopRepeatsModeOnContract) === 3) {\r\n            console.log('Stop mode 3');\r\n            Object.assign(args, {\r\n                stopRepeatsOnDate: null,\r\n                stopRepeatsAfterCalls: null\r\n            });\r\n        }\r\n\r\n        if (this.props.contractData.cexData.type === null && this._isCexUpdated === false) {\r\n            console.log({ _isCexUpdated: this._isCexUpdated });\r\n            Object.assign(args, {\r\n                cexType: this.state.selectedCex\r\n            });\r\n\r\n            // this ensures that - cex type can't be changed once set  \r\n            this._isCexUpdated = true;\r\n        }\r\n\r\n\r\n        let finalArgs = {\r\n            data: Object.assign(args, {\r\n                smartContractAddress: this.state.spContractAddress,\r\n                amountA: this.state.amountAOnContract,\r\n                spProfitPercent: this.state.spProfitPercentOnContract,\r\n                accumulateFundsLimit: this.state.accumulateFundsLimitOnContract,\r\n                stopRepeatsMode: this.state.stopRepeatsModeOnContract,\r\n                cexApiKey: this.state.cexApiKey,\r\n                cexApiSecret: this.state.cexApiSecret,\r\n                swapSpeedMode: this.state.swapSpeedModeOnContract === null ? 'UPFRONT' : this.state.swapSpeedModeOnContract,\r\n                withdrawPercent: this.state.withdrawPercentOnContract,\r\n                withdrawReinitiate: true\r\n            }),\r\n            path: 'update',\r\n            method: 'POST'\r\n        };\r\n\r\n        console.log(finalArgs);\r\n        try {\r\n            let response = await AxiosRequest.request(finalArgs);\r\n            if (response.status === 200) {\r\n                setTimeout(async () => {\r\n                    console.log('Updated');\r\n                    if (response.data.messageType === 'success') {\r\n                        notificationConfig.success(response.data.message);\r\n                    }\r\n                    if (response.data.messageType === 'info') {\r\n                        notificationConfig.info(response.data.message);\r\n                    }\r\n\r\n                    this.setState({\r\n                        updated: true,\r\n                        updateButtonText: \"CONTRACT UPDATED SUCCESSFULLY\",\r\n                        updating: false,\r\n                        loadingIcon: false,\r\n                        tempWithdrawPercentOnContract: this.state.withdrawPercentOnContract,\r\n                        tempAmountAOnContract: this.state.amountAOnContract\r\n                    });\r\n                }, 3000);\r\n\r\n                setTimeout(async () => {\r\n                    this.setState({\r\n                        updated: false,\r\n                        updateButtonText: 'SAVE TO UPDATE CONTRACT'\r\n                    });\r\n\r\n                    this.getAllTests();\r\n\r\n                }, 5000);\r\n            }\r\n\r\n            if (response.status === 422) {\r\n                if (response.data.messageType === 'error') {\r\n                    notificationConfig.error(response.data.message);\r\n                    this.setState({\r\n                        updated: false,\r\n                        updateButtonText: 'SAVE TO UPDATE CONTRACT',\r\n                        updating: false,\r\n                        loadingIcon: false\r\n                    });\r\n                }\r\n            }\r\n        } catch (err) {\r\n            notificationConfig.error('Something went wrong!');\r\n        }\r\n\r\n    }\r\n\r\n    getAllTests = async () => {\r\n        // fetch all tests and set to tests var\r\n        try {\r\n            let response = await AxiosRequest.request({\r\n                data: {\r\n                    owner: (web3Config.getAddress()).toLowerCase(),\r\n                    networkId: Number(web3Config.getNetworkId()),\r\n                    smartContractAddress: this.state.spContractAddress,\r\n                    type: 'testsCheck',\r\n                    cexType: this.props.contractData.cexData.type !== null ? (this.props.contractData.cexData.type).toUpperCase() : \"BINANCE\" // to insure cex saved in db for SP\r\n                },\r\n                path: \"test-suite\",\r\n                method: \"POST\"\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                this.setState({\r\n                    tests: response.data.response,\r\n                    testPassed: response.data.result\r\n                });\r\n            }\r\n\r\n            if (response.status === 500) {\r\n                notificationConfig.error('Sever error');\r\n            }\r\n        } catch (e) {\r\n            console.log('Error from getAllTests: ', e.constructor.name, e.message)\r\n        }\r\n    }\r\n\r\n    testSuite = async (testType = '', repeat = false) => {\r\n        try {\r\n\r\n            const cexType = this.props.contractData.cexData.type !== null ? (this.props.contractData.cexData.type).toUpperCase() : \"BINANCE\";\r\n            let filter = {\r\n                owner: (web3Config.getAddress()).toLowerCase(),\r\n                networkId: Number(web3Config.getNetworkId()),\r\n                smartContractAddress: this.state.spContractAddress,\r\n                type: testType,\r\n                cexType: cexType\r\n            };\r\n\r\n            if (testType === \"accountCheck\") {\r\n                if (cexType === 'BINANCE') {\r\n                    filter['accountType'] = 'SPOT_USDTM';\r\n                }\r\n\r\n                if (cexType === 'MEXC') {\r\n                    filter['accountType'] = 'BOTH';\r\n                }\r\n            }\r\n\r\n            if (testType === \"balanceCheck\") {\r\n                filter['accountType'] = 'SPOT';\r\n            }\r\n\r\n            if (testType === \"transferCheck\") {\r\n                filter['transferType'] = 'TWO_WAY';\r\n            }\r\n\r\n            if (testType === \"testsCheck\") {\r\n                filter['repeatTests'] = repeat;\r\n            }\r\n\r\n            let response = await AxiosRequest.request({\r\n                data: filter,\r\n                path: \"test-suite\",\r\n                method: \"POST\"\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                var property = { ...this.state.tests.key }\r\n                property = true;\r\n                this.setState({ property });\r\n                //notificationConfig.success(`Test ${testType} fetched`);\r\n                return response.data.result;\r\n            }\r\n\r\n            if (response.status === 500) {\r\n                notificationConfig.error('Sever error');\r\n            }\r\n\r\n            return false;\r\n\r\n        } catch (e) {\r\n            console.log('Error from testSuite: ', e.constructor.name, e.message)\r\n        }\r\n    }\r\n\r\n    repeatTests = async (testType = '') => {\r\n        try {\r\n\r\n            if (this.state.testing === false) {\r\n                this.setState({\r\n                    testing: true\r\n                });\r\n\r\n                await this.testSuite(\"testsCheck\", true);\r\n\r\n                notificationConfig.info('Testing swap proider configuratons');\r\n                let failedTests = [], passedTests = [];\r\n                await this.getAllTests().then(async () => {\r\n                    // get all failed tests\r\n                    if (this.state.tests !== null) {\r\n                        for (let [key, value] of Object.entries(this.state.tests)) {\r\n                            var property;\r\n                            if (key === '_id' || key === 'id') {\r\n                                continue;\r\n                            } else {\r\n                                if (value === false) {\r\n                                    property = { ...this.state.tests.key };\r\n                                    property = false;\r\n                                    this.setState({ property });\r\n                                    failedTests.push(key);\r\n                                } else {\r\n                                    property = { ...this.state.tests.key };\r\n                                    property = true;\r\n                                    this.setState({ property });\r\n                                    passedTests.push(key);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }).catch(e => {\r\n                    console.log('Error from repeatTests: ', e.constructor.name, e.message);\r\n                    notificationConfig.error(`Something went wrong while testing swap provider.`);\r\n                });\r\n\r\n                if (failedTests.length > 0) {\r\n                    for (let test = 0; test < failedTests.length; test++) {\r\n                        await this.testSuite(failedTests[test]);\r\n                    }\r\n                }\r\n\r\n                await this.getAllTests();\r\n\r\n                this.setState({\r\n                    testing: false\r\n                });\r\n\r\n            } else {\r\n                notificationConfig.info('Testing already in progress.');\r\n            }\r\n\r\n\r\n\r\n        } catch (e) {\r\n            console.log('Error from repeatTests: ', e.constructor.name, e.message)\r\n        }\r\n    }\r\n\r\n\r\n    // render component\r\n    render() {\r\n        const smallError = {\r\n            fontSize: \"13px\",\r\n            lineHeight: \"20px\"\r\n        };\r\n\r\n        return (\r\n            <div className=\"contract-data-section\">\r\n                {(this.props.contractData !== null) &&\r\n                    <div id={this.props.contractData._id}>\r\n                        <div className=\"spContrlMBX spContrlMBX-n relative mt-30px-n\">\r\n                            <div className=\"d-flex step-title-trans-n items-center-n \">\r\n                                <span className=\"step-num-n\">{this.props.index}</span>\r\n                                <div className='spCountrlTitle01 spCountrlTitle01-n '>\r\n                                    SEND {this.getTokenData(this.state.tokenA, \"symbol\")}\r\n                                    {' <> '}\r\n                                    RECEIVE {this.getTokenData(this.state.tokenB, \"symbol\")}\r\n                                    <div className='spContrlInfotxt pb-0'>\r\n                                        Created at {DateFormat(this.state.createdAt, \"mmmm dS, yyyy, h:MM:ssTT\")}\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"toggle-ic-n\" onClick={this.toggleStep.bind(this)}>\r\n                                    <i className={\"fas fa-caret-\" + ((this.state.stepOpen ? 'down' : 'up'))}></i>\r\n                                </span>\r\n                                <div className={\"step-\" + (this.state.stepOpen ? 'open' : 'close')} style={{ width: '100%' }}>\r\n                                    <div className=\"box-border-primary-n box-border-n text-center-n\">\r\n                                        <div className=\"spContrlInfotxt02\">Open new API and whitelist the smart contract address on your account on you CEX <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"left\" data-pt-title=\"Before you set an API, make sure first that your account has active trade Futures (some CEX asking users to sign on risk disclosure before it become active)\r\n                                    <br/><br/>\r\n                                    Then go to the right API section to open new API and approve the follow restrictions:\r\n                                    <br/><br/>\r\n                                    1. Enable Reading<br/>\r\n                                    2. Enable Spot & Margin Trading<br/>\r\n                                    3. Enable Futures<br/>\r\n                                    4. Enable Withdrawals<br/>\r\n                                    <br/>\r\n                                    * in order to enable withdrawals some CEX will ask you to restrict access to trusted IP, in that case use the IP address 44.235.252.39 \" aria-hidden=\"true\"></i></i></div>\r\n                                        <div className=\"spContrlInfotxt02\">Restrict access to trusted IP: <span className=\"text-primary\"> 44.235.252.39</span></div>\r\n                                    </div>\r\n                                    <div className='spContrlInfotxt02 mb-20px-n'>YOUR SMART CONTRACT ADDRESS\r\n                                        <i className=\"help-circle\">\r\n                                            <i\r\n                                                className=\"fas fa-question-circle protip\"\r\n                                                data-pt-position=\"top\"\r\n                                                data-pt-title=\"To secure the API completely you need to whitelist your smart contract address under the Address Management which is usually placed on the Withdraw section.\r\n                                        <br/><br/>\r\n                                        Your smart contract address is your withdrawal Address.\r\n                                        <br/><br/>\r\n                                        Authorize your withdrawal Address to withdrawal only the token that you are selling. for example if you selling BNB, choose the BNB as a coin the and the BSC as the Network\"\r\n                                                aria-hidden=\"true\">\r\n                                            </i>\r\n                                        </i>\r\n                                    </div>\r\n                                    <div className='spContrlInputBX' style={{ width: '100%' }}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder={\"Your contract address for \" + this.getTokenData(this.state.tokenA, \"symbol\")}\r\n                                            value={this.state.spContractAddress}\r\n                                            readOnly={true}\r\n                                        />\r\n                                        <a\r\n                                            href=\"javascript:void(0)\"\r\n                                            onClick={() => this.copyText(this.state.spContractAddress)}\r\n                                            className=\"LicCopyBTN v2\"\r\n                                        >\r\n                                            <i className=\"fas fa-copy\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='spContrlInfotxt mb-20px-n'>\r\n                                        Balance: {this.state.spContractBal} {this.getTokenData(this.state.tokenA, \"symbol\")} | ${this.state.spContractBalInUsd} USD\r\n                                        <button className='withdrawButton' onClick={this.withdraw.bind(this)}>\r\n                                            <span>Withdraw all funds back to your Wallet</span>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">YOUR TOTAL AMOUNT YOU AUTHORIZED THE API TO USE\r\n                                                <i className=\"help-circle\">\r\n                                                    <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"The total amount includes the amount that will be send to your smart contract, the stable coin amount that will be left on your CEX account and the funds that will be use to place short order when needed.\" aria-hidden=\"true\">\r\n                                                    </i>\r\n                                                </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01 withLable01\" style={{ marginTop: \"12px\" }}>\r\n                                                <span>$</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"50000\"\r\n                                                    defaultValue={this.state.amountAOnContract}\r\n                                                    onChange={event => this.checkAmountAOnUpdating(event.target.value, this.props.minAmountA)}\r\n                                                    ref={(input) => this.amountAOnContract = input}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-edit\"></i>\r\n                                                </a>\r\n                                            </div>\r\n                                            <br></br>\r\n                                            {this.state.clientSideError === true && (this.state.clientSideErrorMessage.amountAOnContract !== null) &&\r\n                                                <div className=\"error-Msg\" style={smallError}>\r\n                                                    <label>{this.state.clientSideErrorMessage.amountAOnContract}</label>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='spContrlInfotxt02'>CHANGE THE SWAP SPEED\r\n                                        <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"right\" data-pt-title=\"The Smart swap using a matcher to match between users to users and if there are no users available, between users to swap providers (SP). the matcher taking under consideration, which SP can complete the swap fully, faster and cheaper. \r\n                            <br/><br/>\r\n                            SP can hold stable coin (USDT) on their controlled CEX account, which will be trigger by API to buy in real time tokens and send over to the SP's smarts contact which will be  use as a counterparty to other users. same exchange processing withdraw after few long minutes and also each blockchain network as different proccing speed, those facts can put some SP with holding upfront tokens on their smart contract with advantage over other SP that requires to buy those tokens and then send them over.\r\n                            <br/><br/>\r\n                            As a SP you can choose if you want to send tokens to your smart contract in real time, or if you want to act faster by depositing tokens upfront to to your smart contract.\" aria-hidden=\"true\"></i></i>\r\n                                    </div>\r\n                                    <div className='spscFix01 d-flex'>\r\n                                        <div className=\"LiProfSbox01 pr-20px\">\r\n                                            <div className='LipRadioFix01'>\r\n                                                <div className=\"md-radio md-radio-inline \">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        id={\"radio_05_\" + this.props.index}\r\n                                                        name={\"radio_05_\" + this.props.index}\r\n                                                        //defaultChecked\r\n                                                        onChange={event => this.setState({ swapSpeedModeOnContract: 'UPFRONT' })}\r\n                                                        checked={this.state.swapSpeedModeOnContract === 'UPFRONT'}\r\n                                                    />\r\n                                                    <label htmlFor={\"radio_05_\" + this.props.index}></label>\r\n                                                </div>\r\n                                                <div className=\"LiProFlexBX01 padFixer01\">\r\n                                                    <div className=\"LipRTitle01\">Deposit token A to the smart contract upfront<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"right\" data-pt-title=\"This option required from you hold upfront 45% of the sell token in the smart contract, and another 55% as stable coin (USDT) on your centralized account (that 55% will be used to buy the sell tokens in real time and placing a short order against the receiving token to secure it's face value from volatility).\r\n                                <br/><br/>\r\n                                Once you will deploy your smart contract, you will need to deposit directly to your smart contract address the 45% the funds as tokens that you want to sell. \r\n                                <br/><br/>\r\n                                For example if you want to and you are looking to gain profit of 0.05% as a spread. in exchange for ETH and you are looking to gain profit of 0.05% as a spread, you will need to deposit $45,000 of BNB to your smart contract, so users that buying those BNB will get those tokens instantly without waiting for your centralized account to send it over to the smart contract (which can takes few long minutes). Wen swaps take place your CEX account will be trigger to buy in real time new BNB at the best price in the exchange and then send them to feed back your smart contract, while on the same time the smartswap will send to your CEX account $45,225 of ETH (which is the same amount plus the spread that you agree to), then the API will open a short position to make sure those ETH will be sold back to stablecoins without any lost to volatility.\" aria-hidden=\"true\"></i></i></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 pl-20px\">\r\n                                            <div className='LipRadioFix01' >\r\n                                                <div className=\"md-radio md-radio-inline \">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        id={\"radio_06_\" + this.props.index}\r\n                                                        name={\"radio_06_\" + this.props.index}\r\n                                                        //defaultChecked\r\n                                                        onChange={event => this.setState({ swapSpeedModeOnContract: 'REALTIME' })}\r\n                                                        checked={this.state.swapSpeedModeOnContract === 'REALTIME'}\r\n                                                        disabled={true}\r\n                                                    />\r\n                                                    <label htmlFor={\"radio_06_\" + this.props.index}></label>\r\n                                                </div>\r\n                                                <div className=\"LiProFlexBX01 padFixer01\">\r\n                                                    <div className=\"LipRTitle01\">\r\n                                                        Deposit token A to the smart contract in real time\r\n                                                        <i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Selecting this option allows zero up front tokens and 100% of your funds may wait as stablecoins (USDT) on your centralized exchange account. Once your account is triggered to provide liquidity to SmartSwap, the controlled account uses the authorized stablecoin account to buy the tokens and send them to your smart contract address.\r\n                                <br/><br/>\r\n                                N.B. The process to send tokens from centralized  exchange accounts to your smart contract may take few minutes depending on the exchange and the speed of network. Therefore, the SmartSwap may choose other SPs over you which have tokens available on their smart contract already and can execute the swap faster for the end user.\" aria-hidden=\"true\"></i></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* withdraw % slider */}\r\n                                        <div className='spContrlSBX withdrawSlider'>\r\n                                            <div className=\"dragorInput v2\">\r\n                                                <InputRange\r\n                                                    step={1}\r\n                                                    maxValue={100}\r\n                                                    minValue={0}\r\n                                                    value={this.state.withdrawPercentOnContract}\r\n                                                    formatLabel={value => `${value}%`}\r\n                                                    onChange={value => this.setState({ withdrawPercentOnContract: value })}\r\n                                                    onChangeComplete={() => this.validateWithdrawOnContractFromCexSlider(true, this.props.maxWithdrawPercent)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <p className=\"withdrawOnContractAlert\">\r\n                                            You must keep balance on your CEX account at least 55% of the total amount\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                    <div className='spContrlInfotxt02'>AUTHORIZE NEW GAS AND FEES LIMIT\r\n                                        <i className=\"help-circle\">\r\n                                            <i\r\n                                                className=\"fas fa-question-circle protip\"\r\n                                                data-pt-position=\"top\"\r\n                                                data-pt-title=\"Authorize more funds to gas and fees to keep your SP contract active.\"\r\n                                                aria-hidden=\"true\"\r\n                                            ></i>\r\n                                        </i>\r\n                                    </div>\r\n                                    <div className='spContrlSBX'>\r\n\r\n                                        <div className='spContrlSSBX01'>\r\n                                            <div className=\"dragorInput v2\">\r\n                                                <InputRange\r\n                                                    minValue={this.getTokenData(this.state.tokenA, \"minGasAndFeeAmount\")}\r\n                                                    maxValue={this.getTokenData(this.state.tokenA, \"maxGasAndFeeAmount\")}\r\n                                                    step={this.getTokenData(this.state.tokenA, \"minStepForGasAndFeeAmount\")}\r\n                                                    value={this.state.gasAndFeeAmountOnContract}\r\n                                                    formatLabel={value => this.getTokenData(this.state.tokenA, \"symbol\") + ` ${value}`}\r\n                                                    onChange={value => this.setState({ gasAndFeeAmountOnContract: value })} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='spContrlSSBX02'>\r\n                                            <button\r\n                                                className='spContrlBTN01'\r\n                                                onClick={this.reAuthrizeFeeAndGasLimit.bind(this)}\r\n                                                disabled={this.state.reAuthrizeing}\r\n                                            >\r\n                                                AUTHORIZE NEW LIMIT\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">CHANGE THE MINIMUM SPREAD YOU WANT TO GAIN ON EACH SWAP\r\n                                                <i className=\"help-circle\">\r\n                                                    <i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Set a profit limit that triggers your funds for swapping. Take under consideration all costs such as exchange fees. \r\n                            <br/><br/>\r\n                            For example, you can choose that you want your funds to swap only if it's gain 0.5% profits. When you set the profit limit, take under consideration all the costs that you may pay to your CEX for such transaction short position, blockchain cost, (which by themselves can be range from 0.1 to 0.3% - depend on the CEX and network).\" aria-hidden=\"true\">\r\n                                                    </i>\r\n                                                </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01 withLable01 input-with-ic-n\" style={{ marginTop: \"12px\" }}>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"0.5\"\r\n                                                    defaultValue={this.state.spProfitPercentOnContract}\r\n                                                    onChange={event => this.changeSpreadOnUpdating(event.target.value, 0, 1)}\r\n                                                    ref={(input) => this.spProfitPercentOnContract = input}\r\n                                                />\r\n                                                <span>%</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br></br>\r\n                                        {this.state.clientSideError === true && (this.state.clientSideErrorMessage.spProfitPercentOnContract !== null) &&\r\n                                            <div className=\"error-Msg\" style={smallError}>\r\n                                                <label>{this.state.clientSideErrorMessage.spProfitPercentOnContract}</label>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n\r\n\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">YOUR MINIMUM AMOUNT TO SWAP WITH\r\n                                                <i className=\"help-circle\">\r\n                                                    <i\r\n                                                        className=\"fas fa-question-circle protip\"\r\n                                                        data-pt-position=\"top\"\r\n                                                        data-pt-title=\"Take under consideration, performing a swap costs gas and fees which are reimbursed via SMART\"\r\n                                                        aria-hidden=\"true\">\r\n                                                    </i>\r\n                                                </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01 withLable01 input-with-ic-n\" style={{ marginTop: \"12px\" }}>\r\n                                                <span>$</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"100\"\r\n                                                    defaultValue={this.state.accumulateFundsLimitOnContract}\r\n                                                    onChange={event => this.setState({ accumulateFundsLimitOnContract: event.target.value })}\r\n                                                    ref={(input) => this.accumulateFundsLimitOnContract = input}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-edit\"></i>\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">STOP REPEAT ON CEX\r\n                                                <i className=\"help-circle\">\r\n                                                    <i\r\n                                                        className=\"fas fa-question-circle protip\"\r\n                                                        data-pt-position=\"top\"\r\n                                                        data-pt-title=\"This option denotes how many transactions you approve as a Swap Provider. Once the limit is reached, the API stops performing any repeats. Once the repeat stops, there is no way to change the process besides deploying a new Swap Provider contract with new rules.\"\r\n                                                        aria-hidden=\"true\">\r\n                                                    </i>\r\n                                                </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01 input-with-ic-n\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"\"\r\n                                                    readOnly={true}\r\n                                                    defaultValue={\r\n                                                        this.state.stopRepeatsModeOnContract === 3 ? 'Never stop'\r\n                                                            : this.state.stopRepeatsModeOnContract === 1 ? \"On date: \" + DateFormat(this.state.stopRepeatsOnDateOnContract, \"mmmm dS, yyyy, h:MM:ssTT\")\r\n                                                                : 'After ' + this.state.stopRepeatsAfterCallsOnContract + ' repeats'}\r\n                                                //onChange={event => this.setState({ cexApiKey: event.target.value })}\r\n                                                //ref={(input) => this.cexApiKey = input}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-edit\" onClick={() => this.toggleStopRepeatsSection()}></i>\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                        {(this.state.toggleStopRepeatsSection) &&\r\n                                            <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                                <div className='LipRadioFix01'>\r\n                                                    <div className=\"md-radio md-radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            id={\"radio_07_\" + this.props.index}\r\n                                                            name={\"radio_07_\" + this.props.index}\r\n                                                            onChange={event => this.setState({ stopRepeatsModeOnContract: 1 })}\r\n                                                            checked={this.state.stopRepeatsModeOnContract === 1}\r\n                                                            ref={(input) => this.stopRepeatsMode4 = input}\r\n                                                        />\r\n                                                        <label htmlFor={\"radio_07_\" + this.props.index}></label>\r\n                                                    </div>\r\n                                                    <div className='LiProFlexBX01 padFixer01'>\r\n                                                        <div className=\"LiproInput01\">\r\n                                                            <DatePicker\r\n                                                                selected={this.state.stopRepeatsOnDateOnContract}\r\n                                                                onChange={(date) => this.setState({ stopRepeatsOnDateOnContract: date })}\r\n                                                                peekNextMonth\r\n                                                                showMonthDropdown\r\n                                                                showYearDropdown\r\n                                                                dropdownMode=\"select\"\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                            />\r\n                                                            <i className=\"fas fa-calendar-alt FlyICO\"></i>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='LipRadioFix01' >\r\n                                                    <div className=\"md-radio md-radio-inline \">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            id={\"radio_08_\" + this.props.index}\r\n                                                            name={\"radio_08_\" + this.props.index}\r\n                                                            onChange={event => this.setState({ stopRepeatsModeOnContract: 2 })}\r\n                                                            checked={this.state.stopRepeatsModeOnContract === 2}\r\n                                                            ref={(input) => this.stopRepeatsMode5 = input}\r\n                                                        />\r\n                                                        <label htmlFor={\"radio_08_\" + this.props.index}></label>\r\n                                                    </div>\r\n                                                    <div className=\"LiProFlexBX01 padFixer01\">\r\n                                                        <div className=\"LiproInput01 withLable02\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                value={this.state.stopRepeatsAfterCallsOnContract}\r\n                                                                onChange={event => this.setState({ stopRepeatsAfterCallsOnContract: event.target.value })}\r\n                                                            />\r\n                                                            <span>Repeats</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='LipRadioFix01' >\r\n                                                    <div className=\"md-radio md-radio-inline \">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            id={\"radio_09_\" + this.props.index}\r\n                                                            name={\"radio_09_\" + this.props.index}\r\n                                                            onChange={event => this.setState({ stopRepeatsModeOnContract: 3 })}\r\n                                                            checked={this.state.stopRepeatsModeOnContract === 3}\r\n                                                            ref={(input) => this.stopRepeatsMode6 = input}\r\n                                                        />\r\n                                                        <label htmlFor={\"radio_09_\" + this.props.index}></label>\r\n                                                    </div>\r\n                                                    <div className=\"LiProFlexBX01 padFixer01\">\r\n                                                        <div className=\"LipRTitle01\">Never stop<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Run SP repeats non-stop as long as there is funds available in your CEX account.\" aria-hidden=\"true\"></i></i></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"spacerLine\"></div>\r\n                                    <div className=\"spContrlInfotxt02 mb-30px-n pt-20px\">\r\n                                        After creating an API on your CEX update here the API and Secret key\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n'>\r\n                                        <div className=\"w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">CEX\r\n                                                <i className=\"help-circle\">\r\n                                                    <i\r\n                                                        className=\"fas fa-question-circle protip\"\r\n                                                        data-pt-position=\"top\"\r\n                                                        data-pt-title=\"Choose CEX Of your choice from the below listed CEX. Note that once cex set it can't be changed in the future. Choose carefully\"\r\n                                                        aria-hidden=\"true\"\r\n                                                    ></i>\r\n                                                </i>\r\n                                            </div>\r\n                                            <div className=\"LiproDropdown\">\r\n                                                <button className='LiproDDbtn01' onClick={() => this.toggleCexList()}>\r\n                                                    <div className=\"ddIconBX\">\r\n                                                        <span>\r\n                                                            <img src={this.state.cexList[this.state.selectedCex]['icon']} alt=\"\" />\r\n                                                        </span>\r\n                                                        {this.state.cexList[this.state.selectedCex]['symbol']}\r\n                                                    </div>\r\n                                                    <i className=\"fas fa-caret-down\"></i>\r\n                                                </button>\r\n                                                <div className=\"ddContainer\">\r\n                                                    <Collapse isOpen={(this.state.cexListOpen) && (this.props.contractData.cexData.type === null)} className={\"collapse-css-transition\"} >\r\n                                                        {\r\n                                                            Object.keys(this.state.cexList).map((cex) => (\r\n                                                                <button\r\n                                                                    //disabled={this.props.contractData.cexData.type !== null}\r\n                                                                    key={this.state.cexList[cex]['symbol']} className='LiproDDbtn01'\r\n                                                                    onClick={() => {\r\n                                                                        this.toggleCexList(this.state.cexList[cex]['symbol']);\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <div className=\"ddIconBX\">\r\n                                                                        <span>\r\n                                                                            <img src={this.state.cexList[cex]['icon']} alt=\"\" />\r\n                                                                        </span> {this.state.cexList[cex]['symbol']}\r\n                                                                    </div>\r\n                                                                </button>\r\n                                                            ))\r\n                                                        }\r\n                                                    </Collapse>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">API Key<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Add your specific API key to the CEX of your choice\" aria-hidden=\"true\"></i></i></div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    defaultValue={this.state.cexApiKeyMasked !== null ? this.state.cexApiKeyMasked : 'Your Cex API Key'}\r\n                                                    onChange={event => this.setState({ cexApiKey: event.target.value })}\r\n                                                    ref={(input) => this.cexApiKey = input}\r\n                                                    onClick={() => this.clearKeys('key')}\r\n                                                //readOnly={this.state.cexApiKeyEditable}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-times\" onClick={() => this.clearKeys('key')}></i>\r\n                                                </a>\r\n                                            </div>\r\n                                            <br></br>\r\n                                            {this.state.errorMessage !== null && this.state.errorMessage.includes(\"cexApiKey\") &&\r\n                                                <div className=\"error-Msg\" style={smallError}>\r\n                                                    <label>{this.state.errorMessage}</label>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01 smFixer07 d-block-n '>\r\n                                        <div className=\"LiProfSbox01 w-100-n mb-20px-n\">\r\n                                            <div className=\"spContrlInfotxt02\">Secret Key<i className=\"help-circle\"><i className=\"fas fa-question-circle protip\" data-pt-position=\"top\" data-pt-title=\"Add your specific Secret Key to the CEX of your choice\" aria-hidden=\"true\"></i></i></div>\r\n                                        </div>\r\n                                        <div className=\"LiProfSbox02 w-100-n pl-0px-n mb-10px-n\">\r\n                                            <div className=\"LiproInput01\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    defaultValue={this.state.cexApiSecretMasked !== null ? this.state.cexApiSecretMasked : 'Your Cex API Secret'}\r\n                                                    onChange={event => this.setState({ cexApiSecret: event.target.value })}\r\n                                                    ref={(input) => this.cexApiSecret = input}\r\n                                                    onClick={() => this.clearKeys('secret')}\r\n                                                //readOnly={this.state.cexApiSecretEditable}\r\n                                                />\r\n                                                <a href=\"javascript:void(0)\" onClick={() => this.clearKeys('secret')} className=\"absolute-ic-n\">\r\n                                                    <i className=\"fas fa-times\"></i>\r\n                                                </a>\r\n                                            </div>\r\n                                            <br></br>\r\n                                            {this.state.errorMessage !== null && this.state.errorMessage.includes(\"cexApiSecret\") &&\r\n                                                <div className=\"error-Msg\" style={smallError}>\r\n                                                    <label>{this.state.errorMessage}</label>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/** update button */}\r\n                                    {(() => {\r\n                                        if (\r\n                                            (this.state.web3 !== null || constantConfig[Number(this.state.networkIdOnContract)] === this.state.web3.getNetworkId())\r\n                                            && this.props.contractData._id !== null) {\r\n                                            return (\r\n                                                <div className=\"LiProfSbox03\">\r\n                                                    <div className={this.state.updated ? 'LiProformBTNbar mx-100 mb-30px-n btn-dark' : 'LiProformBTNbar mx-100 mb-30px-n'}>\r\n\r\n                                                        <button onClick={() => this.updateContract()} disabled={this.state.updating || this.state.updated}>\r\n                                                            {(this.state.updated) &&\r\n                                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                                                            }\r\n                                                            &nbsp;\r\n                                                            {this.state.updateButtonText}\r\n                                                            {this.state.loadingIcon === true &&\r\n                                                                <LoopCircleLoading\r\n                                                                    height={'20px'}\r\n                                                                    width={'20px'}\r\n                                                                    color={'#ffffff'}\r\n                                                                />\r\n                                                            }\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                    )()}\r\n\r\n                                    { /** test cases */}\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.contractOwnerCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check contract deployed for wallet address {this.state.spAccount !== null ? this.state.spAccount : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.contractGasAndFeeCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check contract gas & fee set at limit {this.state.gasAndFeeAmount !== null ? this.state.gasAndFeeAmount : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.spProfitPercentCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check contract spread at {this.state.spProfitPercentOnContract !== null ? this.state.spProfitPercentOnContract + '%' : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.apiKeysCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check CEX API key & API Secret set\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.apiValidateCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check CEX Valid API key and secret\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.accountCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check enabled trading on CEX\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className='LiProFlexBX01'>\r\n                                <div className='spContrlInfotxt02 test-suite'>\r\n                                    <i className={this.state.tests !== null && this.state.tests.balanceCheck == true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                    &nbsp;Check account balance on CEX for allowed limit\r\n                                </div>\r\n                            </div> */}\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.transferCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Test moving USDT funds between spot and future account on CEX\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.spAddressWhiteListCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check whitelisted smart contract address on CEX for withdraw\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.ipWhiteListCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check IP whitelisted on CEX for withdraw\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.withdrawEnabledCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Check enabled withdraw on CEX\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.tests !== null && this.state.tests.withdrawCheck === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;Test moving fund between spot and swap provider contract address\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='spacerLine'></div>\r\n                                    <div className='LiProFlexBX01'>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <i className={this.state.testPassed === true ? 'test-true fa fa-check' : 'test-false fa fa-times'} aria-hidden=\"true\"></i>\r\n                                            &nbsp;{this.state.testPassed === true ? 'Swap provider has been successfully activated.' : 'You must pass all the tests to become an active swap provider.'}\r\n                                        </div>\r\n                                        <div className='spContrlInfotxt02 test-suite'>\r\n                                            <button className='repeatTestsButton' onClick={this.repeatTests.bind(this)}>\r\n                                                <span>Repeat the SP checking</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/** test case end */}\r\n                                    { /* up */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","D:\\react\\SmartSwap_frontend\\src\\helper\\spContract.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen06.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen07.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen08.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen11.js",["1332","1333","1334","1335","1336","1337","1338","1339","1340"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport styled from 'styled-components';\r\nimport logoImg01 from \"../assets/images/smart-bridge.png\";\r\nimport logoImg02 from \"../assets/images/derex.png\";\r\nimport logoImg03 from \"../assets/images/pdo.png\";\r\n\r\nconst $ = window.$;\r\nexport default class Screen5 extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <main id=\"main\" className=\"smartSwap\">\r\n\r\n          <div className=\"main\">\r\n            <MContainer>\r\n              <CMbx>\r\n\t\t\t\t\r\n\t\t\t\t<SuccessBox>\r\n\t\t\t\t\t<i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t<SuccessTitle><span>Successfully transferred ownership and now the master validator</span></SuccessTitle>\r\n\t\t\t\t</SuccessBox>\r\n                \r\n\t\t\t\t<DetailsRow>\r\n                    <DetailsBox>\r\n                        <DetailsLogo><img src={logoImg01}></img></DetailsLogo>\r\n                        <p>Create more bridges on <br></br>\r\n                        any EVM chain</p>\r\n                        <DetailsLink>\r\n                            <a href=\"#\">Create a Bridge</a> | <a href=\"#\">Learn more <i className=\"fas fa-external-link-alt\"></i></a>\r\n                        </DetailsLink>\r\n                    </DetailsBox>\r\n                    <DetailsBox>\r\n                        <DetailsLogo><img src={logoImg02}></img></DetailsLogo>\r\n                        <p>Claim a $10,000 credit for launching an initial bond offering on DEREX exchange</p>\r\n                        <DetailsLink>\r\n                            <a href=\"#\">Claim Now</a> | <a href=\"#\">Learn more <i className=\"fas fa-external-link-alt\"></i></a>\r\n                        </DetailsLink>\r\n                    </DetailsBox>\r\n                    <DetailsBox>\r\n                        <DetailsLogo><img src={logoImg03}></img></DetailsLogo>\r\n                        <p>Claim a $10,000 credit for launching a post-DEX offering on PDO Finance</p>\r\n                        <DetailsLink>\r\n                            <a href=\"#\">Claim Now</a> | <a href=\"#\">Learn more <i className=\"fas fa-external-link-alt\"></i></a>\r\n                        </DetailsLink>\r\n                    </DetailsBox>\r\n                </DetailsRow>\r\n              </CMbx>\r\n            </MContainer>\r\n\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\r\n`;\r\n\r\nconst MContainer = styled(FlexDiv)` \r\n\twidth: calc(100% - 40px) ; max-width:1360px; margin:0 auto;\r\n`;\r\nconst CMbx = styled(FlexDiv)`\r\n\twidth:100%;  margin-top:90px;\r\n\t@media (max-width: 991px){\r\n\t\tmargin-top: 60px;\r\n\t}\r\n`;\r\n\r\nconst SuccessBox = styled.div `\r\n\ttext-align: center;\r\n\twidth:100%;\r\n\tmargin-bottom: 56px;\r\n\ti {\r\n\t\tfont-size: 56px;\r\n\t\twidth: 114px;\r\n\t\theight: 114px;\r\n\t\tline-height: 114px;\r\n\t\tborder-radius: 114px;\r\n\t\t&.fa-check {\r\n\t\t\tborder: 3px solid #91dc27;\r\n\t\t\tcolor: #91dc27;\r\n\t\t}\r\n\t}\r\n\t`\r\nconst SuccessTitle = styled.div `\r\n\tfont-size: 24px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\tmargin-top: 30px;\r\n\tspan {\r\n\t\tcolor: #91dc27;\r\n\t\t\r\n\t}\r\n`\r\nconst Ulist = styled.ul `\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tdisplay: table;\r\n\twidth: 900px;\r\n\tborder-top: 2px solid #3b3e4b;\r\n`\r\nconst List = styled.li `\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tlist-style: none;\r\n\tdisplay: flex;\r\n\tborder-bottom: 1px solid #3b3e4b;\r\n\t&:hover {\r\n\t\tbackground: #191a22;\r\n\t}\r\n\t&:first-child {\r\n\t\tborder-bottom: 2px solid #3b3e4b;\r\n\t\t\r\n\t}\r\n\t`\r\nconst ListTxt = styled.div `\r\n\tpadding: 17px 22px;\r\n\tmargin: 0;\r\n\tlist-style: none;\r\n\twidth: 50%;\r\n\t&:last-child {\r\n\t\tborder-left: 1px solid #3b3e4b;\r\n\t}\r\n\tspan {\r\n\t\t&:last-child {\r\n\t\t\t&:before {\r\n\t\t\t\tcontent: ' ';\r\n\t\t\t\theight: 25px;\r\n\t\t\t\tborder-left: 1px solid #3b3e4b;\r\n\t\t\t\tmargin: 0 8px 0 11px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n`\r\nconst ListLink = styled.a `\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tlist-style: none;\r\n\tcolor: #2d52f3;\r\n`\r\nconst ListFooter = styled.li `\r\n\tlist-style: none;\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding: 17px 0;\r\n`\r\nconst LinkGreen = styled.a `\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tlist-style: none;\r\n\tcolor: #91dc27;\r\n\tfont-weight: bold;\r\n`\r\nconst LinkFt = styled.a `\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tlist-style: none;\r\n\tcolor: #aaaaaa;\r\n\ti {\r\n\t\tmargin-left: 5px;\r\n\t}\r\n`\r\nconst DetailsRow = styled.div `\r\n    display: flex;\r\n    width: 1365px;\r\n    border-top: 1px solid #303030;\r\n    padding-top: 40px;\r\n\t@media screen and (max-width: 991px) {\r\n\t\tflex-flow: wrap;\r\n\t}\r\n`\r\nconst DetailsBox = styled.div `\r\n    width: 33.33%; padding-right: 36px; padding-bottom: 40px;\r\n    p {\r\n        font-size: 18px; font-weight: bold;\r\n        line-height: 30px; margin: 20px 0;\r\n    }\r\n\t@media screen and (max-width: 991px) {\r\n\t\twidth: 50%;\r\n\t}\r\n\t@media screen and (max-width: 640px) {\r\n\t\twidth: 100%;\r\n\t\ttext-align: center; align-items: center;  padding-right: 0; padding-bottom: 60px;\r\n\t\tp {margin: 10px 0 20px}\r\n\t}\r\n`\r\nconst DetailsLogo = styled.div `\r\n    min-height: 60px;\r\n    display: flex; align-items: center; \r\n\t@media screen and (max-width: 640px) {\r\n\t\tdisplay: inline-flex;\r\n\t}\r\n`\r\nconst DetailsLink = styled.div `\r\n    display: flex; align-items: center;  color: #303030; white-space: nowrap;\r\n    a { color: #91dc27; margin-right: 14px; font-weight: bold; font-size: 18px;\r\n        i { font-size: 12px; display: inline-block; vertical-align: top;}\r\n        &:last-child { margin-left: 14px; }\r\n        &:hover {color: #fff;}\r\n    }\r\n\t@media screen and (max-width: 640px) {\r\n\t\tdisplay: inline-flex; padding-left: 14px;\r\n\t}\r\n`","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen10.js",["1341"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport notificationConfig from \"../config/notificationConfig\";\r\nimport styled from 'styled-components';\r\nimport _ from \"lodash\";\r\nimport Lineimg from \"../assets/freelisting-images/line01.png\";\r\nimport BridgeApiHelper from \"../helper/bridgeApiHelper\";\r\nimport { ethers } from \"ethers\";\r\nimport errors from \"../helper/errorConstantsHelper\";\r\nconst $ = window.$;\r\nconst wrapTokenSymbolPrefix = process.env.REACT_APP_WRAP_TOKEN_SYMBOL_PREFIX;\r\nconst wrapTokenSymbolPrefixLength = Number((wrapTokenSymbolPrefix).length);\r\n\r\nexport default class Screen10 extends PureComponent {\r\n  pendingDeploymentRequestCount = 0;\r\n  pendingSignMessageRequest = false;  \r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      wrappedTokens:[],\r\n      selectedWrappedToken: [],\r\n      ownershipTransferRequested: false,\r\n      btnClicked: false,\r\n      ownershipRequests: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getWrappedTokens(null, this.props.accountAddress, false);\r\n    this.getOwnershipRequests(this.props.accountAddress);\r\n  }\r\n\r\n  selectToken = (id) => {    \r\n    if(this.state.selectedWrappedToken.includes(id)){\r\n      this.setState({selectedWrappedToken: this.state.selectedWrappedToken.filter(function(_id) { \r\n        return id !== _id\r\n      })});\r\n    } else {\r\n      this.setState(prevState => ({\r\n        selectedWrappedToken: [...prevState.selectedWrappedToken, id]\r\n      }));\r\n    }\r\n  }\r\n\r\n  async getWrappedTokens(projectId = null, creatorAddress = null, all = false) {\r\n    try {\r\n      const {\r\n        response,\r\n        error,\r\n        code\r\n      } = await BridgeApiHelper.getWrappedTokens(projectId, creatorAddress, all);\r\n\r\n      if (code === 200) {\r\n        this.setState({\r\n          wrappedTokens: response\r\n        });\r\n      } else {\r\n        console.error(error)\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  async getOwnershipRequests() {\r\n    try {\r\n      const {\r\n        response,\r\n        error,\r\n        code\r\n      } = await BridgeApiHelper.getOwnershipRequests(this.props.accountAddress);\r\n\r\n      if (code === 200) {\r\n        this.setState({\r\n          ownershipRequests: response\r\n        });\r\n      } else {\r\n        console.error(error)\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error)\r\n    }    \r\n  }\r\n\r\n  async makeTransferWrapTokenOwnershipRequest(){\r\n    if(this.pendingSignMessageRequest === false){\r\n      this.setState({\r\n        btnClicked: true\r\n      });\r\n      if(this.state.selectedWrappedToken.length > 0){\r\n        const signedMessage = await this.signData();\r\n        console.log({\r\n          signedMessage: signedMessage\r\n        });\r\n        if(signedMessage !== false){\r\n          for await (const selectedWrappedTokenId of this.state.selectedWrappedToken) {\r\n            const wrappedToken = _.find(this.state.wrappedTokens, {_id: selectedWrappedTokenId});\r\n            if(wrappedToken !== null){\r\n              const networkConfig = _.find(this.props.networks, { chainId: wrappedToken.toChainId });\r\n              await BridgeApiHelper.makeTransferWrapTokenOwnershipRequest(\r\n                wrappedToken.tokenSymbol,\r\n                networkConfig.chain,\r\n                wrappedToken.toChainId,\r\n                this.props.accountAddress,\r\n                signedMessage\r\n              );\r\n            }\r\n          }\r\n          this.setState({\r\n            ownershipTransferRequested: true,\r\n            btnClicked: false,\r\n            selectedWrappedToken: []\r\n          });\r\n          await this.getOwnershipRequests(this.props.accountAddress);\r\n          this.pendingDeploymentRequestCount = 0;\r\n        } else {\r\n          this.setState({\r\n            btnClicked: false\r\n          });\r\n        }\r\n      } else {\r\n        notificationConfig.error(errors.selectToken);\r\n        this.setState({\r\n          btnClicked: false\r\n        });\r\n      }\r\n    } else {\r\n      notificationConfig.info(errors.metamask.signMessageRequestPending);\r\n    }\r\n  }\r\n\r\n  async signData() {\r\n    try {\r\n      this.pendingSignMessageRequest = true;\r\n      const signer = this.props.web3Instance.getSigner();\r\n\r\n      console.log({\r\n        signer: signer\r\n      });\r\n  \r\n      const message = process.env.REACT_APP_SIGN_MESSAGE;\r\n\r\n      console.log({\r\n        message: message\r\n      })\r\n\r\n      const signature = await signer.signMessage(message);\r\n\r\n      console.log()\r\n\r\n      const address = ethers.utils.verifyMessage(message, signature);\r\n  \r\n      if(address === this.props.accountAddress){\r\n        console.log('AUTHORIZED USER');\r\n        this.pendingSignMessageRequest = false;\r\n        return signature;\r\n      } else {\r\n        console.log('UNAUTHORIZED USER'); \r\n        this.pendingSignMessageRequest = false;\r\n        return false;\r\n      }\r\n    } catch(error){\r\n      if(error.code === 4001){\r\n        notificationConfig.error(error.message);\r\n      } else {\r\n        notificationConfig.error(errors.somethingWentWrong);\r\n      }\r\n      console.error({\r\n        signDataError: error.message\r\n      });\r\n      this.pendingSignMessageRequest = false;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onBackButtonClicked = () => {\r\n    if(this.pendingSignMessageRequest === false){\r\n      this.props.onBackButtonClicked(9);\r\n    } else {\r\n      notificationConfig.info(errors.metamask.signMessageRequestPendingOnBackAction);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    this.pendingDeploymentRequestCount = 0;\r\n    let usersWrappedTokens = [];\r\n    this.state.wrappedTokens.forEach(wrappedToken => {\r\n      //const originalToken = _.find(this.props.tokens, {symbol: wrappedToken.tokenSymbol.slice(2)});\r\n      const networkConfig = _.find(this.props.networks, { chainId: wrappedToken.toChainId });\r\n      if (networkConfig !== undefined) {\r\n        wrappedToken['chain'] = networkConfig['chain'];\r\n        usersWrappedTokens.push(wrappedToken);\r\n      }\r\n    });\r\n\r\n    const wrapTokenGroupBySymbol = _.mapValues(_.groupBy(usersWrappedTokens, 'tokenSymbol'));\r\n\r\n\r\n    return (\r\n      <>\r\n        <main id=\"main\" className=\"smartSwap\">\r\n          <div className=\"main\">\r\n            <MContainer>\r\n              <CMbx>\r\n                <ProgressBar> <span style={{ width: '100%' }}></span> </ProgressBar>\r\n                {\r\n                  usersWrappedTokens.length > 0 && (\r\n                    <ProGTitle01>Transfer deployer ownership on existing bridges</ProGTitle01>\r\n                  )\r\n                }\r\n\r\n                {\r\n                  usersWrappedTokens.length === 0 && (\r\n                    <ProGTitle01>You've not wrapped any token yet.</ProGTitle01>\r\n                  )\r\n                }                                    \r\n\r\n                {\r\n                  Object.keys(wrapTokenGroupBySymbol).map(function(wrapTokenListKey, i){\r\n                    return <ProICOMbx01 key={wrapTokenListKey + '_' + i} className='v2'>\r\n                      <ProICOMbx02 key={wrapTokenListKey + '_' + i}>\r\n                      {\r\n                        Object.keys(wrapTokenGroupBySymbol[wrapTokenListKey]).map(function(wrappedTokenKey, i){\r\n                          \r\n                          let wrappedToken = wrapTokenGroupBySymbol[wrapTokenListKey][wrappedTokenKey];\r\n                          \r\n                          let ownershipRequestExist = _.find(this.state.ownershipRequests, {\r\n                            token: (wrappedToken.tokenSymbol).toUpperCase(),\r\n                            chainId: Number(wrappedToken.toChainId)\r\n                          });\r\n\r\n                          ownershipRequestExist = ownershipRequestExist !== undefined ? true : false;\r\n\r\n                          const isSelected = this.state.selectedWrappedToken.includes(wrappedToken._id) ? 'selected' : 'pending';\r\n                          const isDisabled = ownershipRequestExist ? 'disabled' : '';\r\n\r\n                          if(ownershipRequestExist === false){\r\n                            this.pendingDeploymentRequestCount = this.pendingDeploymentRequestCount + 1;\r\n                          }\r\n\r\n                          return (\r\n                            <ProICOSbx01 \r\n                              onClick={(e) => ownershipRequestExist ? e.preventDefault : this.selectToken(wrappedToken._id)}\r\n                              key={wrappedToken._id}\r\n                              className={`${isSelected} ${isDisabled}`}\r\n                              disabled={ownershipRequestExist}\r\n                            >\r\n                              {ownershipRequestExist ? false : true && <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i>}\r\n                              <ProICOSbx02>\r\n                                <img \r\n                                  src={'/images/free-listing/tokens/' + (wrappedToken.tokenSymbol.substring(wrapTokenSymbolPrefixLength) + '.png').toLowerCase()}\r\n                                  onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                                />\r\n                                {(wrappedToken.tokenSymbol.substring(-wrapTokenSymbolPrefixLength, wrapTokenSymbolPrefixLength)).toLowerCase()}\r\n                                {(wrappedToken.tokenSymbol.substring(wrapTokenSymbolPrefixLength)).toUpperCase()}                                \r\n                              </ProICOSbx02>\r\n                              <ProICOSbx02>{wrappedToken.chain}</ProICOSbx02>\r\n                            </ProICOSbx01>\r\n                          )\r\n                        }.bind(this))\r\n                      }\r\n                      </ProICOMbx02>\r\n                    </ProICOMbx01>\r\n                  }.bind(this))\r\n                }\r\n\r\n                <BtnMbox>\r\n                  <button onClick={() => this.onBackButtonClicked()} className=\"Btn02\"> <i className=\"fas fa-chevron-left\"></i> Back</button>\r\n                  {this.pendingDeploymentRequestCount > 0 && \r\n                    <button onClick={() => this.makeTransferWrapTokenOwnershipRequest()} className=\"Btn01\">TRANSFER DEPLOYER OWNERSHIP</button>                \r\n                  }\r\n\r\n                  {this.pendingDeploymentRequestCount === 0 &&\r\n                    <button onClick={() => this.props.onOwnershipTransfered(11)} className=\"Btn01\">FINISH</button>                \r\n                  }\r\n\r\n                  <SmallInfo>\r\n                    <p>Total bridges to transfer: <span>{this.state.selectedWrappedToken.length}</span></p>\r\n                  </SmallInfo>\r\n\r\n                </BtnMbox>\r\n              </CMbx>\r\n            </MContainer>\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\r\n`;\r\n\r\nconst MContainer = styled(FlexDiv)` \r\n  width: calc(100% - 40px); max-width:1360px; margin:0 auto;\r\n`\r\nconst CMbx = styled(FlexDiv)`\r\n  width:100%;  margin-top:90px; margin-bottom: 40px;\r\n  @media (max-width: 991px){\r\n\t\tmargin-top: 60px;\r\n\t}\r\n`\r\nconst ProgressBar = styled.div`\r\nwidth:100%; height:4px; background-color: #303030; display:flex ; margin-bottom:114px;\r\n    span{ display:inline-block; height:4px; -webkit-box-shadow: 0 0 15px 5px rgba(145,220,39,0.5); box-shadow: 0 0 15px 5px rgba(145,220,39,0.5);  background-color:#91dc27; border-radius:0 2px 2px 0;}\r\n    @media screen and (max-width: 640px) {\r\n      margin-bottom: 40px;\r\n    }\r\n`\r\n\r\nconst ProGTitle01 = styled(FlexDiv)` \r\n    font-size:24px; color:#ffffff; font-weight:700; justify-content:flex-start; width:100%; margin-bottom:50px; \r\n    i{ display:flex; font-style:normal; width:41px; height:41px; border:2px solid #fff; align-items:center; justify-content:center; margin-right:28px;  } \r\n`\r\nconst ProInputbx = styled(FlexDiv)`\r\n    width:100%;\r\n    input{ width:100%; display:block; border:2px solid #000; border-radius:0; background-color:#21232b; padding:20px; font-size:16px; color:#ffffff; font-weight:400; }\r\n`\r\nconst ProICOMbx01 = styled.div` \r\n  width:100%; \r\n  &.v2{ border-top: 2px solid #303030; padding-top:36px;}\r\n`\r\nconst ProICOMbx02 = styled.div`\r\n  display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); column-gap: 36px; row-gap: 30px; margin:0 0 30px; \r\n  input[type=checkbox] {opacity: 0; position: absolute;}\r\n`\r\nconst ProICOSbx01 = styled.label`\r\n  background-color:#21232b; height:60px; border:0px; outline:none; padding:0 17px; position: relative; display: flex; align-items: center; justify-content: flex-start; margin: 0;\r\n  &.disabled{filter: grayscale(100%); }\r\n  &.pending{  \r\n    i { opacity: 1; color: #ccc; }        \r\n  }\r\n  :hover{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  }\r\n    &.selected{  -webkit-box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); box-shadow: 0 0 10px 1px rgba(145,220,39,0.5);  \r\n      i { opacity: 1; color: #91dc27; }\r\n  }\r\n  input[type=checkbox] + &:after {content: \"\"; width: 20px; height: 20px; background: #464646; border-radius: 2px; cursor: pointer; transition: background .3s; border-radius: 25px; position: absolute; left: 10px; }\r\n  input[type=checkbox] + & {position: relative;}\r\n  input[type=checkbox] + &:before {content: \"\"; transform: rotate(-45deg); left: 15px; border: 3px solid #21232b; border-top-style: none; border-right-style: none; width: 10px; height: 7px; position: absolute; z-index: 1; opacity: 0; top: calc(50% - 4px);}\r\n  input[type=checkbox]:checked + & {box-shadow: 0 0 10px 1px rgba(145,220,39,0.5); }\r\n  input[type=checkbox]:checked + &:after {background: #92db28;}\r\n  input[type=checkbox]:checked + &:before {opacity: 1;}\r\n  i {\r\n    color: #fff; font-size: 18px; margin-left: 18px; opacity: 0;\r\n  }\r\n` \r\nconst ProICOSbx02 = styled(FlexDiv)`\r\n  width:50%; padding:0 18px; justify-content:flex-start; font-size:14px; font-weight:400; color:#fff; flex-flow: row;\r\n  \r\n  img{ margin-right:15px; width: 30px;}\r\n  &:nth-of-type(1){ background-image:url(${Lineimg}); background-repeat:no-repeat; background-position:right 50%;} \r\n  @media screen and (max-width: 1200px) {\r\n    img {margin:0 10px 0 0;}\r\n  }\r\n`\r\nconst BtnMbox = styled(FlexDiv)`\r\n  border-top:1px solid #303030;  width:100%; margin-top:30px; justify-content: space-between; padding-top:48px;\r\n  .Btn01{ color:#fff; background-color:#0d0e13; width:100%; max-width:430px; text-align:center; padding:18px 15px; border:2px solid #91dc27; font-size:18px; font-weight:700; margin-bottom:20px; -webkit-box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); box-shadow: 0 0 12px 5px rgba(145,220,39,0.5); :hover{ background-color:#91dc27;}}\r\n  .Btn02{ background-color:transparent; color:#a6a2b0; border:0; font-size:14px; font-weight:400; :hover{ color:#91dc27;}}\r\n  @media screen and (max-width: 640px) {\r\n    .Btn01{max-width: 65%}\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    flex-flow: column-reverse; padding-bottom: 30px; padding-top: 30px;\r\n    .Btn01{max-width: 100%; margin-bottom: 25px;}\r\n  }\r\n`\r\n\r\nconst SmallInfo = styled(FlexDiv)`\r\n  font-size:12px; color:#a6a2b0; justify-content: flex-end; width:100%; margin-bottom:10px;\r\n  p{ margin:0; padding:0; text-align:left; width:100%; max-width:430px;}\r\n  span{ color:#fff; padding:0 0 0 3px;}\r\n  @media screen and (max-width: 640px) {\r\n    .Btn01{max-width: 65%}\r\n    p {max-width: 65%;}\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    p {max-width: 100%; text-align: center; margin-bottom: 10px;}\r\n  }\r\n`","D:\\react\\SmartSwap_frontend\\src\\pages\\fl-screen09.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\welcome.js",["1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352"],"import React, { PureComponent, lazy, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport HeaderWC from \"../components/Header03\";\r\n\r\nimport Carousel from \"react-multi-carousel\";\r\nimport AnimatedNumber from \"react-animated-numbers\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\n\r\nimport BannerBg from \"../assets/welcome/home-bg.png\";\r\nimport img01 from \"../assets/welcome/img01.png\";\r\nimport img02 from \"../assets/welcome/img02.png\";\r\nimport img03 from \"../assets/welcome/img03.png\";\r\nimport img04 from \"../assets/welcome/img04.png\";\r\nimport icon1 from \"../assets/welcome/icon1.png\";\r\nimport icon2 from \"../assets/welcome/icon2.png\";\r\nimport icon3 from \"../assets/welcome/icon3.png\";\r\nimport listico1 from \"../assets/welcome/listico1.png\";\r\nimport listico2 from \"../assets/welcome/listico2.png\";\r\nimport listico3 from \"../assets/welcome/listico3.png\";\r\nimport listico4 from \"../assets/welcome/listico4.png\";\r\nimport listico5 from \"../assets/welcome/listico5.png\";\r\nimport listico6 from \"../assets/welcome/listico6.png\";\r\nimport listico7 from \"../assets/welcome/listico7.png\";\r\nimport listico8 from \"../assets/welcome/listico8.png\";\r\n\r\nimport SBLogo01 from \"../assets/images/sb-ICO-01.png\";\r\nimport SBLogo02 from \"../assets/images/sb-ICO-02.png\";\r\nimport SBLogo03 from \"../assets/images/sb-ICO-03.png\";\r\nimport SBLogo04 from \"../assets/images/sb-ICO-04.png\";\r\nimport SBLogo05 from \"../assets/images/sb-ICO-05.png\";\r\nimport SBLogo06 from \"../assets/images/sb-ICO-06.png\";\r\nimport SBLogo07 from \"../assets/images/sb-ICO-07.png\";\r\nimport SBLogo08 from \"../assets/images/sb-ICO-08.png\";\r\nimport SBLogo09 from \"../assets/images/sb-ICO-09.png\";\r\nimport SBLogo010 from \"../assets/images/sb-ICO-010.png\";\r\nimport SBLogo011 from \"../assets/images/sb-ICO-011.png\";\r\n\r\nconst responsive = {\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1600 },\r\n      items: 10,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n    },\r\n    desktop2: {\r\n      breakpoint: { max: 1600, min: 1250 },\r\n      items: 9,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n    },\r\n    desktop3: {\r\n      breakpoint: { max: 1250, min: 1024 },\r\n      items: 8,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 4,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 2,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n    },\r\n  };\r\n\r\nconst $ = window.$;\r\nexport default class Welcome extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n\r\n    };\r\n\r\n    this.state = {\r\n      web3: null,\r\n      web3Check: false,\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <WelcomeMain id=\"main\" className=\"welcome-page\">\r\n            <HeaderWC />\r\n\r\n            <BannerSec>\r\n                <Container className=\"justify-center\">\r\n                    <BannerHD className=\"wow fadeInUp\" data-wow-delay=\"0.2s\"><span>one click</span> decentralized layer zero solutions</BannerHD>\r\n                    <p className=\"wow fadeInUp\" data-wow-delay=\"0.3s\">Cross-chain layer 0 based for Native Tokens | Bridge Tokens | W3B | dFX | dSTOCKS <br></br>\r\n    Slippage and slippage free via P2C | P2P | CeDeFi</p>\r\n                    <BtnPrimary className=\"wow fadeInUp btnLg\" data-wow-delay=\"0.4s\">FREE LISTING</BtnPrimary>\r\n                </Container>\r\n            </BannerSec>\r\n\r\n            <SecImgTxt>\r\n                <Container>\r\n                    <SecImg className=\"wow fadeInLeft\" data-wow-delay=\"0.5s\"><img src={img01} alt=\"\"></img></SecImg>\r\n                    <SecTxt className=\"wow fadeInRight\" data-wow-delay=\"0.5s\">\r\n                        <h3>1. SmartExtension</h3>\r\n                        <p>SmartExtension is a layer on top of wallets which is designed to turn the wallet into an interoperable payment solution while simultaneously showing users the best price across all of DeFi. </p>\r\n                        <BtnPrimary>INSTALL EXTENSION</BtnPrimary>\r\n                    </SecTxt>\r\n                </Container>\r\n            </SecImgTxt>\r\n            <SecImgTxt>\r\n                <Container>\r\n                    <SecTxt className=\"wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                        <h3>2. SmartPayment </h3>\r\n                        <p>SmartPayment is a layer on top of wallets which is designed to turn the wallet into an interoperable payment solution. The SmartPayment solution helps allow projects to host their contract on their preferred blockchain without worrying about losing out on opportunities from more popular chains. </p>\r\n                        <BtnPrimary>INTEGRATE SMARTPAYMENT</BtnPrimary>\r\n                    </SecTxt>\r\n                    <SecImg className=\"wow fadeInRight\" data-wow-delay=\"0.2s\"><img src={img02} alt=\"\"></img>\r\n                        \r\n                    </SecImg>\r\n                </Container>\r\n            </SecImgTxt>\r\n            <SecImgTxt>\r\n                <Container>\r\n                    <SecImg className=\"wow fadeInLeft\" data-wow-delay=\"0.2s\"><img src={img03} alt=\"\"></img>\r\n                        <TotalNumb>\r\n                            <strong>Total tokens: <i>45</i></strong>\r\n                            <strong>Total bridges: <i>112</i></strong>\r\n                        </TotalNumb> \r\n                    </SecImg>\r\n                    <SecTxt className=\"wow fadeInRight\" data-wow-delay=\"0.2s\">\r\n                        <h3>3. SmartBridge</h3>\r\n                        <p>Quickly create a cross-chain bridge token to any EVM blockchain. The SmartBridge option is available to projects and their users. </p>\r\n                        <BtnPrimary>CREATE A BRIDGE</BtnPrimary>\r\n                    </SecTxt>\r\n                </Container>\r\n            </SecImgTxt>\r\n            <SecImgTxt>\r\n                <Container>\r\n                    <SecTxt className=\"wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                        <h3>4. SmartSwap</h3>\r\n                        <p>Smartswap’s contract utilizes a zero volatility patent pending method which prevents slippage and wholly reimburses users fees and gas costs. Unlike a Decentralized Exchange (DEX) or Automated Market Maker (AMM), SmartSwap asks users the USD face value of the tokens they want to swap, rather than the token amount they want to receive. </p>\r\n                        <BtnPrimary>LAUNCH APP</BtnPrimary>\r\n                    </SecTxt>\r\n                    <SecImg className=\"wow fadeInRight\" data-wow-delay=\"0.2s\"><img src={img04} alt=\"\"></img></SecImg>\r\n                </Container>\r\n            </SecImgTxt>\r\n\r\n            <DetailsRow>\r\n                <Container> \r\n                    <DetailsBox className=\"wow fadeInUp\" data-wow-delay=\"0.1s\">\r\n                        <DetailsLogo><img src={icon1}></img></DetailsLogo>\r\n                        <h4>Free Listing</h4>\r\n                        <p>Quickly create and list a cross-chain bridge token to any EVM blockchain. </p>\r\n                        <BtnPrimary>FREE LISTING</BtnPrimary>\r\n                    </DetailsBox>\r\n                    <DetailsBox className=\"wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        <DetailsLogo><img src={icon2}></img></DetailsLogo>\r\n                        <h4>Free licensing </h4>\r\n                        <p>Any can create a free license of SmartSwap. Also, swap fees can be added on top of SmartSwap’s fee as long as users are reimbursed for the fees.</p>\r\n                        <BtnPrimary>FREE LICENSING</BtnPrimary>\r\n                    </DetailsBox>\r\n                    <DetailsBox className=\"wow fadeInUp\" data-wow-delay=\"0.3s\">\r\n                        <DetailsLogo><img src={icon3}></img></DetailsLogo>\r\n                        <h4>Become A Swap Provider</h4>\r\n                        <p>Earn fees on trades while helping users expedite swaps by connecting a Centralized Exchange account using Swap Provider API</p>\r\n                        <BtnPrimary>BECOME A SWAP PROVIDER</BtnPrimary>\r\n                    </DetailsBox>\r\n                </Container>\r\n            </DetailsRow>\r\n            \r\n            <NumberSec>\r\n                <Container>\r\n                    <div className=\"number-column wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                        <h3>Total Value Locked</h3>\r\n                        <NumberGreen>\r\n                            <sup>$</sup>0\r\n                        </NumberGreen>\r\n                        <p>All funds are held 100% by users. No funds are exposed on the SmartSwap system.</p>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"number-column wow fadeInRight\" data-wow-delay=\"0.2s\">\r\n                        <h3>Unlimited validators</h3>\r\n                        <NumberGreen>\r\n                            100<sup>%</sup>\r\n                        </NumberGreen>\r\n                        <p>All token bridges are designed for project control, allowing them master validator control and access.</p>\r\n                    </div>\r\n                </Container>\r\n            </NumberSec>\r\n\r\n            <WelcomeList>\r\n                <Container className=\"mob-p0\">\r\n                    <WelcomeListItems className=\"wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        <span><img src={listico1}></img></span>\r\n                        <div className=\"itemRight\">\r\n                            <strong>100% <br></br> multichain </strong>\r\n                            <p>100% true one-click swap between all blockchains </p>\r\n                        </div>\r\n                    </WelcomeListItems>\r\n                    <WelcomeListItems className=\"wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        <span><img src={listico2}></img></span>\r\n                        <div className=\"itemRight\">\r\n                            <strong>100% <br></br> value match </strong>\r\n                            <p>Select the slippage free option to receive new crypto equal to the exact value you sent<i className=\"help-circle\">\r\n                                  <i\r\n                                    className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top\"\r\n                                    data-pt-title=\"The slippage option finds the best price in the market with a slippage limit option under your trade options\"\r\n                                    aria-hidden=\"true\"\r\n                                  ></i>\r\n                                </i></p>\r\n                        </div>\r\n                    </WelcomeListItems>\r\n                    <WelcomeListItems className=\"wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        <span><img src={listico3}></img></span>\r\n                        <div className=\"itemRight\">\r\n                            <strong>100% <br></br> safe </strong>\r\n                            <p>No hot wallet, no deposits, no accounts, no custodial wallets\r\n                            <i className=\"help-circle\">\r\n                                <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"All transactions take place on-chain via the blockchains swapping through trustless smart contracts\"\r\n                                aria-hidden=\"true\"\r\n                                ></i>\r\n                            </i>\r\n                            </p>\r\n                        </div>\r\n                    </WelcomeListItems>\r\n                    <WelcomeListItems className=\"wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        <span><img src={listico4}></img></span>\r\n                        <div className=\"itemRight\">\r\n                            <strong>100% <br></br> reimbursement </strong>\r\n                            <p>Fees and gas reimbursed fully with SMART\r\n                                <i className=\"help-circle\">\r\n                                    <i\r\n                                    className=\"fas fa-question-circle protip\"\r\n                                    data-pt-position=\"top-right-corner\"\r\n                                    data-pt-title=\"#reimburTip\"\r\n                                    data-pt-width=\"402\"\r\n                                    aria-hidden=\"true\"\r\n                                    ></i>\r\n                                </i>\r\n                            </p>\r\n                            <div id=\"reimburTip\" style={{ display: \"none\" }}>\r\n                              <p style={{ marginTop: '0px' }}>SmartSwap users have the option to receive 100% reimbursement for their gas and swap fees. Users are able to claim reimbursements via the reimbursement staking contract. To release reimbursements users must stake the 1:1 equal amount of SMART for one year, but will be able to release partial amounts of the reimbursement if withdrawn at any time before the 1 year period . The pending balance accumulates and the user is able to claim the rest.</p>\r\n                              <p style={{ marginBottom: '0px' }}>Example </p>\r\n                              <p style={{ marginTop: '0px', marginBottom: '0px' }}>If over the year a user spent over $1000 or more on gas, at any time he can be reimbursed for such cost even if the SMART token value is higher due to appreciation. </p>\r\n                            </div>\r\n                        </div>\r\n                    </WelcomeListItems>\r\n                    <WelcomeListItems className=\"wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        <span><img src={listico5}></img></span>\r\n                        <div className=\"itemRight\">\r\n                            <strong>100% <br></br> free license </strong>\r\n                            <p>Build your own license at no cost or become an affiliate</p>\r\n                        </div>\r\n                    </WelcomeListItems>\r\n                    <WelcomeListItems className=\"wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        <span><img src={listico6}></img></span>\r\n                        <div className=\"itemRight\">\r\n                            <strong>100% <br></br> anonymous </strong>\r\n                            <p>Complete privacy guard with no KYC / AML needed</p>\r\n                        </div>\r\n                    </WelcomeListItems>\r\n                    <WelcomeListItems className=\"wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        <span><img src={listico7}></img></span>\r\n                        <div className=\"itemRight\">\r\n                            <strong>100% <br></br> scalable </strong>\r\n                            <p>No LP, no pools, true decentralized CEX and OTC liquidity bridge </p>\r\n                        </div>\r\n                    </WelcomeListItems>\r\n                    <WelcomeListItems className=\"wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                        <span><img src={listico8}></img></span>\r\n                        <div className=\"itemRight\">\r\n                            <strong>100% <br></br> decentralized </strong>\r\n                            <p>DAO approach with a closed system lacking any single point of failure privilege</p>\r\n                        </div>\r\n                    </WelcomeListItems>\r\n                </Container>\r\n            </WelcomeList>\r\n\r\n            <Tokenomics>\r\n                <Container>\r\n                    <h2>SMART Tokenomics in Action</h2>\r\n                    <p>Since there are no pools or LP,  the fee use as a buy pressure to buyback the SMART token </p>\r\n                    <TokenRow>\r\n                        <TokenBox><span>Total Amount Swapped</span>\r\n                            <b>$\r\n                            <AnimatedNumber\r\n                            includeComma\r\n                            animateToNumber=\"1000000000\"\r\n                            fontStyle={{ fontSize: 25 }}\r\n                            configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                            ></AnimatedNumber>\r\n                            </b>\r\n                        </TokenBox>\r\n                        <TokenBox><span>Fees Generated</span>\r\n                            <b>$<AnimatedNumber\r\n                            includeComma\r\n                            animateToNumber=\"3000000\"\r\n                            fontStyle={{ fontSize: 25 }}\r\n                            configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                            ></AnimatedNumber></b>\r\n                        </TokenBox>\r\n                        <TokenBox><span>Smart Bought and Burned</span>\r\n                        <b><AnimatedNumber\r\n                            includeComma\r\n                            animateToNumber=\"450000343\"\r\n                            fontStyle={{ fontSize: 25 }}\r\n                            configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                            ></AnimatedNumber></b>\r\n                        </TokenBox>\r\n                        <TokenBox><span>Total Fees Reimbursed</span>\r\n                            <b>$<AnimatedNumber\r\n                            includeComma\r\n                            animateToNumber=\"10000000\"\r\n                            fontStyle={{ fontSize: 25 }}\r\n                            configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                            ></AnimatedNumber></b>\r\n                        </TokenBox>\r\n                        <TokenBox><span>Total reimbursement staking</span>\r\n                            <b><AnimatedNumber\r\n                            includeComma\r\n                            animateToNumber=\"100000000\"\r\n                            fontStyle={{ fontSize: 25 }}\r\n                            configs={[{ \"mass\": 1, \"tension\": 140, \"friction\": 126 }, { \"mass\": 1, \"tension\": 130, \"friction\": 114 }, { \"mass\": 1, \"tension\": 150, \"friction\": 112 }, { \"mass\": 1, \"tension\": 130, \"friction\": 120 }]}\r\n                            ></AnimatedNumber></b>\r\n                        </TokenBox>\r\n                    </TokenRow>\r\n\r\n                </Container>\r\n            </Tokenomics>\r\n            <Container className=\"no-flex\">\r\n            <div className=\"ssTitle01 wow fadeInRight\" data-wow-delay=\"0.2s\">Supporting blockchains</div>\r\n                <Carousel className=\"wow fadeInRight caro-1\" data-wow-delay=\"0.3s\"\r\n                    swipeable={false}\r\n                    draggable={false}\r\n                    showDots={false}\r\n                    responsive={responsive}\r\n                    ssr={true} // means to render carousel on server-side.\r\n                    infinite={true}\r\n                    autoPlay={false}\r\n                    autoPlaySpeed={5000}\r\n                    keyBoardControl={true}\r\n                    customTransition=\"all 1sec\"\r\n                    transitionDuration={900}\r\n                    containerclassName=\"carousel-container ani-1\"\r\n                    // removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                    deviceType={this.props.deviceType}\r\n                    dotListclassName=\"custom-dot-list-style\"\r\n                    itemclassName=\"carousel-item-padding-40-px\"\r\n                >\r\n                    <div className=\"sbSlide\">\r\n                    {\" \"}\r\n                    <img src={SBLogo01} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide\">\r\n                    {\" \"}\r\n                    <img src={SBLogo02} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide\">\r\n                    {\" \"}\r\n                    <img src={SBLogo03} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo04} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo05} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo06} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo07} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo08} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo09} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo010} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo011} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo03} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo04} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo05} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo06} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo07} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo08} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo09} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo010} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"sbSlide disable\">\r\n                    {\" \"}\r\n                    <img src={SBLogo011} alt=\"\" />{\" \"}\r\n                    </div>\r\n                </Carousel>\r\n\r\n                <div className=\"ssTitle01 wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                    SmartSwap AMA Series:\r\n                    <span>\r\n                    Alon Goren (Draper-Goren-Holm) and Yoda (Jude) Regev\r\n                    </span>\r\n                </div>\r\n                <div className=\"videoMcontent wow fadeInLeft\" data-wow-delay=\"0.4s\">\r\n                    <div className=\"video-responsive\">\r\n                    <iframe\r\n                        width=\"560\"\r\n                        height=\"315\"\r\n                        src=\"https://www.youtube.com/embed/LKtJ6oaFak0\"\r\n                        title=\"YouTube video player\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                    ></iframe>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"ssTitle01 wow fadeInUp mb-10\" data-wow-delay=\"0.2s\">Partners</div>\r\n                <div\r\n                    className=\"VPMainBX wow fadeInUp\" data-wow-delay=\"0.4s\"\r\n                    style={{\r\n                    justifyContent: \"center\",\r\n                    marginBottom: \"80px\",\r\n                    }}\r\n                >\r\n                    <div className=\"VPSubBX01\">\r\n                    {\" \"}\r\n                    <img src=\"images/lp-logo01.png\" alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    {\" \"}\r\n                    <img src=\"images/venture-partners/vpICON-039.png\" alt=\"\" />{\" \"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"ssTitle01 wow fadeInUp mb-10\" data-wow-delay=\"0.2s\">Venture Partners</div>\r\n                <div className=\"VPMainBX wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-01.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-02.png?v1\"\r\n                        alt=\"\"\r\n                    />\r\n                    Hassan (Hatu) Sheikh\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-03.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/bitangels.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    Michael Terpin\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-04.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-05.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/silent.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    Andrea Castiglione\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-07.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-08.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-09.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-010.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/mexc.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-012.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-013.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/fairum.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-014.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-015.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-016.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-017.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-018.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-019.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-020.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-021.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-022.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-023.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-024.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-025.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-026.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-027.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-029.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-030.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-031V2.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-032.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-033.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-034.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-035.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-036.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-037.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-038.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-039.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/vpICON-040.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                    <div className=\"VPSubBX01\">\r\n                    <img\r\n                        src=\"images/venture-partners/legion.png\"\r\n                        alt=\"\"\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </WelcomeMain>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst WelcomeMain = styled.main `\r\n    background: url(${BannerBg}) no-repeat top center; background-size: 100%; \r\n    @media (max-width: 767px){\r\n        background-size: 170%; \r\n    }\r\n`\r\nconst BannerSec = styled.section `\r\n    padding: 249px 0 225px 0;\r\n    /* padding: 114px 0 225px 0; */\r\n    width: 100%; min-height: 300px; text-align: center;\r\n    p {\r\n        color: #fff; font-size: 24px; line-height: 1.8; margin: 0 0 39px 0;\r\n    }\r\n    @media (max-width: 991px){\r\n        p {\r\n            br {display: none;}\r\n        }\r\n    }\r\n    @media (max-width: 767px){\r\n        min-height: 100vh; padding: 165px 0; display: flex; align-items: center; justify-content: center;\r\n        p {font-size: 20px;}\r\n    }\r\n    @media (max-width: 480px){\r\n        p {font-size: 18px;}\r\n    }\r\n`\r\nconst BannerHD = styled.h3 `\r\n    font-size: 42px; color: white; font-weight: bold; text-transform: uppercase;\r\n    margin: 0 0 18px 0;\r\n    span {color: #91dc27;}\r\n    @media (max-width: 767px){\r\n        font-size: 32px;\r\n    }\r\n    @media (max-width: 480px){\r\n        font-size: 28px;\r\n    }\r\n`\r\nconst BtnPrimary = styled.a `\r\n    background-color: inherit; color: #FFF; font-weight: 700; border: 2px solid #91dc27; box-shadow: 0px 0px 10px #91dc27; padding: 22px 24px; font-size: 18px; display: inline-block; min-width: 324px; cursor: pointer; text-align: center; transition: all 0.5s ease-in-out 0s;\r\n    @media (max-width: 1024px){\r\n        min-width: 200px;\r\n    }\r\n    @media (max-width: 767px){\r\n        min-width: 200px;\r\n        padding: 18px 24px;\r\n        font-size: 16px;\r\n    }\r\n    &.btnLg {min-width: 428px; padding: 26px 50px; font-size: 24px;\r\n        @media (max-width: 767px){\r\n            max-width: 100%; min-width: 200px; padding: 20px 50px; font-size: 18px;\r\n        }\r\n    }\r\n    &:hover {background-color: #91dc27;}\r\n`\r\n\r\nconst Container = styled.div `\r\n    width: 100%; max-width: 1353px; margin: 0 auto; display: flex; flex-flow: wrap;\r\n    &.no-flex {display: block;}\r\n    &.justify-center {justify-content: center;}\r\n    &.mob-p0 {padding: 0;}\r\n    @media (max-width: 1300px){\r\n        padding: 0 20px;\r\n    }\r\n`\r\nconst SecImgTxt = styled.section `\r\n    width: 100%; padding: 73px 0 100px 0; \r\n    & > div[class^='Container'] {align-items: center; justify-content: space-between;}\r\n    @media (max-width: 767px){\r\n        padding: 0px 0 60px 0;\r\n    }\r\n`\r\nconst SecImg = styled.div `\r\n    max-width: 50%; text-align: center; min-width: 37%;\r\n    & + div {padding: 0 0 0 26px;}\r\n    img {max-width: 100%;}\r\n    @media (max-width: 767px){\r\n        order: 1; max-width: 100%;\r\n        width: 100%; text-align: center; padding-bottom: 20px;\r\n        & + div {padding: 0;}\r\n    }\r\n`\r\nconst SecTxt = styled.div `\r\n    width: 50%; padding: 0 0 0 0;\r\n    h3 {font-size: 36px; margin: 0 0 36px; }\r\n    p {font-size: 18px; color: #a6a2b0; line-height: 30px; margin: 0 0 53px;}\r\n    @media (max-width: 767px){\r\n        order: 2;  text-align: center; width: 100%; padding: 0;\r\n        p {margin-bottom: 20px;}\r\n        h3 {margin-bottom: 20px; font-size: 30px;}\r\n    }\r\n    @media (max-width: 480px){\r\n        h3 {font-size: 28px;}\r\n        p {font-size: 16px;}\r\n    }\r\n`\r\nconst TotalNumb = styled.div `\r\n    display: flex; color: #fff; font-size: 16px; align-items: center; justify-content:center; width: 100%; margin: 16px 0 0;\r\n    i {font-style: normal; color: #91dc27;}\r\n    strong:first-child {\r\n        &:after {\r\n            content:\"\"; border-left: 1px solid #323232; height: 20px; width: 1px; display: inline-block; vertical-align: top; margin: 0 22px;\r\n        }\r\n    }\r\n`\r\n\r\nconst DetailsRow = styled.div `\r\n    padding: 123px 0 100px 0;\r\n    @media (max-width: 767px){\r\n        padding: 60px 0 60px 0;\r\n    }\r\n`\r\nconst DetailsBox = styled.div `\r\n    width: 33.33%; padding-right: 36px; padding-bottom: 0;\r\n    display: flex; flex-flow: column; align-items: flex-start;\r\n    h4 {font-size:30px; margin: 0;}\r\n    p {\r\n        font-size: 18px; color: #a6a2b0;\r\n        line-height: 30px; margin: 16px 0 52px;\r\n    }\r\n    a {\r\n        margin-top: auto;\r\n    }\r\n    @media (max-width: 767px){\r\n        width: 100%; text-align: center; align-items: center; padding-right:0; padding-bottom: 60px;\r\n        p {margin: 16px 0 30px;}\r\n    }\r\n    @media (max-width: 480px){\r\n        h4 {font-size: 28px;}\r\n        p {font-size: 16px; margin-bottom: 24px;}\r\n    }\r\n`\r\nconst DetailsLogo = styled.div `\r\n    min-height: 177px; display: flex; align-items: center; \r\n    @media (max-width: 767px){\r\n        min-height: inherit;\r\n        img {height: 100px;}\r\n    }\r\n`\r\nconst NumberSec = styled.div `\r\n    padding: 88px 0 88px; text-align: center;\r\n    h3 {font-size:36px; color: #fff; font-weight: bold; margin: 0 0 30px 0;}\r\n    .number-column {width: calc(50% - 51px);}\r\n    p {font-size: 21px; color: #a6a2b0; margin: 5px 0 0 0; line-height: 36px;}\r\n    .divider {border-left: 1px solid #000; border-right: 1px solid #1c1d25; width: 0;\r\n    margin: 0 50px; height: 342px; align-self: center;}\r\n    @media (max-width: 767px){ \r\n        padding: 0 0 60px;\r\n        .number-column {width: 100%; padding-bottom: 60px; }\r\n        .divider {display: none;}\r\n    }\r\n    @media (max-width: 480px){ \r\n        h3 {font-size: 28px;}\r\n        p {font-size: 18px; line-height: 1.5;}\r\n    }\r\n`\r\nconst NumberGreen = styled.div `\r\n    font-size: 200px; color: #91dc27; font-weight: bold; line-height: 1; text-shadow: 0px 0px 25px rgba(145, 220, 39, 0.70);\r\n    sup { font-size: 18%; top: -3.2em;}\r\n    @media (max-width: 1024px){ \r\n        font-size: 140px;\r\n    } \r\n    @media (max-width: 767px){  \r\n        font-size: 30vw; text-shadow: 0px 0px 20px rgba(145, 220, 39, 0.70);\r\n    }\r\n    @media (max-width: 480px){  \r\n        font-size: 24vw; text-shadow: 0px 0px 15px rgba(145, 220, 39, 0.70);\r\n    }\r\n`\r\n\r\nconst WelcomeList = styled.section `\r\n    padding: 101px 0 0;\r\n    @media (max-width: 767px){  padding: 0 10px 80px;\r\n        \r\n    }\r\n`\r\nconst WelcomeListItems = styled.div `\r\n    width: 25%; display: flex; padding: 0 35px 75px 0;\r\n    span {width: 60px}\r\n    strong {font-size: 24px; }\r\n    p {font-size: 14px; color: #a6a2b0; line-height: 24px; margin: 12px 0 0 0;}\r\n    .itemRight {padding-left: 20px;}\r\n    @media (max-width: 1024px){  \r\n        width: 33.33%;\r\n    }\r\n    @media (max-width: 767px){  \r\n        width: 50%; flex-flow: column; padding: 0 10px 40px;\r\n        .itemRight {padding-left: 0;}\r\n    }\r\n    @media (max-width: 767px){\r\n        span {width: 50px; margin-bottom: 5px;\r\n            img {max-width: 100%; max-height: 40px}\r\n        }\r\n        strong {font-size: 20px; }\r\n    }  \r\n`\r\n\r\nconst Tokenomics = styled.section `\r\n    padding: 108px 0 228px; text-align: center;\r\n    h2 {width: 100%; font-size: 36px; font-weight: bold; margin: 0 0 36px 0; }\r\n    p {width: 100%; color: #a6a2b0; font-size: 21px; margin: 0;}\r\n    @media (max-width: 767px){  \r\n        padding: 0 0 100px;\r\n        h2 {font-size: 30px;}\r\n    }\r\n    @media (max-width: 480px){  \r\n        h2 {font-size: 24px; margin-bottom: 20px;}\r\n        p {font-size: 16px;}\r\n    }\r\n`\r\nconst TokenRow = styled.div `\r\n    display: flex; width: calc(100% + 22px); padding: 60px 0 0; margin-left: -11px; margin-right: -11px;\r\n    @media (max-width: 1024px){ \r\n        flex-flow: wrap;\r\n    }  \r\n    @media (max-width: 767px){   \r\n        margin: 0; width: 100%;\r\n    }\r\n    @media (max-width: 480px){   \r\n        padding: 20px 0 0;\r\n    }\r\n`\r\nconst TokenBox = styled.div `\r\n    border: 1px solid #3b3e4b; display: flex; flex-flow: column;\r\n    width: 100%; margin: 0 11px; \r\n    span {background: #3b3e4b; height: 60px; font-size: 14px; font-weight: bold; display: flex; align-items: center; justify-content: center;}\r\n    b {font-size: 24px; font-weight: bold; padding: 19px 0; display: flex; align-items: center; justify-content: center;}\r\n    @media (max-width: 1024px){ \r\n        width: calc(33.33% - 22px); margin-bottom: 22px;\r\n    } \r\n    @media (max-width: 767px){ \r\n        margin: 0 0 22px; width: 100%;\r\n    }\r\n`","D:\\react\\SmartSwap_frontend\\src\\components\\Header03.js",["1353","1354","1355","1356"],"import React, { PureComponent } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport LogoM from '../assets/welcome/logo.png'\r\nimport Logo2 from '../assets/welcome/logo2.png'\r\n\r\n\r\nexport default class HeadFreeListing extends PureComponent {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n    };\r\n  }\r\n \r\n \r\n\r\n  render() {\r\n    \r\n    return (\r\n        <>\r\n        \r\n        <LHead className=\"header wow fadeInDown\">\r\n            <Logo><img src={LogoM} alt=\"logo\" />\r\n            <img className=\"logo2\" src={Logo2} alt=\"logo\" /></Logo>\r\n\r\n            <RMbox>\r\n                <a href=\"javascript:void(0);\" class=\"link01\" >Rewards program</a>\r\n                <a href=\"javascript:void(0);\" class=\"headerBtn\">LAUNCH APP</a>\r\n            </RMbox>\r\n        </LHead>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\r\n`;\r\n\r\n\r\nconst LHead = styled(FlexDiv) ` \r\n    padding:36px 40px; justify-content:flex-start;   width: 100%;\r\n    position: fixed; top: 0; transition: all 0.3s ease-in-out; z-index: 100;\r\n    &.fixed {background: rgba(0,0,0,0.8); padding: 15px 40px; }\r\n    @media (max-width: 767px){\r\n      padding: 16px 20px 16px 15px;\r\n      &.fixed {padding: 16px 20px 16px 15px;}\r\n    }\r\n`\r\nconst Logo = styled.a ` \r\n    margin-right:25px;\r\n    .logo2 {display: none;}\r\n    @media (max-width: 767px){\r\n      img:not(.logo2) {display: none;}\r\n      .logo2 {display: block; height: 43px; filter: drop-shadow(0px 0px 7px #91dc27)}\r\n      /*       overflow: hidden; width: 80px\r\n */    }\r\n`\r\nconst RMbox = styled(FlexDiv) `\r\n    margin-left:auto; \r\n    .link01{ color: #fff; font-size:14px; font-weight:700; :hover{ color: #91dc27;} }\r\n    .headerBtn { background-color: inherit; color: #FFF; font-weight: 700; border: 2px solid #91dc27; box-shadow: 0px 0px 10px #91dc27; padding: 10px 24px; margin-left: 50px; transition: all 0.5s ease-in-out 0s;\r\n      &:hover { background-color: #91dc27; }\r\n    }\r\n    @media (max-width: 767px){\r\n      .headerBtn {padding: 8px 15px; margin-left: 20px;}\r\n    }\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\React\\SmartSwap_frontend\\src\\pages\\welcome.js",["1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367"],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen11.js",["1368","1369","1370","1371","1372","1373","1374","1375","1376"],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen09.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen10.js",["1377","1378","1379"],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen07.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen08.js",[],"D:\\React\\SmartSwap_frontend\\src\\pages\\fl-screen06.js",[],"D:\\React\\SmartSwap_frontend\\src\\components\\Header03.js",["1380","1381","1382","1383"],"D:\\react\\SmartSwap_frontend\\src\\pages\\smartBridge.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\smartExtension.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\bridge-tokens\\BridgeSwap.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\PopupToken03.js",["1384","1385","1386"],"import { Container } from \"@material-ui/core\";\r\nimport React, { PureComponent } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport IconPop01 from \"../assets/images/icop-1.png\";\r\nimport IconPop02 from \"../assets/images/icop-2.png\";\r\nimport IconPop03 from \"../assets/images/icop-3.png\";\r\nimport IconPop04 from \"../assets/images/icop-4.png\";\r\nimport IconPop05 from \"../assets/images/icop-5.png\";\r\nimport IconPop06 from \"../assets/images/icop-6.png\";\r\nimport IconPop07 from \"../assets/images/icop-7.png\";\r\nimport IconPop08 from \"../assets/images/icop-8.png\";\r\nimport IconPop09 from \"../assets/images/icop-9.png\";\r\nimport IconPop10 from \"../assets/images/icop-10.png\";\r\nimport IconPop11 from \"../assets/images/icop-11.png\";\r\nimport IconPop12 from \"../assets/images/icop-12.png\";\r\nimport IconPop13 from \"../assets/images/icop-13.png\";\r\nimport IconPop14 from \"../assets/images/icop-14.png\";\r\nimport IconPop15 from \"../assets/images/icop-15.png\";\r\nimport pinAct from \"../assets/images/pin.png\";\r\nimport pin from \"../assets/images/pin-u.png\";\r\nimport swap from \"../assets/images/swap.png\";\r\nimport close from \"../assets/images/close.png\";\r\n\r\nexport default class PopupToken03 extends PureComponent {\r\n    render() {\r\n        return (\r\n            <>\r\n                <PopupMain>\r\n                    <CloseBtn><img src={close}></img></CloseBtn>\r\n                    <ContainerXl>\r\n                        <PopTitle>\r\n                            <h1>Checking authenticity </h1> \r\n                        </PopTitle>\r\n                        <PopRow>\r\n                            <Popcol className=\"w-40\">\r\n                                <PopPera className=\"Title\">Collateral token</PopPera>\r\n                                <PopPera>Blockchain</PopPera> \r\n                                <Token><img src={IconPop01} alt=\"\"></img> Ethereum</Token>\r\n                                <PopPera>Smart contract token address</PopPera>\r\n                                <PopLink>0x084374b068Eb3db504178b4909eDC26D01226a80 <sup className=\"fas fa-external-link-alt\"></sup></PopLink>\r\n                            </Popcol>\r\n                            <Popcol className=\"Nowidth\"><a><img src={swap}></img></a></Popcol>\r\n                            <Popcol className=\"w-40\">\r\n                                <PopPera className=\"Title\">New wrap token</PopPera>\r\n                                <PopPera>Blockchain </PopPera>\r\n                                <Token><img src={IconPop02} alt=\"\"></img> BSC</Token>\r\n                                <PopPera>Smart contract token address</PopPera>\r\n                                <PopLink>0x084374b068Eb3db504178b4909eDC26D01226a80 <sup className=\"fas fa-external-link-alt\"></sup></PopLink>\r\n                            </Popcol>\r\n                        </PopRow>\r\n                    </ContainerXl>\r\n                </PopupMain>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst PopupMain = styled.div `\r\n    position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 10000; background: rgba(13, 14, 19, 0.95); overflow: auto; padding: 0 0 90px; display: flex; flex-direction: column; justify-content: center;\r\n`\r\nconst CloseBtn = styled.a `\r\n    position: absolute; top: 30px; right: 30px; cursor: pointer;\r\n`\r\nconst ContainerXl = styled.div `\r\n    width: 1360px; margin: 0 auto;\r\n`\r\nconst PopTitle = styled.div `\r\n    text-align: center; padding: 90px 0 50px;\r\n    h1 {font-size: 36px; color: #fff; font-weight: bold; margin: 0 0 0;}\r\n    p {font-size: 18px; margin: 25px 0 0;}\r\n`\r\nconst PopRow = styled.div `\r\n    display: flex; align-items: flex-start; margin: 0 -17px 48px;\r\n`\r\nconst Popcol = styled.div `\r\n    width: 50%; padding: 0 17px;\r\n    &.Nowidth {width: auto; flex-grow: 1; align-self: center; padding:0; text-align: center;}\r\n    &.w-40 {width: 20%; flex-grow: 1;  padding: 0;}\r\n`\r\nconst Search = styled.div `\r\n    position: relative; \r\n    input {\r\n        background: #21232b; border: 2px solid #000; width: 100%; height: 67px; box-sizing: border-box; color: #a6a2b0; font-size: 16px; padding: 10px 18px;\r\n    }\r\n    .fa  {font-size: 18px; position: absolute; top: 25px; right: 20px; color: #aaa;}\r\n`\r\nconst SelectList = styled.div `\r\n    display: flex; flex-flow: wrap; margin-top: 20px;\r\n`\r\nconst Selected = styled.div `\r\n    min-width: 78px; min-height: 32px; background: #3b3e4b; margin-right: 7px; text-align: center; padding: 4px 7px; position: relative; cursor: pointer; transition: all 0.3s ease-in-out;\r\n    &:hover {background: #91dc27; .fa-times {visibility: visible;}}\r\n    div { \r\n        img { margin-right: 10px;}\r\n    }\r\n    .fa-times { position: absolute; top: 0; right: 0; color: #fff; background: #000; transform: translate(50%, -50%); font-size: 9px; height: 15px; width: 15px; line-height: 15px; text-align: center; border-radius: 15px; visibility: hidden;}\r\n`\r\nconst Token = styled.div `\r\n    display: flex; align-items: center; font-size: 18px; text-transform: uppercase; color: #fff; height: 24px; line-height: 24px;\r\n    img {margin-right: 16px; display: inline-block; vertical-align: top; height: 30px; width: 30px;}\r\n`\r\nconst PopPera = styled.p `\r\n    font-size: 18px; color: #fff; margin: 18px 0; \r\n    &.Title {border-bottom: 1px solid; display: table; line-height: 1;}\r\n`\r\nconst PopLink = styled.div `\r\n    color: #2d52f3; font-size: 18px;\r\n`","D:\\react\\SmartSwap_frontend\\src\\components\\PopupToken02.js",["1387"],"import { Container } from \"@material-ui/core\";\r\nimport React, { PureComponent } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport IconPop01 from \"../assets/images/icop-1.png\";\r\nimport IconPop02 from \"../assets/images/icop-2.png\";\r\nimport IconPop03 from \"../assets/images/icop-3.png\";\r\nimport IconPop04 from \"../assets/images/icop-4.png\";\r\nimport IconPop05 from \"../assets/images/icop-5.png\";\r\nimport IconPop06 from \"../assets/images/icop-6.png\";\r\nimport IconPop07 from \"../assets/images/icop-7.png\";\r\nimport IconPop08 from \"../assets/images/icop-8.png\";\r\nimport IconPop09 from \"../assets/images/icop-9.png\";\r\nimport IconPop10 from \"../assets/images/icop-10.png\";\r\nimport IconPop11 from \"../assets/images/icop-11.png\";\r\nimport IconPop12 from \"../assets/images/icop-12.png\";\r\nimport IconPop13 from \"../assets/images/icop-13.png\";\r\nimport IconPop14 from \"../assets/images/icop-14.png\";\r\nimport IconPop15 from \"../assets/images/icop-15.png\";\r\nimport pinAct from \"../assets/images/pin.png\";\r\nimport pin from \"../assets/images/pin-u.png\";\r\n\r\nexport default class PopupToken02 extends PureComponent {\r\n    render() {\r\n        return (\r\n            <>\r\n                <PopupMain>\r\n                    <ContainerPop>\r\n                        <PopTitle>\r\n                            <h1>Select a destination for any EVM token</h1> \r\n                            <p>If no current bridge exists, create one in a few seconds and gain dVoucher rewards <i className=\"help-circle\">\r\n                                <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"Claim dVouchers after creating a new bridge. dVoucher tokens are NFT reward tokens that can be exchanged for any Qonetum Foundation project tokens with the same $:$ face value through a router.\"\r\n                                ></i>\r\n                            </i></p>\r\n                        </PopTitle>\r\n                        <PopRow>\r\n                            <Popcol>\r\n                                <Search><input placeholder=\"Search chains\" type=\"search\" value=\"\"></input><i className=\"fa fa-search\" aria-hidden=\"true\"></i></Search>\r\n                                <SelectList>\r\n                                    <Selected><Token><img src={IconPop01} alt=\"\"></img> WBNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop02} alt=\"\"></img> BNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                </SelectList>\r\n                            </Popcol>\r\n                            <Popcol>\r\n                                <Search><input placeholder=\"Search tokens\" type=\"search\" value=\"\"></input><i className=\"fa fa-search\" aria-hidden=\"true\"></i></Search>\r\n                                <SelectList>\r\n                                    <Selected><Token><img src={IconPop03} alt=\"\"></img> BNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop02} alt=\"\"></img> WBNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop04} alt=\"\"></img> BAI</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop05} alt=\"\"></img> USDT</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop06} alt=\"\"></img> BUSD</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                </SelectList>\r\n                            </Popcol>\r\n                        </PopRow>\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <Thd>Token</Thd>\r\n                                    <Thd>Selected chain</Thd>\r\n                                    <Thd>Smart contract</Thd>\r\n                                    <Thd className=\"text-center\">Bridge status</Thd>\r\n                                    <Thd className=\"text-center\">Reward  <i\r\n                                className=\"fas fa-question-circle protip\"\r\n                                data-pt-position=\"top\"\r\n                                data-pt-title=\"dVoucher tokens are NFT reward tokens that can be exchanged for any Qonetum Foundation project tokens with the same $:$ face value through a router. The dVoucher reward NFT tokens can be traded on NFT marketplaces. Once dVoucher rewards are exchanged for project tokens, the newly received tokens are placed behind the Dumper Shield in a second position behind original project investors. The value of dVoucher is fixed at $0.01.\"\r\n                                ></i></Thd>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop03} alt=\"\"></img> WBNB</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop02} alt=\"\"></img> BSC</Token>\r\n                                        <Pin className=\"selected\"></Pin></Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell><ButtonDone><i className=\"fa fa-check\" aria-hidden=\"true\"></i> Bridge Exists</ButtonDone></Tcell>\r\n                                    <Tcell className=\"text-center\">\r\n                                        -    \r\n                                    </Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop03} alt=\"\"></img> BNB</Token>\r\n                                        <Pin className=\"\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop02} alt=\"\"></img> BSC</Token>\r\n                                        <Pin className=\"\"></Pin></Tcell>\r\n                                    <Tcell>-</Tcell>\r\n                                    <Tcell>\r\n                                        <ButtonPrimary>CREATE NEW BRIDGE</ButtonPrimary>\r\n                                    </Tcell>\r\n                                    <Tcell><ButtonDone>Claim 500 dVoucher</ButtonDone></Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop15} alt=\"\"></img> 7UP</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop02} alt=\"\"></img> BSC</Token>\r\n                                        </Tcell>\r\n                                    <Tcell>-</Tcell>\r\n                                    <Tcell>\r\n                                        <ButtonPrimary>CREATE NEW BRIDGE</ButtonPrimary>\r\n                                    </Tcell>\r\n                                    <Tcell><ButtonDone>Claim 500 dVoucher</ButtonDone></Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop12} alt=\"\"></img> ADA</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop02} alt=\"\"></img> BSC</Token>\r\n                                        </Tcell>\r\n                                    <Tcell>-</Tcell>\r\n                                    <Tcell>\r\n                                        <ButtonPrimary>CREATE NEW BRIDGE</ButtonPrimary>\r\n                                    </Tcell>\r\n                                    <Tcell><ButtonDone>Claim 500 dVoucher</ButtonDone></Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop11} alt=\"\"></img> ANKR</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop01} alt=\"\"></img> Ethereum</Token>\r\n                                        <Pin className=\"selected\"></Pin></Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell><ButtonDone><i className=\"fa fa-check\" aria-hidden=\"true\"></i> Bridge Exists</ButtonDone></Tcell>\r\n                                    <Tcell className=\"text-center\">-</Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop13} alt=\"\"></img> ANY</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop01} alt=\"\"></img> Ethereum</Token>\r\n                                        </Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell><ButtonDone><i className=\"fa fa-check\" aria-hidden=\"true\"></i> Bridge Exists</ButtonDone></Tcell>\r\n                                    <Tcell className=\"text-center\">-</Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop14} alt=\"\"></img> anyUNI</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop01} alt=\"\"></img> Ethereum</Token>\r\n                                        </Tcell>\r\n                                    <Tcell>-</Tcell>\r\n                                    <Tcell>\r\n                                        <ButtonPrimary>CREATE NEW BRIDGE</ButtonPrimary>\r\n                                    </Tcell>\r\n                                    <Tcell><ButtonDone>Claim 500 dVoucher</ButtonDone></Tcell>\r\n                                </tr>\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                        <Tfooter>\r\n                            <Tnav>Page \r\n                                <SelectCustom>\r\n                                    <select>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                    </select>\r\n                                </SelectCustom>\r\n                                result 1-10 of 300</Tnav>   \r\n                            <p><a href=\"#\">Read more about dVocher <i className=\"fas fa-external-link-alt\"></i></a></p> \r\n                        </Tfooter>\r\n                    </ContainerPop>\r\n                </PopupMain>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst PopupMain = styled.div `\r\n    position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 10000; background: rgba(13, 14, 19, 0.95); overflow: auto; padding: 0 0 90px;\r\n`\r\nconst ContainerPop = styled.div `\r\n    width: 1360px; margin: 0 auto;\r\n`\r\nconst PopTitle = styled.div `\r\n    text-align: center; padding: 90px 0 50px;\r\n    h1 {font-size: 36px; color: #fff; font-weight: bold; margin: 0 0 0;}\r\n    p {font-size: 18px; margin: 25px 0 0;}\r\n`\r\nconst PopRow = styled.div `\r\n    display: flex; align-items: flex-start; margin: 0 -17px 48px;\r\n`\r\nconst Popcol = styled.div `\r\n    width: 50%; padding: 0 17px;\r\n`\r\nconst Search = styled.div `\r\n    position: relative; \r\n    input {\r\n        background: #21232b; border: 2px solid #000; width: 100%; height: 67px; box-sizing: border-box; color: #a6a2b0; font-size: 16px; padding: 10px 18px;\r\n    }\r\n    .fa  {font-size: 18px; position: absolute; top: 25px; right: 20px; color: #aaa;}\r\n`\r\nconst SelectList = styled.div `\r\n    display: flex; flex-flow: wrap; margin-top: 20px;\r\n`\r\nconst Selected = styled.div `\r\n    min-width: 78px; min-height: 32px; background: #3b3e4b; margin-right: 7px; text-align: center; padding: 4px 7px; position: relative; cursor: pointer; transition: all 0.3s ease-in-out;\r\n    &:hover {background: #91dc27; .fa-times {visibility: visible;}}\r\n    div { \r\n        img { margin-right: 10px;}\r\n    }\r\n    .fa-times { position: absolute; top: 0; right: 0; color: #fff; background: #000; transform: translate(50%, -50%); font-size: 9px; height: 15px; width: 15px; line-height: 15px; text-align: center; border-radius: 15px; visibility: hidden;}\r\n`\r\nconst Table = styled.table `\r\n    width: 100%;\r\n    tr:hover { background: #191a22;}\r\n`\r\nconst Thd = styled.th `\r\n    font-size: 14px; color: #fff; padding: 15px 18px; border-top: 2px solid #3b3e4b; border-bottom: 2px solid #3b3e4b; text-align: left; font-weight: normal; width: 20%;\r\n    &.text-center {text-align: center;}\r\n    & + th {\r\n        border-left: 1px solid #3b3e4b\r\n    }\r\n`\r\nconst Tcell = styled.td `\r\n    font-size: 14px; color: #fff; padding: 12px 18px; border-bottom: 1px solid #3b3e4b; position: relative;\r\n    & + td {\r\n        border-left: 1px solid #3b3e4b\r\n    }\r\n`\r\nconst Tfooter = styled.div `\r\n    display: flex; align-items: center; justify-content: space-between; font-size: 12px; color: #aaaaaa; padding: 16px 0 0;\r\n    \r\n    p {color: #3b3e4b;}\r\n    a {color: #aaa; margin: 0 10px; \r\n        i {margin-left: 4px;}\r\n        &:last-child {margin-right: 0;}\r\n    }\r\n    a:hover {color: #91dc27;}\r\n`\r\nconst SelectCustom = styled.div `\r\n    display: inline-block; position: relative; margin: 0 10px;\r\n    select {background: #3b3e4b; min-width: 65px; color: #fff; font-size: 14px; border: 0; height: 30px;  border-radius: 4px; padding: 0 10px;   appearance: none;}\r\n    &:after {\r\n        content: \"\\f0d7\"; font-family: \"Font Awesome 5 Free\"; color: #aaa; font-weight: 900; position: absolute; right: 5px; top: 8px;\r\n    }\r\n`\r\nconst Tnav = styled.div `\r\n\r\n`\r\nconst TDLink = styled.a `\r\n    color: #2d52f3;\r\n`\r\nconst BridgeGrp = styled.div `\r\n    display: flex; align-items: center;\r\n    b {img {margin-right: -3px;}}\r\n    span {color: #91dc27; margin-left: 14px;}\r\n`\r\n\r\nconst Token = styled.div `\r\n    display: flex; align-items: center; color: #fff; height: 24px; line-height: 24px;\r\n    img {margin-right: 16px; display: inline-block; vertical-align: top;}\r\n`\r\nconst Pin = styled.div `\r\n    width: 16px; height: 16px; position: absolute; right: 17px; top: calc(50% - 8px); background: url(${pin}); background-size: 100%;\r\n    &.selected {background: url(${pinAct}); background-size: 100%;}\r\n`\r\nconst ButtonPrimary = styled.button `\r\n    display: block; background-color: inherit; border: 2px solid #91dc27; box-shadow: 0px 0px 10px #91dc27; color: #fff; width:100%; font-weight: bold; padding: 7px 10px; \r\n    &:hover {background: #91dc27;}\r\n`\r\nconst ButtonDone = styled.a `\r\n    color: #91dc27; text-align: center; display: block; font-weight: bold;\r\n    i {margin-right: 6px;}\r\n`","D:\\react\\SmartSwap_frontend\\src\\components\\PopupToken01.js",["1388","1389"],"import { Container } from \"@material-ui/core\";\r\nimport React, { PureComponent } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport IconPop01 from \"../assets/images/icop-1.png\";\r\nimport IconPop02 from \"../assets/images/icop-2.png\";\r\nimport IconPop03 from \"../assets/images/icop-3.png\";\r\nimport IconPop04 from \"../assets/images/icop-4.png\";\r\nimport IconPop05 from \"../assets/images/icop-5.png\";\r\nimport IconPop06 from \"../assets/images/icop-6.png\";\r\nimport IconPop07 from \"../assets/images/icop-7.png\";\r\nimport IconPop08 from \"../assets/images/icop-8.png\";\r\nimport IconPop09 from \"../assets/images/icop-9.png\";\r\nimport IconPop10 from \"../assets/images/icop-10.png\";\r\nimport IconPop11 from \"../assets/images/icop-11.png\";\r\nimport IconPop12 from \"../assets/images/icop-12.png\";\r\nimport IconPop13 from \"../assets/images/icop-13.png\";\r\nimport IconPop14 from \"../assets/images/icop-14.png\";\r\nimport IconPop15 from \"../assets/images/icop-15.png\";\r\nimport pinAct from \"../assets/images/pin.png\";\r\nimport pin from \"../assets/images/pin-u.png\";\r\n\r\nexport default class PopupToken01 extends PureComponent {\r\n    render() {\r\n        return (\r\n            <>\r\n                <PopupMain>\r\n                    <ContainerPop>\r\n                        <PopTitle>\r\n                            <h1>Select any chain that tokens currently exist</h1> \r\n                        </PopTitle>\r\n                        <PopRow>\r\n                            <Popcol>\r\n                                <Search><input placeholder=\"Search chains\" type=\"search\" value=\"\"></input><i className=\"fa fa-search\" aria-hidden=\"true\"></i></Search>\r\n                                <SelectList>\r\n                                    <Selected><Token><img src={IconPop01} alt=\"\"></img> WBNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop02} alt=\"\"></img> BNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                </SelectList>\r\n                            </Popcol>\r\n                            <Popcol>\r\n                                <Search><input placeholder=\"Search tokens\" type=\"search\" value=\"\"></input><i className=\"fa fa-search\" aria-hidden=\"true\"></i></Search>\r\n                                <SelectList>\r\n                                    <Selected><Token><img src={IconPop03} alt=\"\"></img> BNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop02} alt=\"\"></img> WBNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop04} alt=\"\"></img> BAI</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop05} alt=\"\"></img> USDT</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop06} alt=\"\"></img> BUSD</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                </SelectList>\r\n                            </Popcol>\r\n                        </PopRow>\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <Thd>Token</Thd>\r\n                                    <Thd>Selected chain</Thd>\r\n                                    <Thd>Smart contract</Thd>\r\n                                    <Thd>Bridge status</Thd>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop03} alt=\"\"></img> WBNB</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop02} alt=\"\"></img> BSC</Token>\r\n                                        <Pin className=\"selected\"></Pin></Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell>\r\n                                        <BridgeGrp>\r\n                                            <b>\r\n                                                <img src={IconPop01} alt=\"\"></img>\r\n                                                <img src={IconPop02} alt=\"\"></img>\r\n                                                <img src={IconPop07} alt=\"\"></img>\r\n                                                <img src={IconPop08} alt=\"\"></img>\r\n                                                <img src={IconPop09} alt=\"\"></img>\r\n                                                <img src={IconPop10} alt=\"\"></img>\r\n                                            </b>\r\n                                            <span>+ 121</span>\r\n                                        </BridgeGrp>\r\n                                    </Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop03} alt=\"\"></img> BNB</Token>\r\n                                        <Pin className=\"\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop02} alt=\"\"></img> BSC</Token>\r\n                                        <Pin className=\"\"></Pin></Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell>\r\n                                        <BridgeGrp>\r\n                                            <b>\r\n                                                <img src={IconPop01} alt=\"\"></img>\r\n                                                <img src={IconPop02} alt=\"\"></img>\r\n                                                <img src={IconPop07} alt=\"\"></img>\r\n                                                <img src={IconPop10} alt=\"\"></img>\r\n                                            </b>\r\n                                        </BridgeGrp>\r\n                                    </Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop15} alt=\"\"></img> 7UP</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop02} alt=\"\"></img> BSC</Token>\r\n                                        <Pin className=\"selected\"></Pin></Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell>\r\n                                        <BridgeGrp>\r\n                                            <b>\r\n                                                <img src={IconPop01} alt=\"\"></img>\r\n                                                <img src={IconPop02} alt=\"\"></img>\r\n                                            </b>\r\n                                        </BridgeGrp>\r\n                                    </Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop12} alt=\"\"></img> ADA</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop02} alt=\"\"></img> BSC</Token>\r\n                                        <Pin className=\"selected\"></Pin></Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell>\r\n                                        <BridgeGrp>\r\n                                            <b>\r\n                                                <img src={IconPop01} alt=\"\"></img>\r\n                                                <img src={IconPop02} alt=\"\"></img>\r\n                                                <img src={IconPop07} alt=\"\"></img>\r\n                                                <img src={IconPop08} alt=\"\"></img>\r\n                                                <img src={IconPop09} alt=\"\"></img>\r\n                                            </b>\r\n                                        </BridgeGrp>\r\n                                    </Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop11} alt=\"\"></img> ANKR</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop01} alt=\"\"></img> Ethereum</Token>\r\n                                        <Pin className=\"selected\"></Pin></Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell>\r\n                                        <BridgeGrp>\r\n                                            <b>\r\n                                                <img src={IconPop01} alt=\"\"></img>\r\n                                                <img src={IconPop02} alt=\"\"></img>\r\n                                                <img src={IconPop08} alt=\"\"></img>\r\n                                                <img src={IconPop09} alt=\"\"></img>\r\n                                            </b>\r\n                                        </BridgeGrp>\r\n                                    </Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop13} alt=\"\"></img> ANY</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop01} alt=\"\"></img> Ethereum</Token>\r\n                                        <Pin className=\"selected\"></Pin></Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell>\r\n                                        <BridgeGrp>\r\n                                            <b>\r\n                                                <img src={IconPop01} alt=\"\"></img>\r\n                                                <img src={IconPop02} alt=\"\"></img>\r\n                                            </b>\r\n                                        </BridgeGrp>\r\n                                    </Tcell>\r\n                                </tr>\r\n                                <tr>\r\n                                    <Tcell>\r\n                                        <Token><img src={IconPop14} alt=\"\"></img> anyUNI</Token>\r\n                                        <Pin className=\"selected\"></Pin>\r\n                                    </Tcell>\r\n                                    <Tcell><Token><img src={IconPop01} alt=\"\"></img> Ethereum</Token>\r\n                                        <Pin className=\"selected\"></Pin></Tcell>\r\n                                    <Tcell><TDLink>0x291...912Af</TDLink></Tcell>\r\n                                    <Tcell>\r\n                                        <BridgeGrp>\r\n                                            <b>\r\n                                                <img src={IconPop01} alt=\"\"></img>\r\n                                                <img src={IconPop02} alt=\"\"></img>\r\n                                                <img src={IconPop07} alt=\"\"></img>\r\n                                            </b>\r\n                                        </BridgeGrp>\r\n                                    </Tcell>\r\n                                </tr>\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                        <Tfooter>\r\n                            <Tnav>Page \r\n                                <SelectCustom>\r\n                                    <select>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                    </select>\r\n                                </SelectCustom>\r\n                                result 1-10 of 300</Tnav>   \r\n                            <p><a href=\"#\">Create new bridge to any token by few seconds</a>   |   <a href=\"#\">You can create to any token new bridges on any EVM chains by a few seconds</a></p> \r\n                        </Tfooter>\r\n                    </ContainerPop>\r\n                </PopupMain>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst PopupMain = styled.div `\r\n    position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 10000; background: rgba(13, 14, 19, 0.95); overflow: auto; padding: 0 0 90px;\r\n`\r\nconst ContainerPop = styled.div `\r\n    width: 1360px; margin: 0 auto;\r\n`\r\n\r\nconst PopTitle = styled.div `\r\n    text-align: center; padding: 90px 0 50px;\r\n    h1 {font-size: 36px; color: #fff; font-weight: bold; margin: 0 0 0;}\r\n`\r\nconst PopRow = styled.div `\r\n    display: flex; align-items: flex-start; margin: 0 -17px 48px;\r\n`\r\nconst Popcol = styled.div `\r\n    width: 50%; padding: 0 17px;\r\n`\r\nconst Search = styled.div `\r\n    position: relative; \r\n    input {\r\n        background: #21232b; border: 2px solid #000; width: 100%; height: 67px; box-sizing: border-box; color: #a6a2b0; font-size: 16px; padding: 10px 18px;\r\n    }\r\n    ::-webkit-input-placeholder { /* Edge */\r\n        color: inherit; opacity: 1;\r\n    }\r\n    :-ms-input-placeholder { /* Internet Explorer 10-11 */\r\n        color: inherit; opacity: 1;\r\n    }\r\n    ::placeholder {\r\n        color: inherit; opacity: 1;\r\n    }\r\n    .fa  {font-size: 18px; position: absolute; top: 25px; right: 20px; color: #aaa;}\r\n`\r\nconst SelectList = styled.div `\r\n    display: flex; flex-flow: wrap; margin-top: 20px;\r\n`\r\nconst Selected = styled.div `\r\n    min-width: 78px; min-height: 32px; background: #3b3e4b; margin-right: 7px; text-align: center; padding: 4px 7px; position: relative; cursor: pointer; transition: all 0.3s ease-in-out;\r\n    &:hover {background: #91dc27; .fa-times {visibility: visible;}}\r\n    div { \r\n        img { margin-right: 10px;}\r\n    }\r\n    .fa-times { position: absolute; top: 0; right: 0; color: #fff; background: #000; transform: translate(50%, -50%); font-size: 9px; height: 15px; width: 15px; line-height: 15px; text-align: center; border-radius: 15px; visibility: hidden;}\r\n`\r\nconst Table = styled.table `\r\n    width: 100%;\r\n    tr:hover { background: #191a22;}\r\n`\r\nconst Thd = styled.th `\r\n    font-size: 14px; color: #fff; padding: 15px 18px; border-top: 2px solid #3b3e4b; border-bottom: 2px solid #3b3e4b; text-align: left; font-weight: normal; width: 25%;\r\n    & + th {\r\n        border-left: 1px solid #3b3e4b\r\n    }\r\n`\r\nconst Tcell = styled.td `\r\n    font-size: 14px; color: #fff; padding: 12px 18px; border-bottom: 1px solid #3b3e4b; position: relative;\r\n    & + td {\r\n        border-left: 1px solid #3b3e4b\r\n    }\r\n`\r\nconst Tfooter = styled.div `\r\n    display: flex; align-items: center; justify-content: space-between; font-size: 12px; color: #aaaaaa; padding: 16px 0 0;\r\n    \r\n    p {color: #3b3e4b;}\r\n    a {color: #aaa; margin: 0 10px;}\r\n    a:hover {color: #91dc27;}\r\n`\r\nconst SelectCustom = styled.div `\r\n    display: inline-block; position: relative; margin: 0 10px;\r\n    select {background: #3b3e4b; min-width: 65px; color: #fff; font-size: 14px; border: 0; height: 30px;  border-radius: 4px; padding: 0 10px;   appearance: none;}\r\n    &:after {\r\n        content: \"\\f0d7\"; font-family: \"Font Awesome 5 Free\"; color: #aaa; font-weight: 900; position: absolute; right: 5px; top: 8px;\r\n    }\r\n`\r\nconst Tnav = styled.div `\r\n\r\n`\r\nconst TDLink = styled.a `\r\n    color: #2d52f3;\r\n`\r\nconst BridgeGrp = styled.div `\r\n    display: flex; align-items: center;\r\n    b {img {margin-right: -3px;}}\r\n    span {color: #91dc27; margin-left: 14px;}\r\n`\r\n\r\nconst Token = styled.div `\r\n    display: flex; align-items: center; color: #fff; height: 24px; line-height: 24px;\r\n    img {margin-right: 16px; display: inline-block; vertical-align: top;}\r\n`\r\nconst Pin = styled.div `\r\n    width: 16px; height: 16px; position: absolute; right: 17px; top: calc(50% - 8px); background: url(${pin}); background-size: 100%;\r\n    &.selected {background: url(${pinAct}); background-size: 100%;}\r\n`\r\n","D:\\react\\SmartSwap_frontend\\src\\helper\\bridgeApiHelper.js",[],"D:\\react\\SmartSwap_frontend\\src\\pages\\addCustomToken.js",[],"D:\\react\\SmartSwap_frontend\\src\\helper\\erc20TokenContract.js",[],"D:\\react\\SmartSwap_frontend\\src\\helper\\bridgeContract.js",[],"D:\\react\\SmartSwap_frontend\\src\\components\\bridge-tokens\\SourceTokenPopup.js",["1390","1391","1392","1393","1394"],"import React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport _ from \"lodash\";\r\nimport pinAct from \"../../assets/images/pin.png\";\r\nimport pin from \"../../assets/images/pin-u.png\";\r\nimport close from \"../../assets/images/close.png\";\r\nimport Web3 from 'web3';\r\nimport BridgeApiHelper from \"../../helper/bridgeApiHelper\";\r\nimport notificationConfig from \"../../config/notificationConfig\";\r\nimport errors from \"../../helper/errorConstantsHelper\";\r\n\r\nconst visibleBridgesNumber = process.env.REACT_APP_VISIBLE_BRIDGES_NUMBER;\r\nconst wrapTokenSymbolPrefix = process.env.REACT_APP_WRAP_TOKEN_SYMBOL_PREFIX;\r\n\r\nconst textMasking = (text, maskingChar = '.', noOfMaskingChar = 3, startingLettersLength = 5, endingLettersLength = 5) => {\r\n    return text.substring(0, startingLettersLength) + maskingChar.repeat(noOfMaskingChar) + text.slice(-endingLettersLength)\r\n}\r\n\r\nconst goToContractOnExplorer = (explorerUrl, tokenAddress) => {\r\n    if(explorerUrl !== undefined){\r\n        window.open(explorerUrl + '/address/' + tokenAddress, \"_blank\");\r\n    }\r\n}\r\n\r\nexport default class SourceTokenPopup extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            currentPageNumber: 1,\r\n            filteredToken: \"\",\r\n            symbolSortOrder: 'asc',\r\n            pinnedTokens: []\r\n        };\r\n    }\r\n\r\n    changeCurrentPage = (page) => {\r\n        this.setState({\r\n            currentPageNumber: Number(page)\r\n        })            \r\n    }\r\n\r\n    filterTokens = (token) => {\r\n        this.setState({ \r\n            filteredToken: (token).toUpperCase(),\r\n            currentPageNumber: 1\r\n        });\r\n    };\r\n\r\n    sortTokenBySymbol = (order) => {\r\n        order = order === 'asc' ? 'desc' : 'asc';\r\n        this.setState({\r\n            symbolSortOrder: order\r\n        });\r\n    }\r\n\r\n    setSourceToken = (tokenSymbol, chainId, chain, address, decimals) => {\r\n        this.props.sourceTokenSelectedCallback(tokenSymbol, chainId, chain, address, decimals);\r\n        this.props.closePopupCallback();\r\n    }\r\n\r\n    addToPinnedToken = (tokenAddress) => {\r\n        const pinnedTokens = [...this.state.pinnedTokens];\r\n        if(!pinnedTokens.includes((tokenAddress).toUpperCase())){\r\n            pinnedTokens.push((tokenAddress).toUpperCase());\r\n            this.setState({\r\n                pinnedTokens: pinnedTokens\r\n            });\r\n        }\r\n    }\r\n\r\n    removePinnedToken = (tokenAddress) => {\r\n        const pinnedTokens = [...this.state.pinnedTokens];\r\n        if(pinnedTokens.includes((tokenAddress).toUpperCase())){\r\n            var index = pinnedTokens.indexOf((tokenAddress).toUpperCase());\r\n            if (index > -1) {\r\n                pinnedTokens.splice(index, 1);\r\n                this.setState({\r\n                    pinnedTokens: pinnedTokens\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    searchAndAddToken = async() => {\r\n        // check balance first\r\n        const {response, code, error} = await BridgeApiHelper.addErc20Token(this.props.chainId, this.state.filteredToken);\r\n        console.log(response, code, error);\r\n        if(code === 201){\r\n            await this.props.onTokenAddedCallback().then(async() => {\r\n                notificationConfig.success(errors.tokenImported);\r\n                await this.props.onCustomTokenBalanceCheck(this.state.filteredToken).then(async() => {\r\n                    if(this.props.customTokenBalance == 0 || this.props.customTokenBalance === null){\r\n                        notificationConfig.error(errors.tokenCouldNotList);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        \r\n        if(error === 'A TOKEN ALREADY EXIST'){\r\n            await this.props.onCustomTokenBalanceCheck(this.state.filteredToken).then(async() => {\r\n                if(this.props.customTokenBalance == 0 || this.props.customTokenBalance === null){\r\n                    notificationConfig.error(errors.tokenCouldNotList);\r\n                }\r\n            });                    \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const pageSize = 10;\r\n        let currentPageNumber = this.state.currentPageNumber;\r\n        let pageIndex = currentPageNumber - 1;\r\n        \r\n        let filteredTokens = this.props.tokens.filter(token => {\r\n            if(\r\n              token.symbol.match(new RegExp(this.state.filteredToken, \"i\"))\r\n              ||\r\n              token.address.match(new RegExp(this.state.filteredToken, \"i\"))\r\n            ){\r\n              return token;\r\n            }\r\n        });\r\n\r\n        filteredTokens = _.orderBy(filteredTokens, ['symbol'],[this.state.symbolSortOrder]);\r\n        this.state.pinnedTokens.forEach(function(pinnedTokenAddress){\r\n            filteredTokens = _.sortBy(filteredTokens, ({address}) => address === (pinnedTokenAddress).toLowerCase() ? 0 : 1);\r\n        });\r\n        \r\n        const totalTokens = filteredTokens.length;\r\n        const tokensGroupList = _.chunk(filteredTokens, pageSize);\r\n        let tokens = tokensGroupList[pageIndex <= 0 ? 0 : pageIndex];\r\n\r\n        return (\r\n            <>\r\n                {this.props.show &&\r\n                <PopupMain>\r\n                    <CloseBtn onClick={() => this.props.closePopupCallback()}><img src={close}></img></CloseBtn>\r\n                    <ContainerPop>\r\n                        <PopTitle>\r\n                            <h1>Select a token to bridge</h1> \r\n                        </PopTitle>\r\n                        <PopRow>\r\n                            {/* <Popcol>\r\n                                <Search><input placeholder=\"Search chains\" type=\"search\" value=\"\"></input><i className=\"fa fa-search\" aria-hidden=\"true\"></i></Search>\r\n                                <SelectList>\r\n                                    <Selected>\r\n                                        <Token>\r\n                                            <img \r\n                                                src=\"\" \r\n                                                alt=\"\"\r\n                                                onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                                            ></img> WBNB\r\n                                        </Token> \r\n                                        <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                                    </Selected>\r\n                                    <Selected>\r\n                                        <Token>\r\n                                            <img \r\n                                                src=\"\" \r\n                                                alt=\"\"\r\n                                                onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                                            ></img> WBNB\r\n                                        </Token> \r\n                                        <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                                    </Selected>\r\n                                </SelectList>\r\n                            </Popcol> */}\r\n                            <Popcol>\r\n                                <Search>\r\n                                    <input \r\n                                        onChange={e => this.filterTokens(e.target.value)}\r\n                                        placeholder=\"Search token or paste address\" \r\n                                        type=\"search\"\r\n                                        value={this.state.filteredToken}>\r\n                                    </input>\r\n                                    {this.state.filteredToken.length === 0 && \r\n                                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>                                \r\n                                    }\r\n                                    {this.state.filteredToken.length > 0 && \r\n                                        <i className=\"fa fa-remove\" aria-hidden=\"true\"></i>                                \r\n                                    }                                    \r\n                                </Search>\r\n                                {totalTokens === 0 && Web3.utils.isAddress(this.state.filteredToken) && \r\n                                <SelectList>\r\n                                        <Selected>\r\n                                            <Token\r\n                                                onClick={(e) => this.searchAndAddToken()}\r\n                                            >\r\n                                                Import Token\r\n                                            </Token>\r\n                                        </Selected>\r\n                                </SelectList>                                                            \r\n                                }\r\n                                <SelectList>\r\n                                    {this.state.pinnedTokens.map(function(pinnedToken, i) {\r\n                                        const token = _.find(this.props.tokens, {address: (pinnedToken).toLowerCase() })\r\n                                        if(token !== undefined){\r\n                                            return <Selected \r\n                                                key={pinnedToken}\r\n                                                onClick={(e) => this.removePinnedToken(pinnedToken)}\r\n                                            >\r\n                                                <Token>\r\n                                                    <img \r\n                                                        src={`/images/free-listing/tokens/${(token.symbol).toLowerCase()}.png`}\r\n                                                        alt={`pinned-token-${pinnedToken}`}\r\n                                                        onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                                                    ></img> {token.symbol}\r\n                                                </Token>\r\n                                                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                                            </Selected>\r\n                                        }\r\n                                    }.bind(this))}\r\n                                </SelectList>                                \r\n                            </Popcol>\r\n                        </PopRow>\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <Thd onClick={() => this.sortTokenBySymbol(this.state.symbolSortOrder)}>\r\n                                        Tokens &nbsp;\r\n                                        <i className={`fa fa-caret-${this.state.symbolSortOrder === 'asc' ? 'down' : 'up'}`} aria-hidden=\"true\"></i>\r\n                                    </Thd>\r\n                                    <Thd>Smart contract</Thd>\r\n                                    <Thd>Original chain</Thd>\r\n                                    <Thd>Existing bridges</Thd>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {tokens !== undefined && tokens.length > 0 && tokens.map(function (token, i) {\r\n                                    \r\n                                    const networkConfig = _.find(this.props.networks, {\r\n                                        chainId: Number(token.chainId)\r\n                                    });\r\n\r\n                                    const wrappedTokens = _.filter(this.props.wrappedTokens, {\r\n                                        fromChainId: Number(token.chainId),\r\n                                        tokenSymbol: wrapTokenSymbolPrefix + (token.symbol).toUpperCase()\r\n                                    });\r\n\r\n                                    const totalWrappedTokens = wrappedTokens.length;\r\n\r\n                                    return <tr \r\n                                            key={token._id}\r\n                                        >\r\n                                            <Tcell>\r\n                                                <Token>\r\n                                                    <img \r\n                                                        className=\"cursor\"\r\n                                                        src={'/images/free-listing/tokens/' + (token.symbol).toLowerCase() + '.png'}\r\n                                                        onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                                                        alt=\"to-token-input-icon\"\r\n                                                        onClick={(e) => this.setSourceToken(\r\n                                                            token.symbol,\r\n                                                            Number(token.chainId),\r\n                                                            networkConfig.chain,\r\n                                                            token.address,\r\n                                                            token.decimals\r\n                                                        )}                                                        \r\n                                                    ></img> \r\n                                                    <span\r\n                                                        className=\"cursor\"                                                    \r\n                                                        onClick={(e) => this.setSourceToken(\r\n                                                            token.symbol,\r\n                                                            Number(token.chainId),\r\n                                                            networkConfig.chain,\r\n                                                            token.address,\r\n                                                            token.decimals\r\n                                                        )}\r\n                                                    >{token.symbol}</span>\r\n                                                </Token>\r\n                                                <Pin \r\n                                                    onClick={(e) => this.addToPinnedToken(token.address)}\r\n                                                    className={this.state.pinnedTokens.includes((token.address).toUpperCase()) ? 'cursor selected' : 'cursor'}\r\n                                                ></Pin>\r\n                                            </Tcell>\r\n                                            <Tcell\r\n                                                className=\"cursor\"\r\n                                                onClick={(e) => goToContractOnExplorer(networkConfig.explorerUrl, token.address)}\r\n                                            >\r\n                                                <TDLink>{textMasking(token.address)}</TDLink>\r\n                                            </Tcell>\r\n                                            <Tcell>\r\n                                                <Token>\r\n                                                    <img \r\n                                                        src={'/images/free-listing/chains/' + (networkConfig.chain).toLowerCase() + '.png'}\r\n                                                        onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                                                        alt=\"to-token-input-icon\"\r\n                                                    >\r\n                                                    </img> {networkConfig.chain}\r\n                                                </Token>\r\n                                                {/* <Pin className=\"selected\"></Pin> */}\r\n                                            </Tcell>                                            \r\n                                            <Tcell>\r\n                                                <BridgeGrp>\r\n                                                    <b>\r\n                                                        {\r\n                                                            wrappedTokens !== undefined && wrappedTokens.map(function(wrappedToken, i){\r\n                                                                if(visibleBridgesNumber > (i++)){\r\n                                                                    const destinationNetworkConfig = _.find(this.props.networks, {\r\n                                                                        chainId: Number(wrappedToken.toChainId)\r\n                                                                    });\r\n                                                                    \r\n                                                                    return <img \r\n                                                                        key={wrappedToken._id} \r\n                                                                        src={'/images/free-listing/chains/' + (destinationNetworkConfig.chain).toLowerCase() + '.png'}\r\n                                                                        onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                                                                        alt={destinationNetworkConfig.chain}>\r\n                                                                    </img>\r\n                                                                }\r\n                                                            }.bind(this))\r\n                                                        }\r\n                                                    </b>\r\n                                                    <span>{totalWrappedTokens > visibleBridgesNumber ? '+ ' + (totalWrappedTokens - visibleBridgesNumber) : ''}</span>\r\n                                                </BridgeGrp>\r\n                                            </Tcell>\r\n                                    </tr>\r\n                                \r\n                                }.bind(this))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Tfooter>\r\n                            <Tnav>Page \r\n                                <SelectCustom>\r\n                                    <select \r\n                                        onChange={(e) => tokensGroupList.length > 0 ? this.changeCurrentPage(e.target.value) : this.changeCurrentPage(this.state.currentPageNumber)}\r\n                                        //value={this.state.currentPageNumber}\r\n                                    >\r\n                                        { tokensGroupList.map(function(tokenPage, i){\r\n                                            let page = ++i;\r\n                                            return <option value={page} key={page}>{page}</option>\r\n                                        }.bind(this) )}\r\n                                    </select>\r\n                                </SelectCustom>\r\n                                result { totalTokens > 0 ? (pageSize * this.state.currentPageNumber) - (pageSize - 1) : 0} - {this.state.currentPageNumber * pageSize > totalTokens ? totalTokens : this.state.currentPageNumber * pageSize} of {totalTokens}\r\n                            </Tnav>   \r\n                            <p>\r\n                                <Link to=\"/freelisting\">\r\n                                    <b>\r\n                                        If you can't find your destination chain under existing bridges, you can create one in a few second\r\n                                    </b>\r\n                                </Link>\r\n                            </p> \r\n                        </Tfooter>\r\n                    </ContainerPop>\r\n                </PopupMain>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst PopupMain = styled.div `\r\n    position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 10000; background: rgba(13, 14, 19, 0.95); overflow: auto; padding: 0 0 90px;\r\n`\r\nconst ContainerPop = styled.div `\r\n    width: 1360px; margin: 0 auto;\r\n`\r\n\r\nconst CloseBtn = styled.a `\r\n    position: absolute; top: 30px; right: 30px; cursor: pointer;\r\n`\r\n\r\nconst PopTitle = styled.div `\r\n    text-align: center; padding: 90px 0 50px;\r\n    h1 {font-size: 36px; color: #fff; font-weight: bold; margin: 0 0 0;}\r\n`\r\nconst PopRow = styled.div `\r\n    display: flex; align-items: flex-start; margin: 0 -17px 48px;\r\n`\r\nconst Popcol = styled.div `\r\n    width: 100%; padding: 0 17px;\r\n`\r\nconst Search = styled.div `\r\n    position: relative; \r\n    input {\r\n        background: #21232b; border: 2px solid #000; width: 100%; height: 67px; box-sizing: border-box; color: #a6a2b0; font-size: 16px; padding: 10px 18px;\r\n    }\r\n    ::-webkit-input-placeholder { /* Edge */\r\n        color: inherit; opacity: 1;\r\n    }\r\n    :-ms-input-placeholder { /* Internet Explorer 10-11 */\r\n        color: inherit; opacity: 1;\r\n    }\r\n    ::placeholder {\r\n        color: inherit; opacity: 1;\r\n    }\r\n    .fa  {font-size: 18px; position: absolute; top: 25px; right: 20px; color: #aaa;}\r\n`\r\nconst SelectList = styled.div `\r\n    display: flex; flex-flow: wrap; margin-top: 20px; gap: 10px;\r\n`\r\nconst Selected = styled.div `\r\n    min-width: 78px; min-height: 32px; background: #3b3e4b; text-align: center; padding: 4px 7px; position: relative; cursor: pointer; transition: all 0.3s ease-in-out;\r\n    &:hover {background: #91dc27; .fa-times {visibility: visible;}}\r\n    div { \r\n        img { margin-right: 10px; width: 25px; border-radius: 50%}\r\n    }\r\n    .fa-times { position: absolute; top: 0; right: 0; color: #fff; background: #000; transform: translate(50%, -50%); font-size: 9px; height: 15px; width: 15px; line-height: 15px; text-align: center; border-radius: 15px; visibility: hidden;}\r\n`\r\nconst Table = styled.table `\r\n    width: 100%;\r\n    tr:hover { background: #191a22;}\r\n`\r\nconst Thd = styled.th `\r\n    font-size: 14px; color: #fff; padding: 15px 18px; border-top: 2px solid #3b3e4b; border-bottom: 2px solid #3b3e4b; text-align: left; font-weight: normal; width: 25%;\r\n    & + th {\r\n        border-left: 1px solid #3b3e4b\r\n    }\r\n`\r\nconst Tcell = styled.td `\r\n    font-size: 14px; color: #fff; padding: 12px 18px; border-bottom: 1px solid #3b3e4b; position: relative;\r\n    img {\r\n        width: 25px;\r\n        border-radius: 50%;\r\n    }\r\n    & + td {\r\n        border-left: 1px solid #3b3e4b\r\n    }\r\n`\r\nconst Tfooter = styled.div `\r\n    display: flex; align-items: center; justify-content: space-between; font-size: 12px; color: #aaaaaa; padding: 16px 0 0;\r\n    \r\n    p {color: #3b3e4b;}\r\n    a {color: #aaa; margin: 0 10px;}\r\n    a:hover {color: #91dc27;}\r\n`\r\nconst SelectCustom = styled.div `\r\n    display: inline-block; position: relative; margin: 0 10px;\r\n    select {background: #3b3e4b; min-width: 65px; color: #fff; font-size: 14px; border: 0; height: 30px;  border-radius: 4px; padding: 0 10px;   appearance: none;}\r\n    &:after {\r\n        content: \"\\f0d7\"; font-family: \"Font Awesome 5 Free\"; color: #aaa; font-weight: 900; position: absolute; right: 5px; top: 8px;\r\n    }\r\n`\r\nconst Tnav = styled.div `\r\n\r\n`\r\nconst TDLink = styled.a `\r\n    color: #2d52f3;\r\n`\r\nconst BridgeGrp = styled.div `\r\n    display: flex; align-items: center;\r\n    b {img {margin-right: -3px;}}\r\n    span {color: #91dc27; margin-left: 14px;}\r\n`\r\n\r\nconst Token = styled.div `\r\n    display: flex; align-items: center; color: #fff; height: 24px; line-height: 24px;\r\n    img {margin-right: 16px; display: inline-block; vertical-align: top;}\r\n`\r\nconst Pin = styled.div `\r\n    width: 16px; height: 16px; position: absolute; right: 17px; top: calc(50% - 8px); background: url(${pin}); background-size: 100%;\r\n    &.selected {background: url(${pinAct}); background-size: 100%;}\r\n`\r\n","D:\\react\\SmartSwap_frontend\\src\\components\\bridge-tokens\\DestinationTokensPopup.js",["1395","1396"],"import _ from \"lodash\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport close from \"../../assets/images/close.png\";\r\nimport pinAct from \"../../assets/images/pin.png\";\r\nimport pin from \"../../assets/images/pin-u.png\";\r\nimport pinDeact from \"../../assets/images/pind-d.png\";\r\n\r\nconst wrapTokenSymbolPrefix = process.env.REACT_APP_WRAP_TOKEN_SYMBOL_PREFIX;\r\n\r\nconst textMasking = (text, maskingChar = '.', noOfMaskingChar = 3, startingLettersLength = 5, endingLettersLength = 5) => {\r\n    return text.substring(0, startingLettersLength) + maskingChar.repeat(noOfMaskingChar) + text.slice(-endingLettersLength)\r\n}\r\n\r\nconst goToContractOnExplorer = (explorerUrl, tokenAddress) => {\r\n    if(explorerUrl !== undefined){\r\n        window.open(explorerUrl + '/address/' + tokenAddress, \"_blank\");\r\n    }\r\n}\r\n\r\nexport default class DestinationTokensPopup extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            currentPageNumber: 1,\r\n            filteredChain: \"\",\r\n            chainSortOrder: 'asc',\r\n            pinnedNetworks: []\r\n        };\r\n    }\r\n\r\n    changeCurrentPage = (page) => {\r\n        this.setState({\r\n            currentPageNumber: Number(page)\r\n        })\r\n    }\r\n\r\n    filteredChain = (chain) => {\r\n        this.setState({\r\n            filteredChain: (chain).toUpperCase(),\r\n            currentPageNumber: 1\r\n        });\r\n    };\r\n\r\n    sortTokenByChain = (order) => {\r\n        order = order === 'asc' ? 'desc' : 'asc';\r\n        this.setState({\r\n            chainSortOrder: order\r\n        });\r\n    }\r\n\r\n    setDestinationToken = (tokenSymbol, chainId, chain, address) => {\r\n        this.props.destinationTokenSelectedCallback(tokenSymbol, chainId, chain, address);\r\n        this.props.closePopupCallback();\r\n    }\r\n\r\n    goToContractOnExplorer(chainId, tokenAddress) {\r\n        const networkConfig = _.find(this.props.networks, {chainId: Number(chainId)});\r\n        if(networkConfig !== undefined){\r\n            window.open(networkConfig.explorerUrl + '/address/' + tokenAddress, \"_blank\");\r\n        }\r\n    }\r\n\r\n    addToPinnedNetwork = (chainId) => {\r\n        const pinnedNetworks = [...this.state.pinnedNetworks];\r\n        if(!pinnedNetworks.includes(Number(chainId))){\r\n            pinnedNetworks.push(Number(chainId));\r\n            this.setState({\r\n                pinnedNetworks: pinnedNetworks\r\n            });\r\n        }\r\n    }\r\n\r\n    removePinnedNetwork = (chainId) => {\r\n        const pinnedNetworks = [...this.state.pinnedNetworks];\r\n        if(pinnedNetworks.includes(Number(chainId))){\r\n            var index = pinnedNetworks.indexOf(Number(chainId));\r\n            if (index > -1) {\r\n                pinnedNetworks.splice(index, 1);\r\n                this.setState({\r\n                    pinnedNetworks: pinnedNetworks\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const pageSize = 10;\r\n        let currentPageNumber = this.state.currentPageNumber;\r\n        let pageIndex = currentPageNumber - 1;\r\n        let finalFilteredNetworks = [];\r\n        const filteredNetworks = this.props.networks.filter(network => {\r\n            if (network.chain.match(new RegExp(this.state.filteredChain, \"i\"))) {\r\n                return network;\r\n            }\r\n        });\r\n\r\n        filteredNetworks.forEach(network => {\r\n            if (Number(network.chainId) !== Number(this.props.selectedSourceToken.chainId)) {\r\n                const wrappedToken = _.find(this.props.wrappedTokens, {\r\n                    tokenSymbol: wrapTokenSymbolPrefix + (this.props.selectedSourceToken.symbol).toUpperCase(),\r\n                    fromChainId: Number(this.props.selectedSourceToken.chainId),\r\n                    toChainId: Number(network.chainId)\r\n                });\r\n\r\n                //network['selectedNetwork'] = this.state.selectedNetworks.includes(network.chainId) ? true : false;\r\n                network['isBridgeExistOnChain'] = wrappedToken === undefined ? false : true;\r\n                network['wrappedTokenAddress'] = wrappedToken !== undefined ? wrappedToken.address : undefined;\r\n                network['wrappedTokenSymbol'] = wrappedToken !== undefined ? wrappedToken.tokenSymbol : undefined;\r\n                finalFilteredNetworks.push(network);\r\n            }\r\n        });\r\n\r\n        \r\n        finalFilteredNetworks = _.orderBy(finalFilteredNetworks, ['chain'], [this.state.chainSortOrder]);\r\n\r\n        this.state.pinnedNetworks.forEach(function(networkId){\r\n            finalFilteredNetworks = _.sortBy(finalFilteredNetworks, ({chainId}) => Number(chainId) === Number(networkId) ? 0 : 1);\r\n        });\r\n\r\n        const totalNetworks = finalFilteredNetworks.length;\r\n        const networkGroupList = _.chunk(finalFilteredNetworks, pageSize);\r\n        const networks = networkGroupList[pageIndex <= 0 ? 0 : pageIndex];\r\n\r\n        return (\r\n            <>\r\n                {this.props.show &&\r\n                    <PopupMain>\r\n                        <CloseBtn onClick={() => this.props.closePopupCallback()}><img alt=\"close-btn\" src={close}></img></CloseBtn>\r\n                        <ContainerPop>\r\n                            <PopTitle>\r\n                                <h1>Select any EVM destination chain</h1>\r\n                                <p>If your destination chain is not exist, create a bridge in a few seconds and gain dVoucher rewards<i className=\"help-circle\">\r\n                                    <i\r\n                                        className=\"fas fa-question-circle protip\"\r\n                                        data-pt-position=\"top\"\r\n                                        data-pt-title=\"Claim dVouchers after creating a new bridge. dVoucher tokens are NFT reward tokens that can be exchanged for any Qonetum Foundation project tokens with the same $:$ face value through a router.\"\r\n                                    ></i>\r\n                                </i></p>\r\n                            </PopTitle>\r\n                            <PopRow>\r\n                                <Popcol>\r\n                                    <Search>\r\n                                        <input\r\n                                            onChange={e => this.filteredChain(e.target.value)}\r\n                                            placeholder=\"Search chains\"\r\n                                            type=\"search\"\r\n                                            value={this.state.filteredChain}\r\n                                        ></input>\r\n                                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                                    </Search>\r\n                                    <SelectList>\r\n                                    {this.state.pinnedNetworks.map(function(chainId, i) {\r\n                                    const network = _.find(this.props.networks, {chainId: Number(chainId) })\r\n                                    return <Selected \r\n                                        key={chainId}\r\n                                        onClick={(e) => this.removePinnedNetwork(chainId)}\r\n                                    >\r\n                                        <Token>\r\n                                            <img \r\n                                                src={`/images/free-listing/chains/${(network.chain).toLowerCase()}.png`}\r\n                                                alt={`pinned-network-${chainId}`}\r\n                                                onError={(e) => (e.currentTarget.src = '/images/free-listing/chains/default.png')} // fallback image\r\n                                            ></img> {network.chain}\r\n                                        </Token>\r\n                                        <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                                    </Selected>\r\n                                    }.bind(this))}\r\n                                    </SelectList>     \r\n                                </Popcol>\r\n                                {/* <Popcol>\r\n                                <Search><input placeholder=\"Search tokens\" type=\"search\" value=\"\"></input><i className=\"fa fa-search\" aria-hidden=\"true\"></i></Search>\r\n                                <SelectList>\r\n                                    <Selected><Token><img src={IconPop03} alt=\"\"></img> BNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop02} alt=\"\"></img> WBNB</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop04} alt=\"\"></img> BAI</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop05} alt=\"\"></img> USDT</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                    <Selected><Token><img src={IconPop06} alt=\"\"></img> BUSD</Token> <i className=\"fa fa-times\" aria-hidden=\"true\"></i></Selected>\r\n                                </SelectList>\r\n                            </Popcol> */}\r\n                            </PopRow>\r\n                            <Table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <Thd onClick={() => this.sortTokenByChain(this.state.chainSortOrder)}>\r\n                                            Blockchains &nbsp;\r\n                                            <i className={`fa fa-caret-${this.state.chainSortOrder === 'asc' ? 'down' : 'up'}`} aria-hidden=\"true\"></i>\r\n                                        </Thd>\r\n                                        <Thd>Smart contract</Thd>\r\n                                        <Thd className=\"text-center\">Bridge status</Thd>\r\n                                        <Thd className=\"text-center\">Reward &nbsp;\r\n                                            <i\r\n                                                className=\"fas fa-question-circle protip\"\r\n                                                data-pt-position=\"top\"\r\n                                                data-pt-title=\"dVoucher tokens are NFT reward tokens that can be exchanged for any Qonetum Foundation project tokens with the same $:$ face value through a router. The dVoucher reward NFT tokens can be traded on NFT marketplaces. Once dVoucher rewards are exchanged for project tokens, the newly received tokens are placed behind the Dumper Shield in a second position behind original project investors. The value of dVoucher is fixed at $0.01.\"\r\n                                            ></i>\r\n                                        </Thd>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr key=\"orignal-chain\" className=\"disabled\">\r\n                                        <Tcell>\r\n                                            <Token>\r\n                                                <img\r\n                                                    src={'/images/free-listing/chains/' + (this.props.selectedSourceToken.chain).toLowerCase() + '.png'}\r\n                                                    onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                                                    alt=\"source-chain-icon\"\r\n                                                ></img> {this.props.selectedSourceToken.chain}\r\n                                            </Token>\r\n                                            <Pin className=\"disabled\"></Pin>\r\n                                        </Tcell>\r\n                                        <Tcell \r\n                                            className=\"cursor\"\r\n                                            onClick={\r\n                                                (e) => this.goToContractOnExplorer(this.props.selectedSourceToken.chainId, this.props.selectedSourceToken.address)\r\n                                            }\r\n                                        >\r\n                                            <TDLink>{textMasking(this.props.selectedSourceToken.address)}</TDLink>\r\n                                        </Tcell>\r\n                                        <Tcell>\r\n                                            <ButtonDone>ORIGNAL CHAIN</ButtonDone>\r\n                                        </Tcell>\r\n                                        <Tcell className=\"text-center\">\r\n                                            -\r\n                                        </Tcell>\r\n                                    </tr>\r\n                                    {\r\n                                        networks !== undefined && networks.length > 0 && networks.map(function (network, i) {\r\n                                            return (\r\n                                                <tr key={network._id}>\r\n                                                    <Tcell>\r\n                                                        <Token>\r\n                                                            <img\r\n                                                                className=\"cursor\"\r\n                                                                src={'/images/free-listing/chains/' + (network.chain).toLowerCase() + '.png'}\r\n                                                                onError={(e) => (e.currentTarget.src = '/images/free-listing/tokens/default.png')} // fallback image\r\n                                                                alt=\"destination-chain-icon\"\r\n                                                                onClick={(e) => network['isBridgeExistOnChain'] === true ? this.setDestinationToken(\r\n                                                                    network['wrappedTokenSymbol'],\r\n                                                                    network.chainId,\r\n                                                                    network.chain,\r\n                                                                    network['wrappedTokenAddress']\r\n                                                                ) : e.preventDefault()}\r\n                                                            ></img>\r\n                                                            <span\r\n                                                                className=\"cursor\"                                                                \r\n                                                                onClick={(e) => network['isBridgeExistOnChain'] === true ? this.setDestinationToken(\r\n                                                                    network['wrappedTokenSymbol'],\r\n                                                                    network.chainId,\r\n                                                                    network.chain,\r\n                                                                    network['wrappedTokenAddress']\r\n                                                                ) : e.preventDefault()}                                                            \r\n                                                            >\r\n                                                            {network.chain}\r\n                                                            </span>\r\n                                                        </Token>\r\n                                                        <Pin\r\n                                                            onClick={(e) => this.addToPinnedNetwork(network.chainId)}\r\n                                                            className={this.state.pinnedNetworks.includes(Number(network.chainId)) ? 'cursor selected' : 'cursor'}\r\n                                                        ></Pin>\r\n                                                    </Tcell>\r\n                                                    <Tcell \r\n                                                        className=\"cursor\"\r\n                                                        onClick={\r\n                                                            (e) => network['wrappedTokenAddress'] !== undefined \r\n                                                            ? goToContractOnExplorer(network.explorerUrl, network['wrappedTokenAddress'])\r\n                                                            : e.preventDefault()\r\n                                                        }\r\n                                                    >\r\n                                                        {network['wrappedTokenAddress'] === undefined ? '-' : <TDLink>{textMasking(network['wrappedTokenAddress'])}</TDLink>}\r\n                                                    </Tcell>\r\n                                                    <Tcell>\r\n                                                        {network['isBridgeExistOnChain'] === true &&\r\n                                                            <ButtonDark>\r\n                                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i> Bridge Exists\r\n                                                            </ButtonDark>\r\n                                                        }\r\n\r\n                                                        {network['isBridgeExistOnChain'] === false &&\r\n\r\n                                                            <Link to={{ \r\n                                                                pathname: \"/freelisting\", \r\n                                                                state: {\r\n                                                                    sourceTokenData: this.props.selectedSourceToken,\r\n                                                                    destinationNetworkData: network\r\n                                                                }\r\n                                                            }}>\r\n                                                                <ButtonPrimary>CREATE NEW BRIDGE</ButtonPrimary>\r\n                                                            </Link>\r\n                                                        }\r\n                                                    </Tcell>\r\n                                                    <Tcell>\r\n                                                        -\r\n                                                    </Tcell>\r\n                                                </tr>\r\n                                            )\r\n                                        }.bind(this))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                            <Tfooter>\r\n                                <Tnav>Page\r\n                                    <SelectCustom>\r\n                                        <select onChange={(e) => networkGroupList.length > 0 ? this.changeCurrentPage(e.target.value) : this.changeCurrentPage(this.state.currentPageNumber)}>\r\n                                            {networkGroupList.map(function (tokenPage, i) {\r\n                                                let page = ++i;\r\n                                                return <option value={page} key={page}>{page}</option>\r\n                                            }.bind(this))}\r\n                                        </select>\r\n                                    </SelectCustom>\r\n                                    result {totalNetworks > 0 ? (pageSize * this.state.currentPageNumber) - (pageSize - 1) : 0} - {this.state.currentPageNumber * pageSize > totalNetworks ? totalNetworks : this.state.currentPageNumber * pageSize} of {totalNetworks}\r\n                                </Tnav>\r\n                                {/* <p><a href=\"#\">Read more about dVocher <i className=\"fas fa-external-link-alt\"></i></a></p> */}\r\n                            </Tfooter>\r\n                        </ContainerPop>\r\n                    </PopupMain>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst PopupMain = styled.div`\r\n    position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 10000; background: rgba(13, 14, 19, 0.95); overflow: auto; padding: 0 0 90px;\r\n`\r\nconst ContainerPop = styled.div`\r\n    width: 1360px; margin: 0 auto;\r\n`\r\nconst CloseBtn = styled.a`\r\n    position: absolute; top: 30px; right: 30px; cursor: pointer;\r\n`\r\nconst PopTitle = styled.div`\r\n    text-align: center; padding: 90px 0 50px;\r\n    h1 {font-size: 36px; color: #fff; font-weight: bold; margin: 0 0 0;}\r\n    p {font-size: 18px; margin: 25px 0 0;}\r\n`\r\nconst PopRow = styled.div`\r\n    display: flex; align-items: flex-start; margin: 0 -17px 48px;\r\n`\r\nconst Popcol = styled.div`\r\n    width: 100%; padding: 0 17px;\r\n`\r\nconst Search = styled.div`\r\n    position: relative; \r\n    input {\r\n        background: #21232b; border: 2px solid #000; width: 100%; height: 67px; box-sizing: border-box; color: #a6a2b0; font-size: 16px; padding: 10px 18px;\r\n    }\r\n    .fa  {font-size: 18px; position: absolute; top: 25px; right: 20px; color: #aaa;}\r\n`\r\nconst SelectList = styled.div`\r\n    display: flex; flex-flow: wrap; margin-top: 20px;\r\n`\r\nconst Selected = styled.div`\r\n    min-width: 78px; min-height: 32px; background: #3b3e4b; margin-right: 7px; text-align: center; padding: 4px 7px; position: relative; cursor: pointer; transition: all 0.3s ease-in-out;\r\n    &:hover {background: #91dc27; .fa-times {visibility: visible;}}\r\n    div { \r\n        img { margin-right: 10px;}\r\n    }\r\n    .fa-times { position: absolute; top: 0; right: 0; color: #fff; background: #000; transform: translate(50%, -50%); font-size: 9px; height: 15px; width: 15px; line-height: 15px; text-align: center; border-radius: 15px; visibility: hidden;}\r\n`\r\nconst Table = styled.table`\r\n    width: 100%;\r\n    tr:hover { background: #191a22;}\r\n    tr.disabled {background: #2e2f3a; color: #aaa}\r\n    tr.disabled > td > div {color: #aaa}\r\n`\r\nconst Thd = styled.th`\r\n    font-size: 14px; color: #fff; padding: 15px 18px; border-top: 2px solid #3b3e4b; border-bottom: 2px solid #3b3e4b; text-align: left; font-weight: normal; width: 20%;\r\n    &.text-center {text-align: center;}\r\n    & + th {\r\n        border-left: 1px solid #3b3e4b\r\n    }\r\n`\r\nconst Tcell = styled.td`\r\n    font-size: 14px; color: #fff; padding: 12px 18px; border-bottom: 1px solid #3b3e4b; position: relative;\r\n    img {\r\n        width: 25px;\r\n    }   \r\n    & + td {\r\n        border-left: 1px solid #3b3e4b\r\n    }\r\n`\r\nconst Tfooter = styled.div`\r\n    display: flex; align-items: center; justify-content: space-between; font-size: 12px; color: #aaaaaa; padding: 16px 0 0;\r\n    \r\n    p {color: #3b3e4b;}\r\n    a {color: #aaa; margin: 0 10px; \r\n        i {margin-left: 4px;}\r\n        &:last-child {margin-right: 0;}\r\n    }\r\n    a:hover {color: #91dc27;}\r\n`\r\nconst SelectCustom = styled.div`\r\n    display: inline-block; position: relative; margin: 0 10px;\r\n    select {background: #3b3e4b; min-width: 65px; color: #fff; font-size: 14px; border: 0; height: 30px;  border-radius: 4px; padding: 0 10px;   appearance: none;}\r\n    &:after {\r\n        content: \"\\f0d7\"; font-family: \"Font Awesome 5 Free\"; color: #aaa; font-weight: 900; position: absolute; right: 5px; top: 8px;\r\n    }\r\n`\r\nconst Tnav = styled.div`\r\n\r\n`\r\nconst TDLink = styled.a`\r\n    color: #2d52f3;\r\n`\r\nconst BridgeGrp = styled.div`\r\n    display: flex; align-items: center;\r\n    b {img {margin-right: -3px;}}\r\n    span {color: #91dc27; margin-left: 14px;}\r\n`\r\n\r\nconst Token = styled.div`\r\n    display: flex; align-items: center; color: #fff; height: 24px; line-height: 24px;\r\n    img {margin-right: 16px; display: inline-block; vertical-align: top;}\r\n`\r\nconst Pin = styled.div`\r\n    width: 16px; height: 16px; position: absolute; right: 17px; top: calc(50% - 8px); background: url(${pin}); background-size: 100%;\r\n    &.selected {background: url(${pinAct}); background-size: 100%;}\r\n    &.disabled {background: url(${pinDeact}); background-size: 100%;}\r\n`\r\nconst ButtonPrimary = styled.button`\r\n    display: block; background-color: inherit; border: 2px solid #91dc27; box-shadow: 0px 0px 10px #91dc27; color: #fff; width:100%; font-weight: bold; padding: 7px 10px; \r\n    &:hover {background: #91dc27;}\r\n`\r\nconst ButtonDone = styled.a`\r\n    color: #91dc27; text-align: center; display: block; font-weight: bold;\r\n    i {margin-right: 6px;}\r\n`\r\nconst ButtonDark = styled.a`\r\n    color: #9e9e9e; text-align: center; display: block; font-weight: bold;\r\n    i {margin-right: 6px;}\r\n`","D:\\react\\SmartSwap_frontend\\src\\components\\bridge-tokens\\CheckAuthenticityPopup.js",["1397","1398","1399","1400","1401"],"import { Container } from \"@material-ui/core\";\r\nimport React, { PureComponent } from \"react\";\r\nimport styled from 'styled-components';\r\nimport _ from \"lodash\";\r\nimport swap from \"../../assets/images/swap.png\";\r\nimport close from \"../../assets/images/close.png\";\r\n\r\nexport default class CheckAuthenticityPopup extends PureComponent {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {};\r\n    }\r\n\r\n    goToContractOnExplorer(chainId, tokenAddress) {\r\n        const networkConfig = _.find(this.props.networks, {chainId: Number(chainId)});\r\n        if(networkConfig !== undefined){\r\n            window.open(networkConfig.explorerUrl + '/address/' + tokenAddress, \"_blank\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.show &&\r\n                <PopupMain>\r\n                    <CloseBtn onClick={() => this.props.closePopupCallback()}><img src={close}></img></CloseBtn>\r\n                    <ContainerXl>\r\n                        <PopTitle>\r\n                            <h1>Checking authenticity </h1> \r\n                        </PopTitle>\r\n                        <PopRow>\r\n                            <Popcol className=\"w-40\">\r\n                                <PopPera className=\"Title\">Collateral token</PopPera>\r\n                                <PopPera>Blockchain</PopPera> \r\n                                <Token>\r\n                                    <img \r\n                                        src={'/images/free-listing/chains/' + (this.props.selectedSourceToken.chain + '.png').toLowerCase()}\r\n                                        onError={(e) => (e.currentTarget.src = '/images/free-listing/chains/default.png')} // fallback image\r\n                                    ></img> {this.props.selectedSourceToken.chain}</Token>\r\n                                <PopPera>Smart contract token address</PopPera>\r\n                                <PopLink\r\n                                    onClick={(e) => this.goToContractOnExplorer(\r\n                                        this.props.selectedSourceToken.chainId, \r\n                                        this.props.selectedSourceToken.address\r\n                                    )}\r\n                                >{this.props.selectedSourceToken.address} <sup className=\"fas fa-external-link-alt\"></sup></PopLink>\r\n                            </Popcol>\r\n                            <Popcol className=\"Nowidth\"><a><img src={swap}></img></a></Popcol>\r\n                            <Popcol className=\"w-40\">\r\n                                <PopPera className=\"Title\">New wrap token</PopPera>\r\n                                <PopPera>Blockchain </PopPera>\r\n                                <Token>\r\n                                    <img \r\n                                        src={'/images/free-listing/chains/' + (this.props.selectedDestinationToken.chain + '.png').toLowerCase()}\r\n                                        onError={(e) => (e.currentTarget.src = '/images/free-listing/chains/default.png')} // fallback image\r\n                                    ></img> {this.props.selectedDestinationToken.chain}</Token>\r\n                                <PopPera>Smart contract token address</PopPera>\r\n                                <PopLink \r\n                                    onClick={(e) => this.goToContractOnExplorer(\r\n                                        this.props.selectedDestinationToken.chainId, \r\n                                        this.props.selectedDestinationToken.address\r\n                                    )}\r\n                                >{this.props.selectedDestinationToken.address} <sup className=\"fas fa-external-link-alt\"></sup>\r\n                                </PopLink>\r\n                            </Popcol>\r\n                        </PopRow>\r\n                    </ContainerXl>\r\n                </PopupMain>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst PopupMain = styled.div `\r\n    position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 10000; background: rgba(13, 14, 19, 0.95); overflow: auto; padding: 0 0 90px; display: flex; flex-direction: column; justify-content: center;\r\n`\r\nconst CloseBtn = styled.a `\r\n    position: absolute; top: 30px; right: 30px; cursor: pointer;\r\n`\r\nconst ContainerXl = styled.div `\r\n    width: 1360px; margin: 0 auto;\r\n`\r\nconst PopTitle = styled.div `\r\n    text-align: center; padding: 90px 0 50px;\r\n    h1 {font-size: 36px; color: #fff; font-weight: bold; margin: 0 0 0;}\r\n    p {font-size: 18px; margin: 25px 0 0;}\r\n`\r\nconst PopRow = styled.div `\r\n    display: flex; align-items: flex-start; margin: 0 -17px 48px;\r\n`\r\nconst Popcol = styled.div `\r\n    width: 50%; padding: 0 17px;\r\n    &.Nowidth {width: auto; flex-grow: 1; align-self: center; padding:0; text-align: center;}\r\n    &.w-40 {width: 20%; flex-grow: 1;  padding: 0;}\r\n`\r\nconst Search = styled.div `\r\n    position: relative; \r\n    input {\r\n        background: #21232b; border: 2px solid #000; width: 100%; height: 67px; box-sizing: border-box; color: #a6a2b0; font-size: 16px; padding: 10px 18px;\r\n    }\r\n    .fa  {font-size: 18px; position: absolute; top: 25px; right: 20px; color: #aaa;}\r\n`\r\nconst SelectList = styled.div `\r\n    display: flex; flex-flow: wrap; margin-top: 20px;\r\n`\r\nconst Selected = styled.div `\r\n    min-width: 78px; min-height: 32px; background: #3b3e4b; margin-right: 7px; text-align: center; padding: 4px 7px; position: relative; cursor: pointer; transition: all 0.3s ease-in-out;\r\n    &:hover {background: #91dc27; .fa-times {visibility: visible;}}\r\n    div { \r\n        img { margin-right: 10px;}\r\n    }\r\n    .fa-times { position: absolute; top: 0; right: 0; color: #fff; background: #000; transform: translate(50%, -50%); font-size: 9px; height: 15px; width: 15px; line-height: 15px; text-align: center; border-radius: 15px; visibility: hidden;}\r\n`\r\nconst Token = styled.div `\r\n    display: flex; align-items: center; font-size: 18px; text-transform: uppercase; color: #fff; height: 24px; line-height: 24px;\r\n    img {margin-right: 16px; display: inline-block; vertical-align: top; height: 30px; width: 30px;}\r\n`\r\nconst PopPera = styled.p `\r\n    font-size: 18px; color: #fff; margin: 18px 0; \r\n    &.Title {border-bottom: 1px solid; display: table; line-height: 1;}\r\n`\r\nconst PopLink = styled.div `\r\n    color: #2d52f3; font-size: 18px;\r\n`","D:\\react\\SmartSwap_frontend\\src\\helper\\errorConstantsHelper.js",[],{"ruleId":"1402","replacedBy":"1403"},{"ruleId":"1404","replacedBy":"1405"},{"ruleId":"1406","severity":1,"message":"1407","line":2505,"column":27,"nodeType":"1408","endLine":2509,"endColumn":28},{"ruleId":"1406","severity":1,"message":"1407","line":2524,"column":31,"nodeType":"1408","endLine":2528,"endColumn":32},{"ruleId":"1406","severity":1,"message":"1407","line":2535,"column":31,"nodeType":"1408","endLine":2535,"endColumn":142},{"ruleId":"1406","severity":1,"message":"1407","line":2543,"column":31,"nodeType":"1408","endLine":2543,"endColumn":142},{"ruleId":"1406","severity":1,"message":"1407","line":2580,"column":31,"nodeType":"1408","endLine":2584,"endColumn":32},{"ruleId":"1406","severity":1,"message":"1407","line":2592,"column":31,"nodeType":"1408","endLine":2592,"endColumn":137},{"ruleId":"1406","severity":1,"message":"1407","line":2601,"column":31,"nodeType":"1408","endLine":2601,"endColumn":137},{"ruleId":"1406","severity":1,"message":"1407","line":2680,"column":80,"nodeType":"1408","endLine":2680,"endColumn":118},{"ruleId":"1409","severity":1,"message":"1410","line":2682,"column":56,"nodeType":"1411","messageId":"1412","endLine":2683,"endColumn":89},{"ruleId":"1409","severity":1,"message":"1410","line":2683,"column":95,"nodeType":"1411","messageId":"1412","endLine":2684,"endColumn":39},{"ruleId":"1406","severity":1,"message":"1407","line":2709,"column":27,"nodeType":"1408","endLine":2709,"endColumn":62},{"ruleId":"1406","severity":1,"message":"1407","line":2717,"column":27,"nodeType":"1408","endLine":2717,"endColumn":62},{"ruleId":"1406","severity":1,"message":"1407","line":486,"column":45,"nodeType":"1408","endLine":486,"endColumn":102},{"ruleId":"1413","severity":1,"message":"1414","line":486,"column":53,"nodeType":"1411","messageId":"1415","endLine":486,"endColumn":74},{"ruleId":"1406","severity":1,"message":"1407","line":510,"column":49,"nodeType":"1408","endLine":510,"endColumn":103},{"ruleId":"1413","severity":1,"message":"1414","line":510,"column":57,"nodeType":"1411","messageId":"1415","endLine":510,"endColumn":78},{"ruleId":"1416","severity":1,"message":"1417","line":126,"column":28,"nodeType":"1418","messageId":"1419","endLine":126,"endColumn":30},{"ruleId":"1416","severity":1,"message":"1417","line":210,"column":28,"nodeType":"1418","messageId":"1419","endLine":210,"endColumn":30},{"ruleId":"1420","severity":1,"message":"1421","line":268,"column":5,"nodeType":"1422","messageId":"1423","endLine":271,"endColumn":6},{"ruleId":"1406","severity":1,"message":"1407","line":2541,"column":41,"nodeType":"1408","endLine":2546,"endColumn":42},{"ruleId":"1413","severity":1,"message":"1414","line":2542,"column":48,"nodeType":"1411","messageId":"1415","endLine":2542,"endColumn":69},{"ruleId":"1406","severity":1,"message":"1407","line":2549,"column":41,"nodeType":"1408","endLine":2554,"endColumn":42},{"ruleId":"1413","severity":1,"message":"1414","line":2550,"column":48,"nodeType":"1411","messageId":"1415","endLine":2550,"endColumn":69},{"ruleId":"1406","severity":1,"message":"1407","line":2757,"column":41,"nodeType":"1408","endLine":2757,"endColumn":52},{"ruleId":"1406","severity":1,"message":"1407","line":2806,"column":41,"nodeType":"1408","endLine":2806,"endColumn":52},{"ruleId":"1406","severity":1,"message":"1407","line":2860,"column":41,"nodeType":"1408","endLine":2860,"endColumn":52},{"ruleId":"1406","severity":1,"message":"1407","line":2899,"column":33,"nodeType":"1408","endLine":2903,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":2902,"column":40,"nodeType":"1411","messageId":"1415","endLine":2902,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":2911,"column":33,"nodeType":"1408","endLine":2914,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":2912,"column":40,"nodeType":"1411","messageId":"1415","endLine":2912,"endColumn":61},{"ruleId":"1424","severity":1,"message":"1425","line":2926,"column":37,"nodeType":"1408","endLine":2926,"endColumn":68},{"ruleId":"1424","severity":1,"message":"1425","line":2996,"column":39,"nodeType":"1408","endLine":3002,"endColumn":41},{"ruleId":"1424","severity":1,"message":"1425","line":3015,"column":39,"nodeType":"1408","endLine":3021,"endColumn":41},{"ruleId":"1406","severity":1,"message":"1407","line":3043,"column":33,"nodeType":"1408","endLine":3048,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":3044,"column":40,"nodeType":"1411","messageId":"1415","endLine":3044,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":3059,"column":33,"nodeType":"1408","endLine":3063,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":3060,"column":40,"nodeType":"1411","messageId":"1415","endLine":3060,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":3081,"column":31,"nodeType":"1408","endLine":3088,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1414","line":3082,"column":38,"nodeType":"1411","messageId":"1415","endLine":3082,"endColumn":58},{"ruleId":"1426","severity":1,"message":"1427","line":3121,"column":37,"nodeType":"1408","messageId":"1428","endLine":3125,"endColumn":38,"fix":"1429"},{"ruleId":"1426","severity":1,"message":"1427","line":3156,"column":43,"nodeType":"1408","messageId":"1428","endLine":3160,"endColumn":44,"fix":"1430"},{"ruleId":"1424","severity":1,"message":"1425","line":3179,"column":45,"nodeType":"1408","endLine":3179,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":3186,"column":45,"nodeType":"1408","endLine":3189,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":3187,"column":52,"nodeType":"1411","messageId":"1415","endLine":3187,"endColumn":73},{"ruleId":"1406","severity":1,"message":"1407","line":3192,"column":45,"nodeType":"1408","endLine":3197,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":3193,"column":52,"nodeType":"1411","messageId":"1415","endLine":3193,"endColumn":73},{"ruleId":"1406","severity":1,"message":"1431","line":3203,"column":45,"nodeType":"1408","endLine":3203,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":3206,"column":45,"nodeType":"1408","endLine":3209,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":3207,"column":52,"nodeType":"1411","messageId":"1415","endLine":3207,"endColumn":73},{"ruleId":"1406","severity":1,"message":"1407","line":3235,"column":31,"nodeType":"1408","endLine":3239,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1414","line":3236,"column":38,"nodeType":"1411","messageId":"1415","endLine":3236,"endColumn":58},{"ruleId":"1406","severity":1,"message":"1407","line":3245,"column":31,"nodeType":"1408","endLine":3248,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1414","line":3246,"column":38,"nodeType":"1411","messageId":"1415","endLine":3246,"endColumn":58},{"ruleId":"1406","severity":1,"message":"1407","line":3252,"column":31,"nodeType":"1408","endLine":3255,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1414","line":3253,"column":38,"nodeType":"1411","messageId":"1415","endLine":3253,"endColumn":58},{"ruleId":"1406","severity":1,"message":"1407","line":3259,"column":31,"nodeType":"1408","endLine":3264,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1414","line":3260,"column":38,"nodeType":"1411","messageId":"1415","endLine":3260,"endColumn":58},{"ruleId":"1416","severity":1,"message":"1417","line":126,"column":28,"nodeType":"1418","messageId":"1419","endLine":126,"endColumn":30},{"ruleId":"1406","severity":1,"message":"1407","line":332,"column":25,"nodeType":"1408","endLine":332,"endColumn":183},{"ruleId":"1424","severity":1,"message":"1425","line":63,"column":65,"nodeType":"1408","endLine":63,"endColumn":155},{"ruleId":"1432","severity":1,"message":"1433","line":68,"column":53,"nodeType":"1408","endLine":68,"endColumn":149},{"ruleId":"1406","severity":1,"message":"1407","line":68,"column":53,"nodeType":"1408","endLine":68,"endColumn":149},{"ruleId":"1413","severity":1,"message":"1414","line":68,"column":61,"nodeType":"1411","messageId":"1415","endLine":68,"endColumn":82},{"ruleId":"1432","severity":1,"message":"1433","line":79,"column":37,"nodeType":"1408","endLine":79,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":79,"column":37,"nodeType":"1408","endLine":79,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":79,"column":45,"nodeType":"1411","messageId":"1415","endLine":79,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":86,"column":37,"nodeType":"1408","endLine":86,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":86,"column":37,"nodeType":"1408","endLine":86,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":86,"column":45,"nodeType":"1411","messageId":"1415","endLine":86,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":93,"column":37,"nodeType":"1408","endLine":93,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":93,"column":37,"nodeType":"1408","endLine":93,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":93,"column":45,"nodeType":"1411","messageId":"1415","endLine":93,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":100,"column":37,"nodeType":"1408","endLine":100,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":100,"column":37,"nodeType":"1408","endLine":100,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":100,"column":45,"nodeType":"1411","messageId":"1415","endLine":100,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":107,"column":37,"nodeType":"1408","endLine":107,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":107,"column":37,"nodeType":"1408","endLine":107,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":107,"column":45,"nodeType":"1411","messageId":"1415","endLine":107,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":114,"column":37,"nodeType":"1408","endLine":114,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":114,"column":37,"nodeType":"1408","endLine":114,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":114,"column":45,"nodeType":"1411","messageId":"1415","endLine":114,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":121,"column":37,"nodeType":"1408","endLine":121,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":121,"column":37,"nodeType":"1408","endLine":121,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":121,"column":45,"nodeType":"1411","messageId":"1415","endLine":121,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":128,"column":37,"nodeType":"1408","endLine":128,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":128,"column":37,"nodeType":"1408","endLine":128,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":128,"column":45,"nodeType":"1411","messageId":"1415","endLine":128,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":135,"column":37,"nodeType":"1408","endLine":135,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":135,"column":37,"nodeType":"1408","endLine":135,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":135,"column":45,"nodeType":"1411","messageId":"1415","endLine":135,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":142,"column":37,"nodeType":"1408","endLine":142,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":142,"column":37,"nodeType":"1408","endLine":142,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":142,"column":45,"nodeType":"1411","messageId":"1415","endLine":142,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":149,"column":37,"nodeType":"1408","endLine":149,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":149,"column":37,"nodeType":"1408","endLine":149,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":149,"column":45,"nodeType":"1411","messageId":"1415","endLine":149,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":156,"column":17,"nodeType":"1408","endLine":156,"endColumn":70},{"ruleId":"1406","severity":1,"message":"1407","line":156,"column":17,"nodeType":"1408","endLine":156,"endColumn":70},{"ruleId":"1413","severity":1,"message":"1414","line":156,"column":25,"nodeType":"1411","messageId":"1415","endLine":156,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":203,"column":29,"nodeType":"1408","endLine":203,"endColumn":137},{"ruleId":"1413","severity":1,"message":"1414","line":203,"column":37,"nodeType":"1411","messageId":"1415","endLine":203,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":204,"column":29,"nodeType":"1408","endLine":204,"endColumn":148},{"ruleId":"1413","severity":1,"message":"1414","line":204,"column":37,"nodeType":"1411","messageId":"1415","endLine":204,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":233,"column":29,"nodeType":"1408","endLine":233,"endColumn":138},{"ruleId":"1413","severity":1,"message":"1414","line":233,"column":37,"nodeType":"1411","messageId":"1415","endLine":233,"endColumn":57},{"ruleId":"1432","severity":1,"message":"1433","line":264,"column":17,"nodeType":"1408","endLine":264,"endColumn":128},{"ruleId":"1406","severity":1,"message":"1407","line":264,"column":17,"nodeType":"1408","endLine":264,"endColumn":128},{"ruleId":"1413","severity":1,"message":"1414","line":264,"column":25,"nodeType":"1411","messageId":"1415","endLine":264,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":188,"column":21,"nodeType":"1408","endLine":188,"endColumn":103},{"ruleId":"1413","severity":1,"message":"1414","line":188,"column":29,"nodeType":"1411","messageId":"1415","endLine":188,"endColumn":46},{"ruleId":"1432","severity":1,"message":"1433","line":66,"column":17,"nodeType":"1408","endLine":66,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":66,"column":17,"nodeType":"1408","endLine":66,"endColumn":129},{"ruleId":"1413","severity":1,"message":"1414","line":66,"column":25,"nodeType":"1411","messageId":"1415","endLine":66,"endColumn":46},{"ruleId":"1426","severity":1,"message":"1427","line":96,"column":11,"nodeType":"1408","messageId":"1428","endLine":96,"endColumn":81,"fix":"1434"},{"ruleId":"1406","severity":1,"message":"1407","line":132,"column":11,"nodeType":"1408","endLine":137,"endColumn":12},{"ruleId":"1413","severity":1,"message":"1414","line":133,"column":18,"nodeType":"1411","messageId":"1415","endLine":133,"endColumn":39},{"ruleId":"1406","severity":1,"message":"1407","line":152,"column":15,"nodeType":"1408","endLine":152,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1414","line":152,"column":23,"nodeType":"1411","messageId":"1415","endLine":152,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":161,"column":15,"nodeType":"1408","endLine":161,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":161,"column":23,"nodeType":"1411","messageId":"1415","endLine":161,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":170,"column":15,"nodeType":"1408","endLine":170,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":170,"column":23,"nodeType":"1411","messageId":"1415","endLine":170,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":179,"column":15,"nodeType":"1408","endLine":179,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":179,"column":23,"nodeType":"1411","messageId":"1415","endLine":179,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":188,"column":15,"nodeType":"1408","endLine":188,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":188,"column":23,"nodeType":"1411","messageId":"1415","endLine":188,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":197,"column":15,"nodeType":"1408","endLine":197,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":197,"column":23,"nodeType":"1411","messageId":"1415","endLine":197,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":206,"column":15,"nodeType":"1408","endLine":206,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":206,"column":23,"nodeType":"1411","messageId":"1415","endLine":206,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":215,"column":15,"nodeType":"1408","endLine":215,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":215,"column":23,"nodeType":"1411","messageId":"1415","endLine":215,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":224,"column":15,"nodeType":"1408","endLine":224,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":224,"column":23,"nodeType":"1411","messageId":"1415","endLine":224,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":233,"column":15,"nodeType":"1408","endLine":233,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":233,"column":23,"nodeType":"1411","messageId":"1415","endLine":233,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":242,"column":15,"nodeType":"1408","endLine":242,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":242,"column":23,"nodeType":"1411","messageId":"1415","endLine":242,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":251,"column":15,"nodeType":"1408","endLine":251,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":251,"column":23,"nodeType":"1411","messageId":"1415","endLine":251,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":260,"column":15,"nodeType":"1408","endLine":260,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":260,"column":23,"nodeType":"1411","messageId":"1415","endLine":260,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":269,"column":15,"nodeType":"1408","endLine":269,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":269,"column":23,"nodeType":"1411","messageId":"1415","endLine":269,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":278,"column":15,"nodeType":"1408","endLine":278,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":278,"column":23,"nodeType":"1411","messageId":"1415","endLine":278,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":287,"column":15,"nodeType":"1408","endLine":287,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":287,"column":23,"nodeType":"1411","messageId":"1415","endLine":287,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":28,"column":57,"nodeType":"1408","endLine":28,"endColumn":87},{"ruleId":"1413","severity":1,"message":"1414","line":28,"column":65,"nodeType":"1411","messageId":"1415","endLine":28,"endColumn":86},{"ruleId":"1432","severity":1,"message":"1433","line":38,"column":33,"nodeType":"1408","endLine":38,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":38,"column":33,"nodeType":"1408","endLine":38,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":38,"column":41,"nodeType":"1411","messageId":"1415","endLine":38,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":44,"column":33,"nodeType":"1408","endLine":44,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":44,"column":33,"nodeType":"1408","endLine":44,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":44,"column":41,"nodeType":"1411","messageId":"1415","endLine":44,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":50,"column":33,"nodeType":"1408","endLine":50,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":50,"column":33,"nodeType":"1408","endLine":50,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":50,"column":41,"nodeType":"1411","messageId":"1415","endLine":50,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":56,"column":33,"nodeType":"1408","endLine":56,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":56,"column":33,"nodeType":"1408","endLine":56,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":56,"column":41,"nodeType":"1411","messageId":"1415","endLine":56,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":62,"column":33,"nodeType":"1408","endLine":62,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":62,"column":33,"nodeType":"1408","endLine":62,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":62,"column":41,"nodeType":"1411","messageId":"1415","endLine":62,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":68,"column":33,"nodeType":"1408","endLine":68,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":68,"column":33,"nodeType":"1408","endLine":68,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":68,"column":41,"nodeType":"1411","messageId":"1415","endLine":68,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":74,"column":33,"nodeType":"1408","endLine":74,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":74,"column":33,"nodeType":"1408","endLine":74,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":74,"column":41,"nodeType":"1411","messageId":"1415","endLine":74,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":80,"column":33,"nodeType":"1408","endLine":80,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":80,"column":33,"nodeType":"1408","endLine":80,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":80,"column":41,"nodeType":"1411","messageId":"1415","endLine":80,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":86,"column":33,"nodeType":"1408","endLine":86,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":86,"column":33,"nodeType":"1408","endLine":86,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":86,"column":41,"nodeType":"1411","messageId":"1415","endLine":86,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":92,"column":33,"nodeType":"1408","endLine":92,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":92,"column":33,"nodeType":"1408","endLine":92,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":92,"column":41,"nodeType":"1411","messageId":"1415","endLine":92,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":98,"column":33,"nodeType":"1408","endLine":98,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":98,"column":33,"nodeType":"1408","endLine":98,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":98,"column":41,"nodeType":"1411","messageId":"1415","endLine":98,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":104,"column":33,"nodeType":"1408","endLine":104,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":104,"column":33,"nodeType":"1408","endLine":104,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":104,"column":41,"nodeType":"1411","messageId":"1415","endLine":104,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":109,"column":17,"nodeType":"1408","endLine":109,"endColumn":70},{"ruleId":"1406","severity":1,"message":"1407","line":109,"column":17,"nodeType":"1408","endLine":109,"endColumn":70},{"ruleId":"1413","severity":1,"message":"1414","line":109,"column":25,"nodeType":"1411","messageId":"1415","endLine":109,"endColumn":46},{"ruleId":"1416","severity":1,"message":"1417","line":91,"column":32,"nodeType":"1418","messageId":"1419","endLine":91,"endColumn":34},{"ruleId":"1406","severity":1,"message":"1407","line":69,"column":17,"nodeType":"1408","endLine":72,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":70,"column":24,"nodeType":"1411","messageId":"1415","endLine":70,"endColumn":45},{"ruleId":"1406","severity":1,"message":"1407","line":92,"column":17,"nodeType":"1408","endLine":92,"endColumn":29},{"ruleId":"1406","severity":1,"message":"1407","line":95,"column":17,"nodeType":"1408","endLine":102,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":96,"column":24,"nodeType":"1411","messageId":"1415","endLine":96,"endColumn":45},{"ruleId":"1406","severity":1,"message":"1407","line":106,"column":19,"nodeType":"1408","endLine":112,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":107,"column":26,"nodeType":"1411","messageId":"1415","endLine":107,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":115,"column":19,"nodeType":"1408","endLine":121,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":116,"column":26,"nodeType":"1411","messageId":"1415","endLine":116,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":124,"column":19,"nodeType":"1408","endLine":130,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":125,"column":26,"nodeType":"1411","messageId":"1415","endLine":125,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":133,"column":19,"nodeType":"1408","endLine":139,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":134,"column":26,"nodeType":"1411","messageId":"1415","endLine":134,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":142,"column":19,"nodeType":"1408","endLine":147,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":143,"column":26,"nodeType":"1411","messageId":"1415","endLine":143,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":150,"column":19,"nodeType":"1408","endLine":156,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":151,"column":26,"nodeType":"1411","messageId":"1415","endLine":151,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":159,"column":19,"nodeType":"1408","endLine":159,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":159,"column":27,"nodeType":"1411","messageId":"1415","endLine":159,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":160,"column":19,"nodeType":"1408","endLine":160,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":160,"column":27,"nodeType":"1411","messageId":"1415","endLine":160,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":164,"column":17,"nodeType":"1408","endLine":171,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":165,"column":24,"nodeType":"1411","messageId":"1415","endLine":165,"endColumn":45},{"ruleId":"1426","severity":1,"message":"1427","line":176,"column":19,"nodeType":"1408","messageId":"1428","endLine":179,"endColumn":20,"fix":"1435"},{"ruleId":"1426","severity":1,"message":"1427","line":185,"column":19,"nodeType":"1408","messageId":"1428","endLine":188,"endColumn":20,"fix":"1436"},{"ruleId":"1406","severity":1,"message":"1407","line":211,"column":17,"nodeType":"1408","endLine":218,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":212,"column":24,"nodeType":"1411","messageId":"1415","endLine":212,"endColumn":45},{"ruleId":"1426","severity":1,"message":"1427","line":223,"column":19,"nodeType":"1408","messageId":"1428","endLine":223,"endColumn":77,"fix":"1437"},{"ruleId":"1426","severity":1,"message":"1427","line":226,"column":19,"nodeType":"1408","messageId":"1428","endLine":226,"endColumn":77,"fix":"1438"},{"ruleId":"1406","severity":1,"message":"1407","line":232,"column":17,"nodeType":"1408","endLine":239,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":233,"column":24,"nodeType":"1411","messageId":"1415","endLine":233,"endColumn":45},{"ruleId":"1406","severity":1,"message":"1407","line":243,"column":19,"nodeType":"1408","endLine":248,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":244,"column":26,"nodeType":"1411","messageId":"1415","endLine":244,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":251,"column":19,"nodeType":"1408","endLine":251,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":251,"column":27,"nodeType":"1411","messageId":"1415","endLine":251,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":252,"column":19,"nodeType":"1408","endLine":252,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":252,"column":27,"nodeType":"1411","messageId":"1415","endLine":252,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":253,"column":19,"nodeType":"1408","endLine":253,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":253,"column":27,"nodeType":"1411","messageId":"1415","endLine":253,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":255,"column":21,"nodeType":"1408","endLine":262,"endColumn":22},{"ruleId":"1413","severity":1,"message":"1414","line":256,"column":28,"nodeType":"1411","messageId":"1415","endLine":256,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":273,"column":17,"nodeType":"1408","endLine":273,"endColumn":47},{"ruleId":"1413","severity":1,"message":"1414","line":273,"column":25,"nodeType":"1411","messageId":"1415","endLine":273,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":290,"column":19,"nodeType":"1408","endLine":290,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":290,"column":27,"nodeType":"1411","messageId":"1415","endLine":290,"endColumn":48},{"ruleId":"1439","severity":1,"message":"1440","line":11,"column":5,"nodeType":"1441","messageId":"1442","endLine":13,"endColumn":6},{"ruleId":"1432","severity":1,"message":"1433","line":48,"column":17,"nodeType":"1408","endLine":48,"endColumn":135},{"ruleId":"1406","severity":1,"message":"1407","line":48,"column":17,"nodeType":"1408","endLine":48,"endColumn":135},{"ruleId":"1413","severity":1,"message":"1414","line":48,"column":25,"nodeType":"1411","messageId":"1415","endLine":48,"endColumn":46},{"ruleId":"1426","severity":1,"message":"1427","line":55,"column":76,"nodeType":"1408","messageId":"1428","endLine":55,"endColumn":149,"fix":"1443"},{"ruleId":"1432","severity":1,"message":"1433","line":55,"column":76,"nodeType":"1408","endLine":55,"endColumn":149},{"ruleId":"1424","severity":1,"message":"1425","line":58,"column":72,"nodeType":"1408","endLine":58,"endColumn":264},{"ruleId":"1426","severity":1,"message":"1427","line":64,"column":76,"nodeType":"1408","messageId":"1428","endLine":64,"endColumn":151,"fix":"1444"},{"ruleId":"1432","severity":1,"message":"1433","line":64,"column":76,"nodeType":"1408","endLine":64,"endColumn":151},{"ruleId":"1424","severity":1,"message":"1425","line":67,"column":72,"nodeType":"1408","endLine":67,"endColumn":264},{"ruleId":"1426","severity":1,"message":"1427","line":73,"column":76,"nodeType":"1408","messageId":"1428","endLine":73,"endColumn":150,"fix":"1445"},{"ruleId":"1432","severity":1,"message":"1433","line":73,"column":76,"nodeType":"1408","endLine":73,"endColumn":150},{"ruleId":"1424","severity":1,"message":"1425","line":76,"column":72,"nodeType":"1408","endLine":76,"endColumn":264},{"ruleId":"1426","severity":1,"message":"1427","line":83,"column":76,"nodeType":"1408","messageId":"1428","endLine":83,"endColumn":149,"fix":"1446"},{"ruleId":"1432","severity":1,"message":"1433","line":83,"column":76,"nodeType":"1408","endLine":83,"endColumn":149},{"ruleId":"1424","severity":1,"message":"1425","line":86,"column":72,"nodeType":"1408","endLine":86,"endColumn":264},{"ruleId":"1426","severity":1,"message":"1427","line":92,"column":76,"nodeType":"1408","messageId":"1428","endLine":92,"endColumn":165,"fix":"1447"},{"ruleId":"1432","severity":1,"message":"1433","line":92,"column":76,"nodeType":"1408","endLine":92,"endColumn":165},{"ruleId":"1424","severity":1,"message":"1425","line":95,"column":72,"nodeType":"1408","endLine":95,"endColumn":286},{"ruleId":"1426","severity":1,"message":"1427","line":101,"column":76,"nodeType":"1408","messageId":"1428","endLine":101,"endColumn":175,"fix":"1448"},{"ruleId":"1432","severity":1,"message":"1433","line":101,"column":76,"nodeType":"1408","endLine":101,"endColumn":175},{"ruleId":"1424","severity":1,"message":"1425","line":104,"column":72,"nodeType":"1408","endLine":104,"endColumn":276},{"ruleId":"1426","severity":1,"message":"1427","line":110,"column":76,"nodeType":"1408","messageId":"1428","endLine":110,"endColumn":166,"fix":"1449"},{"ruleId":"1432","severity":1,"message":"1433","line":110,"column":76,"nodeType":"1408","endLine":110,"endColumn":166},{"ruleId":"1426","severity":1,"message":"1427","line":118,"column":76,"nodeType":"1408","messageId":"1428","endLine":118,"endColumn":170,"fix":"1450"},{"ruleId":"1432","severity":1,"message":"1433","line":118,"column":76,"nodeType":"1408","endLine":118,"endColumn":170},{"ruleId":"1424","severity":1,"message":"1425","line":121,"column":72,"nodeType":"1408","endLine":121,"endColumn":256},{"ruleId":"1426","severity":1,"message":"1427","line":182,"column":76,"nodeType":"1408","messageId":"1428","endLine":182,"endColumn":178,"fix":"1451"},{"ruleId":"1432","severity":1,"message":"1433","line":182,"column":76,"nodeType":"1408","endLine":182,"endColumn":178},{"ruleId":"1426","severity":1,"message":"1427","line":191,"column":76,"nodeType":"1408","messageId":"1428","endLine":191,"endColumn":168,"fix":"1452"},{"ruleId":"1432","severity":1,"message":"1433","line":191,"column":76,"nodeType":"1408","endLine":191,"endColumn":168},{"ruleId":"1432","severity":1,"message":"1433","line":220,"column":76,"nodeType":"1408","endLine":220,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":220,"column":76,"nodeType":"1408","endLine":220,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":230,"column":76,"nodeType":"1408","endLine":230,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":230,"column":76,"nodeType":"1408","endLine":230,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":239,"column":76,"nodeType":"1408","endLine":239,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":239,"column":76,"nodeType":"1408","endLine":239,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":248,"column":76,"nodeType":"1408","endLine":248,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":248,"column":76,"nodeType":"1408","endLine":248,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":266,"column":76,"nodeType":"1408","endLine":266,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":266,"column":76,"nodeType":"1408","endLine":266,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":275,"column":76,"nodeType":"1408","endLine":275,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":275,"column":76,"nodeType":"1408","endLine":275,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":284,"column":76,"nodeType":"1408","endLine":284,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":284,"column":76,"nodeType":"1408","endLine":284,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":370,"column":17,"nodeType":"1408","endLine":370,"endColumn":121},{"ruleId":"1406","severity":1,"message":"1407","line":370,"column":17,"nodeType":"1408","endLine":370,"endColumn":121},{"ruleId":"1413","severity":1,"message":"1414","line":370,"column":25,"nodeType":"1411","messageId":"1415","endLine":370,"endColumn":46},{"ruleId":"1432","severity":1,"message":"1433","line":111,"column":17,"nodeType":"1408","endLine":111,"endColumn":133},{"ruleId":"1406","severity":1,"message":"1407","line":111,"column":17,"nodeType":"1408","endLine":111,"endColumn":133},{"ruleId":"1413","severity":1,"message":"1414","line":111,"column":25,"nodeType":"1411","messageId":"1415","endLine":111,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":52,"column":25,"nodeType":"1408","endLine":52,"endColumn":129},{"ruleId":"1413","severity":1,"message":"1414","line":52,"column":33,"nodeType":"1411","messageId":"1415","endLine":52,"endColumn":53},{"ruleId":"1406","severity":1,"message":"1407","line":53,"column":25,"nodeType":"1408","endLine":53,"endColumn":129},{"ruleId":"1413","severity":1,"message":"1414","line":53,"column":33,"nodeType":"1411","messageId":"1415","endLine":53,"endColumn":53},{"ruleId":"1406","severity":1,"message":"1407","line":54,"column":25,"nodeType":"1408","endLine":54,"endColumn":129},{"ruleId":"1413","severity":1,"message":"1414","line":54,"column":33,"nodeType":"1411","messageId":"1415","endLine":54,"endColumn":53},{"ruleId":"1432","severity":1,"message":"1433","line":88,"column":17,"nodeType":"1408","endLine":88,"endColumn":126},{"ruleId":"1406","severity":1,"message":"1407","line":88,"column":17,"nodeType":"1408","endLine":88,"endColumn":126},{"ruleId":"1413","severity":1,"message":"1414","line":88,"column":25,"nodeType":"1411","messageId":"1415","endLine":88,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":52,"column":29,"nodeType":"1408","endLine":52,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":52,"column":37,"nodeType":"1411","messageId":"1415","endLine":52,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":54,"column":29,"nodeType":"1408","endLine":54,"endColumn":147},{"ruleId":"1413","severity":1,"message":"1414","line":54,"column":37,"nodeType":"1411","messageId":"1415","endLine":54,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":55,"column":29,"nodeType":"1408","endLine":55,"endColumn":147},{"ruleId":"1413","severity":1,"message":"1414","line":55,"column":37,"nodeType":"1411","messageId":"1415","endLine":55,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":64,"column":29,"nodeType":"1408","endLine":64,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":64,"column":37,"nodeType":"1411","messageId":"1415","endLine":64,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":81,"column":29,"nodeType":"1408","endLine":81,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":81,"column":37,"nodeType":"1411","messageId":"1415","endLine":81,"endColumn":57},{"ruleId":"1432","severity":1,"message":"1433","line":94,"column":17,"nodeType":"1408","endLine":94,"endColumn":126},{"ruleId":"1406","severity":1,"message":"1407","line":94,"column":17,"nodeType":"1408","endLine":94,"endColumn":126},{"ruleId":"1413","severity":1,"message":"1414","line":94,"column":25,"nodeType":"1411","messageId":"1415","endLine":94,"endColumn":46},{"ruleId":"1426","severity":1,"message":"1427","line":19,"column":21,"nodeType":"1408","messageId":"1428","endLine":19,"endColumn":93,"fix":"1453"},{"ruleId":"1426","severity":1,"message":"1427","line":35,"column":33,"nodeType":"1408","messageId":"1428","endLine":35,"endColumn":108,"fix":"1454"},{"ruleId":"1424","severity":1,"message":"1425","line":51,"column":37,"nodeType":"1408","endLine":51,"endColumn":69},{"ruleId":"1406","severity":1,"message":"1431","line":61,"column":37,"nodeType":"1408","endLine":61,"endColumn":69},{"ruleId":"1406","severity":1,"message":"1431","line":64,"column":41,"nodeType":"1408","endLine":64,"endColumn":73},{"ruleId":"1406","severity":1,"message":"1407","line":67,"column":45,"nodeType":"1408","endLine":70,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":68,"column":54,"nodeType":"1411","messageId":"1415","endLine":68,"endColumn":75},{"ruleId":"1406","severity":1,"message":"1407","line":73,"column":45,"nodeType":"1408","endLine":78,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":74,"column":54,"nodeType":"1411","messageId":"1415","endLine":74,"endColumn":75},{"ruleId":"1406","severity":1,"message":"1407","line":52,"column":29,"nodeType":"1408","endLine":52,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":52,"column":37,"nodeType":"1411","messageId":"1415","endLine":52,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":53,"column":29,"nodeType":"1408","endLine":53,"endColumn":147},{"ruleId":"1413","severity":1,"message":"1414","line":53,"column":37,"nodeType":"1411","messageId":"1415","endLine":53,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":72,"column":29,"nodeType":"1408","endLine":72,"endColumn":137},{"ruleId":"1413","severity":1,"message":"1414","line":72,"column":37,"nodeType":"1411","messageId":"1415","endLine":72,"endColumn":57},{"ruleId":"1432","severity":1,"message":"1433","line":160,"column":17,"nodeType":"1408","endLine":160,"endColumn":126},{"ruleId":"1406","severity":1,"message":"1407","line":160,"column":17,"nodeType":"1408","endLine":160,"endColumn":126},{"ruleId":"1413","severity":1,"message":"1414","line":160,"column":25,"nodeType":"1411","messageId":"1415","endLine":160,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":696,"column":81,"nodeType":"1411","messageId":"1415","endLine":696,"endColumn":102},{"ruleId":"1406","severity":1,"message":"1407","line":847,"column":41,"nodeType":"1408","endLine":851,"endColumn":42},{"ruleId":"1413","severity":1,"message":"1414","line":848,"column":50,"nodeType":"1411","messageId":"1415","endLine":848,"endColumn":70},{"ruleId":"1406","severity":1,"message":"1407","line":881,"column":49,"nodeType":"1408","endLine":881,"endColumn":104},{"ruleId":"1413","severity":1,"message":"1414","line":881,"column":57,"nodeType":"1411","messageId":"1415","endLine":881,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":1056,"column":49,"nodeType":"1408","endLine":1056,"endColumn":104},{"ruleId":"1413","severity":1,"message":"1414","line":1056,"column":57,"nodeType":"1411","messageId":"1415","endLine":1056,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":1089,"column":49,"nodeType":"1408","endLine":1089,"endColumn":104},{"ruleId":"1413","severity":1,"message":"1414","line":1089,"column":57,"nodeType":"1411","messageId":"1415","endLine":1089,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":1229,"column":49,"nodeType":"1408","endLine":1229,"endColumn":104},{"ruleId":"1413","severity":1,"message":"1414","line":1229,"column":57,"nodeType":"1411","messageId":"1415","endLine":1229,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":1255,"column":49,"nodeType":"1408","endLine":1255,"endColumn":145},{"ruleId":"1413","severity":1,"message":"1414","line":1255,"column":57,"nodeType":"1411","messageId":"1415","endLine":1255,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":43,"column":17,"nodeType":"1408","endLine":43,"endColumn":56},{"ruleId":"1413","severity":1,"message":"1414","line":43,"column":25,"nodeType":"1411","messageId":"1415","endLine":43,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":56,"column":13,"nodeType":"1408","endLine":56,"endColumn":59},{"ruleId":"1413","severity":1,"message":"1414","line":56,"column":21,"nodeType":"1411","messageId":"1415","endLine":56,"endColumn":42},{"ruleId":"1432","severity":1,"message":"1433","line":57,"column":13,"nodeType":"1408","endLine":57,"endColumn":63},{"ruleId":"1406","severity":1,"message":"1407","line":57,"column":13,"nodeType":"1408","endLine":57,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1414","line":57,"column":21,"nodeType":"1411","messageId":"1415","endLine":57,"endColumn":42},{"ruleId":"1424","severity":1,"message":"1425","line":57,"column":37,"nodeType":"1408","endLine":57,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":58,"column":37,"nodeType":"1408","endLine":58,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":62,"column":37,"nodeType":"1408","endLine":62,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":63,"column":37,"nodeType":"1408","endLine":63,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":67,"column":37,"nodeType":"1408","endLine":67,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":68,"column":37,"nodeType":"1408","endLine":68,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":72,"column":37,"nodeType":"1408","endLine":72,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":73,"column":37,"nodeType":"1408","endLine":73,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":77,"column":37,"nodeType":"1408","endLine":77,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":78,"column":37,"nodeType":"1408","endLine":78,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":82,"column":37,"nodeType":"1408","endLine":82,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":83,"column":37,"nodeType":"1408","endLine":83,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":63,"column":107,"nodeType":"1408","endLine":63,"endColumn":129},{"ruleId":"1424","severity":1,"message":"1425","line":66,"column":107,"nodeType":"1408","endLine":66,"endColumn":129},{"ruleId":"1424","severity":1,"message":"1425","line":69,"column":107,"nodeType":"1408","endLine":69,"endColumn":129},{"ruleId":"1424","severity":1,"message":"1425","line":72,"column":92,"nodeType":"1408","endLine":72,"endColumn":114},{"ruleId":"1424","severity":1,"message":"1425","line":75,"column":92,"nodeType":"1408","endLine":75,"endColumn":114},{"ruleId":"1424","severity":1,"message":"1425","line":78,"column":92,"nodeType":"1408","endLine":78,"endColumn":114},{"ruleId":"1424","severity":1,"message":"1425","line":59,"column":37,"nodeType":"1408","endLine":59,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":60,"column":37,"nodeType":"1408","endLine":60,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":62,"column":32,"nodeType":"1408","endLine":62,"endColumn":50},{"ruleId":"1424","severity":1,"message":"1425","line":67,"column":37,"nodeType":"1408","endLine":67,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":68,"column":37,"nodeType":"1408","endLine":68,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":81,"column":37,"nodeType":"1408","endLine":81,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":82,"column":37,"nodeType":"1408","endLine":82,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":84,"column":32,"nodeType":"1408","endLine":84,"endColumn":50},{"ruleId":"1424","severity":1,"message":"1425","line":89,"column":37,"nodeType":"1408","endLine":89,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":90,"column":37,"nodeType":"1408","endLine":90,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":103,"column":37,"nodeType":"1408","endLine":103,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":104,"column":37,"nodeType":"1408","endLine":104,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":106,"column":32,"nodeType":"1408","endLine":106,"endColumn":50},{"ruleId":"1424","severity":1,"message":"1425","line":111,"column":37,"nodeType":"1408","endLine":111,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":112,"column":37,"nodeType":"1408","endLine":112,"endColumn":59},{"ruleId":"1402","replacedBy":"1455"},{"ruleId":"1404","replacedBy":"1456"},{"ruleId":"1416","severity":1,"message":"1417","line":127,"column":28,"nodeType":"1418","messageId":"1419","endLine":127,"endColumn":30},{"ruleId":"1416","severity":1,"message":"1417","line":126,"column":28,"nodeType":"1418","messageId":"1419","endLine":126,"endColumn":30},{"ruleId":"1406","severity":1,"message":"1407","line":332,"column":25,"nodeType":"1408","endLine":332,"endColumn":183},{"ruleId":"1406","severity":1,"message":"1407","line":486,"column":45,"nodeType":"1408","endLine":486,"endColumn":102},{"ruleId":"1413","severity":1,"message":"1414","line":486,"column":53,"nodeType":"1411","messageId":"1415","endLine":486,"endColumn":74},{"ruleId":"1406","severity":1,"message":"1407","line":510,"column":49,"nodeType":"1408","endLine":510,"endColumn":103},{"ruleId":"1413","severity":1,"message":"1414","line":510,"column":57,"nodeType":"1411","messageId":"1415","endLine":510,"endColumn":78},{"ruleId":"1406","severity":1,"message":"1407","line":2505,"column":27,"nodeType":"1408","endLine":2509,"endColumn":28},{"ruleId":"1406","severity":1,"message":"1407","line":2524,"column":31,"nodeType":"1408","endLine":2528,"endColumn":32},{"ruleId":"1406","severity":1,"message":"1407","line":2535,"column":31,"nodeType":"1408","endLine":2535,"endColumn":142},{"ruleId":"1406","severity":1,"message":"1407","line":2543,"column":31,"nodeType":"1408","endLine":2543,"endColumn":142},{"ruleId":"1406","severity":1,"message":"1407","line":2580,"column":31,"nodeType":"1408","endLine":2584,"endColumn":32},{"ruleId":"1406","severity":1,"message":"1407","line":2592,"column":31,"nodeType":"1408","endLine":2592,"endColumn":137},{"ruleId":"1406","severity":1,"message":"1407","line":2601,"column":31,"nodeType":"1408","endLine":2601,"endColumn":137},{"ruleId":"1406","severity":1,"message":"1407","line":2680,"column":80,"nodeType":"1408","endLine":2680,"endColumn":118},{"ruleId":"1409","severity":1,"message":"1410","line":2682,"column":56,"nodeType":"1411","messageId":"1412","endLine":2683,"endColumn":89},{"ruleId":"1409","severity":1,"message":"1410","line":2683,"column":95,"nodeType":"1411","messageId":"1412","endLine":2684,"endColumn":39},{"ruleId":"1406","severity":1,"message":"1407","line":2709,"column":27,"nodeType":"1408","endLine":2709,"endColumn":62},{"ruleId":"1406","severity":1,"message":"1407","line":2717,"column":27,"nodeType":"1408","endLine":2717,"endColumn":62},{"ruleId":"1416","severity":1,"message":"1417","line":223,"column":28,"nodeType":"1418","messageId":"1419","endLine":223,"endColumn":30},{"ruleId":"1406","severity":1,"message":"1407","line":2389,"column":37,"nodeType":"1408","endLine":2389,"endColumn":49},{"ruleId":"1424","severity":1,"message":"1425","line":2389,"column":49,"nodeType":"1408","endLine":2389,"endColumn":81},{"ruleId":"1406","severity":1,"message":"1407","line":2390,"column":37,"nodeType":"1408","endLine":2390,"endColumn":121},{"ruleId":"1424","severity":1,"message":"1425","line":2390,"column":121,"nodeType":"1408","endLine":2390,"endColumn":153},{"ruleId":"1424","severity":1,"message":"1425","line":2419,"column":57,"nodeType":"1408","endLine":2419,"endColumn":94},{"ruleId":"1424","severity":1,"message":"1425","line":2456,"column":57,"nodeType":"1408","endLine":2456,"endColumn":94},{"ruleId":"1406","severity":1,"message":"1407","line":2544,"column":41,"nodeType":"1408","endLine":2549,"endColumn":42},{"ruleId":"1413","severity":1,"message":"1414","line":2545,"column":50,"nodeType":"1411","messageId":"1415","endLine":2545,"endColumn":71},{"ruleId":"1406","severity":1,"message":"1407","line":2552,"column":41,"nodeType":"1408","endLine":2557,"endColumn":42},{"ruleId":"1413","severity":1,"message":"1414","line":2553,"column":50,"nodeType":"1411","messageId":"1415","endLine":2553,"endColumn":71},{"ruleId":"1424","severity":1,"message":"1425","line":2583,"column":57,"nodeType":"1408","endLine":2583,"endColumn":94},{"ruleId":"1424","severity":1,"message":"1425","line":2613,"column":57,"nodeType":"1408","endLine":2613,"endColumn":94},{"ruleId":"1406","severity":1,"message":"1407","line":2900,"column":41,"nodeType":"1408","endLine":2905,"endColumn":42},{"ruleId":"1413","severity":1,"message":"1414","line":2901,"column":48,"nodeType":"1411","messageId":"1415","endLine":2901,"endColumn":69},{"ruleId":"1406","severity":1,"message":"1407","line":2908,"column":41,"nodeType":"1408","endLine":2913,"endColumn":42},{"ruleId":"1413","severity":1,"message":"1414","line":2909,"column":48,"nodeType":"1411","messageId":"1415","endLine":2909,"endColumn":69},{"ruleId":"1406","severity":1,"message":"1407","line":3116,"column":41,"nodeType":"1408","endLine":3116,"endColumn":52},{"ruleId":"1406","severity":1,"message":"1407","line":3165,"column":41,"nodeType":"1408","endLine":3165,"endColumn":52},{"ruleId":"1406","severity":1,"message":"1407","line":3219,"column":41,"nodeType":"1408","endLine":3219,"endColumn":52},{"ruleId":"1424","severity":1,"message":"1425","line":3256,"column":46,"nodeType":"1408","endLine":3256,"endColumn":65},{"ruleId":"1424","severity":1,"message":"1425","line":3261,"column":46,"nodeType":"1408","endLine":3261,"endColumn":66},{"ruleId":"1424","severity":1,"message":"1425","line":3265,"column":46,"nodeType":"1408","endLine":3265,"endColumn":66},{"ruleId":"1406","severity":1,"message":"1407","line":3275,"column":33,"nodeType":"1408","endLine":3279,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":3278,"column":40,"nodeType":"1411","messageId":"1415","endLine":3278,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":3287,"column":33,"nodeType":"1408","endLine":3290,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":3288,"column":40,"nodeType":"1411","messageId":"1415","endLine":3288,"endColumn":61},{"ruleId":"1424","severity":1,"message":"1425","line":3301,"column":35,"nodeType":"1408","endLine":3301,"endColumn":62},{"ruleId":"1406","severity":1,"message":"1407","line":3308,"column":37,"nodeType":"1408","endLine":3308,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":3396,"column":33,"nodeType":"1408","endLine":3400,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":3399,"column":40,"nodeType":"1411","messageId":"1415","endLine":3399,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":3408,"column":33,"nodeType":"1408","endLine":3411,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":3409,"column":40,"nodeType":"1411","messageId":"1415","endLine":3409,"endColumn":61},{"ruleId":"1424","severity":1,"message":"1425","line":3422,"column":35,"nodeType":"1408","endLine":3422,"endColumn":62},{"ruleId":"1406","severity":1,"message":"1407","line":3429,"column":37,"nodeType":"1408","endLine":3429,"endColumn":48},{"ruleId":"1457","severity":1,"message":"1458","line":3441,"column":31,"nodeType":"1408","endLine":3444,"endColumn":69},{"ruleId":"1406","severity":1,"message":"1407","line":3448,"column":33,"nodeType":"1408","endLine":3448,"endColumn":63},{"ruleId":"1406","severity":1,"message":"1407","line":3449,"column":33,"nodeType":"1408","endLine":3449,"endColumn":44},{"ruleId":"1406","severity":1,"message":"1407","line":3450,"column":33,"nodeType":"1408","endLine":3450,"endColumn":44},{"ruleId":"1424","severity":1,"message":"1425","line":3458,"column":44,"nodeType":"1408","endLine":3458,"endColumn":87},{"ruleId":"1406","severity":1,"message":"1407","line":3460,"column":37,"nodeType":"1408","endLine":3460,"endColumn":49},{"ruleId":"1424","severity":1,"message":"1425","line":3468,"column":44,"nodeType":"1408","endLine":3468,"endColumn":87},{"ruleId":"1406","severity":1,"message":"1407","line":3471,"column":39,"nodeType":"1408","endLine":3471,"endColumn":51},{"ruleId":"1406","severity":1,"message":"1407","line":3472,"column":39,"nodeType":"1408","endLine":3472,"endColumn":75},{"ruleId":"1406","severity":1,"message":"1407","line":3485,"column":45,"nodeType":"1408","endLine":3485,"endColumn":56},{"ruleId":"1406","severity":1,"message":"1407","line":3496,"column":45,"nodeType":"1408","endLine":3496,"endColumn":56},{"ruleId":"1406","severity":1,"message":"1407","line":3507,"column":45,"nodeType":"1408","endLine":3507,"endColumn":56},{"ruleId":"1406","severity":1,"message":"1407","line":3518,"column":45,"nodeType":"1408","endLine":3518,"endColumn":56},{"ruleId":"1406","severity":1,"message":"1407","line":3530,"column":47,"nodeType":"1408","endLine":3530,"endColumn":58},{"ruleId":"1424","severity":1,"message":"1425","line":3539,"column":44,"nodeType":"1408","endLine":3539,"endColumn":87},{"ruleId":"1406","severity":1,"message":"1407","line":3542,"column":39,"nodeType":"1408","endLine":3542,"endColumn":51},{"ruleId":"1406","severity":1,"message":"1407","line":3543,"column":39,"nodeType":"1408","endLine":3543,"endColumn":75},{"ruleId":"1424","severity":1,"message":"1425","line":3551,"column":44,"nodeType":"1408","endLine":3551,"endColumn":87},{"ruleId":"1406","severity":1,"message":"1407","line":3554,"column":39,"nodeType":"1408","endLine":3554,"endColumn":51},{"ruleId":"1406","severity":1,"message":"1407","line":3555,"column":39,"nodeType":"1408","endLine":3555,"endColumn":75},{"ruleId":"1406","severity":1,"message":"1407","line":3572,"column":31,"nodeType":"1408","endLine":3572,"endColumn":71},{"ruleId":"1406","severity":1,"message":"1407","line":3573,"column":31,"nodeType":"1408","endLine":3573,"endColumn":73},{"ruleId":"1424","severity":1,"message":"1425","line":3595,"column":39,"nodeType":"1408","endLine":3601,"endColumn":41},{"ruleId":"1424","severity":1,"message":"1425","line":3614,"column":39,"nodeType":"1408","endLine":3620,"endColumn":41},{"ruleId":"1406","severity":1,"message":"1407","line":3642,"column":33,"nodeType":"1408","endLine":3647,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":3643,"column":40,"nodeType":"1411","messageId":"1415","endLine":3643,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":3658,"column":33,"nodeType":"1408","endLine":3662,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1414","line":3659,"column":40,"nodeType":"1411","messageId":"1415","endLine":3659,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":3680,"column":31,"nodeType":"1408","endLine":3687,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1414","line":3681,"column":38,"nodeType":"1411","messageId":"1415","endLine":3681,"endColumn":58},{"ruleId":"1426","severity":1,"message":"1427","line":3720,"column":37,"nodeType":"1408","messageId":"1428","endLine":3724,"endColumn":38,"fix":"1459"},{"ruleId":"1426","severity":1,"message":"1427","line":3755,"column":43,"nodeType":"1408","messageId":"1428","endLine":3759,"endColumn":44,"fix":"1460"},{"ruleId":"1424","severity":1,"message":"1425","line":3779,"column":45,"nodeType":"1408","endLine":3779,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":3786,"column":45,"nodeType":"1408","endLine":3789,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":3787,"column":52,"nodeType":"1411","messageId":"1415","endLine":3787,"endColumn":73},{"ruleId":"1406","severity":1,"message":"1407","line":3792,"column":45,"nodeType":"1408","endLine":3797,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":3793,"column":52,"nodeType":"1411","messageId":"1415","endLine":3793,"endColumn":73},{"ruleId":"1406","severity":1,"message":"1431","line":3811,"column":45,"nodeType":"1408","endLine":3811,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":3814,"column":45,"nodeType":"1408","endLine":3817,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":3815,"column":52,"nodeType":"1411","messageId":"1415","endLine":3815,"endColumn":73},{"ruleId":"1461","severity":1,"message":"1462","line":413,"column":36,"nodeType":"1408","endLine":413,"endColumn":70},{"ruleId":"1463","severity":1,"message":"1464","line":59,"column":65,"nodeType":"1465","messageId":"1466","endLine":59,"endColumn":67},{"ruleId":"1424","severity":1,"message":"1425","line":119,"column":29,"nodeType":"1408","endLine":122,"endColumn":31},{"ruleId":"1416","severity":1,"message":"1417","line":129,"column":42,"nodeType":"1418","messageId":"1419","endLine":129,"endColumn":44},{"ruleId":"1416","severity":1,"message":"1417","line":129,"column":84,"nodeType":"1418","messageId":"1419","endLine":129,"endColumn":86},{"ruleId":"1416","severity":1,"message":"1417","line":133,"column":50,"nodeType":"1418","messageId":"1419","endLine":133,"endColumn":52},{"ruleId":"1424","severity":1,"message":"1425","line":151,"column":29,"nodeType":"1408","endLine":155,"endColumn":31},{"ruleId":"1467","severity":1,"message":"1468","line":158,"column":23,"nodeType":"1469","messageId":"1419","endLine":158,"endColumn":27,"fix":"1470"},{"ruleId":"1416","severity":1,"message":"1417","line":162,"column":45,"nodeType":"1418","messageId":"1419","endLine":162,"endColumn":47},{"ruleId":"1416","severity":1,"message":"1417","line":162,"column":87,"nodeType":"1418","messageId":"1419","endLine":162,"endColumn":89},{"ruleId":"1416","severity":1,"message":"1417","line":166,"column":50,"nodeType":"1418","messageId":"1419","endLine":166,"endColumn":52},{"ruleId":"1463","severity":1,"message":"1464","line":274,"column":59,"nodeType":"1465","messageId":"1466","endLine":274,"endColumn":61},{"ruleId":"1424","severity":1,"message":"1425","line":362,"column":27,"nodeType":"1408","endLine":362,"endColumn":116},{"ruleId":"1424","severity":1,"message":"1425","line":365,"column":29,"nodeType":"1408","endLine":368,"endColumn":31},{"ruleId":"1426","severity":1,"message":"1427","line":96,"column":11,"nodeType":"1408","messageId":"1428","endLine":96,"endColumn":81,"fix":"1471"},{"ruleId":"1406","severity":1,"message":"1407","line":132,"column":11,"nodeType":"1408","endLine":137,"endColumn":12},{"ruleId":"1413","severity":1,"message":"1414","line":133,"column":18,"nodeType":"1411","messageId":"1415","endLine":133,"endColumn":39},{"ruleId":"1406","severity":1,"message":"1407","line":152,"column":15,"nodeType":"1408","endLine":152,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1414","line":152,"column":23,"nodeType":"1411","messageId":"1415","endLine":152,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":161,"column":15,"nodeType":"1408","endLine":161,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":161,"column":23,"nodeType":"1411","messageId":"1415","endLine":161,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":170,"column":15,"nodeType":"1408","endLine":170,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":170,"column":23,"nodeType":"1411","messageId":"1415","endLine":170,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":179,"column":15,"nodeType":"1408","endLine":179,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":179,"column":23,"nodeType":"1411","messageId":"1415","endLine":179,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":188,"column":15,"nodeType":"1408","endLine":188,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":188,"column":23,"nodeType":"1411","messageId":"1415","endLine":188,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":197,"column":15,"nodeType":"1408","endLine":197,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":197,"column":23,"nodeType":"1411","messageId":"1415","endLine":197,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":206,"column":15,"nodeType":"1408","endLine":206,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":206,"column":23,"nodeType":"1411","messageId":"1415","endLine":206,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":215,"column":15,"nodeType":"1408","endLine":215,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":215,"column":23,"nodeType":"1411","messageId":"1415","endLine":215,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":224,"column":15,"nodeType":"1408","endLine":224,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":224,"column":23,"nodeType":"1411","messageId":"1415","endLine":224,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":233,"column":15,"nodeType":"1408","endLine":233,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":233,"column":23,"nodeType":"1411","messageId":"1415","endLine":233,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":242,"column":15,"nodeType":"1408","endLine":242,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":242,"column":23,"nodeType":"1411","messageId":"1415","endLine":242,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":251,"column":15,"nodeType":"1408","endLine":251,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":251,"column":23,"nodeType":"1411","messageId":"1415","endLine":251,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":260,"column":15,"nodeType":"1408","endLine":260,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":260,"column":23,"nodeType":"1411","messageId":"1415","endLine":260,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":269,"column":15,"nodeType":"1408","endLine":269,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":269,"column":23,"nodeType":"1411","messageId":"1415","endLine":269,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":278,"column":15,"nodeType":"1408","endLine":278,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":278,"column":23,"nodeType":"1411","messageId":"1415","endLine":278,"endColumn":43},{"ruleId":"1406","severity":1,"message":"1407","line":287,"column":15,"nodeType":"1408","endLine":287,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":287,"column":23,"nodeType":"1411","messageId":"1415","endLine":287,"endColumn":43},{"ruleId":"1439","severity":1,"message":"1440","line":11,"column":5,"nodeType":"1441","messageId":"1442","endLine":13,"endColumn":6},{"ruleId":"1406","severity":1,"message":"1407","line":28,"column":57,"nodeType":"1408","endLine":28,"endColumn":87},{"ruleId":"1413","severity":1,"message":"1414","line":28,"column":65,"nodeType":"1411","messageId":"1415","endLine":28,"endColumn":86},{"ruleId":"1432","severity":1,"message":"1433","line":38,"column":33,"nodeType":"1408","endLine":38,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":38,"column":33,"nodeType":"1408","endLine":38,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":38,"column":41,"nodeType":"1411","messageId":"1415","endLine":38,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":44,"column":33,"nodeType":"1408","endLine":44,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":44,"column":33,"nodeType":"1408","endLine":44,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":44,"column":41,"nodeType":"1411","messageId":"1415","endLine":44,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":50,"column":33,"nodeType":"1408","endLine":50,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":50,"column":33,"nodeType":"1408","endLine":50,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":50,"column":41,"nodeType":"1411","messageId":"1415","endLine":50,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":56,"column":33,"nodeType":"1408","endLine":56,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":56,"column":33,"nodeType":"1408","endLine":56,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":56,"column":41,"nodeType":"1411","messageId":"1415","endLine":56,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":62,"column":33,"nodeType":"1408","endLine":62,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":62,"column":33,"nodeType":"1408","endLine":62,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":62,"column":41,"nodeType":"1411","messageId":"1415","endLine":62,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":68,"column":33,"nodeType":"1408","endLine":68,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":68,"column":33,"nodeType":"1408","endLine":68,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":68,"column":41,"nodeType":"1411","messageId":"1415","endLine":68,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":74,"column":33,"nodeType":"1408","endLine":74,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":74,"column":33,"nodeType":"1408","endLine":74,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":74,"column":41,"nodeType":"1411","messageId":"1415","endLine":74,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":80,"column":33,"nodeType":"1408","endLine":80,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":80,"column":33,"nodeType":"1408","endLine":80,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":80,"column":41,"nodeType":"1411","messageId":"1415","endLine":80,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":86,"column":33,"nodeType":"1408","endLine":86,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":86,"column":33,"nodeType":"1408","endLine":86,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":86,"column":41,"nodeType":"1411","messageId":"1415","endLine":86,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":92,"column":33,"nodeType":"1408","endLine":92,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":92,"column":33,"nodeType":"1408","endLine":92,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":92,"column":41,"nodeType":"1411","messageId":"1415","endLine":92,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":98,"column":33,"nodeType":"1408","endLine":98,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":98,"column":33,"nodeType":"1408","endLine":98,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":98,"column":41,"nodeType":"1411","messageId":"1415","endLine":98,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":104,"column":33,"nodeType":"1408","endLine":104,"endColumn":85},{"ruleId":"1406","severity":1,"message":"1407","line":104,"column":33,"nodeType":"1408","endLine":104,"endColumn":85},{"ruleId":"1413","severity":1,"message":"1414","line":104,"column":41,"nodeType":"1411","messageId":"1415","endLine":104,"endColumn":62},{"ruleId":"1432","severity":1,"message":"1433","line":109,"column":17,"nodeType":"1408","endLine":109,"endColumn":70},{"ruleId":"1406","severity":1,"message":"1407","line":109,"column":17,"nodeType":"1408","endLine":109,"endColumn":70},{"ruleId":"1413","severity":1,"message":"1414","line":109,"column":25,"nodeType":"1411","messageId":"1415","endLine":109,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":188,"column":21,"nodeType":"1408","endLine":188,"endColumn":103},{"ruleId":"1413","severity":1,"message":"1414","line":188,"column":29,"nodeType":"1411","messageId":"1415","endLine":188,"endColumn":46},{"ruleId":"1416","severity":1,"message":"1417","line":91,"column":32,"nodeType":"1418","messageId":"1419","endLine":91,"endColumn":34},{"ruleId":"1406","severity":1,"message":"1407","line":69,"column":17,"nodeType":"1408","endLine":72,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":70,"column":24,"nodeType":"1411","messageId":"1415","endLine":70,"endColumn":45},{"ruleId":"1406","severity":1,"message":"1407","line":92,"column":17,"nodeType":"1408","endLine":92,"endColumn":29},{"ruleId":"1406","severity":1,"message":"1407","line":95,"column":17,"nodeType":"1408","endLine":102,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":96,"column":24,"nodeType":"1411","messageId":"1415","endLine":96,"endColumn":45},{"ruleId":"1406","severity":1,"message":"1407","line":106,"column":19,"nodeType":"1408","endLine":112,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":107,"column":26,"nodeType":"1411","messageId":"1415","endLine":107,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":115,"column":19,"nodeType":"1408","endLine":121,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":116,"column":26,"nodeType":"1411","messageId":"1415","endLine":116,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":124,"column":19,"nodeType":"1408","endLine":130,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":125,"column":26,"nodeType":"1411","messageId":"1415","endLine":125,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":133,"column":19,"nodeType":"1408","endLine":139,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":134,"column":26,"nodeType":"1411","messageId":"1415","endLine":134,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":142,"column":19,"nodeType":"1408","endLine":147,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":143,"column":26,"nodeType":"1411","messageId":"1415","endLine":143,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":150,"column":19,"nodeType":"1408","endLine":156,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":151,"column":26,"nodeType":"1411","messageId":"1415","endLine":151,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":159,"column":19,"nodeType":"1408","endLine":159,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":159,"column":27,"nodeType":"1411","messageId":"1415","endLine":159,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":160,"column":19,"nodeType":"1408","endLine":160,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":160,"column":27,"nodeType":"1411","messageId":"1415","endLine":160,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":164,"column":17,"nodeType":"1408","endLine":171,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":165,"column":24,"nodeType":"1411","messageId":"1415","endLine":165,"endColumn":45},{"ruleId":"1426","severity":1,"message":"1427","line":176,"column":19,"nodeType":"1408","messageId":"1428","endLine":179,"endColumn":20,"fix":"1472"},{"ruleId":"1426","severity":1,"message":"1427","line":185,"column":19,"nodeType":"1408","messageId":"1428","endLine":188,"endColumn":20,"fix":"1473"},{"ruleId":"1406","severity":1,"message":"1407","line":211,"column":17,"nodeType":"1408","endLine":218,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":212,"column":24,"nodeType":"1411","messageId":"1415","endLine":212,"endColumn":45},{"ruleId":"1426","severity":1,"message":"1427","line":223,"column":19,"nodeType":"1408","messageId":"1428","endLine":223,"endColumn":77,"fix":"1474"},{"ruleId":"1426","severity":1,"message":"1427","line":226,"column":19,"nodeType":"1408","messageId":"1428","endLine":226,"endColumn":77,"fix":"1475"},{"ruleId":"1406","severity":1,"message":"1407","line":232,"column":17,"nodeType":"1408","endLine":239,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1414","line":233,"column":24,"nodeType":"1411","messageId":"1415","endLine":233,"endColumn":45},{"ruleId":"1406","severity":1,"message":"1407","line":243,"column":19,"nodeType":"1408","endLine":248,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1414","line":244,"column":26,"nodeType":"1411","messageId":"1415","endLine":244,"endColumn":47},{"ruleId":"1406","severity":1,"message":"1407","line":251,"column":19,"nodeType":"1408","endLine":251,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":251,"column":27,"nodeType":"1411","messageId":"1415","endLine":251,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":252,"column":19,"nodeType":"1408","endLine":252,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":252,"column":27,"nodeType":"1411","messageId":"1415","endLine":252,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":253,"column":19,"nodeType":"1408","endLine":253,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":253,"column":27,"nodeType":"1411","messageId":"1415","endLine":253,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":255,"column":21,"nodeType":"1408","endLine":262,"endColumn":22},{"ruleId":"1413","severity":1,"message":"1414","line":256,"column":28,"nodeType":"1411","messageId":"1415","endLine":256,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1407","line":273,"column":17,"nodeType":"1408","endLine":273,"endColumn":47},{"ruleId":"1413","severity":1,"message":"1414","line":273,"column":25,"nodeType":"1411","messageId":"1415","endLine":273,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":290,"column":19,"nodeType":"1408","endLine":290,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1414","line":290,"column":27,"nodeType":"1411","messageId":"1415","endLine":290,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1431","line":13,"column":17,"nodeType":"1408","endLine":13,"endColumn":40},{"ruleId":"1406","severity":1,"message":"1431","line":26,"column":17,"nodeType":"1408","endLine":26,"endColumn":52},{"ruleId":"1432","severity":1,"message":"1433","line":62,"column":25,"nodeType":"1408","endLine":62,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":62,"column":25,"nodeType":"1408","endLine":62,"endColumn":61},{"ruleId":"1424","severity":1,"message":"1425","line":63,"column":65,"nodeType":"1408","endLine":63,"endColumn":155},{"ruleId":"1432","severity":1,"message":"1433","line":68,"column":53,"nodeType":"1408","endLine":68,"endColumn":149},{"ruleId":"1406","severity":1,"message":"1407","line":68,"column":53,"nodeType":"1408","endLine":68,"endColumn":149},{"ruleId":"1413","severity":1,"message":"1414","line":68,"column":61,"nodeType":"1411","messageId":"1415","endLine":68,"endColumn":82},{"ruleId":"1432","severity":1,"message":"1433","line":79,"column":37,"nodeType":"1408","endLine":79,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":79,"column":37,"nodeType":"1408","endLine":79,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":79,"column":45,"nodeType":"1411","messageId":"1415","endLine":79,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":86,"column":37,"nodeType":"1408","endLine":86,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":86,"column":37,"nodeType":"1408","endLine":86,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":86,"column":45,"nodeType":"1411","messageId":"1415","endLine":86,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":93,"column":37,"nodeType":"1408","endLine":93,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":93,"column":37,"nodeType":"1408","endLine":93,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":93,"column":45,"nodeType":"1411","messageId":"1415","endLine":93,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":100,"column":37,"nodeType":"1408","endLine":100,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":100,"column":37,"nodeType":"1408","endLine":100,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":100,"column":45,"nodeType":"1411","messageId":"1415","endLine":100,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":107,"column":37,"nodeType":"1408","endLine":107,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":107,"column":37,"nodeType":"1408","endLine":107,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":107,"column":45,"nodeType":"1411","messageId":"1415","endLine":107,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":114,"column":37,"nodeType":"1408","endLine":114,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":114,"column":37,"nodeType":"1408","endLine":114,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":114,"column":45,"nodeType":"1411","messageId":"1415","endLine":114,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":121,"column":37,"nodeType":"1408","endLine":121,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":121,"column":37,"nodeType":"1408","endLine":121,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":121,"column":45,"nodeType":"1411","messageId":"1415","endLine":121,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":128,"column":37,"nodeType":"1408","endLine":128,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":128,"column":37,"nodeType":"1408","endLine":128,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":128,"column":45,"nodeType":"1411","messageId":"1415","endLine":128,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":135,"column":37,"nodeType":"1408","endLine":135,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":135,"column":37,"nodeType":"1408","endLine":135,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":135,"column":45,"nodeType":"1411","messageId":"1415","endLine":135,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":142,"column":37,"nodeType":"1408","endLine":142,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":142,"column":37,"nodeType":"1408","endLine":142,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":142,"column":45,"nodeType":"1411","messageId":"1415","endLine":142,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":149,"column":37,"nodeType":"1408","endLine":149,"endColumn":89},{"ruleId":"1406","severity":1,"message":"1407","line":149,"column":37,"nodeType":"1408","endLine":149,"endColumn":89},{"ruleId":"1413","severity":1,"message":"1414","line":149,"column":45,"nodeType":"1411","messageId":"1415","endLine":149,"endColumn":66},{"ruleId":"1432","severity":1,"message":"1433","line":156,"column":17,"nodeType":"1408","endLine":156,"endColumn":70},{"ruleId":"1406","severity":1,"message":"1407","line":156,"column":17,"nodeType":"1408","endLine":156,"endColumn":70},{"ruleId":"1413","severity":1,"message":"1414","line":156,"column":25,"nodeType":"1411","messageId":"1415","endLine":156,"endColumn":46},{"ruleId":"1432","severity":1,"message":"1433","line":66,"column":17,"nodeType":"1408","endLine":66,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":66,"column":17,"nodeType":"1408","endLine":66,"endColumn":129},{"ruleId":"1413","severity":1,"message":"1414","line":66,"column":25,"nodeType":"1411","messageId":"1415","endLine":66,"endColumn":46},{"ruleId":"1426","severity":1,"message":"1427","line":19,"column":21,"nodeType":"1408","messageId":"1428","endLine":19,"endColumn":93,"fix":"1476"},{"ruleId":"1426","severity":1,"message":"1427","line":35,"column":33,"nodeType":"1408","messageId":"1428","endLine":35,"endColumn":108,"fix":"1477"},{"ruleId":"1424","severity":1,"message":"1425","line":51,"column":37,"nodeType":"1408","endLine":51,"endColumn":69},{"ruleId":"1406","severity":1,"message":"1431","line":61,"column":37,"nodeType":"1408","endLine":61,"endColumn":69},{"ruleId":"1406","severity":1,"message":"1431","line":64,"column":41,"nodeType":"1408","endLine":64,"endColumn":73},{"ruleId":"1406","severity":1,"message":"1407","line":67,"column":45,"nodeType":"1408","endLine":70,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":68,"column":54,"nodeType":"1411","messageId":"1415","endLine":68,"endColumn":75},{"ruleId":"1406","severity":1,"message":"1407","line":73,"column":45,"nodeType":"1408","endLine":78,"endColumn":46},{"ruleId":"1413","severity":1,"message":"1414","line":74,"column":54,"nodeType":"1411","messageId":"1415","endLine":74,"endColumn":75},{"ruleId":"1406","severity":1,"message":"1407","line":203,"column":29,"nodeType":"1408","endLine":203,"endColumn":137},{"ruleId":"1413","severity":1,"message":"1414","line":203,"column":37,"nodeType":"1411","messageId":"1415","endLine":203,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":204,"column":29,"nodeType":"1408","endLine":204,"endColumn":148},{"ruleId":"1413","severity":1,"message":"1414","line":204,"column":37,"nodeType":"1411","messageId":"1415","endLine":204,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":233,"column":29,"nodeType":"1408","endLine":233,"endColumn":138},{"ruleId":"1413","severity":1,"message":"1414","line":233,"column":37,"nodeType":"1411","messageId":"1415","endLine":233,"endColumn":57},{"ruleId":"1432","severity":1,"message":"1433","line":264,"column":17,"nodeType":"1408","endLine":264,"endColumn":128},{"ruleId":"1406","severity":1,"message":"1407","line":264,"column":17,"nodeType":"1408","endLine":264,"endColumn":128},{"ruleId":"1413","severity":1,"message":"1414","line":264,"column":25,"nodeType":"1411","messageId":"1415","endLine":264,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":52,"column":29,"nodeType":"1408","endLine":52,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":52,"column":37,"nodeType":"1411","messageId":"1415","endLine":52,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":54,"column":29,"nodeType":"1408","endLine":54,"endColumn":147},{"ruleId":"1413","severity":1,"message":"1414","line":54,"column":37,"nodeType":"1411","messageId":"1415","endLine":54,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":55,"column":29,"nodeType":"1408","endLine":55,"endColumn":147},{"ruleId":"1413","severity":1,"message":"1414","line":55,"column":37,"nodeType":"1411","messageId":"1415","endLine":55,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":64,"column":29,"nodeType":"1408","endLine":64,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":64,"column":37,"nodeType":"1411","messageId":"1415","endLine":64,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":81,"column":29,"nodeType":"1408","endLine":81,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":81,"column":37,"nodeType":"1411","messageId":"1415","endLine":81,"endColumn":57},{"ruleId":"1432","severity":1,"message":"1433","line":94,"column":17,"nodeType":"1408","endLine":94,"endColumn":126},{"ruleId":"1406","severity":1,"message":"1407","line":94,"column":17,"nodeType":"1408","endLine":94,"endColumn":126},{"ruleId":"1413","severity":1,"message":"1414","line":94,"column":25,"nodeType":"1411","messageId":"1415","endLine":94,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":52,"column":29,"nodeType":"1408","endLine":52,"endColumn":136},{"ruleId":"1413","severity":1,"message":"1414","line":52,"column":37,"nodeType":"1411","messageId":"1415","endLine":52,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":53,"column":29,"nodeType":"1408","endLine":53,"endColumn":147},{"ruleId":"1413","severity":1,"message":"1414","line":53,"column":37,"nodeType":"1411","messageId":"1415","endLine":53,"endColumn":57},{"ruleId":"1406","severity":1,"message":"1407","line":72,"column":29,"nodeType":"1408","endLine":72,"endColumn":137},{"ruleId":"1413","severity":1,"message":"1414","line":72,"column":37,"nodeType":"1411","messageId":"1415","endLine":72,"endColumn":57},{"ruleId":"1432","severity":1,"message":"1433","line":160,"column":17,"nodeType":"1408","endLine":160,"endColumn":126},{"ruleId":"1406","severity":1,"message":"1407","line":160,"column":17,"nodeType":"1408","endLine":160,"endColumn":126},{"ruleId":"1413","severity":1,"message":"1414","line":160,"column":25,"nodeType":"1411","messageId":"1415","endLine":160,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":52,"column":25,"nodeType":"1408","endLine":52,"endColumn":129},{"ruleId":"1413","severity":1,"message":"1414","line":52,"column":33,"nodeType":"1411","messageId":"1415","endLine":52,"endColumn":53},{"ruleId":"1406","severity":1,"message":"1407","line":53,"column":25,"nodeType":"1408","endLine":53,"endColumn":129},{"ruleId":"1413","severity":1,"message":"1414","line":53,"column":33,"nodeType":"1411","messageId":"1415","endLine":53,"endColumn":53},{"ruleId":"1406","severity":1,"message":"1407","line":54,"column":25,"nodeType":"1408","endLine":54,"endColumn":129},{"ruleId":"1413","severity":1,"message":"1414","line":54,"column":33,"nodeType":"1411","messageId":"1415","endLine":54,"endColumn":53},{"ruleId":"1432","severity":1,"message":"1433","line":88,"column":17,"nodeType":"1408","endLine":88,"endColumn":126},{"ruleId":"1406","severity":1,"message":"1407","line":88,"column":17,"nodeType":"1408","endLine":88,"endColumn":126},{"ruleId":"1413","severity":1,"message":"1414","line":88,"column":25,"nodeType":"1411","messageId":"1415","endLine":88,"endColumn":46},{"ruleId":"1426","severity":1,"message":"1427","line":55,"column":76,"nodeType":"1408","messageId":"1428","endLine":55,"endColumn":149,"fix":"1478"},{"ruleId":"1432","severity":1,"message":"1433","line":55,"column":76,"nodeType":"1408","endLine":55,"endColumn":149},{"ruleId":"1424","severity":1,"message":"1425","line":58,"column":72,"nodeType":"1408","endLine":58,"endColumn":264},{"ruleId":"1426","severity":1,"message":"1427","line":64,"column":76,"nodeType":"1408","messageId":"1428","endLine":64,"endColumn":151,"fix":"1479"},{"ruleId":"1432","severity":1,"message":"1433","line":64,"column":76,"nodeType":"1408","endLine":64,"endColumn":151},{"ruleId":"1424","severity":1,"message":"1425","line":67,"column":72,"nodeType":"1408","endLine":67,"endColumn":264},{"ruleId":"1426","severity":1,"message":"1427","line":73,"column":76,"nodeType":"1408","messageId":"1428","endLine":73,"endColumn":150,"fix":"1480"},{"ruleId":"1432","severity":1,"message":"1433","line":73,"column":76,"nodeType":"1408","endLine":73,"endColumn":150},{"ruleId":"1424","severity":1,"message":"1425","line":76,"column":72,"nodeType":"1408","endLine":76,"endColumn":264},{"ruleId":"1426","severity":1,"message":"1427","line":83,"column":76,"nodeType":"1408","messageId":"1428","endLine":83,"endColumn":149,"fix":"1481"},{"ruleId":"1432","severity":1,"message":"1433","line":83,"column":76,"nodeType":"1408","endLine":83,"endColumn":149},{"ruleId":"1424","severity":1,"message":"1425","line":86,"column":72,"nodeType":"1408","endLine":86,"endColumn":264},{"ruleId":"1426","severity":1,"message":"1427","line":92,"column":76,"nodeType":"1408","messageId":"1428","endLine":92,"endColumn":165,"fix":"1482"},{"ruleId":"1432","severity":1,"message":"1433","line":92,"column":76,"nodeType":"1408","endLine":92,"endColumn":165},{"ruleId":"1424","severity":1,"message":"1425","line":95,"column":72,"nodeType":"1408","endLine":95,"endColumn":286},{"ruleId":"1426","severity":1,"message":"1427","line":101,"column":76,"nodeType":"1408","messageId":"1428","endLine":101,"endColumn":175,"fix":"1483"},{"ruleId":"1432","severity":1,"message":"1433","line":101,"column":76,"nodeType":"1408","endLine":101,"endColumn":175},{"ruleId":"1424","severity":1,"message":"1425","line":104,"column":72,"nodeType":"1408","endLine":104,"endColumn":276},{"ruleId":"1426","severity":1,"message":"1427","line":110,"column":76,"nodeType":"1408","messageId":"1428","endLine":110,"endColumn":166,"fix":"1484"},{"ruleId":"1432","severity":1,"message":"1433","line":110,"column":76,"nodeType":"1408","endLine":110,"endColumn":166},{"ruleId":"1426","severity":1,"message":"1427","line":118,"column":76,"nodeType":"1408","messageId":"1428","endLine":118,"endColumn":170,"fix":"1485"},{"ruleId":"1432","severity":1,"message":"1433","line":118,"column":76,"nodeType":"1408","endLine":118,"endColumn":170},{"ruleId":"1424","severity":1,"message":"1425","line":121,"column":72,"nodeType":"1408","endLine":121,"endColumn":256},{"ruleId":"1426","severity":1,"message":"1427","line":182,"column":76,"nodeType":"1408","messageId":"1428","endLine":182,"endColumn":178,"fix":"1486"},{"ruleId":"1432","severity":1,"message":"1433","line":182,"column":76,"nodeType":"1408","endLine":182,"endColumn":178},{"ruleId":"1426","severity":1,"message":"1427","line":191,"column":76,"nodeType":"1408","messageId":"1428","endLine":191,"endColumn":168,"fix":"1487"},{"ruleId":"1432","severity":1,"message":"1433","line":191,"column":76,"nodeType":"1408","endLine":191,"endColumn":168},{"ruleId":"1432","severity":1,"message":"1433","line":220,"column":76,"nodeType":"1408","endLine":220,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":220,"column":76,"nodeType":"1408","endLine":220,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":230,"column":76,"nodeType":"1408","endLine":230,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":230,"column":76,"nodeType":"1408","endLine":230,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":239,"column":76,"nodeType":"1408","endLine":239,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":239,"column":76,"nodeType":"1408","endLine":239,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":248,"column":76,"nodeType":"1408","endLine":248,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":248,"column":76,"nodeType":"1408","endLine":248,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":266,"column":76,"nodeType":"1408","endLine":266,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":266,"column":76,"nodeType":"1408","endLine":266,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":275,"column":76,"nodeType":"1408","endLine":275,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":275,"column":76,"nodeType":"1408","endLine":275,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":284,"column":76,"nodeType":"1408","endLine":284,"endColumn":129},{"ruleId":"1406","severity":1,"message":"1407","line":284,"column":76,"nodeType":"1408","endLine":284,"endColumn":129},{"ruleId":"1432","severity":1,"message":"1433","line":370,"column":17,"nodeType":"1408","endLine":370,"endColumn":121},{"ruleId":"1406","severity":1,"message":"1407","line":370,"column":17,"nodeType":"1408","endLine":370,"endColumn":121},{"ruleId":"1413","severity":1,"message":"1414","line":370,"column":25,"nodeType":"1411","messageId":"1415","endLine":370,"endColumn":46},{"ruleId":"1432","severity":1,"message":"1433","line":48,"column":17,"nodeType":"1408","endLine":48,"endColumn":135},{"ruleId":"1406","severity":1,"message":"1407","line":48,"column":17,"nodeType":"1408","endLine":48,"endColumn":135},{"ruleId":"1413","severity":1,"message":"1414","line":48,"column":25,"nodeType":"1411","messageId":"1415","endLine":48,"endColumn":46},{"ruleId":"1432","severity":1,"message":"1433","line":111,"column":17,"nodeType":"1408","endLine":111,"endColumn":133},{"ruleId":"1406","severity":1,"message":"1407","line":111,"column":17,"nodeType":"1408","endLine":111,"endColumn":133},{"ruleId":"1413","severity":1,"message":"1414","line":111,"column":25,"nodeType":"1411","messageId":"1415","endLine":111,"endColumn":46},{"ruleId":"1402","replacedBy":"1488"},{"ruleId":"1404","replacedBy":"1489"},{"ruleId":"1413","severity":1,"message":"1414","line":696,"column":81,"nodeType":"1411","messageId":"1415","endLine":696,"endColumn":102},{"ruleId":"1406","severity":1,"message":"1407","line":847,"column":41,"nodeType":"1408","endLine":851,"endColumn":42},{"ruleId":"1413","severity":1,"message":"1414","line":848,"column":50,"nodeType":"1411","messageId":"1415","endLine":848,"endColumn":70},{"ruleId":"1406","severity":1,"message":"1407","line":881,"column":49,"nodeType":"1408","endLine":881,"endColumn":104},{"ruleId":"1413","severity":1,"message":"1414","line":881,"column":57,"nodeType":"1411","messageId":"1415","endLine":881,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":1056,"column":49,"nodeType":"1408","endLine":1056,"endColumn":104},{"ruleId":"1413","severity":1,"message":"1414","line":1056,"column":57,"nodeType":"1411","messageId":"1415","endLine":1056,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":1089,"column":49,"nodeType":"1408","endLine":1089,"endColumn":104},{"ruleId":"1413","severity":1,"message":"1414","line":1089,"column":57,"nodeType":"1411","messageId":"1415","endLine":1089,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":1229,"column":49,"nodeType":"1408","endLine":1229,"endColumn":104},{"ruleId":"1413","severity":1,"message":"1414","line":1229,"column":57,"nodeType":"1411","messageId":"1415","endLine":1229,"endColumn":77},{"ruleId":"1406","severity":1,"message":"1407","line":1255,"column":49,"nodeType":"1408","endLine":1255,"endColumn":145},{"ruleId":"1413","severity":1,"message":"1414","line":1255,"column":57,"nodeType":"1411","messageId":"1415","endLine":1255,"endColumn":77},{"ruleId":"1424","severity":1,"message":"1425","line":29,"column":38,"nodeType":"1408","endLine":29,"endColumn":59},{"ruleId":"1406","severity":1,"message":"1407","line":33,"column":29,"nodeType":"1408","endLine":33,"endColumn":41},{"ruleId":"1406","severity":1,"message":"1407","line":33,"column":63,"nodeType":"1408","endLine":33,"endColumn":75},{"ruleId":"1424","severity":1,"message":"1425","line":37,"column":38,"nodeType":"1408","endLine":37,"endColumn":59},{"ruleId":"1406","severity":1,"message":"1407","line":40,"column":29,"nodeType":"1408","endLine":40,"endColumn":41},{"ruleId":"1406","severity":1,"message":"1407","line":40,"column":57,"nodeType":"1408","endLine":40,"endColumn":69},{"ruleId":"1424","severity":1,"message":"1425","line":44,"column":38,"nodeType":"1408","endLine":44,"endColumn":59},{"ruleId":"1406","severity":1,"message":"1407","line":47,"column":29,"nodeType":"1408","endLine":47,"endColumn":41},{"ruleId":"1406","severity":1,"message":"1407","line":47,"column":57,"nodeType":"1408","endLine":47,"endColumn":69},{"ruleId":"1424","severity":1,"message":"1425","line":252,"column":33,"nodeType":"1408","endLine":255,"endColumn":35},{"ruleId":"1424","severity":1,"message":"1425","line":149,"column":38,"nodeType":"1408","endLine":149,"endColumn":55},{"ruleId":"1424","severity":1,"message":"1425","line":155,"column":38,"nodeType":"1408","endLine":155,"endColumn":55},{"ruleId":"1424","severity":1,"message":"1425","line":161,"column":38,"nodeType":"1408","endLine":161,"endColumn":55},{"ruleId":"1424","severity":1,"message":"1425","line":192,"column":31,"nodeType":"1408","endLine":192,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":199,"column":31,"nodeType":"1408","endLine":199,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":213,"column":31,"nodeType":"1408","endLine":213,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":229,"column":31,"nodeType":"1408","endLine":229,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":251,"column":31,"nodeType":"1408","endLine":251,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":258,"column":31,"nodeType":"1408","endLine":258,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":265,"column":31,"nodeType":"1408","endLine":265,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":272,"column":31,"nodeType":"1408","endLine":272,"endColumn":51},{"ruleId":"1406","severity":1,"message":"1407","line":28,"column":17,"nodeType":"1408","endLine":28,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1414","line":28,"column":25,"nodeType":"1411","messageId":"1415","endLine":28,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":29,"column":17,"nodeType":"1408","endLine":29,"endColumn":65},{"ruleId":"1413","severity":1,"message":"1414","line":29,"column":25,"nodeType":"1411","messageId":"1415","endLine":29,"endColumn":46},{"ruleId":"1424","severity":1,"message":"1425","line":149,"column":38,"nodeType":"1408","endLine":149,"endColumn":55},{"ruleId":"1424","severity":1,"message":"1425","line":155,"column":38,"nodeType":"1408","endLine":155,"endColumn":55},{"ruleId":"1424","severity":1,"message":"1425","line":161,"column":38,"nodeType":"1408","endLine":161,"endColumn":55},{"ruleId":"1424","severity":1,"message":"1425","line":192,"column":31,"nodeType":"1408","endLine":192,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":199,"column":31,"nodeType":"1408","endLine":199,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":213,"column":31,"nodeType":"1408","endLine":213,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":229,"column":31,"nodeType":"1408","endLine":229,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":251,"column":31,"nodeType":"1408","endLine":251,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":258,"column":31,"nodeType":"1408","endLine":258,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":265,"column":31,"nodeType":"1408","endLine":265,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":272,"column":31,"nodeType":"1408","endLine":272,"endColumn":51},{"ruleId":"1424","severity":1,"message":"1425","line":62,"column":38,"nodeType":"1408","endLine":62,"endColumn":59},{"ruleId":"1406","severity":1,"message":"1407","line":66,"column":29,"nodeType":"1408","endLine":66,"endColumn":41},{"ruleId":"1406","severity":1,"message":"1407","line":66,"column":63,"nodeType":"1408","endLine":66,"endColumn":75},{"ruleId":"1424","severity":1,"message":"1425","line":70,"column":38,"nodeType":"1408","endLine":70,"endColumn":59},{"ruleId":"1406","severity":1,"message":"1407","line":73,"column":29,"nodeType":"1408","endLine":73,"endColumn":41},{"ruleId":"1406","severity":1,"message":"1407","line":73,"column":57,"nodeType":"1408","endLine":73,"endColumn":69},{"ruleId":"1424","severity":1,"message":"1425","line":77,"column":38,"nodeType":"1408","endLine":77,"endColumn":59},{"ruleId":"1406","severity":1,"message":"1407","line":80,"column":29,"nodeType":"1408","endLine":80,"endColumn":41},{"ruleId":"1406","severity":1,"message":"1407","line":80,"column":57,"nodeType":"1408","endLine":80,"endColumn":69},{"ruleId":"1424","severity":1,"message":"1425","line":60,"column":39,"nodeType":"1408","endLine":60,"endColumn":61},{"ruleId":"1424","severity":1,"message":"1425","line":65,"column":37,"nodeType":"1408","endLine":65,"endColumn":59},{"ruleId":"1424","severity":1,"message":"1425","line":70,"column":37,"nodeType":"1408","endLine":70,"endColumn":59},{"ruleId":"1406","severity":1,"message":"1407","line":28,"column":17,"nodeType":"1408","endLine":28,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1414","line":28,"column":25,"nodeType":"1411","messageId":"1415","endLine":28,"endColumn":46},{"ruleId":"1406","severity":1,"message":"1407","line":29,"column":17,"nodeType":"1408","endLine":29,"endColumn":65},{"ruleId":"1413","severity":1,"message":"1414","line":29,"column":25,"nodeType":"1411","messageId":"1415","endLine":29,"endColumn":46},{"ruleId":"1424","severity":1,"message":"1425","line":30,"column":31,"nodeType":"1408","endLine":30,"endColumn":48},{"ruleId":"1406","severity":1,"message":"1431","line":43,"column":57,"nodeType":"1408","endLine":43,"endColumn":60},{"ruleId":"1424","severity":1,"message":"1425","line":43,"column":60,"nodeType":"1408","endLine":43,"endColumn":76},{"ruleId":"1406","severity":1,"message":"1407","line":174,"column":32,"nodeType":"1408","endLine":174,"endColumn":44},{"ruleId":"1406","severity":1,"message":"1407","line":207,"column":32,"nodeType":"1408","endLine":207,"endColumn":44},{"ruleId":"1406","severity":1,"message":"1407","line":207,"column":100,"nodeType":"1408","endLine":207,"endColumn":112},{"ruleId":"1416","severity":1,"message":"1417","line":93,"column":54,"nodeType":"1418","messageId":"1419","endLine":93,"endColumn":56},{"ruleId":"1416","severity":1,"message":"1417","line":102,"column":50,"nodeType":"1418","messageId":"1419","endLine":102,"endColumn":52},{"ruleId":"1463","severity":1,"message":"1464","line":114,"column":61,"nodeType":"1465","messageId":"1466","endLine":114,"endColumn":63},{"ruleId":"1424","severity":1,"message":"1425","line":137,"column":79,"nodeType":"1408","endLine":137,"endColumn":96},{"ruleId":"1467","severity":1,"message":"1468","line":332,"column":43,"nodeType":"1469","messageId":"1419","endLine":332,"endColumn":47,"fix":"1490"},{"ruleId":"1463","severity":1,"message":"1464","line":93,"column":69,"nodeType":"1465","messageId":"1466","endLine":93,"endColumn":71},{"ruleId":"1467","severity":1,"message":"1468","line":309,"column":47,"nodeType":"1469","messageId":"1419","endLine":309,"endColumn":51,"fix":"1491"},{"ruleId":"1424","severity":1,"message":"1425","line":26,"column":79,"nodeType":"1408","endLine":26,"endColumn":96},{"ruleId":"1424","severity":1,"message":"1425","line":36,"column":37,"nodeType":"1408","endLine":39,"endColumn":38},{"ruleId":"1406","severity":1,"message":"1431","line":48,"column":57,"nodeType":"1408","endLine":48,"endColumn":60},{"ruleId":"1424","severity":1,"message":"1425","line":48,"column":60,"nodeType":"1408","endLine":48,"endColumn":76},{"ruleId":"1424","severity":1,"message":"1425","line":53,"column":37,"nodeType":"1408","endLine":56,"endColumn":38},"no-native-reassign",["1492"],"no-negated-in-lhs",["1493"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1494","text":"1495"},{"range":"1496","text":"1495"},"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",{"range":"1497","text":"1495"},{"range":"1498","text":"1495"},{"range":"1499","text":"1495"},{"range":"1500","text":"1495"},{"range":"1501","text":"1495"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",{"range":"1502","text":"1495"},{"range":"1503","text":"1495"},{"range":"1504","text":"1495"},{"range":"1505","text":"1495"},{"range":"1506","text":"1495"},{"range":"1507","text":"1495"},{"range":"1508","text":"1495"},{"range":"1509","text":"1495"},{"range":"1510","text":"1495"},{"range":"1511","text":"1495"},{"range":"1512","text":"1495"},{"range":"1513","text":"1495"},["1492"],["1493"],"jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role heading. This role is implicit on the element h4.",{"range":"1514","text":"1495"},{"range":"1515","text":"1495"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"1516","text":"1517"},{"range":"1518","text":"1495"},{"range":"1519","text":"1495"},{"range":"1520","text":"1495"},{"range":"1521","text":"1495"},{"range":"1522","text":"1495"},{"range":"1523","text":"1495"},{"range":"1524","text":"1495"},{"range":"1525","text":"1495"},{"range":"1526","text":"1495"},{"range":"1527","text":"1495"},{"range":"1528","text":"1495"},{"range":"1529","text":"1495"},{"range":"1530","text":"1495"},{"range":"1531","text":"1495"},{"range":"1532","text":"1495"},{"range":"1533","text":"1495"},{"range":"1534","text":"1495"},["1492"],["1493"],{"range":"1535","text":"1517"},{"range":"1536","text":"1517"},"no-global-assign","no-unsafe-negation",[148977,148977]," rel=\"noreferrer\"",[151191,151191],[3012,3012],[6443,6443],[6879,6879],[8875,8875],[9040,9040],[2418,2418],[3429,3429],[4446,4446],[5511,5511],[6527,6527],[7703,7703],[8861,8861],[9752,9752],[17032,17032],[17993,17993],[1088,1088],[2275,2275],[193804,193804],[196077,196077],[6277,6288],"",[3012,3012],[6443,6443],[6879,6879],[8875,8875],[9040,9040],[1088,1088],[2275,2275],[2418,2418],[3429,3429],[4446,4446],[5511,5511],[6527,6527],[7703,7703],[8861,8861],[9752,9752],[17032,17032],[17993,17993],[19288,19299],[19584,19595]]